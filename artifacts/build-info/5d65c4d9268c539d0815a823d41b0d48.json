{"id":"5d65c4d9268c539d0815a823d41b0d48","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/interfaces/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC721.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC721} from \"../token/ERC721/IERC721.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC721Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC721Metadata} from \"../token/ERC721/extensions/IERC721Metadata.sol\";\n"},"@openzeppelin/contracts/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reinitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n     *\n     * NOTE: Consider following the ERC-7201 formula to derive storage locations.\n     */\n    function _initializableStorageSlot() internal pure virtual returns (bytes32) {\n        return INITIALIZABLE_STORAGE;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        bytes32 slot = _initializableStorageSlot();\n        assembly {\n            $.slot := slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/IERC721.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"contracts/Diamond.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/******************************************************************************\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\n* EIP-2535 Diamonds: https://eips.ethereum.org/EIPS/eip-2535\n*\n* Implementation of a diamond.\n/******************************************************************************/\n\nimport \"@openzeppelin/contracts/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts/interfaces/IERC165.sol\";\nimport \"@openzeppelin/contracts/interfaces/IERC721.sol\";\nimport \"@openzeppelin/contracts/interfaces/IERC721Metadata.sol\";\n\nimport \"./interfaces/IERC721Enumerable.sol\";\nimport \"./libraries/DiamondLib.sol\";\nimport { LibDiamond } from \"./libraries/LibDiamond.sol\";\nimport { DiamondLib } from \"./libraries/DiamondLib.sol\";\nimport { IDiamondCut } from \"./interfaces/IDiamondCut.sol\";\nimport { DiamondSettings } from \"./interfaces/IDiamond.sol\";\nimport { IERC173 } from \"./interfaces/IERC173.sol\";\n\n/**\n * @title Diamond\n * @dev Core diamond proxy contract implementing the EIP-2535 Diamond Standard\n * Functionality has been separated into facets:\n * - DiamondCutFacet: Handles diamond cut operations\n * - DiamondLoupeFacet: Provides introspection functions\n * - OwnershipFacet: Handles ownership operations\n */\ncontract Diamond is Initializable, IERC173 {\n    /**\n     * @notice Initialize the Diamond contract\n     * @param _owner The owner of the contract\n     * @param params Diamond settings including name and symbol\n     * @param _facets The initial facets to add\n     * @param diamondInit The initialization contract\n     * @param _calldata The initialization calldata\n     */\n    function initialize(\n        address _owner,\n        DiamondSettings memory params,\n        IDiamondCut.FacetCut[] calldata _facets,\n        address diamondInit,\n        bytes calldata _calldata\n    ) public initializer {\n        // Set up interfaces\n        LibDiamond.diamondStorage().supportedInterfaces[type(IERC165).interfaceId] = true;\n        LibDiamond.diamondStorage().supportedInterfaces[type(IDiamondCut).interfaceId] = true;\n        LibDiamond.diamondStorage().supportedInterfaces[type(IERC173).interfaceId] = true;\n        LibDiamond.diamondStorage().supportedInterfaces[type(IERC721).interfaceId] = true;\n        LibDiamond.diamondStorage().supportedInterfaces[type(IERC721Metadata).interfaceId] = true;\n        LibDiamond.diamondStorage().supportedInterfaces[type(IERC721Enumerable).interfaceId] = true;\n\n        // Initialize the diamond\n        LibDiamond.diamondCut(_facets, diamondInit, _calldata);\n\n        // Set the owner\n        LibDiamond.setContractOwner(_owner);\n\n        // Set the symbol and name of the diamond\n        DiamondLib.diamondStorage().diamondContract.settings.owner = _owner;\n        DiamondLib.diamondStorage().diamondContract.metadata['symbol'] = params.symbol;\n        DiamondLib.diamondStorage().diamondContract.metadata['name'] = params.name;\n\n        // Initialize the upgrade timelock\n        LibDiamond.initializeUpgradeTimelock(LibDiamond.DEFAULT_UPGRADE_TIMELOCK);\n    }\n\n    /**\n     * @notice Transfer ownership to a new address\n     * @param _newOwner The new owner address\n     */\n    function transferOwnership(address _newOwner) external override {\n        LibDiamond.enforceIsContractOwner();\n        LibDiamond.setContractOwner(_newOwner);\n    }\n\n    /**\n     * @notice Get the current contract owner\n     * @return owner_ The current owner address\n     */\n    function owner() external override view returns (address owner_) {\n        owner_ = LibDiamond.contractOwner();\n    }\n\n    /**\n     * @notice Get this contract's address\n     * @return This contract's address\n     */\n    function diamondAddress() external view returns (address) {\n        return address(this);\n    }\n\n    /**\n     * @dev Diamond Proxy fallback function\n     * Find facet for function that is called and execute the\n     * function using delegatecall\n     */\n    fallback() external payable {\n        LibDiamond.DiamondStorage storage ds;\n        bytes32 position = LibDiamond.DIAMOND_STORAGE_POSITION;\n        // Get diamond storage\n        assembly {\n            ds.slot := position\n        }\n        // Get facet from function selector\n        address facet = ds.selectorToFacetAndPosition[msg.sig].facetAddress;\n        require(facet != address(0), \"Diamond: Function does not exist\");\n        \n        // Execute external function from facet using delegatecall and return any value\n        assembly {\n            // Copy function selector and any arguments\n            calldatacopy(0, 0, calldatasize())\n            // Execute function call using the facet\n            let result := delegatecall(gas(), facet, 0, calldatasize(), 0, 0)\n            // Get any return value\n            returndatacopy(0, 0, returndatasize())\n            // Return any return value or error back to the caller\n            switch result\n                case 0 {\n                    revert(0, returndatasize())\n                }\n                default {\n                    return(0, returndatasize())\n                }\n        }\n    }\n\n    // Allow contract to receive ETH\n    receive() external payable {}\n}\n"},"contracts/facets/CounterFacet.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport { LibDiamond } from \"../libraries/LibDiamond.sol\";\n\n/**\n * @title CounterFacet\n * @dev A sample facet that demonstrates basic diamond functionality with a simple counter\n *      This facet provides increment, decrement, and view operations for a counter value\n *      stored in diamond storage. It serves as an example of how to implement business\n *      logic in a diamond facet while using the diamond storage pattern.\n */\ncontract CounterFacet {\n    // Custom storage struct for this facet\n    struct CounterStorage {\n        uint256 counter;\n        address lastUpdater;\n        uint256 lastUpdateTimestamp;\n        mapping(address => uint256) userCounters;\n    }\n\n    // Storage position for this facet\n    bytes32 constant COUNTER_STORAGE_POSITION = keccak256(\"counter.facet.storage\");\n\n    // Events\n    event CounterIncremented(address indexed user, uint256 newValue);\n    event CounterDecremented(address indexed user, uint256 newValue);\n    event CounterReset(address indexed user, uint256 previousValue);\n    event UserCounterUpdated(address indexed user, uint256 newValue);\n\n    /**\n     * @notice Get the counter storage\n     * @dev Internal function to access the counter's diamond storage slot\n     * @return cs The counter storage struct\n     */\n    function counterStorage() internal pure returns (CounterStorage storage cs) {\n        bytes32 position = COUNTER_STORAGE_POSITION;\n        assembly {\n            cs.slot := position\n        }\n    }\n\n    /**\n     * @notice Increment the global counter by 1\n     * @dev Increases the global counter and updates metadata\n     */\n    function increment() external {\n        CounterStorage storage cs = counterStorage();\n        cs.counter += 1;\n        cs.lastUpdater = msg.sender;\n        cs.lastUpdateTimestamp = block.timestamp;\n        \n        emit CounterIncremented(msg.sender, cs.counter);\n    }\n\n    /**\n     * @notice Decrement the global counter by 1\n     * @dev Decreases the global counter and updates metadata\n     *      Reverts if counter would go below zero\n     */\n    function decrement() external {\n        CounterStorage storage cs = counterStorage();\n        require(cs.counter > 0, \"CounterFacet: Counter cannot go below zero\");\n        \n        cs.counter -= 1;\n        cs.lastUpdater = msg.sender;\n        cs.lastUpdateTimestamp = block.timestamp;\n        \n        emit CounterDecremented(msg.sender, cs.counter);\n    }\n\n    /**\n     * @notice Reset the global counter to zero\n     * @dev Only the diamond owner can reset the counter\n     */\n    function resetCounter() external {\n        LibDiamond.enforceIsContractOwner();\n        CounterStorage storage cs = counterStorage();\n        \n        uint256 previousValue = cs.counter;\n        cs.counter = 0;\n        cs.lastUpdater = msg.sender;\n        cs.lastUpdateTimestamp = block.timestamp;\n        \n        emit CounterReset(msg.sender, previousValue);\n    }\n\n    /**\n     * @notice Get the current global counter value\n     * @return The current counter value\n     */\n    function getCounter() external view returns (uint256) {\n        return counterStorage().counter;\n    }\n\n    /**\n     * @notice Get metadata about the last counter update\n     * @return lastUpdater Address of the last user to update the counter\n     * @return lastUpdateTimestamp Timestamp of the last update\n     */\n    function getCounterMetadata() external view returns (address lastUpdater, uint256 lastUpdateTimestamp) {\n        CounterStorage storage cs = counterStorage();\n        return (cs.lastUpdater, cs.lastUpdateTimestamp);\n    }\n\n    /**\n     * @notice Increment a user's personal counter\n     * @dev Each user has their own counter independent of the global one\n     */\n    function incrementUserCounter() external {\n        CounterStorage storage cs = counterStorage();\n        cs.userCounters[msg.sender] += 1;\n        \n        emit UserCounterUpdated(msg.sender, cs.userCounters[msg.sender]);\n    }\n\n    /**\n     * @notice Get a user's personal counter value\n     * @param user The address of the user\n     * @return The user's counter value\n     */\n    function getUserCounter(address user) external view returns (uint256) {\n        return counterStorage().userCounters[user];\n    }\n\n    /**\n     * @notice Set a user's counter to a specific value\n     * @dev Only the user themselves or the diamond owner can set their counter\n     * @param value The new counter value\n     */\n    function setUserCounter(uint256 value) external {\n        CounterStorage storage cs = counterStorage();\n        cs.userCounters[msg.sender] = value;\n        \n        emit UserCounterUpdated(msg.sender, value);\n    }\n\n    /**\n     * @notice Set any user's counter (owner only)\n     * @dev Only the diamond owner can set other users' counters\n     * @param user The user whose counter to set\n     * @param value The new counter value\n     */\n    function setUserCounterAsOwner(address user, uint256 value) external {\n        LibDiamond.enforceIsContractOwner();\n        CounterStorage storage cs = counterStorage();\n        cs.userCounters[user] = value;\n        \n        emit UserCounterUpdated(user, value);\n    }\n}"},"contracts/facets/DiamondCutFacet.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/******************************************************************************\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\n* EIP-2535 Diamonds: https://eips.ethereum.org/EIPS/eip-2535\n*\n* Implementation of the diamond cut functions.\n/******************************************************************************/\n\nimport { LibDiamond } from \"../libraries/LibDiamond.sol\";\nimport { IDiamondCut } from \"../interfaces/IDiamondCut.sol\";\nimport { IERC165 } from \"@openzeppelin/contracts/interfaces/IERC165.sol\";\n\n/**\n * @title DiamondCutFacet\n * @dev Implementation of the diamond cut functionality with a timelock mechanism.\n *      The diamond cut operation allows adding, replacing, or removing facets and functions\n *      from the diamond proxy contract. This implementation adds a security timelock\n *      that requires a two-step process (propose and execute) for diamond cuts,\n *      enhancing security by allowing time for review before execution.\n *      Based on the EIP-2535 Diamond Standard.\n */\ncontract DiamondCutFacet is IDiamondCut {\n    /// @notice Propose a diamond cut to be executed after the timelock period\n    /// @dev First step in the two-step process for modifying the diamond. This queues up\n    ///      changes that can only be executed after a predefined timelock period.\n    ///      Only the contract owner can propose changes.\n    /// @param _diamondCut Contains the facet addresses and function selectors to add, replace, or remove\n    /// @param _init The address of the contract or facet to execute initialization code\n    /// @param _calldata A function call, including function selector and arguments, for initialization\n    function proposeDiamondCut(\n        IDiamondCut.FacetCut[] calldata _diamondCut,\n        address _init,\n        bytes calldata _calldata\n    ) external {\n        LibDiamond.enforceIsContractOwner();\n        LibDiamond.proposeDiamondCut(_diamondCut, _init, _calldata);\n    }\n    \n    /// @notice Execute a previously proposed diamond cut after the timelock period has elapsed\n    /// @dev Second and final step in the two-step diamond modification process.\n    ///      This executes the changes that were previously proposed, but only if\n    ///      the required timelock period has passed. The timelock period is a\n    ///      security measure to allow stakeholders time to review proposed changes.\n    ///      Only the contract owner can execute the diamond cut.\n    /// @custom:security Reverts if no diamond cut is proposed, if the timelock period\n    ///                  hasn't expired, or if the initialization call fails\n    function executeDiamondCut() external {\n        LibDiamond.enforceIsContractOwner();\n        LibDiamond.executeDiamondCut();\n    }\n    \n    /// @notice Cancel a previously proposed diamond cut\n    /// @dev Allows the contract owner to cancel a pending diamond cut proposal\n    ///      before it is executed. This is useful if errors are found in the\n    ///      proposed changes during the timelock period or if the changes\n    ///      are no longer desired. Once cancelled, the proposal is completely\n    ///      removed and a new proposal would need to be submitted if needed.\n    /// @custom:security Only callable by the contract owner\n    function cancelDiamondCut() external {\n        LibDiamond.enforceIsContractOwner();\n        LibDiamond.cancelDiamondCut();\n    }\n    \n    /// @notice Add/replace/remove any number of functions and optionally execute initialization code\n    /// @dev THIS FUNCTION IS DEPRECATED and will always revert when called.\n    ///      It has been replaced by the more secure two-step process using\n    ///      proposeDiamondCut() followed by executeDiamondCut(), which adds a timelock\n    ///      security feature. This function remains to maintain compatibility with\n    ///      the IDiamondCut interface but cannot be used.\n    /// @custom:security Always reverts with an error message directing to the new functions\n    function diamondCut(\n        IDiamondCut.FacetCut[] calldata,\n        address,\n        bytes calldata\n    ) external pure override {\n        revert(\"Function deprecated: Use proposeDiamondCut() + executeDiamondCut() instead\");\n    }\n}"},"contracts/facets/DiamondLoupeFacet.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/******************************************************************************\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\n* EIP-2535 Diamonds: https://eips.ethereum.org/EIPS/eip-2535\n*\n* Implementation of the diamond loupe functions.\n/******************************************************************************/\n\nimport { LibDiamond } from \"../libraries/LibDiamond.sol\";\nimport { IDiamondLoupe } from \"../interfaces/IDiamondLoupe.sol\";\nimport { IERC165 } from \"@openzeppelin/contracts/interfaces/IERC165.sol\";\n\n/**\n * @title DiamondLoupeFacet\n * @dev Implementation of the DiamondLoupe standard which provides introspection functions\n *      to view what facets and functions are available in the diamond contract.\n *      The Diamond Loupe functions make it possible to look up facets and functions\n *      implemented by a diamond. This implementation is based on the EIP-2535 Diamond Standard.\n */\ncontract DiamondLoupeFacet is IDiamondLoupe, IERC165 {\n    /// @notice Gets all facets and their selectors that are registered with the diamond\n    /// @dev This function is used to inspect the full facet structure of the diamond\n    /// @return facets_ An array of Facet structs containing the facet addresses and\n    ///         their associated function selectors\n    function facets() external override view returns (Facet[] memory facets_) {\n        LibDiamond.DiamondStorage storage ds = LibDiamond.diamondStorage();\n        uint256 numFacets = ds.facetAddresses.length;\n        facets_ = new Facet[](numFacets);\n        for (uint256 i; i < numFacets; i++) {\n            address facetAddress_ = ds.facetAddresses[i];\n            facets_[i].facetAddress = facetAddress_;\n            facets_[i].functionSelectors = ds.facetFunctionSelectors[facetAddress_].functionSelectors;\n        }\n    }\n\n    /// @notice Gets all the function selectors supported by a specific facet\n    /// @dev Used to retrieve all function selectors managed by a single facet implementation\n    /// @param _facet The facet address to query\n    /// @return facetFunctionSelectors_ Array of function selectors (bytes4) supported by the facet\n    function facetFunctionSelectors(address _facet) external override view returns (bytes4[] memory facetFunctionSelectors_) {\n        LibDiamond.DiamondStorage storage ds = LibDiamond.diamondStorage();\n        facetFunctionSelectors_ = ds.facetFunctionSelectors[_facet].functionSelectors;\n    }\n\n    /// @notice Get all the facet addresses registered in the diamond\n    /// @dev Provides a complete list of implementation contracts that make up the diamond's functionality\n    /// @return facetAddresses_ Array of all registered facet addresses\n    function facetAddresses() external override view returns (address[] memory facetAddresses_) {\n        LibDiamond.DiamondStorage storage ds = LibDiamond.diamondStorage();\n        facetAddresses_ = ds.facetAddresses;\n    }\n\n    /// @notice Gets the facet address that implements a specific function\n    /// @dev Used to determine which implementation contract handles a particular function.\n    ///      This function is critical for understanding the diamond's current function routing.\n    ///      If no facet is found for the selector, returns address(0).\n    /// @param _functionSelector The 4-byte function selector to find the implementation for\n    /// @return facetAddress_ The facet address implementing the function, or address(0) if not found\n    function facetAddress(bytes4 _functionSelector) external override view returns (address facetAddress_) {\n        LibDiamond.DiamondStorage storage ds = LibDiamond.diamondStorage();\n        facetAddress_ = ds.selectorToFacetAndPosition[_functionSelector].facetAddress;\n    }\n\n    /// @notice Checks if the contract implements an interface\n    /// @dev ERC-165 implementation that checks if the diamond supports a specific interface.\n    ///      Returns true for IDiamondLoupe and IERC165 interfaces, and any additional\n    ///      interfaces registered with the diamond.\n    /// @param _interfaceId The interface identifier to check, as specified in ERC-165\n    /// @return True if the contract implements the interface, false otherwise\n    function supportsInterface(bytes4 _interfaceId) external view override returns (bool) {\n        LibDiamond.DiamondStorage storage ds = LibDiamond.diamondStorage();\n        return _interfaceId == type(IERC165).interfaceId || \n               _interfaceId == type(IDiamondLoupe).interfaceId ||\n               ds.supportedInterfaces[_interfaceId];\n    }\n}"},"contracts/facets/OwnershipFacet.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport { LibDiamond } from \"../libraries/LibDiamond.sol\";\nimport { IERC173 } from \"../interfaces/IERC173.sol\";\nimport { IERC165 } from \"@openzeppelin/contracts/interfaces/IERC165.sol\";\n\n/**\n * @title OwnershipFacet\n * @dev Implementation of the ERC-173 ownership standard for the Diamond proxy pattern.\n *      This facet manages the ownership of the diamond contract, which is a critical\n *      security consideration as the owner has complete control over the contract's\n *      functionality through diamond cuts. The ownership model follows the standard\n *      single-owner pattern where the owner can transfer ownership to another address.\n *      This facet implements both the IERC173 interface for ownership and the IERC165\n *      interface for standard interface detection.\n */\nabstract contract OwnershipFacet is IERC173, IERC165 {\n    /**\n     * @notice Transfer ownership of the contract to a new address\n     * @dev Only the current owner can call this function. This is a critical\n     *      security function as the owner has complete control over the diamond.\n     *      The ownership transfer happens immediately with no two-step process,\n     *      so extreme care should be taken to ensure the new owner address is correct.\n     *      Setting the owner to address(0) will effectively renounce ownership,\n     *      leaving the contract without an owner and unable to perform privileged\n     *      operations like diamond cuts.\n     * @param _newOwner The address of the new owner\n     */\n    function transferOwnership(address _newOwner) external override {\n        LibDiamond.enforceIsContractOwner();\n        LibDiamond.setContractOwner(_newOwner);\n    }\n\n    /**\n     * @notice Get the current contract owner's address\n     * @dev This view function returns the address of the current owner\n     *      without making any state changes. The owner is stored in the\n     *      diamond storage pattern and retrieved through the LibDiamond library.\n     *      The owner has exclusive privileges for critical operations including\n     *      diamond cuts and transferring ownership.\n     * @return owner_ The current owner address\n     */\n    function owner() external override view returns (address owner_) {\n        owner_ = LibDiamond.contractOwner();\n    }\n\n    // Removed supportsInterface(bytes4) function.\n    // This should be handled by DiamondLoupeFacet (ERC165).\n}"},"contracts/interfaces/IDiamond.sol":{"content":"//SPDX-License-Identifier: MIT\npragma solidity ^0.8.6;\n\n\nstruct DiamondSettings {\n  address owner;\n  address factory;\n  address svgManager;\n  string symbol;\n  string name;\n}\n\nstruct DiamondContract {\n  DiamondSettings settings;\n  mapping(string=>string) metadata;\n}\n\nstruct DiamondStorage {\n  DiamondContract diamondContract;\n}\n\n\ninterface IDiamond {\n  function getDiamondAddress() external view returns (address);\n}\n\n"},"contracts/interfaces/IDiamondCut.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.6;\r\n\r\n/******************************************************************************\\\r\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\r\n* EIP-2535 Diamonds: https://eips.ethereum.org/EIPS/eip-2535\r\n/******************************************************************************/\r\n\r\ninterface IDiamondCut {\r\n    enum FacetCutAction {Add, Replace, Remove}\r\n    // Add=0, Replace=1, Remove=2\r\n\r\n    struct FacetCut {\r\n        address facetAddress;\r\n        FacetCutAction action;\r\n        bytes4[] functionSelectors;\r\n    }\r\n\r\n    /// @notice Add/replace/remove any number of functions and optionally execute\r\n    ///         a function with delegatecall\r\n    /// @param _diamondCut Contains the facet addresses and function selectors\r\n    /// @param _init The address of the contract or facet to execute _calldata\r\n    /// @param _calldata A function call, including function selector and arguments\r\n    ///                  _calldata is executed with delegatecall on _init\r\n    function diamondCut(\r\n        FacetCut[] calldata _diamondCut,\r\n        address _init,\r\n        bytes calldata _calldata\r\n    ) external;\r\n    \r\n    /// @notice Propose an upgrade to be executed after the timelock period\r\n    /// @param _diamondCut Contains the facet addresses and function selectors\r\n    /// @param _init The address of the contract or facet to execute _calldata\r\n    /// @param _calldata A function call, including function selector and arguments\r\n    function proposeDiamondCut(\r\n        FacetCut[] calldata _diamondCut,\r\n        address _init,\r\n        bytes calldata _calldata\r\n    ) external;\r\n    \r\n    /// @notice Execute a previously proposed upgrade after the timelock period\r\n    function executeDiamondCut() external;\r\n    \r\n    /// @notice Cancel a proposed upgrade\r\n    function cancelDiamondCut() external;\r\n\r\n    event DiamondCut(FacetCut[] _diamondCut, address _init, bytes _calldata);\r\n    event DiamondCutProposed(address indexed proposer, uint256 indexed proposalTime, uint256 executionTime);\r\n    event DiamondCutCancelled(address indexed canceller);\r\n}\r\n"},"contracts/interfaces/IDiamondFacetInit.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.6;\n\nimport \"./IDiamondCut.sol\";\nimport \"./IERC165.sol\";\n\ninterface IDiamondFacetInit is IERC165 {\n    function initializeFacet(\n        address _owner, \n        IDiamondCut.FacetCut memory _facet,\n        bytes calldata _calldata) external;\n}\n"},"contracts/interfaces/IDiamondFactory.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.6;\n\nimport { IDiamondCut } from \"./IDiamondCut.sol\";\n\nstruct DiamondFactoryInit {\n    string setName;\n    IDiamondCut.FacetCut[] facetAddresses;\n    bytes diamondBytecode;\n}\n\nstruct DiamondFactoryContract {\n    string[] diamondSymbols;\n    mapping(string => address) diamondAddresses;\n    mapping(string => IDiamondCut.FacetCut[]) facetsToAdd;\n    string[] facetSets;\n    string defaultFacetSet;\n    address diamondInit_;\n    bytes calldata_;\n}\n"},"contracts/interfaces/IDiamondInit.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.6;\n\nimport \"./IDiamondCut.sol\";\n\ninterface IDiamondInit {\n    function initialize(\n        address _owner, \n        IDiamondCut.FacetCut[] memory _facets,\n        address _init,\n        bytes calldata _calldata) external;\n}\n"},"contracts/interfaces/IDiamondLoupe.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.6;\r\n\r\n/******************************************************************************\\\r\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\r\n* EIP-2535 Diamonds: https://eips.ethereum.org/EIPS/eip-2535\r\n/******************************************************************************/\r\n\r\n// A loupe is a small magnifying glass used to look at diamonds.\r\n// These functions look at diamonds\r\ninterface IDiamondLoupe {\r\n    /// These functions are expected to be called frequently\r\n    /// by tools.\r\n\r\n    struct Facet {\r\n        address facetAddress;\r\n        bytes4[] functionSelectors;\r\n    }\r\n\r\n    /// @notice Gets all facet addresses and their four byte function selectors.\r\n    /// @return facets_ Facet\r\n    function facets() external view returns (Facet[] memory facets_);\r\n\r\n    /// @notice Gets all the function selectors supported by a specific facet.\r\n    /// @param _facet The facet address.\r\n    /// @return facetFunctionSelectors_\r\n    function facetFunctionSelectors(address _facet) external view returns (bytes4[] memory facetFunctionSelectors_);\r\n\r\n    /// @notice Get all the facet addresses used by a diamond.\r\n    /// @return facetAddresses_\r\n    function facetAddresses() external view returns (address[] memory facetAddresses_);\r\n\r\n    /// @notice Gets the facet that supports the given selector.\r\n    /// @dev If facet is not found return address(0).\r\n    /// @param _functionSelector The function selector.\r\n    /// @return facetAddress_ The facet address.\r\n    function facetAddress(bytes4 _functionSelector) external view returns (address facetAddress_);\r\n}\r\n"},"contracts/interfaces/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.6;\n\ninterface IERC165 {\n    /// @notice Query if a contract implements an interface\n    /// @param interfaceId The interface identifier, as specified in ERC-165\n    /// @dev Interface identification is specified in ERC-165. This function\n    ///  uses less than 30,000 gas.\n    /// @return `true` if the contract implements `interfaceID` and\n    ///  `interfaceID` is not 0xffffffff, `false` otherwise\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"contracts/interfaces/IERC173.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.6;\n\n/// @title ERC-173 Contract Ownership Standard\n///  Note: the ERC-165 identifier for this interface is 0x7f5828d0\n/* is ERC165 */\ninterface IERC173 {\n    /// @dev This emits when ownership of a contract changes.\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /// @notice Get the address of the owner\n    /// @return owner_ The address of the owner.\n    function owner() external view returns (address owner_);\n\n    /// @notice Set the address of the new owner of the contract\n    /// @dev Set _newOwner to address(0) to renounce any ownership.\n    /// @param _newOwner The address of the new owner of the contract\n    function transferOwnership(address _newOwner) external;\n}\n"},"contracts/interfaces/IERC721Enumerable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC721/extensions/IERC721Enumerable.sol)\n\npragma solidity ^0.8.6;\n\nimport \"@openzeppelin/contracts/interfaces/IERC721.sol\";\n\nstruct ERC721EnumerableContract {\n    // Mapping from owner to list of owned token IDs\n    mapping(address => mapping(uint256 => uint256)) _ownedTokens;\n\n    // Mapping from token ID to index of the owner tokens list\n    mapping(uint256 => uint256) _ownedTokensIndex;\n\n    // Array with all token ids, used for enumeration\n    uint256[] _allTokens;\n\n    // Mapping from token id to position in the allTokens array\n    mapping(uint256 => uint256) _allTokensIndex;\n}\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Enumerable is IERC721 {\n    /**\n     * @dev Returns the total amount of tokens stored by the contract.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n     * Use along with {totalSupply} to enumerate all tokens.\n     */\n    function tokenByIndex(uint256 index) external view returns (uint256);\n}\n"},"contracts/libraries/DiamondLib.sol":{"content":"//SPDX-License-Identifier: MIT\npragma solidity ^0.8.6;\n\nimport \"@openzeppelin/contracts/interfaces/IERC165.sol\";\nimport \"@openzeppelin/contracts/interfaces/IERC721.sol\";\nimport \"@openzeppelin/contracts/interfaces/IERC721Metadata.sol\";\n\nimport { IDiamondCut } from \"../interfaces/IDiamondCut.sol\";\nimport { DiamondStorage } from \"../interfaces/IDiamond.sol\";\nimport { IDiamondLoupe } from \"../interfaces/IDiamondLoupe.sol\";\nimport { IERC173 } from \"../interfaces/IERC173.sol\";\n\nimport \"./LibDiamond.sol\";\n\nimport \"../upgradeInitializers/DiamondInit.sol\";\n\nlibrary DiamondLib {\n\n  bytes32 internal constant DIAMOND_STORAGE_POSITION =\n    keccak256(\"diamond.nextblock.bitgem.app.DiamondStorage.storage\");\n\n  function diamondStorage() internal pure returns (DiamondStorage storage ds) {\n    bytes32 position = DIAMOND_STORAGE_POSITION;\n    assembly {\n      ds.slot := position\n    }\n  }\n}\n"},"contracts/libraries/LibDiamond.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.6;\n\n/******************************************************************************\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\n* EIP-2535 Diamonds: https://eips.ethereum.org/EIPS/eip-2535\n/******************************************************************************/\nimport { IDiamondCut } from \"../interfaces/IDiamondCut.sol\";\nimport \"../interfaces/IERC173.sol\"; // for IERC173 interface\nimport \"../interfaces/IDiamondCut.sol\";\n\n// Remember to add the loupe functions from DiamondLoupeFacet to the diamond.\n// The loupe functions are required by the EIP2535 Diamonds standard\n\nlibrary LibDiamond {\n    bytes32 constant DIAMOND_STORAGE_POSITION = keccak256(\"diamond.standard.diamond.storage\");\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n    event DiamondCut(IDiamondCut.FacetCut[] _diamondCut, address _init, bytes _calldata);\n    event DiamondCutProposed(address indexed proposer, uint256 indexed proposalTime, uint256 executionTime);\n    event DiamondCutCancelled(address indexed canceller);\n\n    struct FacetAddressAndPosition {\n        address facetAddress;\n        uint96 functionSelectorPosition; // position in facetFunctionSelectors.functionSelectors array\n    }\n\n    struct FacetFunctionSelectors {\n        bytes4[] functionSelectors;\n        uint256 facetAddressPosition; // position of facetAddress in facetAddresses array\n    }\n\n    // Upgrade proposal struct for timelock functionality\n    struct UpgradeProposal {\n        IDiamondCut.FacetCut[] diamondCut;\n        address initAddress;\n        bytes initCalldata;\n        uint256 proposalTime;\n        bool exists;\n    }\n\n    struct DiamondStorage {\n        // maps function selector to the facet address and\n        // the position of the selector in the facetFunctionSelectors.selectors array\n        mapping(bytes4 => FacetAddressAndPosition) selectorToFacetAndPosition;\n        // maps facet addresses to function selectors\n        mapping(address => FacetFunctionSelectors) facetFunctionSelectors;\n        // facet addresses\n        address[] facetAddresses;\n        // Used to query if a contract implements an interface.\n        // Used to implement ERC-165.\n        mapping(bytes4 => bool) supportedInterfaces;\n        // owner of the contract\n        address contractOwner;\n        // Timelock for upgrades (in seconds)\n        uint256 upgradeTimelock;\n        // Storage for the current upgrade proposal\n        UpgradeProposal upgradeProposal;\n    }\n\n    function diamondStorage() internal pure returns (DiamondStorage storage ds) {\n        bytes32 position = DIAMOND_STORAGE_POSITION;\n        assembly {\n            ds.slot := position\n        }\n    }\n\n    function setContractOwner(address _newOwner) internal {\n        DiamondStorage storage ds = diamondStorage();\n        address previousOwner = ds.contractOwner;\n        ds.contractOwner = _newOwner;\n        emit OwnershipTransferred(previousOwner, _newOwner);\n    }\n\n    function contractOwner() internal view returns (address contractOwner_) {\n        contractOwner_ = diamondStorage().contractOwner;\n    }\n\n    function enforceIsContractOwner() internal view {\n        require(msg.sender == diamondStorage().contractOwner, \"LibDiamond: Must be contract owner\");\n    }\n\n    // Timelock constants\n    uint256 constant DEFAULT_UPGRADE_TIMELOCK = 2 days;\n\n    // Internal function version of diamondCut\n    function diamondCut(\n        IDiamondCut.FacetCut[] memory _diamondCut,\n        address _init,\n        bytes memory _calldata\n    ) internal {\n        for (uint256 facetIndex; facetIndex < _diamondCut.length; facetIndex++) {\n            IDiamondCut.FacetCutAction action = _diamondCut[facetIndex].action;\n            if (action == IDiamondCut.FacetCutAction.Add) {\n                addFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\n            } else if (action == IDiamondCut.FacetCutAction.Replace) {\n                replaceFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\n            } else if (action == IDiamondCut.FacetCutAction.Remove) {\n                removeFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\n            } else {\n                revert(\"LibDiamondCut: Incorrect FacetCutAction\");\n            }\n        }\n        emit DiamondCut(_diamondCut, _init, _calldata);\n        initializeDiamondCut(_init, _calldata);\n    }\n\n    function addFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\n        require(_functionSelectors.length > 0, \"LibDiamondCut: No selectors in facet to cut\");\n        DiamondStorage storage ds = diamondStorage();        \n        require(_facetAddress != address(0), \"LibDiamondCut: Add facet can't be address(0)\");\n        uint96 selectorPosition = uint96(ds.facetFunctionSelectors[_facetAddress].functionSelectors.length);\n        // add new facet address if it does not exist\n        if (selectorPosition == 0) {\n            addFacet(ds, _facetAddress);            \n        }\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\n            bytes4 selector = _functionSelectors[selectorIndex];\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\n            require(oldFacetAddress == address(0), \"LibDiamondCut: Can't add function that already exists\");\n            addFunction(ds, selector, selectorPosition, _facetAddress);\n            selectorPosition++;\n        }\n    }\n\n    function replaceFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\n        require(_functionSelectors.length > 0, \"LibDiamondCut: No selectors in facet to cut\");\n        DiamondStorage storage ds = diamondStorage();\n        require(_facetAddress != address(0), \"LibDiamondCut: Add facet can't be address(0)\");\n        uint96 selectorPosition = uint96(ds.facetFunctionSelectors[_facetAddress].functionSelectors.length);\n        // add new facet address if it does not exist\n        if (selectorPosition == 0) {\n            addFacet(ds, _facetAddress);\n        }\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\n            bytes4 selector = _functionSelectors[selectorIndex];\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\n            require(oldFacetAddress != _facetAddress, \"LibDiamondCut: Can't replace function with same function\");\n            removeFunction(ds, oldFacetAddress, selector);\n            addFunction(ds, selector, selectorPosition, _facetAddress);\n            selectorPosition++;\n        }\n    }\n\n    function removeFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\n        require(_functionSelectors.length > 0, \"LibDiamondCut: No selectors in facet to cut\");\n        DiamondStorage storage ds = diamondStorage();\n        // if function does not exist then do nothing and return\n        require(_facetAddress == address(0), \"LibDiamondCut: Remove facet address must be address(0)\");\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\n            bytes4 selector = _functionSelectors[selectorIndex];\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\n            removeFunction(ds, oldFacetAddress, selector);\n        }\n    }\n\n    function addFacet(DiamondStorage storage ds, address _facetAddress) internal {\n        enforceHasContractCode(_facetAddress, \"LibDiamondCut: New facet has no code\");\n        ds.facetFunctionSelectors[_facetAddress].facetAddressPosition = ds.facetAddresses.length;\n        ds.facetAddresses.push(_facetAddress);\n    }    \n\n\n    function addFunction(DiamondStorage storage ds, bytes4 _selector, uint96 _selectorPosition, address _facetAddress) internal {\n        ds.selectorToFacetAndPosition[_selector].functionSelectorPosition = _selectorPosition;\n        ds.facetFunctionSelectors[_facetAddress].functionSelectors.push(_selector);\n        ds.selectorToFacetAndPosition[_selector].facetAddress = _facetAddress;\n    }\n\n    function removeFunction(DiamondStorage storage ds, address _facetAddress, bytes4 _selector) internal {        \n        require(_facetAddress != address(0), \"LibDiamondCut: Can't remove function that doesn't exist\");\n        // an immutable function is a function defined directly in a diamond\n        require(_facetAddress != address(this), \"LibDiamondCut: Can't remove immutable function\");\n        // replace selector with last selector, then delete last selector\n        uint256 selectorPosition = ds.selectorToFacetAndPosition[_selector].functionSelectorPosition;\n        uint256 lastSelectorPosition = ds.facetFunctionSelectors[_facetAddress].functionSelectors.length - 1;\n        // if not the same then replace _selector with lastSelector\n        if (selectorPosition != lastSelectorPosition) {\n            bytes4 lastSelector = ds.facetFunctionSelectors[_facetAddress].functionSelectors[lastSelectorPosition];\n            ds.facetFunctionSelectors[_facetAddress].functionSelectors[selectorPosition] = lastSelector;\n            ds.selectorToFacetAndPosition[lastSelector].functionSelectorPosition = uint96(selectorPosition);\n        }\n        // delete the last selector\n        ds.facetFunctionSelectors[_facetAddress].functionSelectors.pop();\n        delete ds.selectorToFacetAndPosition[_selector];\n\n        // if no more selectors for facet address then delete the facet address\n        if (lastSelectorPosition == 0) {\n            // replace facet address with last facet address and delete last facet address\n            uint256 lastFacetAddressPosition = ds.facetAddresses.length - 1;\n            uint256 facetAddressPosition = ds.facetFunctionSelectors[_facetAddress].facetAddressPosition;\n            if (facetAddressPosition != lastFacetAddressPosition) {\n                address lastFacetAddress = ds.facetAddresses[lastFacetAddressPosition];\n                ds.facetAddresses[facetAddressPosition] = lastFacetAddress;\n                ds.facetFunctionSelectors[lastFacetAddress].facetAddressPosition = facetAddressPosition;\n            }\n            ds.facetAddresses.pop();\n            delete ds.facetFunctionSelectors[_facetAddress].facetAddressPosition;\n        }\n    }\n\n    function initializeDiamondCut(address _init, bytes memory _calldata) internal {\n        if (_init == address(0)) {\n            require(_calldata.length == 0, \"LibDiamondCut: _init is address(0) but_calldata is not empty\");\n        } else {\n            require(_calldata.length > 0, \"LibDiamondCut: _calldata is empty but _init is not address(0)\");\n            if (_init != address(this)) {\n                enforceHasContractCode(_init, \"LibDiamondCut: _init address has no code\");\n            }\n            (bool success, bytes memory error) = _init.delegatecall(_calldata);\n            if (!success) {\n                if (error.length > 0) {\n                    // bubble up the error\n                    revert(string(error));\n                } else {\n                    revert(\"LibDiamondCut: _init function reverted\");\n                }\n            }\n        }\n    }\n\n    function enforceHasContractCode(address _contract, string memory _errorMessage) internal view {\n        uint256 contractSize;\n        assembly {\n            contractSize := extcodesize(_contract)\n        }\n        require(contractSize > 0, _errorMessage);\n    }\n\n    // Initialize timelock settings for upgrade proposals\n    function initializeUpgradeTimelock(uint256 _timelock) internal {\n        DiamondStorage storage ds = diamondStorage();\n        require(ds.upgradeTimelock == 0, \"LibDiamond: Timelock already initialized\");\n        ds.upgradeTimelock = _timelock > 0 ? _timelock : DEFAULT_UPGRADE_TIMELOCK;\n    }\n\n    // Propose a diamond cut to be executed after the timelock\n    function proposeDiamondCut(\n        IDiamondCut.FacetCut[] memory _diamondCut,\n        address _init,\n        bytes memory _calldata\n    ) internal {\n        DiamondStorage storage ds = diamondStorage();\n        require(!ds.upgradeProposal.exists, \"LibDiamond: Upgrade already proposed\");\n        require(ds.upgradeTimelock > 0, \"LibDiamond: Timelock not initialized\");\n        \n        // Create a deep copy of the diamond cut to store in the proposal\n        IDiamondCut.FacetCut[] memory diamondCutCopy = new IDiamondCut.FacetCut[](_diamondCut.length);\n        for (uint256 i = 0; i < _diamondCut.length; i++) {\n            diamondCutCopy[i] = _diamondCut[i];\n            \n            // Deep copy the function selectors array\n            bytes4[] memory selectors = new bytes4[](_diamondCut[i].functionSelectors.length);\n            for (uint256 j = 0; j < _diamondCut[i].functionSelectors.length; j++) {\n                selectors[j] = _diamondCut[i].functionSelectors[j];\n            }\n            diamondCutCopy[i].functionSelectors = selectors;\n        }\n        \n        // Store the proposal\n        // Create empty array in storage first\n        delete ds.upgradeProposal.diamondCut;\n        \n        // Manually copy each element and its nested arrays to storage\n        for (uint256 i = 0; i < _diamondCut.length; i++) {\n            // Create a new struct in storage by pushing an empty element first\n            ds.upgradeProposal.diamondCut.push();\n            \n            // Now set the values for this element's fields\n            ds.upgradeProposal.diamondCut[i].facetAddress = _diamondCut[i].facetAddress;\n            ds.upgradeProposal.diamondCut[i].action = _diamondCut[i].action;\n            \n            // For the selectors array, we need to handle it separately\n            // Clear any existing selectors to ensure clean state\n            delete ds.upgradeProposal.diamondCut[i].functionSelectors;\n            \n            // Copy each selector individually\n            for (uint256 j = 0; j < _diamondCut[i].functionSelectors.length; j++) {\n                ds.upgradeProposal.diamondCut[i].functionSelectors.push(_diamondCut[i].functionSelectors[j]);\n            }\n        }\n        ds.upgradeProposal.initAddress = _init;\n        ds.upgradeProposal.initCalldata = _calldata;\n        ds.upgradeProposal.proposalTime = block.timestamp;\n        ds.upgradeProposal.exists = true;\n        \n        emit DiamondCutProposed(msg.sender, block.timestamp, block.timestamp + ds.upgradeTimelock);\n    }\n    \n    // Execute a proposed diamond cut after the timelock period\n    function executeDiamondCut() internal {\n        DiamondStorage storage ds = diamondStorage();\n        require(ds.upgradeProposal.exists, \"LibDiamond: No upgrade proposal exists\");\n        require(\n            block.timestamp >= ds.upgradeProposal.proposalTime + ds.upgradeTimelock,\n            \"LibDiamond: Timelock period not elapsed\"\n        );\n        \n        // Execute the diamond cut\n        diamondCut(\n            ds.upgradeProposal.diamondCut,\n            ds.upgradeProposal.initAddress,\n            ds.upgradeProposal.initCalldata\n        );\n        \n        // Reset the proposal\n        delete ds.upgradeProposal;\n    }\n    \n    // Cancel a proposed diamond cut\n    function cancelDiamondCut() internal {\n        DiamondStorage storage ds = diamondStorage();\n        require(ds.upgradeProposal.exists, \"LibDiamond: No upgrade proposal exists\");\n        \n        // Reset the proposal\n        delete ds.upgradeProposal;\n        \n        emit DiamondCutCancelled(msg.sender);\n    }\n}\n"},"contracts/Marketplace.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\n/**\n * @title Marketplace\n * @dev A simple marketplace for buying and selling items\n */\ncontract Marketplace {\n    struct Item {\n        uint256 id;\n        string name;\n        string description;\n        uint256 price;\n        address payable seller;\n        bool sold;\n        uint256 listedAt;\n    }\n    \n    uint256 public nextItemId;\n    uint256 public marketplaceFee; // Fee in basis points (100 = 1%)\n    address public owner;\n    bool public paused;\n    \n    mapping(uint256 => Item) public items;\n    mapping(address => uint256[]) public sellerItems;\n    mapping(address => uint256) public sellerEarnings;\n    \n    event ItemListed(\n        uint256 indexed itemId,\n        string name,\n        uint256 price,\n        address indexed seller\n    );\n    \n    event ItemSold(\n        uint256 indexed itemId,\n        string name,\n        uint256 price,\n        address indexed seller,\n        address indexed buyer\n    );\n    \n    event ItemRemoved(uint256 indexed itemId, address indexed seller);\n    event EarningsWithdrawn(address indexed seller, uint256 amount);\n    event FeeUpdated(uint256 oldFee, uint256 newFee);\n    event MarketplacePaused(bool paused);\n    \n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Only owner can call this function\");\n        _;\n    }\n    \n    modifier notPaused() {\n        require(!paused, \"Marketplace is paused\");\n        _;\n    }\n    \n    modifier itemExists(uint256 _itemId) {\n        require(_itemId < nextItemId, \"Item does not exist\");\n        _;\n    }\n    \n    constructor(uint256 _marketplaceFee) {\n        owner = msg.sender;\n        marketplaceFee = _marketplaceFee;\n        nextItemId = 1; // Start IDs from 1\n    }\n    \n    function listItem(\n        string memory _name,\n        string memory _description,\n        uint256 _price\n    ) public notPaused returns (uint256) {\n        require(bytes(_name).length > 0, \"Item name cannot be empty\");\n        require(_price > 0, \"Price must be greater than 0\");\n        \n        uint256 itemId = nextItemId;\n        nextItemId++;\n        \n        items[itemId] = Item({\n            id: itemId,\n            name: _name,\n            description: _description,\n            price: _price,\n            seller: payable(msg.sender),\n            sold: false,\n            listedAt: block.timestamp\n        });\n        \n        sellerItems[msg.sender].push(itemId);\n        \n        emit ItemListed(itemId, _name, _price, msg.sender);\n        return itemId;\n    }\n    \n    function buyItem(uint256 _itemId) public payable notPaused itemExists(_itemId) {\n        Item storage item = items[_itemId];\n        require(!item.sold, \"Item already sold\");\n        require(msg.sender != item.seller, \"Cannot buy your own item\");\n        require(msg.value == item.price, \"Incorrect payment amount\");\n        \n        item.sold = true;\n        \n        uint256 fee = (item.price * marketplaceFee) / 10000;\n        uint256 sellerAmount = item.price - fee;\n        \n        sellerEarnings[item.seller] += sellerAmount;\n        \n        emit ItemSold(_itemId, item.name, item.price, item.seller, msg.sender);\n    }\n    \n    function removeItem(uint256 _itemId) public itemExists(_itemId) {\n        Item storage item = items[_itemId];\n        require(msg.sender == item.seller, \"Only seller can remove item\");\n        require(!item.sold, \"Cannot remove sold item\");\n        \n        delete items[_itemId];\n        emit ItemRemoved(_itemId, msg.sender);\n    }\n    \n    function withdrawEarnings() public {\n        uint256 earnings = sellerEarnings[msg.sender];\n        require(earnings > 0, \"No earnings to withdraw\");\n        \n        sellerEarnings[msg.sender] = 0;\n        payable(msg.sender).transfer(earnings);\n        \n        emit EarningsWithdrawn(msg.sender, earnings);\n    }\n    \n    function getSellerItems(address _seller) public view returns (uint256[] memory) {\n        return sellerItems[_seller];\n    }\n    \n    function getItemCount() public view returns (uint256) {\n        return nextItemId - 1;\n    }\n    \n    // Owner functions\n    function setMarketplaceFee(uint256 _newFee) public onlyOwner {\n        require(_newFee <= 1000, \"Fee cannot exceed 10%\"); // Max 10%\n        uint256 oldFee = marketplaceFee;\n        marketplaceFee = _newFee;\n        emit FeeUpdated(oldFee, _newFee);\n    }\n    \n    function setPaused(bool _paused) public onlyOwner {\n        paused = _paused;\n        emit MarketplacePaused(_paused);\n    }\n    \n    function withdrawFees() public onlyOwner {\n        uint256 balance = address(this).balance;\n        require(balance > 0, \"No fees to withdraw\");\n        payable(owner).transfer(balance);\n    }\n    \n    // Emergency function to withdraw specific earnings (owner only)\n    function emergencyWithdraw(address _seller) public onlyOwner {\n        uint256 earnings = sellerEarnings[_seller];\n        require(earnings > 0, \"No earnings for this seller\");\n        \n        sellerEarnings[_seller] = 0;\n        payable(_seller).transfer(earnings);\n        emit EarningsWithdrawn(_seller, earnings);\n    }\n}"},"contracts/SimpleStorage.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\n/**\n * @title SimpleStorage\n * @dev Store & retrieve value in a variable\n */\ncontract SimpleStorage {\n    uint256 public storedValue;\n    address public owner;\n    \n    event ValueChanged(uint256 oldValue, uint256 newValue, address changedBy);\n    \n    constructor(uint256 _initialValue) {\n        storedValue = _initialValue;\n        owner = msg.sender;\n        emit ValueChanged(0, _initialValue, msg.sender);\n    }\n    \n    /**\n     * @dev Store value in variable\n     * @param _value value to store\n     */\n    function setValue(uint256 _value) public {\n        uint256 oldValue = storedValue;\n        storedValue = _value;\n        emit ValueChanged(oldValue, _value, msg.sender);\n    }\n    \n    /**\n     * @dev Return value \n     * @return value of 'storedValue'\n     */\n    function getValue() public view returns (uint256) {\n        return storedValue;\n    }\n    \n    /**\n     * @dev Increment the stored value by 1\n     */\n    function increment() public {\n        setValue(storedValue + 1);\n    }\n    \n    /**\n     * @dev Reset value to zero (only owner)\n     */\n    function reset() public {\n        require(msg.sender == owner, \"Only owner can reset\");\n        setValue(0);\n    }\n}"},"contracts/SimpleToken.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\n/**\n * @title SimpleToken\n * @dev Basic ERC20-like token implementation\n */\ncontract SimpleToken {\n    string public name;\n    string public symbol;\n    uint8 public decimals;\n    uint256 public totalSupply;\n    address public owner;\n    \n    mapping(address => uint256) public balanceOf;\n    mapping(address => mapping(address => uint256)) public allowance;\n    \n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n    event Mint(address indexed to, uint256 value);\n    event Burn(address indexed from, uint256 value);\n    \n    constructor(\n        string memory _name,\n        string memory _symbol,\n        uint8 _decimals,\n        uint256 _initialSupply\n    ) {\n        name = _name;\n        symbol = _symbol;\n        decimals = _decimals;\n        totalSupply = _initialSupply * 10**_decimals;\n        owner = msg.sender;\n        balanceOf[msg.sender] = totalSupply;\n        emit Transfer(address(0), msg.sender, totalSupply);\n    }\n    \n    function transfer(address _to, uint256 _value) public returns (bool) {\n        require(_to != address(0), \"Cannot transfer to zero address\");\n        require(balanceOf[msg.sender] >= _value, \"Insufficient balance\");\n        \n        balanceOf[msg.sender] -= _value;\n        balanceOf[_to] += _value;\n        emit Transfer(msg.sender, _to, _value);\n        return true;\n    }\n    \n    function approve(address _spender, uint256 _value) public returns (bool) {\n        allowance[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);\n        return true;\n    }\n    \n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\n        require(_to != address(0), \"Cannot transfer to zero address\");\n        require(balanceOf[_from] >= _value, \"Insufficient balance\");\n        require(allowance[_from][msg.sender] >= _value, \"Insufficient allowance\");\n        \n        balanceOf[_from] -= _value;\n        balanceOf[_to] += _value;\n        allowance[_from][msg.sender] -= _value;\n        emit Transfer(_from, _to, _value);\n        return true;\n    }\n    \n    function mint(address _to, uint256 _value) public {\n        require(msg.sender == owner, \"Only owner can mint\");\n        require(_to != address(0), \"Cannot mint to zero address\");\n        \n        totalSupply += _value;\n        balanceOf[_to] += _value;\n        emit Mint(_to, _value);\n        emit Transfer(address(0), _to, _value);\n    }\n    \n    function burn(uint256 _value) public {\n        require(balanceOf[msg.sender] >= _value, \"Insufficient balance to burn\");\n        \n        balanceOf[msg.sender] -= _value;\n        totalSupply -= _value;\n        emit Burn(msg.sender, _value);\n        emit Transfer(msg.sender, address(0), _value);\n    }\n}"},"contracts/upgradeInitializers/DiamondInit.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.6;\n\n/******************************************************************************\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\n* EIP-2535 Diamonds: https://eips.ethereum.org/EIPS/eip-2535\n*\n* Implementation of a diamond.\n/******************************************************************************/\n\nimport \"@openzeppelin/contracts/interfaces/IERC165.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"@openzeppelin/contracts/interfaces/IERC721Metadata.sol\";\n\nimport { LibDiamond } from \"../libraries/LibDiamond.sol\";\nimport { IDiamondLoupe } from \"../interfaces/IDiamondLoupe.sol\";\nimport { IDiamondCut } from \"../interfaces/IDiamondCut.sol\";\nimport { IERC173 } from \"../interfaces/IERC173.sol\";\n\n// It is expected that this contract is customized if you want to deploy your diamond\n// with data from a deployment script. Use the init function to initialize state variables\n// of your diamond. Add parameters to the init funciton if you need to.\n\ncontract DiamondInit {    \n\n    // You can add parameters to this function in order to pass in \n    // data to set your own state variables\n    function init() external {        \n\n    }\n\n}\n"},"contracts/upgradeInitializers/DynamicDiamondInit.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.6;\n\n/******************************************************************************\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\n* EIP-2535 Diamonds: https://eips.ethereum.org/EIPS/eip-2535\n*\n* Implementation of a diamond.\n/******************************************************************************/\n\nimport \"@openzeppelin/contracts/interfaces/IERC165.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"@openzeppelin/contracts/interfaces/IERC721Metadata.sol\";\n\nimport { LibDiamond } from \"../libraries/LibDiamond.sol\";\nimport { IDiamondLoupe } from \"../interfaces/IDiamondLoupe.sol\";\nimport { IDiamondCut } from \"../interfaces/IDiamondCut.sol\";\nimport { IERC173 } from \"../interfaces/IERC173.sol\";\n\ninterface IDiamondFacetInit is IERC165 {\n    function initializeFacet(\n        address _owner, \n        IDiamondCut.FacetCut memory _facet,\n        bytes calldata _calldata) external;\n}\n\n// It is expected that this contract is customized if you want to deploy your diamond\n// with data from a deployment script. Use the init function to initialize state variables\n// of your diamond. Add parameters to the init funciton if you need to.\n\ncontract DiamondInit {    \n\n    function init(bytes memory initParams) external {        \n\n    }\n\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout","devdoc","userdoc","evm.gasEstimates"],"":["ast"]}},"evmVersion":"paris","metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts/interfaces/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","exportedSymbols":{"IERC165":[436]},"id":4,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"106:25:0"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4,"sourceUnit":437,"src":"133:59:0","symbolAliases":[{"foreign":{"id":2,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":436,"src":"141:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:87:0"},"id":0},"@openzeppelin/contracts/interfaces/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC721.sol","exportedSymbols":{"IERC721":[396]},"id":8,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"106:24:1"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../token/ERC721/IERC721.sol","id":7,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8,"sourceUnit":397,"src":"132:52:1","symbolAliases":[{"foreign":{"id":6,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"140:7:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:79:1"},"id":1},"@openzeppelin/contracts/interfaces/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC721Metadata.sol","exportedSymbols":{"IERC721Metadata":[424]},"id":12,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"114:24:2"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"../token/ERC721/extensions/IERC721Metadata.sol","id":11,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":12,"sourceUnit":425,"src":"140:79:2","symbolAliases":[{"foreign":{"id":10,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":424,"src":"148:15:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"114:106:2"},"id":2},"@openzeppelin/contracts/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/utils/Initializable.sol","exportedSymbols":{"Initializable":[279]},"id":280,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":13,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:3"},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"139:2209:3","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":279,"linearizedBaseContracts":[279],"name":"Initializable","nameLocation":"2367:13:3","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Initializable.InitializableStorage","documentation":{"id":15,"nodeType":"StructuredDocumentation","src":"2387:293:3","text":" @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"},"id":22,"members":[{"constant":false,"id":18,"mutability":"mutable","name":"_initialized","nameLocation":"2820:12:3","nodeType":"VariableDeclaration","scope":22,"src":"2813:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":17,"name":"uint64","nodeType":"ElementaryTypeName","src":"2813:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":21,"mutability":"mutable","name":"_initializing","nameLocation":"2955:13:3","nodeType":"VariableDeclaration","scope":22,"src":"2950:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":20,"name":"bool","nodeType":"ElementaryTypeName","src":"2950:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"InitializableStorage","nameLocation":"2692:20:3","nodeType":"StructDefinition","scope":279,"src":"2685:290:3","visibility":"public"},{"constant":true,"id":25,"mutability":"constant","name":"INITIALIZABLE_STORAGE","nameLocation":"3123:21:3","nodeType":"VariableDeclaration","scope":279,"src":"3098:115:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":23,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3098:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030","id":24,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3147:66:3","typeDescriptions":{"typeIdentifier":"t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1","typeString":"int_const 1089...(70 digits omitted)...9600"},"value":"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"},"visibility":"private"},{"documentation":{"id":26,"nodeType":"StructuredDocumentation","src":"3220:60:3","text":" @dev The contract is already initialized."},"errorSelector":"f92ee8a9","id":28,"name":"InvalidInitialization","nameLocation":"3291:21:3","nodeType":"ErrorDefinition","parameters":{"id":27,"nodeType":"ParameterList","parameters":[],"src":"3312:2:3"},"src":"3285:30:3"},{"documentation":{"id":29,"nodeType":"StructuredDocumentation","src":"3321:57:3","text":" @dev The contract is not initializing."},"errorSelector":"d7e6bcf8","id":31,"name":"NotInitializing","nameLocation":"3389:15:3","nodeType":"ErrorDefinition","parameters":{"id":30,"nodeType":"ParameterList","parameters":[],"src":"3404:2:3"},"src":"3383:24:3"},{"anonymous":false,"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"3413:90:3","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2","id":36,"name":"Initialized","nameLocation":"3514:11:3","nodeType":"EventDefinition","parameters":{"id":35,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"3533:7:3","nodeType":"VariableDeclaration","scope":36,"src":"3526:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":33,"name":"uint64","nodeType":"ElementaryTypeName","src":"3526:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3525:16:3"},"src":"3508:34:3"},{"body":{"id":118,"nodeType":"Block","src":"4092:1079:3","statements":[{"assignments":[41],"declarations":[{"constant":false,"id":41,"mutability":"mutable","name":"$","nameLocation":"4187:1:3","nodeType":"VariableDeclaration","scope":118,"src":"4158:30:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$22_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":40,"nodeType":"UserDefinedTypeName","pathNode":{"id":39,"name":"InitializableStorage","nameLocations":["4158:20:3"],"nodeType":"IdentifierPath","referencedDeclaration":22,"src":"4158:20:3"},"referencedDeclaration":22,"src":"4158:20:3","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$22_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":44,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":42,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"4191:24:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$22_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":43,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4191:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$22_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4158:59:3"},{"assignments":[46],"declarations":[{"constant":false,"id":46,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"4284:14:3","nodeType":"VariableDeclaration","scope":118,"src":"4279:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":45,"name":"bool","nodeType":"ElementaryTypeName","src":"4279:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":50,"initialValue":{"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4301:16:3","subExpression":{"expression":{"id":47,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"4302:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$22_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":48,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4304:13:3","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":21,"src":"4302:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4279:38:3"},{"assignments":[52],"declarations":[{"constant":false,"id":52,"mutability":"mutable","name":"initialized","nameLocation":"4334:11:3","nodeType":"VariableDeclaration","scope":118,"src":"4327:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":51,"name":"uint64","nodeType":"ElementaryTypeName","src":"4327:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":55,"initialValue":{"expression":{"id":53,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"4348:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$22_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":54,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4350:12:3","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":18,"src":"4348:14:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"4327:35:3"},{"assignments":[57],"declarations":[{"constant":false,"id":57,"mutability":"mutable","name":"initialSetup","nameLocation":"4709:12:3","nodeType":"VariableDeclaration","scope":118,"src":"4704:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":56,"name":"bool","nodeType":"ElementaryTypeName","src":"4704:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":63,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":62,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":60,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":58,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":52,"src":"4724:11:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":59,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4739:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4724:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":61,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"4744:14:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4724:34:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4704:54:3"},{"assignments":[65],"declarations":[{"constant":false,"id":65,"mutability":"mutable","name":"construction","nameLocation":"4773:12:3","nodeType":"VariableDeclaration","scope":118,"src":"4768:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":64,"name":"bool","nodeType":"ElementaryTypeName","src":"4768:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":78,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":77,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":68,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":66,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":52,"src":"4788:11:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":67,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4803:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4788:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":76,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":71,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4816:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$279","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$279","typeString":"contract Initializable"}],"id":70,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4808:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":69,"name":"address","nodeType":"ElementaryTypeName","src":"4808:7:3","typeDescriptions":{}}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4808:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":73,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4822:4:3","memberName":"code","nodeType":"MemberAccess","src":"4808:18:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4827:6:3","memberName":"length","nodeType":"MemberAccess","src":"4808:25:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":75,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4837:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4808:30:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4788:50:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4768:70:3"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":83,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":80,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4853:13:3","subExpression":{"id":79,"name":"initialSetup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":57,"src":"4854:12:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4870:13:3","subExpression":{"id":81,"name":"construction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"4871:12:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4853:30:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":88,"nodeType":"IfStatement","src":"4849:91:3","trueBody":{"id":87,"nodeType":"Block","src":"4885:55:3","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":84,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28,"src":"4906:21:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":85,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4906:23:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":86,"nodeType":"RevertStatement","src":"4899:30:3"}]}},{"expression":{"id":93,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":89,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"4949:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$22_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":91,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4951:12:3","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":18,"src":"4949:14:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":92,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4966:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4949:18:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":94,"nodeType":"ExpressionStatement","src":"4949:18:3"},{"condition":{"id":95,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"4981:14:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":103,"nodeType":"IfStatement","src":"4977:67:3","trueBody":{"id":102,"nodeType":"Block","src":"4997:47:3","statements":[{"expression":{"id":100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":96,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"5011:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$22_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":98,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5013:13:3","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":21,"src":"5011:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":99,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5029:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5011:22:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":101,"nodeType":"ExpressionStatement","src":"5011:22:3"}]}},{"id":104,"nodeType":"PlaceholderStatement","src":"5053:1:3"},{"condition":{"id":105,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"5068:14:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":117,"nodeType":"IfStatement","src":"5064:101:3","trueBody":{"id":116,"nodeType":"Block","src":"5084:81:3","statements":[{"expression":{"id":110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":106,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"5098:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$22_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":108,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5100:13:3","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":21,"src":"5098:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5116:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5098:23:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":111,"nodeType":"ExpressionStatement","src":"5098:23:3"},{"eventCall":{"arguments":[{"hexValue":"31","id":113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5152:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":112,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":36,"src":"5140:11:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5140:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":115,"nodeType":"EmitStatement","src":"5135:19:3"}]}}]},"documentation":{"id":37,"nodeType":"StructuredDocumentation","src":"3548:516:3","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."},"id":119,"name":"initializer","nameLocation":"4078:11:3","nodeType":"ModifierDefinition","parameters":{"id":38,"nodeType":"ParameterList","parameters":[],"src":"4089:2:3"},"src":"4069:1102:3","virtual":false,"visibility":"internal"},{"body":{"id":165,"nodeType":"Block","src":"6289:392:3","statements":[{"assignments":[126],"declarations":[{"constant":false,"id":126,"mutability":"mutable","name":"$","nameLocation":"6384:1:3","nodeType":"VariableDeclaration","scope":165,"src":"6355:30:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$22_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":125,"nodeType":"UserDefinedTypeName","pathNode":{"id":124,"name":"InitializableStorage","nameLocations":["6355:20:3"],"nodeType":"IdentifierPath","referencedDeclaration":22,"src":"6355:20:3"},"referencedDeclaration":22,"src":"6355:20:3","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$22_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":129,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":127,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"6388:24:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$22_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6388:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$22_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6355:59:3"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":130,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":126,"src":"6429:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$22_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":131,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6431:13:3","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":21,"src":"6429:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":132,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":126,"src":"6448:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$22_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":133,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6450:12:3","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":18,"src":"6448:14:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":134,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":122,"src":"6466:7:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6448:25:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6429:44:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":141,"nodeType":"IfStatement","src":"6425:105:3","trueBody":{"id":140,"nodeType":"Block","src":"6475:55:3","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":137,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28,"src":"6496:21:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6496:23:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":139,"nodeType":"RevertStatement","src":"6489:30:3"}]}},{"expression":{"id":146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":142,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":126,"src":"6539:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$22_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":144,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6541:12:3","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":18,"src":"6539:14:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":145,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":122,"src":"6556:7:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6539:24:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":147,"nodeType":"ExpressionStatement","src":"6539:24:3"},{"expression":{"id":152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":148,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":126,"src":"6573:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$22_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":150,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6575:13:3","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":21,"src":"6573:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6591:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6573:22:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":153,"nodeType":"ExpressionStatement","src":"6573:22:3"},{"id":154,"nodeType":"PlaceholderStatement","src":"6605:1:3"},{"expression":{"id":159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":155,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":126,"src":"6616:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$22_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":157,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6618:13:3","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":21,"src":"6616:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6634:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6616:23:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":160,"nodeType":"ExpressionStatement","src":"6616:23:3"},{"eventCall":{"arguments":[{"id":162,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":122,"src":"6666:7:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":161,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":36,"src":"6654:11:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6654:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":164,"nodeType":"EmitStatement","src":"6649:25:3"}]},"documentation":{"id":120,"nodeType":"StructuredDocumentation","src":"5177:1068:3","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":166,"name":"reinitializer","nameLocation":"6259:13:3","nodeType":"ModifierDefinition","parameters":{"id":123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":122,"mutability":"mutable","name":"version","nameLocation":"6280:7:3","nodeType":"VariableDeclaration","scope":166,"src":"6273:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":121,"name":"uint64","nodeType":"ElementaryTypeName","src":"6273:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6272:16:3"},"src":"6250:431:3","virtual":false,"visibility":"internal"},{"body":{"id":173,"nodeType":"Block","src":"6919:48:3","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":169,"name":"_checkInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":187,"src":"6929:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6929:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":171,"nodeType":"ExpressionStatement","src":"6929:20:3"},{"id":172,"nodeType":"PlaceholderStatement","src":"6959:1:3"}]},"documentation":{"id":167,"nodeType":"StructuredDocumentation","src":"6687:199:3","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":174,"name":"onlyInitializing","nameLocation":"6900:16:3","nodeType":"ModifierDefinition","parameters":{"id":168,"nodeType":"ParameterList","parameters":[],"src":"6916:2:3"},"src":"6891:76:3","virtual":false,"visibility":"internal"},{"body":{"id":186,"nodeType":"Block","src":"7134:89:3","statements":[{"condition":{"id":180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7148:18:3","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":178,"name":"_isInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"7149:15:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7149:17:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":185,"nodeType":"IfStatement","src":"7144:73:3","trueBody":{"id":184,"nodeType":"Block","src":"7168:49:3","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":181,"name":"NotInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":31,"src":"7189:15:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7189:17:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":183,"nodeType":"RevertStatement","src":"7182:24:3"}]}}]},"documentation":{"id":175,"nodeType":"StructuredDocumentation","src":"6973:104:3","text":" @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."},"id":187,"implemented":true,"kind":"function","modifiers":[],"name":"_checkInitializing","nameLocation":"7091:18:3","nodeType":"FunctionDefinition","parameters":{"id":176,"nodeType":"ParameterList","parameters":[],"src":"7109:2:3"},"returnParameters":{"id":177,"nodeType":"ParameterList","parameters":[],"src":"7134:0:3"},"scope":279,"src":"7082:141:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":232,"nodeType":"Block","src":"7758:373:3","statements":[{"assignments":[193],"declarations":[{"constant":false,"id":193,"mutability":"mutable","name":"$","nameLocation":"7853:1:3","nodeType":"VariableDeclaration","scope":232,"src":"7824:30:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$22_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":192,"nodeType":"UserDefinedTypeName","pathNode":{"id":191,"name":"InitializableStorage","nameLocations":["7824:20:3"],"nodeType":"IdentifierPath","referencedDeclaration":22,"src":"7824:20:3"},"referencedDeclaration":22,"src":"7824:20:3","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$22_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":196,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":194,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"7857:24:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$22_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7857:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$22_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7824:59:3"},{"condition":{"expression":{"id":197,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"7898:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$22_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":198,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7900:13:3","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":21,"src":"7898:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":203,"nodeType":"IfStatement","src":"7894:76:3","trueBody":{"id":202,"nodeType":"Block","src":"7915:55:3","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":199,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28,"src":"7936:21:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7936:23:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":201,"nodeType":"RevertStatement","src":"7929:30:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":204,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"7983:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$22_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":205,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7985:12:3","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":18,"src":"7983:14:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8006:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":207,"name":"uint64","nodeType":"ElementaryTypeName","src":"8006:6:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":206,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8001:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8001:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":210,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8014:3:3","memberName":"max","nodeType":"MemberAccess","src":"8001:16:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"7983:34:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":231,"nodeType":"IfStatement","src":"7979:146:3","trueBody":{"id":230,"nodeType":"Block","src":"8019:106:3","statements":[{"expression":{"id":220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":212,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"8033:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$22_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":214,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8035:12:3","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":18,"src":"8033:14:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":217,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8055:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":216,"name":"uint64","nodeType":"ElementaryTypeName","src":"8055:6:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":215,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8050:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8050:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":219,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8063:3:3","memberName":"max","nodeType":"MemberAccess","src":"8050:16:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"8033:33:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":221,"nodeType":"ExpressionStatement","src":"8033:33:3"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8102:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":224,"name":"uint64","nodeType":"ElementaryTypeName","src":"8102:6:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":223,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8097:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8097:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":227,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8110:3:3","memberName":"max","nodeType":"MemberAccess","src":"8097:16:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":222,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":36,"src":"8085:11:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8085:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":229,"nodeType":"EmitStatement","src":"8080:34:3"}]}}]},"documentation":{"id":188,"nodeType":"StructuredDocumentation","src":"7229:475:3","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":233,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"7718:20:3","nodeType":"FunctionDefinition","parameters":{"id":189,"nodeType":"ParameterList","parameters":[],"src":"7738:2:3"},"returnParameters":{"id":190,"nodeType":"ParameterList","parameters":[],"src":"7758:0:3"},"scope":279,"src":"7709:422:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":243,"nodeType":"Block","src":"8306:63:3","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":239,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"8323:24:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$22_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8323:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$22_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":241,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8350:12:3","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":18,"src":"8323:39:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":238,"id":242,"nodeType":"Return","src":"8316:46:3"}]},"documentation":{"id":234,"nodeType":"StructuredDocumentation","src":"8137:99:3","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":244,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"8250:22:3","nodeType":"FunctionDefinition","parameters":{"id":235,"nodeType":"ParameterList","parameters":[],"src":"8272:2:3"},"returnParameters":{"id":238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":237,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":244,"src":"8298:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":236,"name":"uint64","nodeType":"ElementaryTypeName","src":"8298:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"8297:8:3"},"scope":279,"src":"8241:128:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":254,"nodeType":"Block","src":"8541:64:3","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":250,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"8558:24:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$22_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8558:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$22_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":252,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8585:13:3","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":21,"src":"8558:40:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":249,"id":253,"nodeType":"Return","src":"8551:47:3"}]},"documentation":{"id":245,"nodeType":"StructuredDocumentation","src":"8375:105:3","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":255,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"8494:15:3","nodeType":"FunctionDefinition","parameters":{"id":246,"nodeType":"ParameterList","parameters":[],"src":"8509:2:3"},"returnParameters":{"id":249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":248,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":255,"src":"8535:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":247,"name":"bool","nodeType":"ElementaryTypeName","src":"8535:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8534:6:3"},"scope":279,"src":"8485:120:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":263,"nodeType":"Block","src":"8896:45:3","statements":[{"expression":{"id":261,"name":"INITIALIZABLE_STORAGE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"8913:21:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":260,"id":262,"nodeType":"Return","src":"8906:28:3"}]},"documentation":{"id":256,"nodeType":"StructuredDocumentation","src":"8611:203:3","text":" @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n NOTE: Consider following the ERC-7201 formula to derive storage locations."},"id":264,"implemented":true,"kind":"function","modifiers":[],"name":"_initializableStorageSlot","nameLocation":"8828:25:3","nodeType":"FunctionDefinition","parameters":{"id":257,"nodeType":"ParameterList","parameters":[],"src":"8853:2:3"},"returnParameters":{"id":260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":259,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":264,"src":"8887:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":258,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8887:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8886:9:3"},"scope":279,"src":"8819:122:3","stateMutability":"pure","virtual":true,"visibility":"internal"},{"body":{"id":277,"nodeType":"Block","src":"9161:115:3","statements":[{"assignments":[272],"declarations":[{"constant":false,"id":272,"mutability":"mutable","name":"slot","nameLocation":"9179:4:3","nodeType":"VariableDeclaration","scope":277,"src":"9171:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":271,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9171:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":275,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":273,"name":"_initializableStorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"9186:25:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_bytes32_$","typeString":"function () pure returns (bytes32)"}},"id":274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9186:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"9171:42:3"},{"AST":{"nodeType":"YulBlock","src":"9232:38:3","statements":[{"nodeType":"YulAssignment","src":"9246:14:3","value":{"name":"slot","nodeType":"YulIdentifier","src":"9256:4:3"},"variableNames":[{"name":"$.slot","nodeType":"YulIdentifier","src":"9246:6:3"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":269,"isOffset":false,"isSlot":true,"src":"9246:6:3","suffix":"slot","valueSize":1},{"declaration":272,"isOffset":false,"isSlot":false,"src":"9256:4:3","valueSize":1}],"id":276,"nodeType":"InlineAssembly","src":"9223:47:3"}]},"documentation":{"id":265,"nodeType":"StructuredDocumentation","src":"8947:67:3","text":" @dev Returns a pointer to the storage namespace."},"id":278,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializableStorage","nameLocation":"9080:24:3","nodeType":"FunctionDefinition","parameters":{"id":266,"nodeType":"ParameterList","parameters":[],"src":"9104:2:3"},"returnParameters":{"id":270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":269,"mutability":"mutable","name":"$","nameLocation":"9158:1:3","nodeType":"VariableDeclaration","scope":278,"src":"9129:30:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$22_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":268,"nodeType":"UserDefinedTypeName","pathNode":{"id":267,"name":"InitializableStorage","nameLocations":["9129:20:3"],"nodeType":"IdentifierPath","referencedDeclaration":22,"src":"9129:20:3"},"referencedDeclaration":22,"src":"9129:20:3","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$22_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"src":"9128:32:3"},"scope":279,"src":"9071:205:3","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":280,"src":"2349:6929:3","usedErrors":[28,31],"usedEvents":[36]}],"src":"113:9166:3"},"id":3},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[436],"IERC721":[396]},"id":397,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":281,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"108:24:4"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":283,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":397,"sourceUnit":437,"src":"134:62:4","symbolAliases":[{"foreign":{"id":282,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":436,"src":"142:7:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":285,"name":"IERC165","nameLocations":["288:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":436,"src":"288:7:4"},"id":286,"nodeType":"InheritanceSpecifier","src":"288:7:4"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":284,"nodeType":"StructuredDocumentation","src":"198:68:4","text":" @dev Required interface of an ERC-721 compliant contract."},"fullyImplemented":false,"id":396,"linearizedBaseContracts":[396,436],"name":"IERC721","nameLocation":"277:7:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":287,"nodeType":"StructuredDocumentation","src":"302:88:4","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":295,"name":"Transfer","nameLocation":"401:8:4","nodeType":"EventDefinition","parameters":{"id":294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":289,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"426:4:4","nodeType":"VariableDeclaration","scope":295,"src":"410:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":288,"name":"address","nodeType":"ElementaryTypeName","src":"410:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":291,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"448:2:4","nodeType":"VariableDeclaration","scope":295,"src":"432:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":290,"name":"address","nodeType":"ElementaryTypeName","src":"432:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":293,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"468:7:4","nodeType":"VariableDeclaration","scope":295,"src":"452:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":292,"name":"uint256","nodeType":"ElementaryTypeName","src":"452:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"409:67:4"},"src":"395:82:4"},{"anonymous":false,"documentation":{"id":296,"nodeType":"StructuredDocumentation","src":"483:94:4","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":304,"name":"Approval","nameLocation":"588:8:4","nodeType":"EventDefinition","parameters":{"id":303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":298,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"613:5:4","nodeType":"VariableDeclaration","scope":304,"src":"597:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":297,"name":"address","nodeType":"ElementaryTypeName","src":"597:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":300,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"636:8:4","nodeType":"VariableDeclaration","scope":304,"src":"620:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":299,"name":"address","nodeType":"ElementaryTypeName","src":"620:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":302,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"662:7:4","nodeType":"VariableDeclaration","scope":304,"src":"646:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":301,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"596:74:4"},"src":"582:89:4"},{"anonymous":false,"documentation":{"id":305,"nodeType":"StructuredDocumentation","src":"677:117:4","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":313,"name":"ApprovalForAll","nameLocation":"805:14:4","nodeType":"EventDefinition","parameters":{"id":312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":307,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"836:5:4","nodeType":"VariableDeclaration","scope":313,"src":"820:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":306,"name":"address","nodeType":"ElementaryTypeName","src":"820:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":309,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"859:8:4","nodeType":"VariableDeclaration","scope":313,"src":"843:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":308,"name":"address","nodeType":"ElementaryTypeName","src":"843:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":311,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"874:8:4","nodeType":"VariableDeclaration","scope":313,"src":"869:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":310,"name":"bool","nodeType":"ElementaryTypeName","src":"869:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"819:64:4"},"src":"799:85:4"},{"documentation":{"id":314,"nodeType":"StructuredDocumentation","src":"890:76:4","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":321,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"980:9:4","nodeType":"FunctionDefinition","parameters":{"id":317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":316,"mutability":"mutable","name":"owner","nameLocation":"998:5:4","nodeType":"VariableDeclaration","scope":321,"src":"990:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":315,"name":"address","nodeType":"ElementaryTypeName","src":"990:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"989:15:4"},"returnParameters":{"id":320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":319,"mutability":"mutable","name":"balance","nameLocation":"1036:7:4","nodeType":"VariableDeclaration","scope":321,"src":"1028:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":318,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1027:17:4"},"scope":396,"src":"971:74:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":322,"nodeType":"StructuredDocumentation","src":"1051:131:4","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":329,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1196:7:4","nodeType":"FunctionDefinition","parameters":{"id":325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":324,"mutability":"mutable","name":"tokenId","nameLocation":"1212:7:4","nodeType":"VariableDeclaration","scope":329,"src":"1204:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":323,"name":"uint256","nodeType":"ElementaryTypeName","src":"1204:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1203:17:4"},"returnParameters":{"id":328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":327,"mutability":"mutable","name":"owner","nameLocation":"1252:5:4","nodeType":"VariableDeclaration","scope":329,"src":"1244:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":326,"name":"address","nodeType":"ElementaryTypeName","src":"1244:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1243:15:4"},"scope":396,"src":"1187:72:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":330,"nodeType":"StructuredDocumentation","src":"1265:565:4","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":341,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1844:16:4","nodeType":"FunctionDefinition","parameters":{"id":339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":332,"mutability":"mutable","name":"from","nameLocation":"1869:4:4","nodeType":"VariableDeclaration","scope":341,"src":"1861:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":331,"name":"address","nodeType":"ElementaryTypeName","src":"1861:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":334,"mutability":"mutable","name":"to","nameLocation":"1883:2:4","nodeType":"VariableDeclaration","scope":341,"src":"1875:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":333,"name":"address","nodeType":"ElementaryTypeName","src":"1875:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":336,"mutability":"mutable","name":"tokenId","nameLocation":"1895:7:4","nodeType":"VariableDeclaration","scope":341,"src":"1887:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":335,"name":"uint256","nodeType":"ElementaryTypeName","src":"1887:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":338,"mutability":"mutable","name":"data","nameLocation":"1919:4:4","nodeType":"VariableDeclaration","scope":341,"src":"1904:19:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":337,"name":"bytes","nodeType":"ElementaryTypeName","src":"1904:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1860:64:4"},"returnParameters":{"id":340,"nodeType":"ParameterList","parameters":[],"src":"1933:0:4"},"scope":396,"src":"1835:99:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":342,"nodeType":"StructuredDocumentation","src":"1940:706:4","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":351,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2660:16:4","nodeType":"FunctionDefinition","parameters":{"id":349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":344,"mutability":"mutable","name":"from","nameLocation":"2685:4:4","nodeType":"VariableDeclaration","scope":351,"src":"2677:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":343,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":346,"mutability":"mutable","name":"to","nameLocation":"2699:2:4","nodeType":"VariableDeclaration","scope":351,"src":"2691:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":345,"name":"address","nodeType":"ElementaryTypeName","src":"2691:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":348,"mutability":"mutable","name":"tokenId","nameLocation":"2711:7:4","nodeType":"VariableDeclaration","scope":351,"src":"2703:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":347,"name":"uint256","nodeType":"ElementaryTypeName","src":"2703:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:4"},"returnParameters":{"id":350,"nodeType":"ParameterList","parameters":[],"src":"2728:0:4"},"scope":396,"src":"2651:78:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":352,"nodeType":"StructuredDocumentation","src":"2735:733:4","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":361,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3482:12:4","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":354,"mutability":"mutable","name":"from","nameLocation":"3503:4:4","nodeType":"VariableDeclaration","scope":361,"src":"3495:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":353,"name":"address","nodeType":"ElementaryTypeName","src":"3495:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":356,"mutability":"mutable","name":"to","nameLocation":"3517:2:4","nodeType":"VariableDeclaration","scope":361,"src":"3509:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":355,"name":"address","nodeType":"ElementaryTypeName","src":"3509:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":358,"mutability":"mutable","name":"tokenId","nameLocation":"3529:7:4","nodeType":"VariableDeclaration","scope":361,"src":"3521:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":357,"name":"uint256","nodeType":"ElementaryTypeName","src":"3521:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3494:43:4"},"returnParameters":{"id":360,"nodeType":"ParameterList","parameters":[],"src":"3546:0:4"},"scope":396,"src":"3473:74:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":362,"nodeType":"StructuredDocumentation","src":"3553:452:4","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":369,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4019:7:4","nodeType":"FunctionDefinition","parameters":{"id":367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":364,"mutability":"mutable","name":"to","nameLocation":"4035:2:4","nodeType":"VariableDeclaration","scope":369,"src":"4027:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":363,"name":"address","nodeType":"ElementaryTypeName","src":"4027:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":366,"mutability":"mutable","name":"tokenId","nameLocation":"4047:7:4","nodeType":"VariableDeclaration","scope":369,"src":"4039:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":365,"name":"uint256","nodeType":"ElementaryTypeName","src":"4039:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4026:29:4"},"returnParameters":{"id":368,"nodeType":"ParameterList","parameters":[],"src":"4064:0:4"},"scope":396,"src":"4010:55:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":370,"nodeType":"StructuredDocumentation","src":"4071:315:4","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":377,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4400:17:4","nodeType":"FunctionDefinition","parameters":{"id":375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":372,"mutability":"mutable","name":"operator","nameLocation":"4426:8:4","nodeType":"VariableDeclaration","scope":377,"src":"4418:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":371,"name":"address","nodeType":"ElementaryTypeName","src":"4418:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":374,"mutability":"mutable","name":"approved","nameLocation":"4441:8:4","nodeType":"VariableDeclaration","scope":377,"src":"4436:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":373,"name":"bool","nodeType":"ElementaryTypeName","src":"4436:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4417:33:4"},"returnParameters":{"id":376,"nodeType":"ParameterList","parameters":[],"src":"4459:0:4"},"scope":396,"src":"4391:69:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":378,"nodeType":"StructuredDocumentation","src":"4466:139:4","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":385,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4619:11:4","nodeType":"FunctionDefinition","parameters":{"id":381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":380,"mutability":"mutable","name":"tokenId","nameLocation":"4639:7:4","nodeType":"VariableDeclaration","scope":385,"src":"4631:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":379,"name":"uint256","nodeType":"ElementaryTypeName","src":"4631:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4630:17:4"},"returnParameters":{"id":384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":383,"mutability":"mutable","name":"operator","nameLocation":"4679:8:4","nodeType":"VariableDeclaration","scope":385,"src":"4671:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":382,"name":"address","nodeType":"ElementaryTypeName","src":"4671:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4670:18:4"},"scope":396,"src":"4610:79:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":386,"nodeType":"StructuredDocumentation","src":"4695:138:4","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":395,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4847:16:4","nodeType":"FunctionDefinition","parameters":{"id":391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":388,"mutability":"mutable","name":"owner","nameLocation":"4872:5:4","nodeType":"VariableDeclaration","scope":395,"src":"4864:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":387,"name":"address","nodeType":"ElementaryTypeName","src":"4864:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":390,"mutability":"mutable","name":"operator","nameLocation":"4887:8:4","nodeType":"VariableDeclaration","scope":395,"src":"4879:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":389,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4863:33:4"},"returnParameters":{"id":394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":393,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":395,"src":"4920:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":392,"name":"bool","nodeType":"ElementaryTypeName","src":"4920:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4919:6:4"},"scope":396,"src":"4838:88:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":397,"src":"267:4661:4","usedErrors":[],"usedEvents":[295,304,313]}],"src":"108:4821:4"},"id":4},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC721":[396],"IERC721Metadata":[424]},"id":425,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":398,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"127:24:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":400,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":425,"sourceUnit":397,"src":"153:39:5","symbolAliases":[{"foreign":{"id":399,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"161:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":402,"name":"IERC721","nameLocations":["357:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":396,"src":"357:7:5"},"id":403,"nodeType":"InheritanceSpecifier","src":"357:7:5"}],"canonicalName":"IERC721Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":401,"nodeType":"StructuredDocumentation","src":"194:133:5","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":424,"linearizedBaseContracts":[424,396,436],"name":"IERC721Metadata","nameLocation":"338:15:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":404,"nodeType":"StructuredDocumentation","src":"371:58:5","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":409,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"443:4:5","nodeType":"FunctionDefinition","parameters":{"id":405,"nodeType":"ParameterList","parameters":[],"src":"447:2:5"},"returnParameters":{"id":408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":407,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":409,"src":"473:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":406,"name":"string","nodeType":"ElementaryTypeName","src":"473:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"472:15:5"},"scope":424,"src":"434:54:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":410,"nodeType":"StructuredDocumentation","src":"494:60:5","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":415,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"568:6:5","nodeType":"FunctionDefinition","parameters":{"id":411,"nodeType":"ParameterList","parameters":[],"src":"574:2:5"},"returnParameters":{"id":414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":413,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":415,"src":"600:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":412,"name":"string","nodeType":"ElementaryTypeName","src":"600:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"599:15:5"},"scope":424,"src":"559:56:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":416,"nodeType":"StructuredDocumentation","src":"621:90:5","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":423,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"725:8:5","nodeType":"FunctionDefinition","parameters":{"id":419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":418,"mutability":"mutable","name":"tokenId","nameLocation":"742:7:5","nodeType":"VariableDeclaration","scope":423,"src":"734:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":417,"name":"uint256","nodeType":"ElementaryTypeName","src":"734:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"733:17:5"},"returnParameters":{"id":422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":421,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":423,"src":"774:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":420,"name":"string","nodeType":"ElementaryTypeName","src":"774:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"773:15:5"},"scope":424,"src":"716:73:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":425,"src":"328:463:5","usedErrors":[],"usedEvents":[295,304,313]}],"src":"127:665:5"},"id":5},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[436]},"id":437,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":426,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"115:25:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":427,"nodeType":"StructuredDocumentation","src":"142:280:6","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":436,"linearizedBaseContracts":[436],"name":"IERC165","nameLocation":"433:7:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":428,"nodeType":"StructuredDocumentation","src":"447:340:6","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":435,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"801:17:6","nodeType":"FunctionDefinition","parameters":{"id":431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":430,"mutability":"mutable","name":"interfaceId","nameLocation":"826:11:6","nodeType":"VariableDeclaration","scope":435,"src":"819:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":429,"name":"bytes4","nodeType":"ElementaryTypeName","src":"819:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"818:20:6"},"returnParameters":{"id":434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":433,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":435,"src":"862:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":432,"name":"bool","nodeType":"ElementaryTypeName","src":"862:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"861:6:6"},"scope":436,"src":"792:76:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":437,"src":"423:447:6","usedErrors":[],"usedEvents":[]}],"src":"115:756:6"},"id":6},"contracts/Diamond.sol":{"ast":{"absolutePath":"contracts/Diamond.sol","exportedSymbols":{"Diamond":[699],"DiamondInit":[3905],"DiamondLib":[2656],"DiamondSettings":[2340],"DiamondStorage":[2352],"ERC721EnumerableContract":[2595],"IDiamondCut":[2428],"IDiamondLoupe":[2540],"IERC165":[436],"IERC173":[2574],"IERC721":[396],"IERC721Enumerable":[2623],"IERC721Metadata":[424],"Initializable":[279],"LibDiamond":[3887]},"id":700,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":438,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:7"},{"absolutePath":"@openzeppelin/contracts/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts/proxy/utils/Initializable.sol","id":439,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":700,"sourceUnit":280,"src":"395:63:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"@openzeppelin/contracts/interfaces/IERC165.sol","id":440,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":700,"sourceUnit":4,"src":"459:56:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC721.sol","file":"@openzeppelin/contracts/interfaces/IERC721.sol","id":441,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":700,"sourceUnit":8,"src":"516:56:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC721Metadata.sol","file":"@openzeppelin/contracts/interfaces/IERC721Metadata.sol","id":442,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":700,"sourceUnit":12,"src":"573:64:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IERC721Enumerable.sol","file":"./interfaces/IERC721Enumerable.sol","id":443,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":700,"sourceUnit":2624,"src":"639:44:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/libraries/DiamondLib.sol","file":"./libraries/DiamondLib.sol","id":444,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":700,"sourceUnit":2657,"src":"684:36:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/libraries/LibDiamond.sol","file":"./libraries/LibDiamond.sol","id":446,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":700,"sourceUnit":3888,"src":"721:56:7","symbolAliases":[{"foreign":{"id":445,"name":"LibDiamond","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"730:10:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/libraries/DiamondLib.sol","file":"./libraries/DiamondLib.sol","id":448,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":700,"sourceUnit":2657,"src":"778:56:7","symbolAliases":[{"foreign":{"id":447,"name":"DiamondLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2656,"src":"787:10:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/IDiamondCut.sol","file":"./interfaces/IDiamondCut.sol","id":450,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":700,"sourceUnit":2429,"src":"835:59:7","symbolAliases":[{"foreign":{"id":449,"name":"IDiamondCut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"844:11:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/IDiamond.sol","file":"./interfaces/IDiamond.sol","id":452,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":700,"sourceUnit":2359,"src":"895:60:7","symbolAliases":[{"foreign":{"id":451,"name":"DiamondSettings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2340,"src":"904:15:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/IERC173.sol","file":"./interfaces/IERC173.sol","id":454,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":700,"sourceUnit":2575,"src":"956:51:7","symbolAliases":[{"foreign":{"id":453,"name":"IERC173","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2574,"src":"965:7:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":456,"name":"Initializable","nameLocations":["1343:13:7"],"nodeType":"IdentifierPath","referencedDeclaration":279,"src":"1343:13:7"},"id":457,"nodeType":"InheritanceSpecifier","src":"1343:13:7"},{"baseName":{"id":458,"name":"IERC173","nameLocations":["1358:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":2574,"src":"1358:7:7"},"id":459,"nodeType":"InheritanceSpecifier","src":"1358:7:7"}],"canonicalName":"Diamond","contractDependencies":[],"contractKind":"contract","documentation":{"id":455,"nodeType":"StructuredDocumentation","src":"1009:313:7","text":" @title Diamond\n @dev Core diamond proxy contract implementing the EIP-2535 Diamond Standard\n Functionality has been separated into facets:\n - DiamondCutFacet: Handles diamond cut operations\n - DiamondLoupeFacet: Provides introspection functions\n - OwnershipFacet: Handles ownership operations"},"fullyImplemented":true,"id":699,"linearizedBaseContracts":[699,2574,279],"name":"Diamond","nameLocation":"1332:7:7","nodeType":"ContractDefinition","nodes":[{"body":{"id":611,"nodeType":"Block","src":"1920:1201:7","statements":[{"expression":{"id":489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":478,"name":"LibDiamond","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"1959:10:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibDiamond_$3887_$","typeString":"type(library LibDiamond)"}},"id":480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1970:14:7","memberName":"diamondStorage","nodeType":"MemberAccess","referencedDeclaration":2756,"src":"1959:25:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$2744_storage_ptr_$","typeString":"function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"}},"id":481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1959:27:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":482,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1987:19:7","memberName":"supportedInterfaces","nodeType":"MemberAccess","referencedDeclaration":2736,"src":"1959:47:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_bool_$","typeString":"mapping(bytes4 => bool)"}},"id":487,"indexExpression":{"expression":{"arguments":[{"id":484,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":436,"src":"2012:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$436_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$436_$","typeString":"type(contract IERC165)"}],"id":483,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2007:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2007:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$436","typeString":"type(contract IERC165)"}},"id":486,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2021:11:7","memberName":"interfaceId","nodeType":"MemberAccess","src":"2007:25:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1959:74:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2036:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1959:81:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":490,"nodeType":"ExpressionStatement","src":"1959:81:7"},{"expression":{"id":502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":491,"name":"LibDiamond","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"2050:10:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibDiamond_$3887_$","typeString":"type(library LibDiamond)"}},"id":493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2061:14:7","memberName":"diamondStorage","nodeType":"MemberAccess","referencedDeclaration":2756,"src":"2050:25:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$2744_storage_ptr_$","typeString":"function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"}},"id":494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2050:27:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":495,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2078:19:7","memberName":"supportedInterfaces","nodeType":"MemberAccess","referencedDeclaration":2736,"src":"2050:47:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_bool_$","typeString":"mapping(bytes4 => bool)"}},"id":500,"indexExpression":{"expression":{"arguments":[{"id":497,"name":"IDiamondCut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"2103:11:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IDiamondCut_$2428_$","typeString":"type(contract IDiamondCut)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IDiamondCut_$2428_$","typeString":"type(contract IDiamondCut)"}],"id":496,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2098:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2098:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IDiamondCut_$2428","typeString":"type(contract IDiamondCut)"}},"id":499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2116:11:7","memberName":"interfaceId","nodeType":"MemberAccess","src":"2098:29:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2050:78:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2131:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2050:85:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":503,"nodeType":"ExpressionStatement","src":"2050:85:7"},{"expression":{"id":515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":504,"name":"LibDiamond","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"2145:10:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibDiamond_$3887_$","typeString":"type(library LibDiamond)"}},"id":506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2156:14:7","memberName":"diamondStorage","nodeType":"MemberAccess","referencedDeclaration":2756,"src":"2145:25:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$2744_storage_ptr_$","typeString":"function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"}},"id":507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2145:27:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":508,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2173:19:7","memberName":"supportedInterfaces","nodeType":"MemberAccess","referencedDeclaration":2736,"src":"2145:47:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_bool_$","typeString":"mapping(bytes4 => bool)"}},"id":513,"indexExpression":{"expression":{"arguments":[{"id":510,"name":"IERC173","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2574,"src":"2198:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC173_$2574_$","typeString":"type(contract IERC173)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC173_$2574_$","typeString":"type(contract IERC173)"}],"id":509,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2193:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2193:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC173_$2574","typeString":"type(contract IERC173)"}},"id":512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2207:11:7","memberName":"interfaceId","nodeType":"MemberAccess","src":"2193:25:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2145:74:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2222:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2145:81:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":516,"nodeType":"ExpressionStatement","src":"2145:81:7"},{"expression":{"id":528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":517,"name":"LibDiamond","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"2236:10:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibDiamond_$3887_$","typeString":"type(library LibDiamond)"}},"id":519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2247:14:7","memberName":"diamondStorage","nodeType":"MemberAccess","referencedDeclaration":2756,"src":"2236:25:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$2744_storage_ptr_$","typeString":"function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"}},"id":520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2236:27:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":521,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2264:19:7","memberName":"supportedInterfaces","nodeType":"MemberAccess","referencedDeclaration":2736,"src":"2236:47:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_bool_$","typeString":"mapping(bytes4 => bool)"}},"id":526,"indexExpression":{"expression":{"arguments":[{"id":523,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"2289:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$396_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$396_$","typeString":"type(contract IERC721)"}],"id":522,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2284:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2284:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$396","typeString":"type(contract IERC721)"}},"id":525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2298:11:7","memberName":"interfaceId","nodeType":"MemberAccess","src":"2284:25:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2236:74:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2313:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2236:81:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":529,"nodeType":"ExpressionStatement","src":"2236:81:7"},{"expression":{"id":541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":530,"name":"LibDiamond","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"2327:10:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibDiamond_$3887_$","typeString":"type(library LibDiamond)"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2338:14:7","memberName":"diamondStorage","nodeType":"MemberAccess","referencedDeclaration":2756,"src":"2327:25:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$2744_storage_ptr_$","typeString":"function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"}},"id":533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2327:27:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":534,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2355:19:7","memberName":"supportedInterfaces","nodeType":"MemberAccess","referencedDeclaration":2736,"src":"2327:47:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_bool_$","typeString":"mapping(bytes4 => bool)"}},"id":539,"indexExpression":{"expression":{"arguments":[{"id":536,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":424,"src":"2380:15:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$424_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$424_$","typeString":"type(contract IERC721Metadata)"}],"id":535,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2375:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2375:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$424","typeString":"type(contract IERC721Metadata)"}},"id":538,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2397:11:7","memberName":"interfaceId","nodeType":"MemberAccess","src":"2375:33:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2327:82:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2412:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2327:89:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":542,"nodeType":"ExpressionStatement","src":"2327:89:7"},{"expression":{"id":554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":543,"name":"LibDiamond","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"2426:10:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibDiamond_$3887_$","typeString":"type(library LibDiamond)"}},"id":545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2437:14:7","memberName":"diamondStorage","nodeType":"MemberAccess","referencedDeclaration":2756,"src":"2426:25:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$2744_storage_ptr_$","typeString":"function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"}},"id":546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2426:27:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":547,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2454:19:7","memberName":"supportedInterfaces","nodeType":"MemberAccess","referencedDeclaration":2736,"src":"2426:47:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_bool_$","typeString":"mapping(bytes4 => bool)"}},"id":552,"indexExpression":{"expression":{"arguments":[{"id":549,"name":"IERC721Enumerable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"2479:17:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Enumerable_$2623_$","typeString":"type(contract IERC721Enumerable)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Enumerable_$2623_$","typeString":"type(contract IERC721Enumerable)"}],"id":548,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2474:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2474:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Enumerable_$2623","typeString":"type(contract IERC721Enumerable)"}},"id":551,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2498:11:7","memberName":"interfaceId","nodeType":"MemberAccess","src":"2474:35:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2426:84:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2513:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2426:91:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":555,"nodeType":"ExpressionStatement","src":"2426:91:7"},{"expression":{"arguments":[{"id":559,"name":"_facets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"2584:7:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$2373_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IDiamondCut.FacetCut calldata[] calldata"}},{"id":560,"name":"diamondInit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":471,"src":"2593:11:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":561,"name":"_calldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"2606:9:7","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_FacetCut_$2373_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IDiamondCut.FacetCut calldata[] calldata"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":556,"name":"LibDiamond","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"2562:10:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibDiamond_$3887_$","typeString":"type(library LibDiamond)"}},"id":558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2573:10:7","memberName":"diamondCut","nodeType":"MemberAccess","referencedDeclaration":2917,"src":"2562:21:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_FacetCut_$2373_memory_ptr_$dyn_memory_ptr_$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct IDiamondCut.FacetCut memory[] memory,address,bytes memory)"}},"id":562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2562:54:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":563,"nodeType":"ExpressionStatement","src":"2562:54:7"},{"expression":{"arguments":[{"id":567,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"2680:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":564,"name":"LibDiamond","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"2652:10:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibDiamond_$3887_$","typeString":"type(library LibDiamond)"}},"id":566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2663:16:7","memberName":"setContractOwner","nodeType":"MemberAccess","referencedDeclaration":2784,"src":"2652:27:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2652:35:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":569,"nodeType":"ExpressionStatement","src":"2652:35:7"},{"expression":{"id":578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":570,"name":"DiamondLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2656,"src":"2748:10:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_DiamondLib_$2656_$","typeString":"type(library DiamondLib)"}},"id":572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2759:14:7","memberName":"diamondStorage","nodeType":"MemberAccess","referencedDeclaration":2655,"src":"2748:25:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$2352_storage_ptr_$","typeString":"function () pure returns (struct DiamondStorage storage pointer)"}},"id":573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2748:27:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2352_storage_ptr","typeString":"struct DiamondStorage storage pointer"}},"id":574,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2776:15:7","memberName":"diamondContract","nodeType":"MemberAccess","referencedDeclaration":2351,"src":"2748:43:7","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondContract_$2348_storage","typeString":"struct DiamondContract storage ref"}},"id":575,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2792:8:7","memberName":"settings","nodeType":"MemberAccess","referencedDeclaration":2343,"src":"2748:52:7","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondSettings_$2340_storage","typeString":"struct DiamondSettings storage ref"}},"id":576,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2801:5:7","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":2331,"src":"2748:58:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":577,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"2809:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2748:67:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":579,"nodeType":"ExpressionStatement","src":"2748:67:7"},{"expression":{"id":590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":580,"name":"DiamondLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2656,"src":"2825:10:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_DiamondLib_$2656_$","typeString":"type(library DiamondLib)"}},"id":582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2836:14:7","memberName":"diamondStorage","nodeType":"MemberAccess","referencedDeclaration":2655,"src":"2825:25:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$2352_storage_ptr_$","typeString":"function () pure returns (struct DiamondStorage storage pointer)"}},"id":583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2825:27:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2352_storage_ptr","typeString":"struct DiamondStorage storage pointer"}},"id":584,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2853:15:7","memberName":"diamondContract","nodeType":"MemberAccess","referencedDeclaration":2351,"src":"2825:43:7","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondContract_$2348_storage","typeString":"struct DiamondContract storage ref"}},"id":585,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2869:8:7","memberName":"metadata","nodeType":"MemberAccess","referencedDeclaration":2347,"src":"2825:52:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_string_storage_$","typeString":"mapping(string memory => string storage ref)"}},"id":587,"indexExpression":{"hexValue":"73796d626f6c","id":586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2878:8:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_be16b05c387bab9ac31918a3e61672f4618601f3c598a2f3f2710f37053e1ea4","typeString":"literal_string \"symbol\""},"value":"symbol"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2825:62:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":588,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"2890:6:7","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondSettings_$2340_memory_ptr","typeString":"struct DiamondSettings memory"}},"id":589,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2897:6:7","memberName":"symbol","nodeType":"MemberAccess","referencedDeclaration":2337,"src":"2890:13:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2825:78:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":591,"nodeType":"ExpressionStatement","src":"2825:78:7"},{"expression":{"id":602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":592,"name":"DiamondLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2656,"src":"2913:10:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_DiamondLib_$2656_$","typeString":"type(library DiamondLib)"}},"id":594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2924:14:7","memberName":"diamondStorage","nodeType":"MemberAccess","referencedDeclaration":2655,"src":"2913:25:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$2352_storage_ptr_$","typeString":"function () pure returns (struct DiamondStorage storage pointer)"}},"id":595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2913:27:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2352_storage_ptr","typeString":"struct DiamondStorage storage pointer"}},"id":596,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2941:15:7","memberName":"diamondContract","nodeType":"MemberAccess","referencedDeclaration":2351,"src":"2913:43:7","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondContract_$2348_storage","typeString":"struct DiamondContract storage ref"}},"id":597,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2957:8:7","memberName":"metadata","nodeType":"MemberAccess","referencedDeclaration":2347,"src":"2913:52:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_string_storage_$","typeString":"mapping(string memory => string storage ref)"}},"id":599,"indexExpression":{"hexValue":"6e616d65","id":598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2966:6:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_2361458367e696363fbcc70777d07ebbd2394e89fd0adcaf147faccd1d294d60","typeString":"literal_string \"name\""},"value":"name"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2913:60:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":600,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"2976:6:7","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondSettings_$2340_memory_ptr","typeString":"struct DiamondSettings memory"}},"id":601,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2983:4:7","memberName":"name","nodeType":"MemberAccess","referencedDeclaration":2339,"src":"2976:11:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2913:74:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":603,"nodeType":"ExpressionStatement","src":"2913:74:7"},{"expression":{"arguments":[{"expression":{"id":607,"name":"LibDiamond","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"3078:10:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibDiamond_$3887_$","typeString":"type(library LibDiamond)"}},"id":608,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3089:24:7","memberName":"DEFAULT_UPGRADE_TIMELOCK","nodeType":"MemberAccess","referencedDeclaration":2813,"src":"3078:35:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":604,"name":"LibDiamond","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"3041:10:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibDiamond_$3887_$","typeString":"type(library LibDiamond)"}},"id":606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3052:25:7","memberName":"initializeUpgradeTimelock","nodeType":"MemberAccess","referencedDeclaration":3555,"src":"3041:36:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3041:73:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":610,"nodeType":"ExpressionStatement","src":"3041:73:7"}]},"documentation":{"id":460,"nodeType":"StructuredDocumentation","src":"1372:323:7","text":" @notice Initialize the Diamond contract\n @param _owner The owner of the contract\n @param params Diamond settings including name and symbol\n @param _facets The initial facets to add\n @param diamondInit The initialization contract\n @param _calldata The initialization calldata"},"functionSelector":"cde7b2c1","id":612,"implemented":true,"kind":"function","modifiers":[{"id":476,"kind":"modifierInvocation","modifierName":{"id":475,"name":"initializer","nameLocations":["1908:11:7"],"nodeType":"IdentifierPath","referencedDeclaration":119,"src":"1908:11:7"},"nodeType":"ModifierInvocation","src":"1908:11:7"}],"name":"initialize","nameLocation":"1709:10:7","nodeType":"FunctionDefinition","parameters":{"id":474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":462,"mutability":"mutable","name":"_owner","nameLocation":"1737:6:7","nodeType":"VariableDeclaration","scope":612,"src":"1729:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":461,"name":"address","nodeType":"ElementaryTypeName","src":"1729:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":465,"mutability":"mutable","name":"params","nameLocation":"1776:6:7","nodeType":"VariableDeclaration","scope":612,"src":"1753:29:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondSettings_$2340_memory_ptr","typeString":"struct DiamondSettings"},"typeName":{"id":464,"nodeType":"UserDefinedTypeName","pathNode":{"id":463,"name":"DiamondSettings","nameLocations":["1753:15:7"],"nodeType":"IdentifierPath","referencedDeclaration":2340,"src":"1753:15:7"},"referencedDeclaration":2340,"src":"1753:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondSettings_$2340_storage_ptr","typeString":"struct DiamondSettings"}},"visibility":"internal"},{"constant":false,"id":469,"mutability":"mutable","name":"_facets","nameLocation":"1824:7:7","nodeType":"VariableDeclaration","scope":612,"src":"1792:39:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$2373_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IDiamondCut.FacetCut[]"},"typeName":{"baseType":{"id":467,"nodeType":"UserDefinedTypeName","pathNode":{"id":466,"name":"IDiamondCut.FacetCut","nameLocations":["1792:11:7","1804:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":2373,"src":"1792:20:7"},"referencedDeclaration":2373,"src":"1792:20:7","typeDescriptions":{"typeIdentifier":"t_struct$_FacetCut_$2373_storage_ptr","typeString":"struct IDiamondCut.FacetCut"}},"id":468,"nodeType":"ArrayTypeName","src":"1792:22:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$2373_storage_$dyn_storage_ptr","typeString":"struct IDiamondCut.FacetCut[]"}},"visibility":"internal"},{"constant":false,"id":471,"mutability":"mutable","name":"diamondInit","nameLocation":"1849:11:7","nodeType":"VariableDeclaration","scope":612,"src":"1841:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":470,"name":"address","nodeType":"ElementaryTypeName","src":"1841:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":473,"mutability":"mutable","name":"_calldata","nameLocation":"1885:9:7","nodeType":"VariableDeclaration","scope":612,"src":"1870:24:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":472,"name":"bytes","nodeType":"ElementaryTypeName","src":"1870:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1719:181:7"},"returnParameters":{"id":477,"nodeType":"ParameterList","parameters":[],"src":"1920:0:7"},"scope":699,"src":"1700:1421:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2573],"body":{"id":630,"nodeType":"Block","src":"3304:100:7","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":619,"name":"LibDiamond","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"3314:10:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibDiamond_$3887_$","typeString":"type(library LibDiamond)"}},"id":621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3325:22:7","memberName":"enforceIsContractOwner","nodeType":"MemberAccess","referencedDeclaration":2810,"src":"3314:33:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3314:35:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":623,"nodeType":"ExpressionStatement","src":"3314:35:7"},{"expression":{"arguments":[{"id":627,"name":"_newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"3387:9:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":624,"name":"LibDiamond","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"3359:10:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibDiamond_$3887_$","typeString":"type(library LibDiamond)"}},"id":626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3370:16:7","memberName":"setContractOwner","nodeType":"MemberAccess","referencedDeclaration":2784,"src":"3359:27:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3359:38:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":629,"nodeType":"ExpressionStatement","src":"3359:38:7"}]},"documentation":{"id":613,"nodeType":"StructuredDocumentation","src":"3127:108:7","text":" @notice Transfer ownership to a new address\n @param _newOwner The new owner address"},"functionSelector":"f2fde38b","id":631,"implemented":true,"kind":"function","modifiers":[],"name":"transferOwnership","nameLocation":"3249:17:7","nodeType":"FunctionDefinition","overrides":{"id":617,"nodeType":"OverrideSpecifier","overrides":[],"src":"3295:8:7"},"parameters":{"id":616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":615,"mutability":"mutable","name":"_newOwner","nameLocation":"3275:9:7","nodeType":"VariableDeclaration","scope":631,"src":"3267:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":614,"name":"address","nodeType":"ElementaryTypeName","src":"3267:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3266:19:7"},"returnParameters":{"id":618,"nodeType":"ParameterList","parameters":[],"src":"3304:0:7"},"scope":699,"src":"3240:164:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[2567],"body":{"id":644,"nodeType":"Block","src":"3585:52:7","statements":[{"expression":{"id":642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":638,"name":"owner_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"3595:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":639,"name":"LibDiamond","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"3604:10:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibDiamond_$3887_$","typeString":"type(library LibDiamond)"}},"id":640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3615:13:7","memberName":"contractOwner","nodeType":"MemberAccess","referencedDeclaration":2796,"src":"3604:24:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3604:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3595:35:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":643,"nodeType":"ExpressionStatement","src":"3595:35:7"}]},"documentation":{"id":632,"nodeType":"StructuredDocumentation","src":"3410:105:7","text":" @notice Get the current contract owner\n @return owner_ The current owner address"},"functionSelector":"8da5cb5b","id":645,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"3529:5:7","nodeType":"FunctionDefinition","overrides":{"id":634,"nodeType":"OverrideSpecifier","overrides":[],"src":"3546:8:7"},"parameters":{"id":633,"nodeType":"ParameterList","parameters":[],"src":"3534:2:7"},"returnParameters":{"id":637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":636,"mutability":"mutable","name":"owner_","nameLocation":"3577:6:7","nodeType":"VariableDeclaration","scope":645,"src":"3569:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":635,"name":"address","nodeType":"ElementaryTypeName","src":"3569:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3568:16:7"},"scope":699,"src":"3520:117:7","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":656,"nodeType":"Block","src":"3799:37:7","statements":[{"expression":{"arguments":[{"id":653,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3824:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_Diamond_$699","typeString":"contract Diamond"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Diamond_$699","typeString":"contract Diamond"}],"id":652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3816:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":651,"name":"address","nodeType":"ElementaryTypeName","src":"3816:7:7","typeDescriptions":{}}},"id":654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3816:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":650,"id":655,"nodeType":"Return","src":"3809:20:7"}]},"documentation":{"id":646,"nodeType":"StructuredDocumentation","src":"3643:93:7","text":" @notice Get this contract's address\n @return This contract's address"},"functionSelector":"6a60c3b7","id":657,"implemented":true,"kind":"function","modifiers":[],"name":"diamondAddress","nameLocation":"3750:14:7","nodeType":"FunctionDefinition","parameters":{"id":647,"nodeType":"ParameterList","parameters":[],"src":"3764:2:7"},"returnParameters":{"id":650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":649,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":657,"src":"3790:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":648,"name":"address","nodeType":"ElementaryTypeName","src":"3790:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3789:9:7"},"scope":699,"src":"3741:95:7","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":693,"nodeType":"Block","src":"4027:1127:7","statements":[{"assignments":[665],"declarations":[{"constant":false,"id":665,"mutability":"mutable","name":"ds","nameLocation":"4071:2:7","nodeType":"VariableDeclaration","scope":693,"src":"4037:36:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage"},"typeName":{"id":664,"nodeType":"UserDefinedTypeName","pathNode":{"id":663,"name":"LibDiamond.DiamondStorage","nameLocations":["4037:10:7","4048:14:7"],"nodeType":"IdentifierPath","referencedDeclaration":2744,"src":"4037:25:7"},"referencedDeclaration":2744,"src":"4037:25:7","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage"}},"visibility":"internal"}],"id":666,"nodeType":"VariableDeclarationStatement","src":"4037:36:7"},{"assignments":[668],"declarations":[{"constant":false,"id":668,"mutability":"mutable","name":"position","nameLocation":"4091:8:7","nodeType":"VariableDeclaration","scope":693,"src":"4083:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":667,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4083:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":671,"initialValue":{"expression":{"id":669,"name":"LibDiamond","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"4102:10:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibDiamond_$3887_$","typeString":"type(library LibDiamond)"}},"id":670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4113:24:7","memberName":"DIAMOND_STORAGE_POSITION","nodeType":"MemberAccess","referencedDeclaration":2667,"src":"4102:35:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4083:54:7"},{"AST":{"nodeType":"YulBlock","src":"4187:43:7","statements":[{"nodeType":"YulAssignment","src":"4201:19:7","value":{"name":"position","nodeType":"YulIdentifier","src":"4212:8:7"},"variableNames":[{"name":"ds.slot","nodeType":"YulIdentifier","src":"4201:7:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":665,"isOffset":false,"isSlot":true,"src":"4201:7:7","suffix":"slot","valueSize":1},{"declaration":668,"isOffset":false,"isSlot":false,"src":"4212:8:7","valueSize":1}],"id":672,"nodeType":"InlineAssembly","src":"4178:52:7"},{"assignments":[674],"declarations":[{"constant":false,"id":674,"mutability":"mutable","name":"facet","nameLocation":"4291:5:7","nodeType":"VariableDeclaration","scope":693,"src":"4283:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":673,"name":"address","nodeType":"ElementaryTypeName","src":"4283:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":681,"initialValue":{"expression":{"baseExpression":{"expression":{"id":675,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"4299:2:7","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":676,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4302:26:7","memberName":"selectorToFacetAndPosition","nodeType":"MemberAccess","referencedDeclaration":2724,"src":"4299:29:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_struct$_FacetAddressAndPosition_$2700_storage_$","typeString":"mapping(bytes4 => struct LibDiamond.FacetAddressAndPosition storage ref)"}},"id":679,"indexExpression":{"expression":{"id":677,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4329:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4333:3:7","memberName":"sig","nodeType":"MemberAccess","src":"4329:7:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4299:38:7","typeDescriptions":{"typeIdentifier":"t_struct$_FacetAddressAndPosition_$2700_storage","typeString":"struct LibDiamond.FacetAddressAndPosition storage ref"}},"id":680,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4338:12:7","memberName":"facetAddress","nodeType":"MemberAccess","referencedDeclaration":2697,"src":"4299:51:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4283:67:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":683,"name":"facet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":674,"src":"4368:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4385:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":685,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4377:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":684,"name":"address","nodeType":"ElementaryTypeName","src":"4377:7:7","typeDescriptions":{}}},"id":687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4377:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4368:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4469616d6f6e643a2046756e6374696f6e20646f6573206e6f74206578697374","id":689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4389:34:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e6486aeb9db70da259b7171a739046119facaec2d8a6bd46f1145fe8391014a","typeString":"literal_string \"Diamond: Function does not exist\""},"value":"Diamond: Function does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6e6486aeb9db70da259b7171a739046119facaec2d8a6bd46f1145fe8391014a","typeString":"literal_string \"Diamond: Function does not exist\""}],"id":682,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4360:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4360:64:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":691,"nodeType":"ExpressionStatement","src":"4360:64:7"},{"AST":{"nodeType":"YulBlock","src":"4540:608:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4623:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4626:1:7","type":"","value":"0"},{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"4629:12:7"},"nodeType":"YulFunctionCall","src":"4629:14:7"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"4610:12:7"},"nodeType":"YulFunctionCall","src":"4610:34:7"},"nodeType":"YulExpressionStatement","src":"4610:34:7"},{"nodeType":"YulVariableDeclaration","src":"4710:65:7","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"4737:3:7"},"nodeType":"YulFunctionCall","src":"4737:5:7"},{"name":"facet","nodeType":"YulIdentifier","src":"4744:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"4751:1:7","type":"","value":"0"},{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"4754:12:7"},"nodeType":"YulFunctionCall","src":"4754:14:7"},{"kind":"number","nodeType":"YulLiteral","src":"4770:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4773:1:7","type":"","value":"0"}],"functionName":{"name":"delegatecall","nodeType":"YulIdentifier","src":"4724:12:7"},"nodeType":"YulFunctionCall","src":"4724:51:7"},"variables":[{"name":"result","nodeType":"YulTypedName","src":"4714:6:7","type":""}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4839:1:7","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4842:1:7","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"4845:14:7"},"nodeType":"YulFunctionCall","src":"4845:16:7"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"4824:14:7"},"nodeType":"YulFunctionCall","src":"4824:38:7"},"nodeType":"YulExpressionStatement","src":"4824:38:7"},{"cases":[{"body":{"nodeType":"YulBlock","src":"4979:67:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5008:1:7","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"5011:14:7"},"nodeType":"YulFunctionCall","src":"5011:16:7"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5001:6:7"},"nodeType":"YulFunctionCall","src":"5001:27:7"},"nodeType":"YulExpressionStatement","src":"5001:27:7"}]},"nodeType":"YulCase","src":"4972:74:7","value":{"kind":"number","nodeType":"YulLiteral","src":"4977:1:7","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"5071:67:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5100:1:7","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"5103:14:7"},"nodeType":"YulFunctionCall","src":"5103:16:7"}],"functionName":{"name":"return","nodeType":"YulIdentifier","src":"5093:6:7"},"nodeType":"YulFunctionCall","src":"5093:27:7"},"nodeType":"YulExpressionStatement","src":"5093:27:7"}]},"nodeType":"YulCase","src":"5063:75:7","value":"default"}],"expression":{"name":"result","nodeType":"YulIdentifier","src":"4949:6:7"},"nodeType":"YulSwitch","src":"4942:196:7"}]},"evmVersion":"paris","externalReferences":[{"declaration":674,"isOffset":false,"isSlot":false,"src":"4744:5:7","valueSize":1}],"id":692,"nodeType":"InlineAssembly","src":"4531:617:7"}]},"documentation":{"id":658,"nodeType":"StructuredDocumentation","src":"3842:152:7","text":" @dev Diamond Proxy fallback function\n Find facet for function that is called and execute the\n function using delegatecall"},"id":694,"implemented":true,"kind":"fallback","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":659,"nodeType":"ParameterList","parameters":[],"src":"4007:2:7"},"returnParameters":{"id":660,"nodeType":"ParameterList","parameters":[],"src":"4027:0:7"},"scope":699,"src":"3999:1155:7","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":697,"nodeType":"Block","src":"5224:2:7","statements":[]},"id":698,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":695,"nodeType":"ParameterList","parameters":[],"src":"5204:2:7"},"returnParameters":{"id":696,"nodeType":"ParameterList","parameters":[],"src":"5224:0:7"},"scope":699,"src":"5197:29:7","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":700,"src":"1323:3905:7","usedErrors":[28,31],"usedEvents":[36,2561,2673,2683]}],"src":"32:5197:7"},"id":7},"contracts/Marketplace.sol":{"ast":{"absolutePath":"contracts/Marketplace.sol","exportedSymbols":{"Marketplace":[1218]},"id":1219,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":701,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"32:24:8"},{"abstract":false,"baseContracts":[],"canonicalName":"Marketplace","contractDependencies":[],"contractKind":"contract","documentation":{"id":702,"nodeType":"StructuredDocumentation","src":"58:87:8","text":" @title Marketplace\n @dev A simple marketplace for buying and selling items"},"fullyImplemented":true,"id":1218,"linearizedBaseContracts":[1218],"name":"Marketplace","nameLocation":"155:11:8","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Marketplace.Item","id":717,"members":[{"constant":false,"id":704,"mutability":"mutable","name":"id","nameLocation":"203:2:8","nodeType":"VariableDeclaration","scope":717,"src":"195:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":703,"name":"uint256","nodeType":"ElementaryTypeName","src":"195:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":706,"mutability":"mutable","name":"name","nameLocation":"222:4:8","nodeType":"VariableDeclaration","scope":717,"src":"215:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":705,"name":"string","nodeType":"ElementaryTypeName","src":"215:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":708,"mutability":"mutable","name":"description","nameLocation":"243:11:8","nodeType":"VariableDeclaration","scope":717,"src":"236:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":707,"name":"string","nodeType":"ElementaryTypeName","src":"236:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":710,"mutability":"mutable","name":"price","nameLocation":"272:5:8","nodeType":"VariableDeclaration","scope":717,"src":"264:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":709,"name":"uint256","nodeType":"ElementaryTypeName","src":"264:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":712,"mutability":"mutable","name":"seller","nameLocation":"303:6:8","nodeType":"VariableDeclaration","scope":717,"src":"287:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":711,"name":"address","nodeType":"ElementaryTypeName","src":"287:15:8","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":714,"mutability":"mutable","name":"sold","nameLocation":"324:4:8","nodeType":"VariableDeclaration","scope":717,"src":"319:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":713,"name":"bool","nodeType":"ElementaryTypeName","src":"319:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":716,"mutability":"mutable","name":"listedAt","nameLocation":"346:8:8","nodeType":"VariableDeclaration","scope":717,"src":"338:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":715,"name":"uint256","nodeType":"ElementaryTypeName","src":"338:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Item","nameLocation":"180:4:8","nodeType":"StructDefinition","scope":1218,"src":"173:188:8","visibility":"public"},{"constant":false,"functionSelector":"6a868974","id":719,"mutability":"mutable","name":"nextItemId","nameLocation":"386:10:8","nodeType":"VariableDeclaration","scope":1218,"src":"371:25:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":718,"name":"uint256","nodeType":"ElementaryTypeName","src":"371:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"6a166964","id":721,"mutability":"mutable","name":"marketplaceFee","nameLocation":"417:14:8","nodeType":"VariableDeclaration","scope":1218,"src":"402:29:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":720,"name":"uint256","nodeType":"ElementaryTypeName","src":"402:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"8da5cb5b","id":723,"mutability":"mutable","name":"owner","nameLocation":"486:5:8","nodeType":"VariableDeclaration","scope":1218,"src":"471:20:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":722,"name":"address","nodeType":"ElementaryTypeName","src":"471:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"5c975abb","id":725,"mutability":"mutable","name":"paused","nameLocation":"509:6:8","nodeType":"VariableDeclaration","scope":1218,"src":"497:18:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":724,"name":"bool","nodeType":"ElementaryTypeName","src":"497:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"constant":false,"functionSelector":"bfb231d2","id":730,"mutability":"mutable","name":"items","nameLocation":"558:5:8","nodeType":"VariableDeclaration","scope":1218,"src":"526:37:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Item_$717_storage_$","typeString":"mapping(uint256 => struct Marketplace.Item)"},"typeName":{"id":729,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":726,"name":"uint256","nodeType":"ElementaryTypeName","src":"534:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"526:24:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Item_$717_storage_$","typeString":"mapping(uint256 => struct Marketplace.Item)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":728,"nodeType":"UserDefinedTypeName","pathNode":{"id":727,"name":"Item","nameLocations":["545:4:8"],"nodeType":"IdentifierPath","referencedDeclaration":717,"src":"545:4:8"},"referencedDeclaration":717,"src":"545:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Item_$717_storage_ptr","typeString":"struct Marketplace.Item"}}},"visibility":"public"},{"constant":false,"functionSelector":"2c02338f","id":735,"mutability":"mutable","name":"sellerItems","nameLocation":"606:11:8","nodeType":"VariableDeclaration","scope":1218,"src":"569:48:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"typeName":{"id":734,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":731,"name":"address","nodeType":"ElementaryTypeName","src":"577:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"569:29:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":732,"name":"uint256","nodeType":"ElementaryTypeName","src":"588:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":733,"nodeType":"ArrayTypeName","src":"588:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"8b012358","id":739,"mutability":"mutable","name":"sellerEarnings","nameLocation":"658:14:8","nodeType":"VariableDeclaration","scope":1218,"src":"623:49:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":738,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":736,"name":"address","nodeType":"ElementaryTypeName","src":"631:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"623:27:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":737,"name":"uint256","nodeType":"ElementaryTypeName","src":"642:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"16244e47af8a7d2c923faa2cab44315c0514c7aa830682bbb9cc8f0d37ad7548","id":749,"name":"ItemListed","nameLocation":"689:10:8","nodeType":"EventDefinition","parameters":{"id":748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":741,"indexed":true,"mutability":"mutable","name":"itemId","nameLocation":"725:6:8","nodeType":"VariableDeclaration","scope":749,"src":"709:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":740,"name":"uint256","nodeType":"ElementaryTypeName","src":"709:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":743,"indexed":false,"mutability":"mutable","name":"name","nameLocation":"748:4:8","nodeType":"VariableDeclaration","scope":749,"src":"741:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":742,"name":"string","nodeType":"ElementaryTypeName","src":"741:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":745,"indexed":false,"mutability":"mutable","name":"price","nameLocation":"770:5:8","nodeType":"VariableDeclaration","scope":749,"src":"762:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":744,"name":"uint256","nodeType":"ElementaryTypeName","src":"762:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":747,"indexed":true,"mutability":"mutable","name":"seller","nameLocation":"801:6:8","nodeType":"VariableDeclaration","scope":749,"src":"785:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":746,"name":"address","nodeType":"ElementaryTypeName","src":"785:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"699:114:8"},"src":"683:131:8"},{"anonymous":false,"eventSelector":"965f5f1cabd4450617ef4e4fb57afed8a8b87544c5549305429c15706fc892cf","id":761,"name":"ItemSold","nameLocation":"830:8:8","nodeType":"EventDefinition","parameters":{"id":760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":751,"indexed":true,"mutability":"mutable","name":"itemId","nameLocation":"864:6:8","nodeType":"VariableDeclaration","scope":761,"src":"848:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":750,"name":"uint256","nodeType":"ElementaryTypeName","src":"848:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":753,"indexed":false,"mutability":"mutable","name":"name","nameLocation":"887:4:8","nodeType":"VariableDeclaration","scope":761,"src":"880:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":752,"name":"string","nodeType":"ElementaryTypeName","src":"880:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":755,"indexed":false,"mutability":"mutable","name":"price","nameLocation":"909:5:8","nodeType":"VariableDeclaration","scope":761,"src":"901:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":754,"name":"uint256","nodeType":"ElementaryTypeName","src":"901:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":757,"indexed":true,"mutability":"mutable","name":"seller","nameLocation":"940:6:8","nodeType":"VariableDeclaration","scope":761,"src":"924:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":756,"name":"address","nodeType":"ElementaryTypeName","src":"924:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":759,"indexed":true,"mutability":"mutable","name":"buyer","nameLocation":"972:5:8","nodeType":"VariableDeclaration","scope":761,"src":"956:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":758,"name":"address","nodeType":"ElementaryTypeName","src":"956:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"838:145:8"},"src":"824:160:8"},{"anonymous":false,"eventSelector":"48694456128327a59523d36340d5e5b0157dfefecdeceb0b56e1fa3337fd0d45","id":767,"name":"ItemRemoved","nameLocation":"1000:11:8","nodeType":"EventDefinition","parameters":{"id":766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":763,"indexed":true,"mutability":"mutable","name":"itemId","nameLocation":"1028:6:8","nodeType":"VariableDeclaration","scope":767,"src":"1012:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":762,"name":"uint256","nodeType":"ElementaryTypeName","src":"1012:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":765,"indexed":true,"mutability":"mutable","name":"seller","nameLocation":"1052:6:8","nodeType":"VariableDeclaration","scope":767,"src":"1036:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":764,"name":"address","nodeType":"ElementaryTypeName","src":"1036:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1011:48:8"},"src":"994:66:8"},{"anonymous":false,"eventSelector":"48dc35af7b45e2a81fffad55f6e2fafacdb1d3d0d50d24ebdc16324f5ba757f1","id":773,"name":"EarningsWithdrawn","nameLocation":"1071:17:8","nodeType":"EventDefinition","parameters":{"id":772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":769,"indexed":true,"mutability":"mutable","name":"seller","nameLocation":"1105:6:8","nodeType":"VariableDeclaration","scope":773,"src":"1089:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":768,"name":"address","nodeType":"ElementaryTypeName","src":"1089:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":771,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1121:6:8","nodeType":"VariableDeclaration","scope":773,"src":"1113:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":770,"name":"uint256","nodeType":"ElementaryTypeName","src":"1113:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1088:40:8"},"src":"1065:64:8"},{"anonymous":false,"eventSelector":"528d9479e9f9889a87a3c30c7f7ba537e5e59c4c85a37733b16e57c62df61302","id":779,"name":"FeeUpdated","nameLocation":"1140:10:8","nodeType":"EventDefinition","parameters":{"id":778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":775,"indexed":false,"mutability":"mutable","name":"oldFee","nameLocation":"1159:6:8","nodeType":"VariableDeclaration","scope":779,"src":"1151:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":774,"name":"uint256","nodeType":"ElementaryTypeName","src":"1151:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":777,"indexed":false,"mutability":"mutable","name":"newFee","nameLocation":"1175:6:8","nodeType":"VariableDeclaration","scope":779,"src":"1167:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":776,"name":"uint256","nodeType":"ElementaryTypeName","src":"1167:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1150:32:8"},"src":"1134:49:8"},{"anonymous":false,"eventSelector":"2d8cb32b79ced32c38fb4a61d8482c40627602feb2cc34b50d9b55eea376d88c","id":783,"name":"MarketplacePaused","nameLocation":"1194:17:8","nodeType":"EventDefinition","parameters":{"id":782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":781,"indexed":false,"mutability":"mutable","name":"paused","nameLocation":"1217:6:8","nodeType":"VariableDeclaration","scope":783,"src":"1212:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":780,"name":"bool","nodeType":"ElementaryTypeName","src":"1212:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1211:13:8"},"src":"1188:37:8"},{"body":{"id":794,"nodeType":"Block","src":"1256:93:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":786,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1274:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1278:6:8","memberName":"sender","nodeType":"MemberAccess","src":"1274:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":788,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":723,"src":"1288:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1274:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f6e","id":790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1295:35:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef","typeString":"literal_string \"Only owner can call this function\""},"value":"Only owner can call this function"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef","typeString":"literal_string \"Only owner can call this function\""}],"id":785,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1266:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1266:65:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":792,"nodeType":"ExpressionStatement","src":"1266:65:8"},{"id":793,"nodeType":"PlaceholderStatement","src":"1341:1:8"}]},"id":795,"name":"onlyOwner","nameLocation":"1244:9:8","nodeType":"ModifierDefinition","parameters":{"id":784,"nodeType":"ParameterList","parameters":[],"src":"1253:2:8"},"src":"1235:114:8","virtual":false,"visibility":"internal"},{"body":{"id":804,"nodeType":"Block","src":"1380:69:8","statements":[{"expression":{"arguments":[{"id":799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1398:7:8","subExpression":{"id":798,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":725,"src":"1399:6:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d61726b6574706c61636520697320706175736564","id":800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1407:23:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_36a9abf49bfa7633f09db808bae8ebe2a2277f7d99a58c00264cedbe4abcde1f","typeString":"literal_string \"Marketplace is paused\""},"value":"Marketplace is paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_36a9abf49bfa7633f09db808bae8ebe2a2277f7d99a58c00264cedbe4abcde1f","typeString":"literal_string \"Marketplace is paused\""}],"id":797,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1390:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1390:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":802,"nodeType":"ExpressionStatement","src":"1390:41:8"},{"id":803,"nodeType":"PlaceholderStatement","src":"1441:1:8"}]},"id":805,"name":"notPaused","nameLocation":"1368:9:8","nodeType":"ModifierDefinition","parameters":{"id":796,"nodeType":"ParameterList","parameters":[],"src":"1377:2:8"},"src":"1359:90:8","virtual":false,"visibility":"internal"},{"body":{"id":817,"nodeType":"Block","src":"1496:80:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":810,"name":"_itemId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":807,"src":"1514:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":811,"name":"nextItemId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"1524:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1514:20:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4974656d20646f6573206e6f74206578697374","id":813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1536:21:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_ce0a686b3a77d89aa203ef1917c5a461c03ae6389a02bb3c3b9a97959d623907","typeString":"literal_string \"Item does not exist\""},"value":"Item does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ce0a686b3a77d89aa203ef1917c5a461c03ae6389a02bb3c3b9a97959d623907","typeString":"literal_string \"Item does not exist\""}],"id":809,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1506:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1506:52:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":815,"nodeType":"ExpressionStatement","src":"1506:52:8"},{"id":816,"nodeType":"PlaceholderStatement","src":"1568:1:8"}]},"id":818,"name":"itemExists","nameLocation":"1468:10:8","nodeType":"ModifierDefinition","parameters":{"id":808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":807,"mutability":"mutable","name":"_itemId","nameLocation":"1487:7:8","nodeType":"VariableDeclaration","scope":818,"src":"1479:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":806,"name":"uint256","nodeType":"ElementaryTypeName","src":"1479:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1478:17:8"},"src":"1459:117:8","virtual":false,"visibility":"internal"},{"body":{"id":836,"nodeType":"Block","src":"1623:121:8","statements":[{"expression":{"id":826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":823,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":723,"src":"1633:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":824,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1641:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1645:6:8","memberName":"sender","nodeType":"MemberAccess","src":"1641:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1633:18:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":827,"nodeType":"ExpressionStatement","src":"1633:18:8"},{"expression":{"id":830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":828,"name":"marketplaceFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"1661:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":829,"name":"_marketplaceFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"1678:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1661:32:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":831,"nodeType":"ExpressionStatement","src":"1661:32:8"},{"expression":{"id":834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":832,"name":"nextItemId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"1703:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1716:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1703:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":835,"nodeType":"ExpressionStatement","src":"1703:14:8"}]},"id":837,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":820,"mutability":"mutable","name":"_marketplaceFee","nameLocation":"1606:15:8","nodeType":"VariableDeclaration","scope":837,"src":"1598:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":819,"name":"uint256","nodeType":"ElementaryTypeName","src":"1598:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1597:25:8"},"returnParameters":{"id":822,"nodeType":"ParameterList","parameters":[],"src":"1623:0:8"},"scope":1218,"src":"1586:158:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":912,"nodeType":"Block","src":"1902:625:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":853,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"1926:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":852,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1920:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":851,"name":"bytes","nodeType":"ElementaryTypeName","src":"1920:5:8","typeDescriptions":{}}},"id":854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1920:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1933:6:8","memberName":"length","nodeType":"MemberAccess","src":"1920:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1942:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1920:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4974656d206e616d652063616e6e6f7420626520656d707479","id":858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1945:27:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_baf95424eee75020d0531466e88a19330eb5d53baf30242b769338c4e01f5ddf","typeString":"literal_string \"Item name cannot be empty\""},"value":"Item name cannot be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baf95424eee75020d0531466e88a19330eb5d53baf30242b769338c4e01f5ddf","typeString":"literal_string \"Item name cannot be empty\""}],"id":850,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1912:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1912:61:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":860,"nodeType":"ExpressionStatement","src":"1912:61:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":862,"name":"_price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":843,"src":"1991:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2000:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1991:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5072696365206d7573742062652067726561746572207468616e2030","id":865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2003:30:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde","typeString":"literal_string \"Price must be greater than 0\""},"value":"Price must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde","typeString":"literal_string \"Price must be greater than 0\""}],"id":861,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1983:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1983:51:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":867,"nodeType":"ExpressionStatement","src":"1983:51:8"},{"assignments":[869],"declarations":[{"constant":false,"id":869,"mutability":"mutable","name":"itemId","nameLocation":"2061:6:8","nodeType":"VariableDeclaration","scope":912,"src":"2053:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":868,"name":"uint256","nodeType":"ElementaryTypeName","src":"2053:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":871,"initialValue":{"id":870,"name":"nextItemId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"2070:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2053:27:8"},{"expression":{"id":873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2090:12:8","subExpression":{"id":872,"name":"nextItemId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"2090:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":874,"nodeType":"ExpressionStatement","src":"2090:12:8"},{"expression":{"id":892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":875,"name":"items","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":730,"src":"2121:5:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Item_$717_storage_$","typeString":"mapping(uint256 => struct Marketplace.Item storage ref)"}},"id":877,"indexExpression":{"id":876,"name":"itemId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"2127:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2121:13:8","typeDescriptions":{"typeIdentifier":"t_struct$_Item_$717_storage","typeString":"struct Marketplace.Item storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":879,"name":"itemId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"2160:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":880,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"2186:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":881,"name":"_description","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"2218:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":882,"name":"_price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":843,"src":"2251:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"expression":{"id":885,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2287:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2291:6:8","memberName":"sender","nodeType":"MemberAccess","src":"2287:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":884,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2279:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":883,"name":"address","nodeType":"ElementaryTypeName","src":"2279:8:8","stateMutability":"payable","typeDescriptions":{}}},"id":887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2279:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"hexValue":"66616c7365","id":888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2318:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"expression":{"id":889,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2347:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2353:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"2347:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":878,"name":"Item","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"2137:4:8","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Item_$717_storage_ptr_$","typeString":"type(struct Marketplace.Item storage pointer)"}},"id":891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["2156:2:8","2180:4:8","2205:11:8","2244:5:8","2271:6:8","2312:4:8","2337:8:8"],"names":["id","name","description","price","seller","sold","listedAt"],"nodeType":"FunctionCall","src":"2137:236:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Item_$717_memory_ptr","typeString":"struct Marketplace.Item memory"}},"src":"2121:252:8","typeDescriptions":{"typeIdentifier":"t_struct$_Item_$717_storage","typeString":"struct Marketplace.Item storage ref"}},"id":893,"nodeType":"ExpressionStatement","src":"2121:252:8"},{"expression":{"arguments":[{"id":899,"name":"itemId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"2421:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":894,"name":"sellerItems","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":735,"src":"2392:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":897,"indexExpression":{"expression":{"id":895,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2404:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2408:6:8","memberName":"sender","nodeType":"MemberAccess","src":"2404:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2392:23:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2416:4:8","memberName":"push","nodeType":"MemberAccess","src":"2392:28:8","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2392:36:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":901,"nodeType":"ExpressionStatement","src":"2392:36:8"},{"eventCall":{"arguments":[{"id":903,"name":"itemId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"2463:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":904,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"2471:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":905,"name":"_price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":843,"src":"2478:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":906,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2486:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2490:6:8","memberName":"sender","nodeType":"MemberAccess","src":"2486:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":902,"name":"ItemListed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"2452:10:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,string memory,uint256,address)"}},"id":908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2452:45:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":909,"nodeType":"EmitStatement","src":"2447:50:8"},{"expression":{"id":910,"name":"itemId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"2514:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":849,"id":911,"nodeType":"Return","src":"2507:13:8"}]},"functionSelector":"0562021c","id":913,"implemented":true,"kind":"function","modifiers":[{"id":846,"kind":"modifierInvocation","modifierName":{"id":845,"name":"notPaused","nameLocations":["1874:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":805,"src":"1874:9:8"},"nodeType":"ModifierInvocation","src":"1874:9:8"}],"name":"listItem","nameLocation":"1763:8:8","nodeType":"FunctionDefinition","parameters":{"id":844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":839,"mutability":"mutable","name":"_name","nameLocation":"1795:5:8","nodeType":"VariableDeclaration","scope":913,"src":"1781:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":838,"name":"string","nodeType":"ElementaryTypeName","src":"1781:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":841,"mutability":"mutable","name":"_description","nameLocation":"1824:12:8","nodeType":"VariableDeclaration","scope":913,"src":"1810:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":840,"name":"string","nodeType":"ElementaryTypeName","src":"1810:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":843,"mutability":"mutable","name":"_price","nameLocation":"1854:6:8","nodeType":"VariableDeclaration","scope":913,"src":"1846:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":842,"name":"uint256","nodeType":"ElementaryTypeName","src":"1846:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1771:95:8"},"returnParameters":{"id":849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":848,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":913,"src":"1893:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":847,"name":"uint256","nodeType":"ElementaryTypeName","src":"1893:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1892:9:8"},"scope":1218,"src":"1754:773:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":997,"nodeType":"Block","src":"2616:548:8","statements":[{"assignments":[925],"declarations":[{"constant":false,"id":925,"mutability":"mutable","name":"item","nameLocation":"2639:4:8","nodeType":"VariableDeclaration","scope":997,"src":"2626:17:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Item_$717_storage_ptr","typeString":"struct Marketplace.Item"},"typeName":{"id":924,"nodeType":"UserDefinedTypeName","pathNode":{"id":923,"name":"Item","nameLocations":["2626:4:8"],"nodeType":"IdentifierPath","referencedDeclaration":717,"src":"2626:4:8"},"referencedDeclaration":717,"src":"2626:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Item_$717_storage_ptr","typeString":"struct Marketplace.Item"}},"visibility":"internal"}],"id":929,"initialValue":{"baseExpression":{"id":926,"name":"items","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":730,"src":"2646:5:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Item_$717_storage_$","typeString":"mapping(uint256 => struct Marketplace.Item storage ref)"}},"id":928,"indexExpression":{"id":927,"name":"_itemId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"2652:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2646:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Item_$717_storage","typeString":"struct Marketplace.Item storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2626:34:8"},{"expression":{"arguments":[{"id":933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2678:10:8","subExpression":{"expression":{"id":931,"name":"item","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"2679:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Item_$717_storage_ptr","typeString":"struct Marketplace.Item storage pointer"}},"id":932,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2684:4:8","memberName":"sold","nodeType":"MemberAccess","referencedDeclaration":714,"src":"2679:9:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4974656d20616c726561647920736f6c64","id":934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2690:19:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_f2aba8e3fa98fef30df3b07bf1481d5fabaef66c067d55613846d937a0ee9c3f","typeString":"literal_string \"Item already sold\""},"value":"Item already sold"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f2aba8e3fa98fef30df3b07bf1481d5fabaef66c067d55613846d937a0ee9c3f","typeString":"literal_string \"Item already sold\""}],"id":930,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2670:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2670:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":936,"nodeType":"ExpressionStatement","src":"2670:40:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":938,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2728:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2732:6:8","memberName":"sender","nodeType":"MemberAccess","src":"2728:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":940,"name":"item","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"2742:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Item_$717_storage_ptr","typeString":"struct Marketplace.Item storage pointer"}},"id":941,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2747:6:8","memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":712,"src":"2742:11:8","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"2728:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f742062757920796f7572206f776e206974656d","id":943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2755:26:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b7370d40c27723f4db0975059c334d407b3f7019c911c906aea1d76bba123c6","typeString":"literal_string \"Cannot buy your own item\""},"value":"Cannot buy your own item"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8b7370d40c27723f4db0975059c334d407b3f7019c911c906aea1d76bba123c6","typeString":"literal_string \"Cannot buy your own item\""}],"id":937,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2720:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2720:62:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":945,"nodeType":"ExpressionStatement","src":"2720:62:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":947,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2800:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2804:5:8","memberName":"value","nodeType":"MemberAccess","src":"2800:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":949,"name":"item","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"2813:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Item_$717_storage_ptr","typeString":"struct Marketplace.Item storage pointer"}},"id":950,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2818:5:8","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":710,"src":"2813:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2800:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e636f7272656374207061796d656e7420616d6f756e74","id":952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2825:26:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d","typeString":"literal_string \"Incorrect payment amount\""},"value":"Incorrect payment amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d","typeString":"literal_string \"Incorrect payment amount\""}],"id":946,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2792:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2792:60:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":954,"nodeType":"ExpressionStatement","src":"2792:60:8"},{"expression":{"id":959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":955,"name":"item","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"2871:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Item_$717_storage_ptr","typeString":"struct Marketplace.Item storage pointer"}},"id":957,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2876:4:8","memberName":"sold","nodeType":"MemberAccess","referencedDeclaration":714,"src":"2871:9:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2883:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2871:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":960,"nodeType":"ExpressionStatement","src":"2871:16:8"},{"assignments":[962],"declarations":[{"constant":false,"id":962,"mutability":"mutable","name":"fee","nameLocation":"2914:3:8","nodeType":"VariableDeclaration","scope":997,"src":"2906:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":961,"name":"uint256","nodeType":"ElementaryTypeName","src":"2906:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":970,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":963,"name":"item","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"2921:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Item_$717_storage_ptr","typeString":"struct Marketplace.Item storage pointer"}},"id":964,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2926:5:8","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":710,"src":"2921:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":965,"name":"marketplaceFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"2934:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2921:27:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":967,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2920:29:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2952:5:8","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"2920:37:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2906:51:8"},{"assignments":[972],"declarations":[{"constant":false,"id":972,"mutability":"mutable","name":"sellerAmount","nameLocation":"2975:12:8","nodeType":"VariableDeclaration","scope":997,"src":"2967:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":971,"name":"uint256","nodeType":"ElementaryTypeName","src":"2967:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":977,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":973,"name":"item","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"2990:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Item_$717_storage_ptr","typeString":"struct Marketplace.Item storage pointer"}},"id":974,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2995:5:8","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":710,"src":"2990:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":975,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"3003:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2990:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2967:39:8"},{"expression":{"id":983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":978,"name":"sellerEarnings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"3025:14:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":981,"indexExpression":{"expression":{"id":979,"name":"item","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"3040:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Item_$717_storage_ptr","typeString":"struct Marketplace.Item storage pointer"}},"id":980,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3045:6:8","memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":712,"src":"3040:11:8","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3025:27:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":982,"name":"sellerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":972,"src":"3056:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3025:43:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":984,"nodeType":"ExpressionStatement","src":"3025:43:8"},{"eventCall":{"arguments":[{"id":986,"name":"_itemId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"3101:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":987,"name":"item","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"3110:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Item_$717_storage_ptr","typeString":"struct Marketplace.Item storage pointer"}},"id":988,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3115:4:8","memberName":"name","nodeType":"MemberAccess","referencedDeclaration":706,"src":"3110:9:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"expression":{"id":989,"name":"item","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"3121:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Item_$717_storage_ptr","typeString":"struct Marketplace.Item storage pointer"}},"id":990,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3126:5:8","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":710,"src":"3121:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":991,"name":"item","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"3133:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Item_$717_storage_ptr","typeString":"struct Marketplace.Item storage pointer"}},"id":992,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3138:6:8","memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":712,"src":"3133:11:8","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"expression":{"id":993,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3146:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3150:6:8","memberName":"sender","nodeType":"MemberAccess","src":"3146:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"}],"id":985,"name":"ItemSold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"3092:8:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_address_$returns$__$","typeString":"function (uint256,string memory,uint256,address,address)"}},"id":995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3092:65:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":996,"nodeType":"EmitStatement","src":"3087:70:8"}]},"functionSelector":"e7fb74c7","id":998,"implemented":true,"kind":"function","modifiers":[{"id":918,"kind":"modifierInvocation","modifierName":{"id":917,"name":"notPaused","nameLocations":["2586:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":805,"src":"2586:9:8"},"nodeType":"ModifierInvocation","src":"2586:9:8"},{"arguments":[{"id":920,"name":"_itemId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"2607:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":921,"kind":"modifierInvocation","modifierName":{"id":919,"name":"itemExists","nameLocations":["2596:10:8"],"nodeType":"IdentifierPath","referencedDeclaration":818,"src":"2596:10:8"},"nodeType":"ModifierInvocation","src":"2596:19:8"}],"name":"buyItem","nameLocation":"2546:7:8","nodeType":"FunctionDefinition","parameters":{"id":916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":915,"mutability":"mutable","name":"_itemId","nameLocation":"2562:7:8","nodeType":"VariableDeclaration","scope":998,"src":"2554:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":914,"name":"uint256","nodeType":"ElementaryTypeName","src":"2554:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2553:17:8"},"returnParameters":{"id":922,"nodeType":"ParameterList","parameters":[],"src":"2616:0:8"},"scope":1218,"src":"2537:627:8","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":1040,"nodeType":"Block","src":"3238:269:8","statements":[{"assignments":[1008],"declarations":[{"constant":false,"id":1008,"mutability":"mutable","name":"item","nameLocation":"3261:4:8","nodeType":"VariableDeclaration","scope":1040,"src":"3248:17:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Item_$717_storage_ptr","typeString":"struct Marketplace.Item"},"typeName":{"id":1007,"nodeType":"UserDefinedTypeName","pathNode":{"id":1006,"name":"Item","nameLocations":["3248:4:8"],"nodeType":"IdentifierPath","referencedDeclaration":717,"src":"3248:4:8"},"referencedDeclaration":717,"src":"3248:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Item_$717_storage_ptr","typeString":"struct Marketplace.Item"}},"visibility":"internal"}],"id":1012,"initialValue":{"baseExpression":{"id":1009,"name":"items","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":730,"src":"3268:5:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Item_$717_storage_$","typeString":"mapping(uint256 => struct Marketplace.Item storage ref)"}},"id":1011,"indexExpression":{"id":1010,"name":"_itemId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"3274:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3268:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Item_$717_storage","typeString":"struct Marketplace.Item storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3248:34:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1014,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3300:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3304:6:8","memberName":"sender","nodeType":"MemberAccess","src":"3300:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1016,"name":"item","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"3314:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Item_$717_storage_ptr","typeString":"struct Marketplace.Item storage pointer"}},"id":1017,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3319:6:8","memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":712,"src":"3314:11:8","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"3300:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c792073656c6c65722063616e2072656d6f7665206974656d","id":1019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3327:29:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_35376dbc8c18478611197b64504df0dcfe4a345cbf3db48477b7c4b0492d91ae","typeString":"literal_string \"Only seller can remove item\""},"value":"Only seller can remove item"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_35376dbc8c18478611197b64504df0dcfe4a345cbf3db48477b7c4b0492d91ae","typeString":"literal_string \"Only seller can remove item\""}],"id":1013,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3292:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3292:65:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1021,"nodeType":"ExpressionStatement","src":"3292:65:8"},{"expression":{"arguments":[{"id":1025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3375:10:8","subExpression":{"expression":{"id":1023,"name":"item","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"3376:4:8","typeDescriptions":{"typeIdentifier":"t_struct$_Item_$717_storage_ptr","typeString":"struct Marketplace.Item storage pointer"}},"id":1024,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3381:4:8","memberName":"sold","nodeType":"MemberAccess","referencedDeclaration":714,"src":"3376:9:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f742072656d6f766520736f6c64206974656d","id":1026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3387:25:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_92b6a01d7099634b778cb9907b4eb2ad983a23bc76b4433f60f1fb7a7b57ec5a","typeString":"literal_string \"Cannot remove sold item\""},"value":"Cannot remove sold item"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_92b6a01d7099634b778cb9907b4eb2ad983a23bc76b4433f60f1fb7a7b57ec5a","typeString":"literal_string \"Cannot remove sold item\""}],"id":1022,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3367:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3367:46:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1028,"nodeType":"ExpressionStatement","src":"3367:46:8"},{"expression":{"id":1032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"3432:21:8","subExpression":{"baseExpression":{"id":1029,"name":"items","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":730,"src":"3439:5:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Item_$717_storage_$","typeString":"mapping(uint256 => struct Marketplace.Item storage ref)"}},"id":1031,"indexExpression":{"id":1030,"name":"_itemId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"3445:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3439:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Item_$717_storage","typeString":"struct Marketplace.Item storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1033,"nodeType":"ExpressionStatement","src":"3432:21:8"},{"eventCall":{"arguments":[{"id":1035,"name":"_itemId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"3480:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1036,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3489:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3493:6:8","memberName":"sender","nodeType":"MemberAccess","src":"3489:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1034,"name":"ItemRemoved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"3468:11:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":1038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3468:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1039,"nodeType":"EmitStatement","src":"3463:37:8"}]},"functionSelector":"71329171","id":1041,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":1003,"name":"_itemId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"3229:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1004,"kind":"modifierInvocation","modifierName":{"id":1002,"name":"itemExists","nameLocations":["3218:10:8"],"nodeType":"IdentifierPath","referencedDeclaration":818,"src":"3218:10:8"},"nodeType":"ModifierInvocation","src":"3218:19:8"}],"name":"removeItem","nameLocation":"3183:10:8","nodeType":"FunctionDefinition","parameters":{"id":1001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1000,"mutability":"mutable","name":"_itemId","nameLocation":"3202:7:8","nodeType":"VariableDeclaration","scope":1041,"src":"3194:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":999,"name":"uint256","nodeType":"ElementaryTypeName","src":"3194:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3193:17:8"},"returnParameters":{"id":1005,"nodeType":"ParameterList","parameters":[],"src":"3238:0:8"},"scope":1218,"src":"3174:333:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1080,"nodeType":"Block","src":"3552:280:8","statements":[{"assignments":[1045],"declarations":[{"constant":false,"id":1045,"mutability":"mutable","name":"earnings","nameLocation":"3570:8:8","nodeType":"VariableDeclaration","scope":1080,"src":"3562:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1044,"name":"uint256","nodeType":"ElementaryTypeName","src":"3562:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1050,"initialValue":{"baseExpression":{"id":1046,"name":"sellerEarnings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"3581:14:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1049,"indexExpression":{"expression":{"id":1047,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3596:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3600:6:8","memberName":"sender","nodeType":"MemberAccess","src":"3596:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3581:26:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3562:45:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1052,"name":"earnings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"3625:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3636:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3625:12:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f206561726e696e677320746f207769746864726177","id":1055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3639:25:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_d97385136630b09429aa46486568fc56c245d310236690696fbd4ad949ae190a","typeString":"literal_string \"No earnings to withdraw\""},"value":"No earnings to withdraw"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d97385136630b09429aa46486568fc56c245d310236690696fbd4ad949ae190a","typeString":"literal_string \"No earnings to withdraw\""}],"id":1051,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3617:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3617:48:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1057,"nodeType":"ExpressionStatement","src":"3617:48:8"},{"expression":{"id":1063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1058,"name":"sellerEarnings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"3684:14:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1061,"indexExpression":{"expression":{"id":1059,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3699:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3703:6:8","memberName":"sender","nodeType":"MemberAccess","src":"3699:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3684:26:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3713:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3684:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1064,"nodeType":"ExpressionStatement","src":"3684:30:8"},{"expression":{"arguments":[{"id":1071,"name":"earnings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"3753:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":1067,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3732:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3736:6:8","memberName":"sender","nodeType":"MemberAccess","src":"3732:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1066,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3724:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":1065,"name":"address","nodeType":"ElementaryTypeName","src":"3724:8:8","stateMutability":"payable","typeDescriptions":{}}},"id":1069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3724:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3744:8:8","memberName":"transfer","nodeType":"MemberAccess","src":"3724:28:8","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3724:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1073,"nodeType":"ExpressionStatement","src":"3724:38:8"},{"eventCall":{"arguments":[{"expression":{"id":1075,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3804:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3808:6:8","memberName":"sender","nodeType":"MemberAccess","src":"3804:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1077,"name":"earnings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"3816:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1074,"name":"EarningsWithdrawn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"3786:17:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3786:39:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1079,"nodeType":"EmitStatement","src":"3781:44:8"}]},"functionSelector":"b73c6ce9","id":1081,"implemented":true,"kind":"function","modifiers":[],"name":"withdrawEarnings","nameLocation":"3526:16:8","nodeType":"FunctionDefinition","parameters":{"id":1042,"nodeType":"ParameterList","parameters":[],"src":"3542:2:8"},"returnParameters":{"id":1043,"nodeType":"ParameterList","parameters":[],"src":"3552:0:8"},"scope":1218,"src":"3517:315:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1093,"nodeType":"Block","src":"3922:44:8","statements":[{"expression":{"baseExpression":{"id":1089,"name":"sellerItems","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":735,"src":"3939:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":1091,"indexExpression":{"id":1090,"name":"_seller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1083,"src":"3951:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3939:20:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"functionReturnParameters":1088,"id":1092,"nodeType":"Return","src":"3932:27:8"}]},"functionSelector":"d3cbb62b","id":1094,"implemented":true,"kind":"function","modifiers":[],"name":"getSellerItems","nameLocation":"3851:14:8","nodeType":"FunctionDefinition","parameters":{"id":1084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1083,"mutability":"mutable","name":"_seller","nameLocation":"3874:7:8","nodeType":"VariableDeclaration","scope":1094,"src":"3866:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1082,"name":"address","nodeType":"ElementaryTypeName","src":"3866:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3865:17:8"},"returnParameters":{"id":1088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1087,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1094,"src":"3904:16:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1085,"name":"uint256","nodeType":"ElementaryTypeName","src":"3904:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1086,"nodeType":"ArrayTypeName","src":"3904:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"3903:18:8"},"scope":1218,"src":"3842:124:8","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1103,"nodeType":"Block","src":"4030:38:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1099,"name":"nextItemId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"4047:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4060:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4047:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1098,"id":1102,"nodeType":"Return","src":"4040:21:8"}]},"functionSelector":"7749cf23","id":1104,"implemented":true,"kind":"function","modifiers":[],"name":"getItemCount","nameLocation":"3985:12:8","nodeType":"FunctionDefinition","parameters":{"id":1095,"nodeType":"ParameterList","parameters":[],"src":"3997:2:8"},"returnParameters":{"id":1098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1097,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1104,"src":"4021:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1096,"name":"uint256","nodeType":"ElementaryTypeName","src":"4021:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4020:9:8"},"scope":1218,"src":"3976:92:8","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1131,"nodeType":"Block","src":"4162:194:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1112,"name":"_newFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"4180:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31303030","id":1113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4191:4:8","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"src":"4180:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4665652063616e6e6f742065786365656420313025","id":1115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4197:23:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_697e1050e49c2a32d802845ecac75df93b62d147a0a67808d6dec2b44ce5e80f","typeString":"literal_string \"Fee cannot exceed 10%\""},"value":"Fee cannot exceed 10%"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_697e1050e49c2a32d802845ecac75df93b62d147a0a67808d6dec2b44ce5e80f","typeString":"literal_string \"Fee cannot exceed 10%\""}],"id":1111,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4172:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4172:49:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1117,"nodeType":"ExpressionStatement","src":"4172:49:8"},{"assignments":[1119],"declarations":[{"constant":false,"id":1119,"mutability":"mutable","name":"oldFee","nameLocation":"4250:6:8","nodeType":"VariableDeclaration","scope":1131,"src":"4242:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1118,"name":"uint256","nodeType":"ElementaryTypeName","src":"4242:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1121,"initialValue":{"id":1120,"name":"marketplaceFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"4259:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4242:31:8"},{"expression":{"id":1124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1122,"name":"marketplaceFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"4283:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1123,"name":"_newFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"4300:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4283:24:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1125,"nodeType":"ExpressionStatement","src":"4283:24:8"},{"eventCall":{"arguments":[{"id":1127,"name":"oldFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1119,"src":"4333:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1128,"name":"_newFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"4341:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1126,"name":"FeeUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"4322:10:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":1129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4322:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1130,"nodeType":"EmitStatement","src":"4317:32:8"}]},"functionSelector":"9407ea98","id":1132,"implemented":true,"kind":"function","modifiers":[{"id":1109,"kind":"modifierInvocation","modifierName":{"id":1108,"name":"onlyOwner","nameLocations":["4152:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":795,"src":"4152:9:8"},"nodeType":"ModifierInvocation","src":"4152:9:8"}],"name":"setMarketplaceFee","nameLocation":"4110:17:8","nodeType":"FunctionDefinition","parameters":{"id":1107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1106,"mutability":"mutable","name":"_newFee","nameLocation":"4136:7:8","nodeType":"VariableDeclaration","scope":1132,"src":"4128:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1105,"name":"uint256","nodeType":"ElementaryTypeName","src":"4128:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4127:17:8"},"returnParameters":{"id":1110,"nodeType":"ParameterList","parameters":[],"src":"4162:0:8"},"scope":1218,"src":"4101:255:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1147,"nodeType":"Block","src":"4416:74:8","statements":[{"expression":{"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1139,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":725,"src":"4426:6:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1140,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1134,"src":"4435:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4426:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1142,"nodeType":"ExpressionStatement","src":"4426:16:8"},{"eventCall":{"arguments":[{"id":1144,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1134,"src":"4475:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1143,"name":"MarketplacePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"4457:17:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bool_$returns$__$","typeString":"function (bool)"}},"id":1145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4457:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1146,"nodeType":"EmitStatement","src":"4452:31:8"}]},"functionSelector":"16c38b3c","id":1148,"implemented":true,"kind":"function","modifiers":[{"id":1137,"kind":"modifierInvocation","modifierName":{"id":1136,"name":"onlyOwner","nameLocations":["4406:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":795,"src":"4406:9:8"},"nodeType":"ModifierInvocation","src":"4406:9:8"}],"name":"setPaused","nameLocation":"4375:9:8","nodeType":"FunctionDefinition","parameters":{"id":1135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1134,"mutability":"mutable","name":"_paused","nameLocation":"4390:7:8","nodeType":"VariableDeclaration","scope":1148,"src":"4385:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1133,"name":"bool","nodeType":"ElementaryTypeName","src":"4385:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4384:14:8"},"returnParameters":{"id":1138,"nodeType":"ParameterList","parameters":[],"src":"4416:0:8"},"scope":1218,"src":"4366:124:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1176,"nodeType":"Block","src":"4541:151:8","statements":[{"assignments":[1154],"declarations":[{"constant":false,"id":1154,"mutability":"mutable","name":"balance","nameLocation":"4559:7:8","nodeType":"VariableDeclaration","scope":1176,"src":"4551:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1153,"name":"uint256","nodeType":"ElementaryTypeName","src":"4551:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1160,"initialValue":{"expression":{"arguments":[{"id":1157,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4577:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_Marketplace_$1218","typeString":"contract Marketplace"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Marketplace_$1218","typeString":"contract Marketplace"}],"id":1156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4569:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1155,"name":"address","nodeType":"ElementaryTypeName","src":"4569:7:8","typeDescriptions":{}}},"id":1158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4569:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4583:7:8","memberName":"balance","nodeType":"MemberAccess","src":"4569:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4551:39:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1162,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1154,"src":"4608:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4618:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4608:11:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f206665657320746f207769746864726177","id":1165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4621:21:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_524becf2bd3d6f3c74c4c55f46993b5de22a6261a1a6108cc85fed135e73299c","typeString":"literal_string \"No fees to withdraw\""},"value":"No fees to withdraw"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_524becf2bd3d6f3c74c4c55f46993b5de22a6261a1a6108cc85fed135e73299c","typeString":"literal_string \"No fees to withdraw\""}],"id":1161,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4600:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4600:43:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1167,"nodeType":"ExpressionStatement","src":"4600:43:8"},{"expression":{"arguments":[{"id":1173,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1154,"src":"4677:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1170,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":723,"src":"4661:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1169,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4653:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":1168,"name":"address","nodeType":"ElementaryTypeName","src":"4653:8:8","stateMutability":"payable","typeDescriptions":{}}},"id":1171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4653:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4668:8:8","memberName":"transfer","nodeType":"MemberAccess","src":"4653:23:8","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4653:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1175,"nodeType":"ExpressionStatement","src":"4653:32:8"}]},"functionSelector":"476343ee","id":1177,"implemented":true,"kind":"function","modifiers":[{"id":1151,"kind":"modifierInvocation","modifierName":{"id":1150,"name":"onlyOwner","nameLocations":["4531:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":795,"src":"4531:9:8"},"nodeType":"ModifierInvocation","src":"4531:9:8"}],"name":"withdrawFees","nameLocation":"4509:12:8","nodeType":"FunctionDefinition","parameters":{"id":1149,"nodeType":"ParameterList","parameters":[],"src":"4521:2:8"},"returnParameters":{"id":1152,"nodeType":"ParameterList","parameters":[],"src":"4541:0:8"},"scope":1218,"src":"4500:192:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1216,"nodeType":"Block","src":"4832:263:8","statements":[{"assignments":[1185],"declarations":[{"constant":false,"id":1185,"mutability":"mutable","name":"earnings","nameLocation":"4850:8:8","nodeType":"VariableDeclaration","scope":1216,"src":"4842:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1184,"name":"uint256","nodeType":"ElementaryTypeName","src":"4842:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1189,"initialValue":{"baseExpression":{"id":1186,"name":"sellerEarnings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"4861:14:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1188,"indexExpression":{"id":1187,"name":"_seller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"4876:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4861:23:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4842:42:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1191,"name":"earnings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"4902:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4913:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4902:12:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f206561726e696e677320666f7220746869732073656c6c6572","id":1194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4916:29:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_b50e07eb60958e727fe1a91dc3b40a6c689ba04e85f6a3516d329471b8e19835","typeString":"literal_string \"No earnings for this seller\""},"value":"No earnings for this seller"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b50e07eb60958e727fe1a91dc3b40a6c689ba04e85f6a3516d329471b8e19835","typeString":"literal_string \"No earnings for this seller\""}],"id":1190,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4894:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4894:52:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1196,"nodeType":"ExpressionStatement","src":"4894:52:8"},{"expression":{"id":1201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1197,"name":"sellerEarnings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"4965:14:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1199,"indexExpression":{"id":1198,"name":"_seller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"4980:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4965:23:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4991:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4965:27:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1202,"nodeType":"ExpressionStatement","src":"4965:27:8"},{"expression":{"arguments":[{"id":1208,"name":"earnings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"5028:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1205,"name":"_seller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"5010:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5002:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":1203,"name":"address","nodeType":"ElementaryTypeName","src":"5002:8:8","stateMutability":"payable","typeDescriptions":{}}},"id":1206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5002:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5019:8:8","memberName":"transfer","nodeType":"MemberAccess","src":"5002:25:8","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5002:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1210,"nodeType":"ExpressionStatement","src":"5002:35:8"},{"eventCall":{"arguments":[{"id":1212,"name":"_seller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"5070:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1213,"name":"earnings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"5079:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1211,"name":"EarningsWithdrawn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"5052:17:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5052:36:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1215,"nodeType":"EmitStatement","src":"5047:41:8"}]},"functionSelector":"6ff1c9bc","id":1217,"implemented":true,"kind":"function","modifiers":[{"id":1182,"kind":"modifierInvocation","modifierName":{"id":1181,"name":"onlyOwner","nameLocations":["4822:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":795,"src":"4822:9:8"},"nodeType":"ModifierInvocation","src":"4822:9:8"}],"name":"emergencyWithdraw","nameLocation":"4780:17:8","nodeType":"FunctionDefinition","parameters":{"id":1180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1179,"mutability":"mutable","name":"_seller","nameLocation":"4806:7:8","nodeType":"VariableDeclaration","scope":1217,"src":"4798:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1178,"name":"address","nodeType":"ElementaryTypeName","src":"4798:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4797:17:8"},"returnParameters":{"id":1183,"nodeType":"ParameterList","parameters":[],"src":"4832:0:8"},"scope":1218,"src":"4771:324:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":1219,"src":"146:4951:8","usedErrors":[],"usedEvents":[749,761,767,773,779,783]}],"src":"32:5065:8"},"id":8},"contracts/SimpleStorage.sol":{"ast":{"absolutePath":"contracts/SimpleStorage.sol","exportedSymbols":{"SimpleStorage":[1315]},"id":1316,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1220,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"32:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"SimpleStorage","contractDependencies":[],"contractKind":"contract","documentation":{"id":1221,"nodeType":"StructuredDocumentation","src":"58:76:9","text":" @title SimpleStorage\n @dev Store & retrieve value in a variable"},"fullyImplemented":true,"id":1315,"linearizedBaseContracts":[1315],"name":"SimpleStorage","nameLocation":"144:13:9","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"6d619daa","id":1223,"mutability":"mutable","name":"storedValue","nameLocation":"179:11:9","nodeType":"VariableDeclaration","scope":1315,"src":"164:26:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1222,"name":"uint256","nodeType":"ElementaryTypeName","src":"164:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"8da5cb5b","id":1225,"mutability":"mutable","name":"owner","nameLocation":"211:5:9","nodeType":"VariableDeclaration","scope":1315,"src":"196:20:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1224,"name":"address","nodeType":"ElementaryTypeName","src":"196:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"anonymous":false,"eventSelector":"681683094c99fb1b55d9c72829a0516f885774946ee037b112798941433c137b","id":1233,"name":"ValueChanged","nameLocation":"233:12:9","nodeType":"EventDefinition","parameters":{"id":1232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1227,"indexed":false,"mutability":"mutable","name":"oldValue","nameLocation":"254:8:9","nodeType":"VariableDeclaration","scope":1233,"src":"246:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1226,"name":"uint256","nodeType":"ElementaryTypeName","src":"246:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1229,"indexed":false,"mutability":"mutable","name":"newValue","nameLocation":"272:8:9","nodeType":"VariableDeclaration","scope":1233,"src":"264:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1228,"name":"uint256","nodeType":"ElementaryTypeName","src":"264:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1231,"indexed":false,"mutability":"mutable","name":"changedBy","nameLocation":"290:9:9","nodeType":"VariableDeclaration","scope":1233,"src":"282:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1230,"name":"address","nodeType":"ElementaryTypeName","src":"282:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"245:55:9"},"src":"227:74:9"},{"body":{"id":1254,"nodeType":"Block","src":"346:129:9","statements":[{"expression":{"id":1240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1238,"name":"storedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1223,"src":"356:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1239,"name":"_initialValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"370:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"356:27:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1241,"nodeType":"ExpressionStatement","src":"356:27:9"},{"expression":{"id":1245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1242,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"393:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1243,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"401:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"405:6:9","memberName":"sender","nodeType":"MemberAccess","src":"401:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"393:18:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1246,"nodeType":"ExpressionStatement","src":"393:18:9"},{"eventCall":{"arguments":[{"hexValue":"30","id":1248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"439:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1249,"name":"_initialValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"442:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1250,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"457:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"461:6:9","memberName":"sender","nodeType":"MemberAccess","src":"457:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1247,"name":"ValueChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"426:12:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,uint256,address)"}},"id":1252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"426:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1253,"nodeType":"EmitStatement","src":"421:47:9"}]},"id":1255,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1235,"mutability":"mutable","name":"_initialValue","nameLocation":"331:13:9","nodeType":"VariableDeclaration","scope":1255,"src":"323:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1234,"name":"uint256","nodeType":"ElementaryTypeName","src":"323:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"322:23:9"},"returnParameters":{"id":1237,"nodeType":"ParameterList","parameters":[],"src":"346:0:9"},"scope":1315,"src":"311:164:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1276,"nodeType":"Block","src":"614:134:9","statements":[{"assignments":[1262],"declarations":[{"constant":false,"id":1262,"mutability":"mutable","name":"oldValue","nameLocation":"632:8:9","nodeType":"VariableDeclaration","scope":1276,"src":"624:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1261,"name":"uint256","nodeType":"ElementaryTypeName","src":"624:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1264,"initialValue":{"id":1263,"name":"storedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1223,"src":"643:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"624:30:9"},{"expression":{"id":1267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1265,"name":"storedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1223,"src":"664:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1266,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"678:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"664:20:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1268,"nodeType":"ExpressionStatement","src":"664:20:9"},{"eventCall":{"arguments":[{"id":1270,"name":"oldValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1262,"src":"712:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1271,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"722:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1272,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"730:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"734:6:9","memberName":"sender","nodeType":"MemberAccess","src":"730:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1269,"name":"ValueChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"699:12:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,uint256,address)"}},"id":1274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"699:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1275,"nodeType":"EmitStatement","src":"694:47:9"}]},"documentation":{"id":1256,"nodeType":"StructuredDocumentation","src":"485:83:9","text":" @dev Store value in variable\n @param _value value to store"},"functionSelector":"55241077","id":1277,"implemented":true,"kind":"function","modifiers":[],"name":"setValue","nameLocation":"582:8:9","nodeType":"FunctionDefinition","parameters":{"id":1259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1258,"mutability":"mutable","name":"_value","nameLocation":"599:6:9","nodeType":"VariableDeclaration","scope":1277,"src":"591:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1257,"name":"uint256","nodeType":"ElementaryTypeName","src":"591:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"590:16:9"},"returnParameters":{"id":1260,"nodeType":"ParameterList","parameters":[],"src":"614:0:9"},"scope":1315,"src":"573:175:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1285,"nodeType":"Block","src":"888:35:9","statements":[{"expression":{"id":1283,"name":"storedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1223,"src":"905:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1282,"id":1284,"nodeType":"Return","src":"898:18:9"}]},"documentation":{"id":1278,"nodeType":"StructuredDocumentation","src":"758:75:9","text":" @dev Return value \n @return value of 'storedValue'"},"functionSelector":"20965255","id":1286,"implemented":true,"kind":"function","modifiers":[],"name":"getValue","nameLocation":"847:8:9","nodeType":"FunctionDefinition","parameters":{"id":1279,"nodeType":"ParameterList","parameters":[],"src":"855:2:9"},"returnParameters":{"id":1282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1281,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1286,"src":"879:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1280,"name":"uint256","nodeType":"ElementaryTypeName","src":"879:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"878:9:9"},"scope":1315,"src":"838:85:9","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1296,"nodeType":"Block","src":"1021:42:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1291,"name":"storedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1223,"src":"1040:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1054:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1040:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1290,"name":"setValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"1031:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1031:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1295,"nodeType":"ExpressionStatement","src":"1031:25:9"}]},"documentation":{"id":1287,"nodeType":"StructuredDocumentation","src":"933:55:9","text":" @dev Increment the stored value by 1"},"functionSelector":"d09de08a","id":1297,"implemented":true,"kind":"function","modifiers":[],"name":"increment","nameLocation":"1002:9:9","nodeType":"FunctionDefinition","parameters":{"id":1288,"nodeType":"ParameterList","parameters":[],"src":"1011:2:9"},"returnParameters":{"id":1289,"nodeType":"ParameterList","parameters":[],"src":"1021:0:9"},"scope":1315,"src":"993:70:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1313,"nodeType":"Block","src":"1158:90:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1302,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1176:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1180:6:9","memberName":"sender","nodeType":"MemberAccess","src":"1176:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1304,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"1190:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1176:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c79206f776e65722063616e207265736574","id":1306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1197:22:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_15aef648d4a76cd1dbab670e06110449532faa2987fa00fa100a131ac172cd83","typeString":"literal_string \"Only owner can reset\""},"value":"Only owner can reset"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_15aef648d4a76cd1dbab670e06110449532faa2987fa00fa100a131ac172cd83","typeString":"literal_string \"Only owner can reset\""}],"id":1301,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1168:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1168:52:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1308,"nodeType":"ExpressionStatement","src":"1168:52:9"},{"expression":{"arguments":[{"hexValue":"30","id":1310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1239:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1309,"name":"setValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"1230:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1230:11:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1312,"nodeType":"ExpressionStatement","src":"1230:11:9"}]},"documentation":{"id":1298,"nodeType":"StructuredDocumentation","src":"1073:56:9","text":" @dev Reset value to zero (only owner)"},"functionSelector":"d826f88f","id":1314,"implemented":true,"kind":"function","modifiers":[],"name":"reset","nameLocation":"1143:5:9","nodeType":"FunctionDefinition","parameters":{"id":1299,"nodeType":"ParameterList","parameters":[],"src":"1148:2:9"},"returnParameters":{"id":1300,"nodeType":"ParameterList","parameters":[],"src":"1158:0:9"},"scope":1315,"src":"1134:114:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":1316,"src":"135:1115:9","usedErrors":[],"usedEvents":[1233]}],"src":"32:1218:9"},"id":9},"contracts/SimpleToken.sol":{"ast":{"absolutePath":"contracts/SimpleToken.sol","exportedSymbols":{"SimpleToken":[1666]},"id":1667,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1317,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"32:24:10"},{"abstract":false,"baseContracts":[],"canonicalName":"SimpleToken","contractDependencies":[],"contractKind":"contract","documentation":{"id":1318,"nodeType":"StructuredDocumentation","src":"58:75:10","text":" @title SimpleToken\n @dev Basic ERC20-like token implementation"},"fullyImplemented":true,"id":1666,"linearizedBaseContracts":[1666],"name":"SimpleToken","nameLocation":"143:11:10","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"06fdde03","id":1320,"mutability":"mutable","name":"name","nameLocation":"175:4:10","nodeType":"VariableDeclaration","scope":1666,"src":"161:18:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1319,"name":"string","nodeType":"ElementaryTypeName","src":"161:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"constant":false,"functionSelector":"95d89b41","id":1322,"mutability":"mutable","name":"symbol","nameLocation":"199:6:10","nodeType":"VariableDeclaration","scope":1666,"src":"185:20:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1321,"name":"string","nodeType":"ElementaryTypeName","src":"185:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"constant":false,"functionSelector":"313ce567","id":1324,"mutability":"mutable","name":"decimals","nameLocation":"224:8:10","nodeType":"VariableDeclaration","scope":1666,"src":"211:21:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1323,"name":"uint8","nodeType":"ElementaryTypeName","src":"211:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"public"},{"constant":false,"functionSelector":"18160ddd","id":1326,"mutability":"mutable","name":"totalSupply","nameLocation":"253:11:10","nodeType":"VariableDeclaration","scope":1666,"src":"238:26:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1325,"name":"uint256","nodeType":"ElementaryTypeName","src":"238:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"8da5cb5b","id":1328,"mutability":"mutable","name":"owner","nameLocation":"285:5:10","nodeType":"VariableDeclaration","scope":1666,"src":"270:20:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1327,"name":"address","nodeType":"ElementaryTypeName","src":"270:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"70a08231","id":1332,"mutability":"mutable","name":"balanceOf","nameLocation":"336:9:10","nodeType":"VariableDeclaration","scope":1666,"src":"301:44:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1331,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1329,"name":"address","nodeType":"ElementaryTypeName","src":"309:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"301:27:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1330,"name":"uint256","nodeType":"ElementaryTypeName","src":"320:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"dd62ed3e","id":1338,"mutability":"mutable","name":"allowance","nameLocation":"406:9:10","nodeType":"VariableDeclaration","scope":1666,"src":"351:64:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":1337,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1333,"name":"address","nodeType":"ElementaryTypeName","src":"359:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"351:47:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1336,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1334,"name":"address","nodeType":"ElementaryTypeName","src":"378:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"370:27:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1335,"name":"uint256","nodeType":"ElementaryTypeName","src":"389:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"anonymous":false,"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1346,"name":"Transfer","nameLocation":"432:8:10","nodeType":"EventDefinition","parameters":{"id":1345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1340,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"457:4:10","nodeType":"VariableDeclaration","scope":1346,"src":"441:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1339,"name":"address","nodeType":"ElementaryTypeName","src":"441:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1342,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"479:2:10","nodeType":"VariableDeclaration","scope":1346,"src":"463:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1341,"name":"address","nodeType":"ElementaryTypeName","src":"463:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1344,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"491:5:10","nodeType":"VariableDeclaration","scope":1346,"src":"483:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1343,"name":"uint256","nodeType":"ElementaryTypeName","src":"483:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"440:57:10"},"src":"426:72:10"},{"anonymous":false,"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1354,"name":"Approval","nameLocation":"509:8:10","nodeType":"EventDefinition","parameters":{"id":1353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1348,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"534:5:10","nodeType":"VariableDeclaration","scope":1354,"src":"518:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1347,"name":"address","nodeType":"ElementaryTypeName","src":"518:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1350,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"557:7:10","nodeType":"VariableDeclaration","scope":1354,"src":"541:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1349,"name":"address","nodeType":"ElementaryTypeName","src":"541:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1352,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"574:5:10","nodeType":"VariableDeclaration","scope":1354,"src":"566:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1351,"name":"uint256","nodeType":"ElementaryTypeName","src":"566:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"517:63:10"},"src":"503:78:10"},{"anonymous":false,"eventSelector":"0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885","id":1360,"name":"Mint","nameLocation":"592:4:10","nodeType":"EventDefinition","parameters":{"id":1359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1356,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"613:2:10","nodeType":"VariableDeclaration","scope":1360,"src":"597:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1355,"name":"address","nodeType":"ElementaryTypeName","src":"597:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1358,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"625:5:10","nodeType":"VariableDeclaration","scope":1360,"src":"617:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1357,"name":"uint256","nodeType":"ElementaryTypeName","src":"617:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"596:35:10"},"src":"586:46:10"},{"anonymous":false,"eventSelector":"cc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5","id":1366,"name":"Burn","nameLocation":"643:4:10","nodeType":"EventDefinition","parameters":{"id":1365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1362,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"664:4:10","nodeType":"VariableDeclaration","scope":1366,"src":"648:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1361,"name":"address","nodeType":"ElementaryTypeName","src":"648:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1364,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"678:5:10","nodeType":"VariableDeclaration","scope":1366,"src":"670:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1363,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"647:37:10"},"src":"637:48:10"},{"body":{"id":1419,"nodeType":"Block","src":"830:272:10","statements":[{"expression":{"id":1379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1377,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1320,"src":"840:4:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1378,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1368,"src":"847:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"840:12:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1380,"nodeType":"ExpressionStatement","src":"840:12:10"},{"expression":{"id":1383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1381,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1322,"src":"862:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1382,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1370,"src":"871:7:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"862:16:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1384,"nodeType":"ExpressionStatement","src":"862:16:10"},{"expression":{"id":1387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1385,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"888:8:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1386,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"899:9:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"888:20:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1388,"nodeType":"ExpressionStatement","src":"888:20:10"},{"expression":{"id":1395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1389,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"918:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1390,"name":"_initialSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1374,"src":"932:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"949:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":1392,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"953:9:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"949:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"932:30:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"918:44:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1396,"nodeType":"ExpressionStatement","src":"918:44:10"},{"expression":{"id":1400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1397,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1328,"src":"972:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1398,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"980:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"984:6:10","memberName":"sender","nodeType":"MemberAccess","src":"980:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"972:18:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1401,"nodeType":"ExpressionStatement","src":"972:18:10"},{"expression":{"id":1407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1402,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"1000:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1405,"indexExpression":{"expression":{"id":1403,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1010:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1014:6:10","memberName":"sender","nodeType":"MemberAccess","src":"1010:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1000:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1406,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"1024:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1000:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1408,"nodeType":"ExpressionStatement","src":"1000:35:10"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1067:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1411,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1059:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1410,"name":"address","nodeType":"ElementaryTypeName","src":"1059:7:10","typeDescriptions":{}}},"id":1413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1059:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1414,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1071:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1075:6:10","memberName":"sender","nodeType":"MemberAccess","src":"1071:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1416,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"1083:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1409,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1346,"src":"1050:8:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1050:45:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1418,"nodeType":"EmitStatement","src":"1045:50:10"}]},"id":1420,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1368,"mutability":"mutable","name":"_name","nameLocation":"730:5:10","nodeType":"VariableDeclaration","scope":1420,"src":"716:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1367,"name":"string","nodeType":"ElementaryTypeName","src":"716:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1370,"mutability":"mutable","name":"_symbol","nameLocation":"759:7:10","nodeType":"VariableDeclaration","scope":1420,"src":"745:21:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1369,"name":"string","nodeType":"ElementaryTypeName","src":"745:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1372,"mutability":"mutable","name":"_decimals","nameLocation":"782:9:10","nodeType":"VariableDeclaration","scope":1420,"src":"776:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1371,"name":"uint8","nodeType":"ElementaryTypeName","src":"776:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1374,"mutability":"mutable","name":"_initialSupply","nameLocation":"809:14:10","nodeType":"VariableDeclaration","scope":1420,"src":"801:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1373,"name":"uint256","nodeType":"ElementaryTypeName","src":"801:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"706:123:10"},"returnParameters":{"id":1376,"nodeType":"ParameterList","parameters":[],"src":"830:0:10"},"scope":1666,"src":"695:407:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1471,"nodeType":"Block","src":"1181:305:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1430,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1422,"src":"1199:3:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1214:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1206:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1431,"name":"address","nodeType":"ElementaryTypeName","src":"1206:7:10","typeDescriptions":{}}},"id":1434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1206:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1199:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f74207472616e7366657220746f207a65726f2061646472657373","id":1436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1218:33:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_bb6ef8259868f621162cf2269ec456fd6e3660c295ef634f53db3982172a569f","typeString":"literal_string \"Cannot transfer to zero address\""},"value":"Cannot transfer to zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bb6ef8259868f621162cf2269ec456fd6e3660c295ef634f53db3982172a569f","typeString":"literal_string \"Cannot transfer to zero address\""}],"id":1429,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1191:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1191:61:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1438,"nodeType":"ExpressionStatement","src":"1191:61:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1440,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"1270:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1443,"indexExpression":{"expression":{"id":1441,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1280:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1284:6:10","memberName":"sender","nodeType":"MemberAccess","src":"1280:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1270:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1444,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"1295:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1270:31:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742062616c616e6365","id":1446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1303:22:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""},"value":"Insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""}],"id":1439,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1262:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1262:64:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1448,"nodeType":"ExpressionStatement","src":"1262:64:10"},{"expression":{"id":1454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1449,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"1345:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1452,"indexExpression":{"expression":{"id":1450,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1355:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1359:6:10","memberName":"sender","nodeType":"MemberAccess","src":"1355:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1345:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1453,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"1370:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1345:31:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1455,"nodeType":"ExpressionStatement","src":"1345:31:10"},{"expression":{"id":1460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1456,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"1386:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1458,"indexExpression":{"id":1457,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1422,"src":"1396:3:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1386:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1459,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"1404:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1386:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1461,"nodeType":"ExpressionStatement","src":"1386:24:10"},{"eventCall":{"arguments":[{"expression":{"id":1463,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1434:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1438:6:10","memberName":"sender","nodeType":"MemberAccess","src":"1434:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1465,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1422,"src":"1446:3:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1466,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"1451:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1462,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1346,"src":"1425:8:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1425:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1468,"nodeType":"EmitStatement","src":"1420:38:10"},{"expression":{"hexValue":"74727565","id":1469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1475:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1428,"id":1470,"nodeType":"Return","src":"1468:11:10"}]},"functionSelector":"a9059cbb","id":1472,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1121:8:10","nodeType":"FunctionDefinition","parameters":{"id":1425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1422,"mutability":"mutable","name":"_to","nameLocation":"1138:3:10","nodeType":"VariableDeclaration","scope":1472,"src":"1130:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1421,"name":"address","nodeType":"ElementaryTypeName","src":"1130:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1424,"mutability":"mutable","name":"_value","nameLocation":"1151:6:10","nodeType":"VariableDeclaration","scope":1472,"src":"1143:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1423,"name":"uint256","nodeType":"ElementaryTypeName","src":"1143:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1129:29:10"},"returnParameters":{"id":1428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1427,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1472,"src":"1175:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1426,"name":"bool","nodeType":"ElementaryTypeName","src":"1175:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1174:6:10"},"scope":1666,"src":"1112:374:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1499,"nodeType":"Block","src":"1569:131:10","statements":[{"expression":{"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1481,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1338,"src":"1579:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1485,"indexExpression":{"expression":{"id":1482,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1589:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1593:6:10","memberName":"sender","nodeType":"MemberAccess","src":"1589:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1579:21:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1486,"indexExpression":{"id":1484,"name":"_spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"1601:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1579:31:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1487,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"1613:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1579:40:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1489,"nodeType":"ExpressionStatement","src":"1579:40:10"},{"eventCall":{"arguments":[{"expression":{"id":1491,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1643:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1647:6:10","memberName":"sender","nodeType":"MemberAccess","src":"1643:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1493,"name":"_spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"1655:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1494,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"1665:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1490,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1354,"src":"1634:8:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1634:38:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1496,"nodeType":"EmitStatement","src":"1629:43:10"},{"expression":{"hexValue":"74727565","id":1497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1689:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1480,"id":1498,"nodeType":"Return","src":"1682:11:10"}]},"functionSelector":"095ea7b3","id":1500,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"1505:7:10","nodeType":"FunctionDefinition","parameters":{"id":1477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1474,"mutability":"mutable","name":"_spender","nameLocation":"1521:8:10","nodeType":"VariableDeclaration","scope":1500,"src":"1513:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1473,"name":"address","nodeType":"ElementaryTypeName","src":"1513:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1476,"mutability":"mutable","name":"_value","nameLocation":"1539:6:10","nodeType":"VariableDeclaration","scope":1500,"src":"1531:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1475,"name":"uint256","nodeType":"ElementaryTypeName","src":"1531:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1512:34:10"},"returnParameters":{"id":1480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1479,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1500,"src":"1563:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1478,"name":"bool","nodeType":"ElementaryTypeName","src":"1563:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1562:6:10"},"scope":1666,"src":"1496:204:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1571,"nodeType":"Block","src":"1798:421:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1512,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"1816:3:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1831:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1823:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1513,"name":"address","nodeType":"ElementaryTypeName","src":"1823:7:10","typeDescriptions":{}}},"id":1516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1823:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1816:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f74207472616e7366657220746f207a65726f2061646472657373","id":1518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1835:33:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_bb6ef8259868f621162cf2269ec456fd6e3660c295ef634f53db3982172a569f","typeString":"literal_string \"Cannot transfer to zero address\""},"value":"Cannot transfer to zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bb6ef8259868f621162cf2269ec456fd6e3660c295ef634f53db3982172a569f","typeString":"literal_string \"Cannot transfer to zero address\""}],"id":1511,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1808:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1808:61:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1520,"nodeType":"ExpressionStatement","src":"1808:61:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1522,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"1887:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1524,"indexExpression":{"id":1523,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"1897:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1887:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1525,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1506,"src":"1907:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1887:26:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742062616c616e6365","id":1527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1915:22:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""},"value":"Insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""}],"id":1521,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1879:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1879:59:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1529,"nodeType":"ExpressionStatement","src":"1879:59:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":1531,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1338,"src":"1956:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1533,"indexExpression":{"id":1532,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"1966:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1956:16:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1536,"indexExpression":{"expression":{"id":1534,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1973:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1977:6:10","memberName":"sender","nodeType":"MemberAccess","src":"1973:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1956:28:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1537,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1506,"src":"1988:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1956:38:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e7420616c6c6f77616e6365","id":1539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1996:24:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc","typeString":"literal_string \"Insufficient allowance\""},"value":"Insufficient allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc","typeString":"literal_string \"Insufficient allowance\""}],"id":1530,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1948:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1948:73:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1541,"nodeType":"ExpressionStatement","src":"1948:73:10"},{"expression":{"id":1546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1542,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"2040:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1544,"indexExpression":{"id":1543,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"2050:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2040:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1545,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1506,"src":"2060:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2040:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1547,"nodeType":"ExpressionStatement","src":"2040:26:10"},{"expression":{"id":1552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1548,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"2076:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1550,"indexExpression":{"id":1549,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"2086:3:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2076:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1551,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1506,"src":"2094:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2076:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1553,"nodeType":"ExpressionStatement","src":"2076:24:10"},{"expression":{"id":1561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1554,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1338,"src":"2110:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1558,"indexExpression":{"id":1555,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"2120:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2110:16:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1559,"indexExpression":{"expression":{"id":1556,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2127:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2131:6:10","memberName":"sender","nodeType":"MemberAccess","src":"2127:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2110:28:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1560,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1506,"src":"2142:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2110:38:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1562,"nodeType":"ExpressionStatement","src":"2110:38:10"},{"eventCall":{"arguments":[{"id":1564,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"2172:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1565,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"2179:3:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1566,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1506,"src":"2184:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1563,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1346,"src":"2163:8:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2163:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1568,"nodeType":"EmitStatement","src":"2158:33:10"},{"expression":{"hexValue":"74727565","id":1569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2208:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1510,"id":1570,"nodeType":"Return","src":"2201:11:10"}]},"functionSelector":"23b872dd","id":1572,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"1719:12:10","nodeType":"FunctionDefinition","parameters":{"id":1507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1502,"mutability":"mutable","name":"_from","nameLocation":"1740:5:10","nodeType":"VariableDeclaration","scope":1572,"src":"1732:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1501,"name":"address","nodeType":"ElementaryTypeName","src":"1732:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1504,"mutability":"mutable","name":"_to","nameLocation":"1755:3:10","nodeType":"VariableDeclaration","scope":1572,"src":"1747:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1503,"name":"address","nodeType":"ElementaryTypeName","src":"1747:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1506,"mutability":"mutable","name":"_value","nameLocation":"1768:6:10","nodeType":"VariableDeclaration","scope":1572,"src":"1760:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1505,"name":"uint256","nodeType":"ElementaryTypeName","src":"1760:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1731:44:10"},"returnParameters":{"id":1510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1509,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1572,"src":"1792:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1508,"name":"bool","nodeType":"ElementaryTypeName","src":"1792:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1791:6:10"},"scope":1666,"src":"1710:509:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1621,"nodeType":"Block","src":"2279:289:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1580,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2297:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2301:6:10","memberName":"sender","nodeType":"MemberAccess","src":"2297:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1582,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1328,"src":"2311:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2297:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c79206f776e65722063616e206d696e74","id":1584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2318:21:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_793ac6e41458d545a7714760682dd797072b4fe898c48602bd8c2b836d34baac","typeString":"literal_string \"Only owner can mint\""},"value":"Only owner can mint"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_793ac6e41458d545a7714760682dd797072b4fe898c48602bd8c2b836d34baac","typeString":"literal_string \"Only owner can mint\""}],"id":1579,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2289:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2289:51:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1586,"nodeType":"ExpressionStatement","src":"2289:51:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1588,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1574,"src":"2358:3:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2373:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1590,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2365:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1589,"name":"address","nodeType":"ElementaryTypeName","src":"2365:7:10","typeDescriptions":{}}},"id":1592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2365:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2358:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f74206d696e7420746f207a65726f2061646472657373","id":1594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2377:29:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_2ee0416c341986fdecc3cbd81cd5d77b44e6537a4f9aa8afff73aa35a7384cb9","typeString":"literal_string \"Cannot mint to zero address\""},"value":"Cannot mint to zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2ee0416c341986fdecc3cbd81cd5d77b44e6537a4f9aa8afff73aa35a7384cb9","typeString":"literal_string \"Cannot mint to zero address\""}],"id":1587,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2350:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2350:57:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1596,"nodeType":"ExpressionStatement","src":"2350:57:10"},{"expression":{"id":1599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1597,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"2426:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1598,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"2441:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2426:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1600,"nodeType":"ExpressionStatement","src":"2426:21:10"},{"expression":{"id":1605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1601,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"2457:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1603,"indexExpression":{"id":1602,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1574,"src":"2467:3:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2457:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1604,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"2475:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2457:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1606,"nodeType":"ExpressionStatement","src":"2457:24:10"},{"eventCall":{"arguments":[{"id":1608,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1574,"src":"2501:3:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1609,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"2506:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1607,"name":"Mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"2496:4:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2496:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1611,"nodeType":"EmitStatement","src":"2491:22:10"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2545:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1614,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2537:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1613,"name":"address","nodeType":"ElementaryTypeName","src":"2537:7:10","typeDescriptions":{}}},"id":1616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2537:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1617,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1574,"src":"2549:3:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1618,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"2554:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1612,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1346,"src":"2528:8:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2528:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1620,"nodeType":"EmitStatement","src":"2523:38:10"}]},"functionSelector":"40c10f19","id":1622,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nameLocation":"2238:4:10","nodeType":"FunctionDefinition","parameters":{"id":1577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1574,"mutability":"mutable","name":"_to","nameLocation":"2251:3:10","nodeType":"VariableDeclaration","scope":1622,"src":"2243:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1573,"name":"address","nodeType":"ElementaryTypeName","src":"2243:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1576,"mutability":"mutable","name":"_value","nameLocation":"2264:6:10","nodeType":"VariableDeclaration","scope":1622,"src":"2256:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1575,"name":"uint256","nodeType":"ElementaryTypeName","src":"2256:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2242:29:10"},"returnParameters":{"id":1578,"nodeType":"ParameterList","parameters":[],"src":"2279:0:10"},"scope":1666,"src":"2229:339:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1664,"nodeType":"Block","src":"2615:264:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1628,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"2633:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1631,"indexExpression":{"expression":{"id":1629,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2643:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2647:6:10","memberName":"sender","nodeType":"MemberAccess","src":"2643:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2633:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1632,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"2658:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2633:31:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742062616c616e636520746f206275726e","id":1634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2666:30:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_eac0e9db12cd14c1c0291906654a3fa6bfacc1c08081fda717334bc66586bac5","typeString":"literal_string \"Insufficient balance to burn\""},"value":"Insufficient balance to burn"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_eac0e9db12cd14c1c0291906654a3fa6bfacc1c08081fda717334bc66586bac5","typeString":"literal_string \"Insufficient balance to burn\""}],"id":1627,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2625:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2625:72:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1636,"nodeType":"ExpressionStatement","src":"2625:72:10"},{"expression":{"id":1642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1637,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"2716:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1640,"indexExpression":{"expression":{"id":1638,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2726:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2730:6:10","memberName":"sender","nodeType":"MemberAccess","src":"2726:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2716:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1641,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"2741:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2716:31:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1643,"nodeType":"ExpressionStatement","src":"2716:31:10"},{"expression":{"id":1646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1644,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"2757:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1645,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"2772:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2757:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1647,"nodeType":"ExpressionStatement","src":"2757:21:10"},{"eventCall":{"arguments":[{"expression":{"id":1649,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2798:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2802:6:10","memberName":"sender","nodeType":"MemberAccess","src":"2798:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1651,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"2810:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1648,"name":"Burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"2793:4:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2793:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1653,"nodeType":"EmitStatement","src":"2788:29:10"},{"eventCall":{"arguments":[{"expression":{"id":1655,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2841:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2845:6:10","memberName":"sender","nodeType":"MemberAccess","src":"2841:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2861:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1658,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2853:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1657,"name":"address","nodeType":"ElementaryTypeName","src":"2853:7:10","typeDescriptions":{}}},"id":1660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2853:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1661,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"2865:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1654,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1346,"src":"2832:8:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2832:40:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1663,"nodeType":"EmitStatement","src":"2827:45:10"}]},"functionSelector":"42966c68","id":1665,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"2587:4:10","nodeType":"FunctionDefinition","parameters":{"id":1625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1624,"mutability":"mutable","name":"_value","nameLocation":"2600:6:10","nodeType":"VariableDeclaration","scope":1665,"src":"2592:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1623,"name":"uint256","nodeType":"ElementaryTypeName","src":"2592:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2591:16:10"},"returnParameters":{"id":1626,"nodeType":"ParameterList","parameters":[],"src":"2615:0:10"},"scope":1666,"src":"2578:301:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":1667,"src":"134:2747:10","usedErrors":[],"usedEvents":[1346,1354,1360,1366]}],"src":"32:2849:10"},"id":10},"contracts/facets/CounterFacet.sol":{"ast":{"absolutePath":"contracts/facets/CounterFacet.sol","exportedSymbols":{"CounterFacet":[1994],"LibDiamond":[3887]},"id":1995,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1668,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:11"},{"absolutePath":"contracts/libraries/LibDiamond.sol","file":"../libraries/LibDiamond.sol","id":1670,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1995,"sourceUnit":3888,"src":"57:57:11","symbolAliases":[{"foreign":{"id":1669,"name":"LibDiamond","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"66:10:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"CounterFacet","contractDependencies":[],"contractKind":"contract","documentation":{"id":1671,"nodeType":"StructuredDocumentation","src":"116:373:11","text":" @title CounterFacet\n @dev A sample facet that demonstrates basic diamond functionality with a simple counter\n      This facet provides increment, decrement, and view operations for a counter value\n      stored in diamond storage. It serves as an example of how to implement business\n      logic in a diamond facet while using the diamond storage pattern."},"fullyImplemented":true,"id":1994,"linearizedBaseContracts":[1994],"name":"CounterFacet","nameLocation":"499:12:11","nodeType":"ContractDefinition","nodes":[{"canonicalName":"CounterFacet.CounterStorage","id":1682,"members":[{"constant":false,"id":1673,"mutability":"mutable","name":"counter","nameLocation":"602:7:11","nodeType":"VariableDeclaration","scope":1682,"src":"594:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1672,"name":"uint256","nodeType":"ElementaryTypeName","src":"594:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1675,"mutability":"mutable","name":"lastUpdater","nameLocation":"627:11:11","nodeType":"VariableDeclaration","scope":1682,"src":"619:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1674,"name":"address","nodeType":"ElementaryTypeName","src":"619:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1677,"mutability":"mutable","name":"lastUpdateTimestamp","nameLocation":"656:19:11","nodeType":"VariableDeclaration","scope":1682,"src":"648:27:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1676,"name":"uint256","nodeType":"ElementaryTypeName","src":"648:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1681,"mutability":"mutable","name":"userCounters","nameLocation":"713:12:11","nodeType":"VariableDeclaration","scope":1682,"src":"685:40:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1680,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1678,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"685:27:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1679,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"CounterStorage","nameLocation":"569:14:11","nodeType":"StructDefinition","scope":1994,"src":"562:170:11","visibility":"public"},{"constant":true,"id":1687,"mutability":"constant","name":"COUNTER_STORAGE_POSITION","nameLocation":"794:24:11","nodeType":"VariableDeclaration","scope":1994,"src":"777:78:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1683,"name":"bytes32","nodeType":"ElementaryTypeName","src":"777:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"636f756e7465722e66616365742e73746f72616765","id":1685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"831:23:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_b7b015d605ece0e8fe533fe842b448ce2b6465e6d573f424dd3872fbf1824256","typeString":"literal_string \"counter.facet.storage\""},"value":"counter.facet.storage"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_b7b015d605ece0e8fe533fe842b448ce2b6465e6d573f424dd3872fbf1824256","typeString":"literal_string \"counter.facet.storage\""}],"id":1684,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"821:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"821:34:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"anonymous":false,"eventSelector":"59950fb23669ee30425f6d79758e75fae698a6c88b2982f2980638d8bcd9397d","id":1693,"name":"CounterIncremented","nameLocation":"882:18:11","nodeType":"EventDefinition","parameters":{"id":1692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1689,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"917:4:11","nodeType":"VariableDeclaration","scope":1693,"src":"901:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1688,"name":"address","nodeType":"ElementaryTypeName","src":"901:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1691,"indexed":false,"mutability":"mutable","name":"newValue","nameLocation":"931:8:11","nodeType":"VariableDeclaration","scope":1693,"src":"923:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1690,"name":"uint256","nodeType":"ElementaryTypeName","src":"923:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"900:40:11"},"src":"876:65:11"},{"anonymous":false,"eventSelector":"9cdaca08b82c2d66f0eb8c0ca62ab7a1e1da2238c2edd03b19e1accc9e806d6a","id":1699,"name":"CounterDecremented","nameLocation":"952:18:11","nodeType":"EventDefinition","parameters":{"id":1698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1695,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"987:4:11","nodeType":"VariableDeclaration","scope":1699,"src":"971:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1694,"name":"address","nodeType":"ElementaryTypeName","src":"971:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1697,"indexed":false,"mutability":"mutable","name":"newValue","nameLocation":"1001:8:11","nodeType":"VariableDeclaration","scope":1699,"src":"993:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1696,"name":"uint256","nodeType":"ElementaryTypeName","src":"993:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:40:11"},"src":"946:65:11"},{"anonymous":false,"eventSelector":"0c4f92d0724fb3d16c74d6fd66f78fe790dbfb5849f7691e9931db60bb64aad4","id":1705,"name":"CounterReset","nameLocation":"1022:12:11","nodeType":"EventDefinition","parameters":{"id":1704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1701,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"1051:4:11","nodeType":"VariableDeclaration","scope":1705,"src":"1035:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1700,"name":"address","nodeType":"ElementaryTypeName","src":"1035:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1703,"indexed":false,"mutability":"mutable","name":"previousValue","nameLocation":"1065:13:11","nodeType":"VariableDeclaration","scope":1705,"src":"1057:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1702,"name":"uint256","nodeType":"ElementaryTypeName","src":"1057:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1034:45:11"},"src":"1016:64:11"},{"anonymous":false,"eventSelector":"eb7bf040c0984f14f21d0089c5ef66e5b6f076260cb92ab3195cc4bb1c1cd8f7","id":1711,"name":"UserCounterUpdated","nameLocation":"1091:18:11","nodeType":"EventDefinition","parameters":{"id":1710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1707,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"1126:4:11","nodeType":"VariableDeclaration","scope":1711,"src":"1110:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1706,"name":"address","nodeType":"ElementaryTypeName","src":"1110:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1709,"indexed":false,"mutability":"mutable","name":"newValue","nameLocation":"1140:8:11","nodeType":"VariableDeclaration","scope":1711,"src":"1132:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1708,"name":"uint256","nodeType":"ElementaryTypeName","src":"1132:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1109:40:11"},"src":"1085:65:11"},{"body":{"id":1723,"nodeType":"Block","src":"1407:121:11","statements":[{"assignments":[1719],"declarations":[{"constant":false,"id":1719,"mutability":"mutable","name":"position","nameLocation":"1425:8:11","nodeType":"VariableDeclaration","scope":1723,"src":"1417:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1718,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1417:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1721,"initialValue":{"id":1720,"name":"COUNTER_STORAGE_POSITION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1687,"src":"1436:24:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1417:43:11"},{"AST":{"nodeType":"YulBlock","src":"1479:43:11","statements":[{"nodeType":"YulAssignment","src":"1493:19:11","value":{"name":"position","nodeType":"YulIdentifier","src":"1504:8:11"},"variableNames":[{"name":"cs.slot","nodeType":"YulIdentifier","src":"1493:7:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1716,"isOffset":false,"isSlot":true,"src":"1493:7:11","suffix":"slot","valueSize":1},{"declaration":1719,"isOffset":false,"isSlot":false,"src":"1504:8:11","valueSize":1}],"id":1722,"nodeType":"InlineAssembly","src":"1470:52:11"}]},"documentation":{"id":1712,"nodeType":"StructuredDocumentation","src":"1156:170:11","text":" @notice Get the counter storage\n @dev Internal function to access the counter's diamond storage slot\n @return cs The counter storage struct"},"id":1724,"implemented":true,"kind":"function","modifiers":[],"name":"counterStorage","nameLocation":"1340:14:11","nodeType":"FunctionDefinition","parameters":{"id":1713,"nodeType":"ParameterList","parameters":[],"src":"1354:2:11"},"returnParameters":{"id":1717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1716,"mutability":"mutable","name":"cs","nameLocation":"1403:2:11","nodeType":"VariableDeclaration","scope":1724,"src":"1380:25:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_CounterStorage_$1682_storage_ptr","typeString":"struct CounterFacet.CounterStorage"},"typeName":{"id":1715,"nodeType":"UserDefinedTypeName","pathNode":{"id":1714,"name":"CounterStorage","nameLocations":["1380:14:11"],"nodeType":"IdentifierPath","referencedDeclaration":1682,"src":"1380:14:11"},"referencedDeclaration":1682,"src":"1380:14:11","typeDescriptions":{"typeIdentifier":"t_struct$_CounterStorage_$1682_storage_ptr","typeString":"struct CounterFacet.CounterStorage"}},"visibility":"internal"}],"src":"1379:27:11"},"scope":1994,"src":"1331:197:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1761,"nodeType":"Block","src":"1691:239:11","statements":[{"assignments":[1730],"declarations":[{"constant":false,"id":1730,"mutability":"mutable","name":"cs","nameLocation":"1724:2:11","nodeType":"VariableDeclaration","scope":1761,"src":"1701:25:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_CounterStorage_$1682_storage_ptr","typeString":"struct CounterFacet.CounterStorage"},"typeName":{"id":1729,"nodeType":"UserDefinedTypeName","pathNode":{"id":1728,"name":"CounterStorage","nameLocations":["1701:14:11"],"nodeType":"IdentifierPath","referencedDeclaration":1682,"src":"1701:14:11"},"referencedDeclaration":1682,"src":"1701:14:11","typeDescriptions":{"typeIdentifier":"t_struct$_CounterStorage_$1682_storage_ptr","typeString":"struct CounterFacet.CounterStorage"}},"visibility":"internal"}],"id":1733,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1731,"name":"counterStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1724,"src":"1729:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_CounterStorage_$1682_storage_ptr_$","typeString":"function () pure returns (struct CounterFacet.CounterStorage storage pointer)"}},"id":1732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1729:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_CounterStorage_$1682_storage_ptr","typeString":"struct CounterFacet.CounterStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"1701:44:11"},{"expression":{"id":1738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1734,"name":"cs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"1755:2:11","typeDescriptions":{"typeIdentifier":"t_struct$_CounterStorage_$1682_storage_ptr","typeString":"struct CounterFacet.CounterStorage storage pointer"}},"id":1736,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1758:7:11","memberName":"counter","nodeType":"MemberAccess","referencedDeclaration":1673,"src":"1755:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1769:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1755:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1739,"nodeType":"ExpressionStatement","src":"1755:15:11"},{"expression":{"id":1745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1740,"name":"cs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"1780:2:11","typeDescriptions":{"typeIdentifier":"t_struct$_CounterStorage_$1682_storage_ptr","typeString":"struct CounterFacet.CounterStorage storage pointer"}},"id":1742,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1783:11:11","memberName":"lastUpdater","nodeType":"MemberAccess","referencedDeclaration":1675,"src":"1780:14:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1743,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1797:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1801:6:11","memberName":"sender","nodeType":"MemberAccess","src":"1797:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1780:27:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1746,"nodeType":"ExpressionStatement","src":"1780:27:11"},{"expression":{"id":1752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1747,"name":"cs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"1817:2:11","typeDescriptions":{"typeIdentifier":"t_struct$_CounterStorage_$1682_storage_ptr","typeString":"struct CounterFacet.CounterStorage storage pointer"}},"id":1749,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1820:19:11","memberName":"lastUpdateTimestamp","nodeType":"MemberAccess","referencedDeclaration":1677,"src":"1817:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1750,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1842:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1848:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"1842:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1817:40:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1753,"nodeType":"ExpressionStatement","src":"1817:40:11"},{"eventCall":{"arguments":[{"expression":{"id":1755,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1900:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1904:6:11","memberName":"sender","nodeType":"MemberAccess","src":"1900:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1757,"name":"cs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"1912:2:11","typeDescriptions":{"typeIdentifier":"t_struct$_CounterStorage_$1682_storage_ptr","typeString":"struct CounterFacet.CounterStorage storage pointer"}},"id":1758,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1915:7:11","memberName":"counter","nodeType":"MemberAccess","referencedDeclaration":1673,"src":"1912:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1754,"name":"CounterIncremented","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1693,"src":"1881:18:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1881:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1760,"nodeType":"EmitStatement","src":"1876:47:11"}]},"documentation":{"id":1725,"nodeType":"StructuredDocumentation","src":"1534:122:11","text":" @notice Increment the global counter by 1\n @dev Increases the global counter and updates metadata"},"functionSelector":"d09de08a","id":1762,"implemented":true,"kind":"function","modifiers":[],"name":"increment","nameLocation":"1670:9:11","nodeType":"FunctionDefinition","parameters":{"id":1726,"nodeType":"ParameterList","parameters":[],"src":"1679:2:11"},"returnParameters":{"id":1727,"nodeType":"ParameterList","parameters":[],"src":"1691:0:11"},"scope":1994,"src":"1661:269:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1807,"nodeType":"Block","src":"2144:327:11","statements":[{"assignments":[1768],"declarations":[{"constant":false,"id":1768,"mutability":"mutable","name":"cs","nameLocation":"2177:2:11","nodeType":"VariableDeclaration","scope":1807,"src":"2154:25:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_CounterStorage_$1682_storage_ptr","typeString":"struct CounterFacet.CounterStorage"},"typeName":{"id":1767,"nodeType":"UserDefinedTypeName","pathNode":{"id":1766,"name":"CounterStorage","nameLocations":["2154:14:11"],"nodeType":"IdentifierPath","referencedDeclaration":1682,"src":"2154:14:11"},"referencedDeclaration":1682,"src":"2154:14:11","typeDescriptions":{"typeIdentifier":"t_struct$_CounterStorage_$1682_storage_ptr","typeString":"struct CounterFacet.CounterStorage"}},"visibility":"internal"}],"id":1771,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1769,"name":"counterStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1724,"src":"2182:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_CounterStorage_$1682_storage_ptr_$","typeString":"function () pure returns (struct CounterFacet.CounterStorage storage pointer)"}},"id":1770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2182:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_CounterStorage_$1682_storage_ptr","typeString":"struct CounterFacet.CounterStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2154:44:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1773,"name":"cs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1768,"src":"2216:2:11","typeDescriptions":{"typeIdentifier":"t_struct$_CounterStorage_$1682_storage_ptr","typeString":"struct CounterFacet.CounterStorage storage pointer"}},"id":1774,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2219:7:11","memberName":"counter","nodeType":"MemberAccess","referencedDeclaration":1673,"src":"2216:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2229:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2216:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f756e74657246616365743a20436f756e7465722063616e6e6f7420676f2062656c6f77207a65726f","id":1777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2232:44:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_9d45330d3ebd353699057c3d7096dcbbafcfb60102c95dfe2ed2330e620f2a3f","typeString":"literal_string \"CounterFacet: Counter cannot go below zero\""},"value":"CounterFacet: Counter cannot go below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9d45330d3ebd353699057c3d7096dcbbafcfb60102c95dfe2ed2330e620f2a3f","typeString":"literal_string \"CounterFacet: Counter cannot go below zero\""}],"id":1772,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2208:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2208:69:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1779,"nodeType":"ExpressionStatement","src":"2208:69:11"},{"expression":{"id":1784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1780,"name":"cs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1768,"src":"2296:2:11","typeDescriptions":{"typeIdentifier":"t_struct$_CounterStorage_$1682_storage_ptr","typeString":"struct CounterFacet.CounterStorage storage pointer"}},"id":1782,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2299:7:11","memberName":"counter","nodeType":"MemberAccess","referencedDeclaration":1673,"src":"2296:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":1783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2310:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2296:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1785,"nodeType":"ExpressionStatement","src":"2296:15:11"},{"expression":{"id":1791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1786,"name":"cs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1768,"src":"2321:2:11","typeDescriptions":{"typeIdentifier":"t_struct$_CounterStorage_$1682_storage_ptr","typeString":"struct CounterFacet.CounterStorage storage pointer"}},"id":1788,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2324:11:11","memberName":"lastUpdater","nodeType":"MemberAccess","referencedDeclaration":1675,"src":"2321:14:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1789,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2338:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2342:6:11","memberName":"sender","nodeType":"MemberAccess","src":"2338:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2321:27:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1792,"nodeType":"ExpressionStatement","src":"2321:27:11"},{"expression":{"id":1798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1793,"name":"cs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1768,"src":"2358:2:11","typeDescriptions":{"typeIdentifier":"t_struct$_CounterStorage_$1682_storage_ptr","typeString":"struct CounterFacet.CounterStorage storage pointer"}},"id":1795,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2361:19:11","memberName":"lastUpdateTimestamp","nodeType":"MemberAccess","referencedDeclaration":1677,"src":"2358:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1796,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2383:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2389:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"2383:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2358:40:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1799,"nodeType":"ExpressionStatement","src":"2358:40:11"},{"eventCall":{"arguments":[{"expression":{"id":1801,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2441:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2445:6:11","memberName":"sender","nodeType":"MemberAccess","src":"2441:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1803,"name":"cs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1768,"src":"2453:2:11","typeDescriptions":{"typeIdentifier":"t_struct$_CounterStorage_$1682_storage_ptr","typeString":"struct CounterFacet.CounterStorage storage pointer"}},"id":1804,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2456:7:11","memberName":"counter","nodeType":"MemberAccess","referencedDeclaration":1673,"src":"2453:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1800,"name":"CounterDecremented","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"2422:18:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2422:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1806,"nodeType":"EmitStatement","src":"2417:47:11"}]},"documentation":{"id":1763,"nodeType":"StructuredDocumentation","src":"1936:173:11","text":" @notice Decrement the global counter by 1\n @dev Decreases the global counter and updates metadata\n      Reverts if counter would go below zero"},"functionSelector":"2baeceb7","id":1808,"implemented":true,"kind":"function","modifiers":[],"name":"decrement","nameLocation":"2123:9:11","nodeType":"FunctionDefinition","parameters":{"id":1764,"nodeType":"ParameterList","parameters":[],"src":"2132:2:11"},"returnParameters":{"id":1765,"nodeType":"ParameterList","parameters":[],"src":"2144:0:11"},"scope":1994,"src":"2114:357:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1854,"nodeType":"Block","src":"2631:333:11","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1812,"name":"LibDiamond","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"2641:10:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibDiamond_$3887_$","typeString":"type(library LibDiamond)"}},"id":1814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2652:22:11","memberName":"enforceIsContractOwner","nodeType":"MemberAccess","referencedDeclaration":2810,"src":"2641:33:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2641:35:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1816,"nodeType":"ExpressionStatement","src":"2641:35:11"},{"assignments":[1819],"declarations":[{"constant":false,"id":1819,"mutability":"mutable","name":"cs","nameLocation":"2709:2:11","nodeType":"VariableDeclaration","scope":1854,"src":"2686:25:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_CounterStorage_$1682_storage_ptr","typeString":"struct CounterFacet.CounterStorage"},"typeName":{"id":1818,"nodeType":"UserDefinedTypeName","pathNode":{"id":1817,"name":"CounterStorage","nameLocations":["2686:14:11"],"nodeType":"IdentifierPath","referencedDeclaration":1682,"src":"2686:14:11"},"referencedDeclaration":1682,"src":"2686:14:11","typeDescriptions":{"typeIdentifier":"t_struct$_CounterStorage_$1682_storage_ptr","typeString":"struct CounterFacet.CounterStorage"}},"visibility":"internal"}],"id":1822,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1820,"name":"counterStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1724,"src":"2714:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_CounterStorage_$1682_storage_ptr_$","typeString":"function () pure returns (struct CounterFacet.CounterStorage storage pointer)"}},"id":1821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2714:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_CounterStorage_$1682_storage_ptr","typeString":"struct CounterFacet.CounterStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2686:44:11"},{"assignments":[1824],"declarations":[{"constant":false,"id":1824,"mutability":"mutable","name":"previousValue","nameLocation":"2757:13:11","nodeType":"VariableDeclaration","scope":1854,"src":"2749:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1823,"name":"uint256","nodeType":"ElementaryTypeName","src":"2749:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1827,"initialValue":{"expression":{"id":1825,"name":"cs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1819,"src":"2773:2:11","typeDescriptions":{"typeIdentifier":"t_struct$_CounterStorage_$1682_storage_ptr","typeString":"struct CounterFacet.CounterStorage storage pointer"}},"id":1826,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2776:7:11","memberName":"counter","nodeType":"MemberAccess","referencedDeclaration":1673,"src":"2773:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2749:34:11"},{"expression":{"id":1832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1828,"name":"cs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1819,"src":"2793:2:11","typeDescriptions":{"typeIdentifier":"t_struct$_CounterStorage_$1682_storage_ptr","typeString":"struct CounterFacet.CounterStorage storage pointer"}},"id":1830,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2796:7:11","memberName":"counter","nodeType":"MemberAccess","referencedDeclaration":1673,"src":"2793:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2793:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1833,"nodeType":"ExpressionStatement","src":"2793:14:11"},{"expression":{"id":1839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1834,"name":"cs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1819,"src":"2817:2:11","typeDescriptions":{"typeIdentifier":"t_struct$_CounterStorage_$1682_storage_ptr","typeString":"struct CounterFacet.CounterStorage storage pointer"}},"id":1836,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2820:11:11","memberName":"lastUpdater","nodeType":"MemberAccess","referencedDeclaration":1675,"src":"2817:14:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1837,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2834:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2838:6:11","memberName":"sender","nodeType":"MemberAccess","src":"2834:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2817:27:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1840,"nodeType":"ExpressionStatement","src":"2817:27:11"},{"expression":{"id":1846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1841,"name":"cs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1819,"src":"2854:2:11","typeDescriptions":{"typeIdentifier":"t_struct$_CounterStorage_$1682_storage_ptr","typeString":"struct CounterFacet.CounterStorage storage pointer"}},"id":1843,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2857:19:11","memberName":"lastUpdateTimestamp","nodeType":"MemberAccess","referencedDeclaration":1677,"src":"2854:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1844,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2879:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2885:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"2879:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2854:40:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1847,"nodeType":"ExpressionStatement","src":"2854:40:11"},{"eventCall":{"arguments":[{"expression":{"id":1849,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2931:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2935:6:11","memberName":"sender","nodeType":"MemberAccess","src":"2931:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1851,"name":"previousValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1824,"src":"2943:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1848,"name":"CounterReset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1705,"src":"2918:12:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2918:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1853,"nodeType":"EmitStatement","src":"2913:44:11"}]},"documentation":{"id":1809,"nodeType":"StructuredDocumentation","src":"2477:116:11","text":" @notice Reset the global counter to zero\n @dev Only the diamond owner can reset the counter"},"functionSelector":"dbdf7fce","id":1855,"implemented":true,"kind":"function","modifiers":[],"name":"resetCounter","nameLocation":"2607:12:11","nodeType":"FunctionDefinition","parameters":{"id":1810,"nodeType":"ParameterList","parameters":[],"src":"2619:2:11"},"returnParameters":{"id":1811,"nodeType":"ParameterList","parameters":[],"src":"2631:0:11"},"scope":1994,"src":"2598:366:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1865,"nodeType":"Block","src":"3133:48:11","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1861,"name":"counterStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1724,"src":"3150:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_CounterStorage_$1682_storage_ptr_$","typeString":"function () pure returns (struct CounterFacet.CounterStorage storage pointer)"}},"id":1862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3150:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_CounterStorage_$1682_storage_ptr","typeString":"struct CounterFacet.CounterStorage storage pointer"}},"id":1863,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3167:7:11","memberName":"counter","nodeType":"MemberAccess","referencedDeclaration":1673,"src":"3150:24:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1860,"id":1864,"nodeType":"Return","src":"3143:31:11"}]},"documentation":{"id":1856,"nodeType":"StructuredDocumentation","src":"2970:104:11","text":" @notice Get the current global counter value\n @return The current counter value"},"functionSelector":"8ada066e","id":1866,"implemented":true,"kind":"function","modifiers":[],"name":"getCounter","nameLocation":"3088:10:11","nodeType":"FunctionDefinition","parameters":{"id":1857,"nodeType":"ParameterList","parameters":[],"src":"3098:2:11"},"returnParameters":{"id":1860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1859,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1866,"src":"3124:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1858,"name":"uint256","nodeType":"ElementaryTypeName","src":"3124:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3123:9:11"},"scope":1994,"src":"3079:102:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1886,"nodeType":"Block","src":"3502:118:11","statements":[{"assignments":[1876],"declarations":[{"constant":false,"id":1876,"mutability":"mutable","name":"cs","nameLocation":"3535:2:11","nodeType":"VariableDeclaration","scope":1886,"src":"3512:25:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_CounterStorage_$1682_storage_ptr","typeString":"struct CounterFacet.CounterStorage"},"typeName":{"id":1875,"nodeType":"UserDefinedTypeName","pathNode":{"id":1874,"name":"CounterStorage","nameLocations":["3512:14:11"],"nodeType":"IdentifierPath","referencedDeclaration":1682,"src":"3512:14:11"},"referencedDeclaration":1682,"src":"3512:14:11","typeDescriptions":{"typeIdentifier":"t_struct$_CounterStorage_$1682_storage_ptr","typeString":"struct CounterFacet.CounterStorage"}},"visibility":"internal"}],"id":1879,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1877,"name":"counterStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1724,"src":"3540:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_CounterStorage_$1682_storage_ptr_$","typeString":"function () pure returns (struct CounterFacet.CounterStorage storage pointer)"}},"id":1878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3540:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_CounterStorage_$1682_storage_ptr","typeString":"struct CounterFacet.CounterStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3512:44:11"},{"expression":{"components":[{"expression":{"id":1880,"name":"cs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"3574:2:11","typeDescriptions":{"typeIdentifier":"t_struct$_CounterStorage_$1682_storage_ptr","typeString":"struct CounterFacet.CounterStorage storage pointer"}},"id":1881,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3577:11:11","memberName":"lastUpdater","nodeType":"MemberAccess","referencedDeclaration":1675,"src":"3574:14:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1882,"name":"cs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"3590:2:11","typeDescriptions":{"typeIdentifier":"t_struct$_CounterStorage_$1682_storage_ptr","typeString":"struct CounterFacet.CounterStorage storage pointer"}},"id":1883,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3593:19:11","memberName":"lastUpdateTimestamp","nodeType":"MemberAccess","referencedDeclaration":1677,"src":"3590:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1884,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3573:40:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}},"functionReturnParameters":1873,"id":1885,"nodeType":"Return","src":"3566:47:11"}]},"documentation":{"id":1867,"nodeType":"StructuredDocumentation","src":"3187:207:11","text":" @notice Get metadata about the last counter update\n @return lastUpdater Address of the last user to update the counter\n @return lastUpdateTimestamp Timestamp of the last update"},"functionSelector":"e1aad65b","id":1887,"implemented":true,"kind":"function","modifiers":[],"name":"getCounterMetadata","nameLocation":"3408:18:11","nodeType":"FunctionDefinition","parameters":{"id":1868,"nodeType":"ParameterList","parameters":[],"src":"3426:2:11"},"returnParameters":{"id":1873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1870,"mutability":"mutable","name":"lastUpdater","nameLocation":"3460:11:11","nodeType":"VariableDeclaration","scope":1887,"src":"3452:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1869,"name":"address","nodeType":"ElementaryTypeName","src":"3452:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1872,"mutability":"mutable","name":"lastUpdateTimestamp","nameLocation":"3481:19:11","nodeType":"VariableDeclaration","scope":1887,"src":"3473:27:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1871,"name":"uint256","nodeType":"ElementaryTypeName","src":"3473:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3451:50:11"},"scope":1994,"src":"3399:221:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1916,"nodeType":"Block","src":"3808:186:11","statements":[{"assignments":[1893],"declarations":[{"constant":false,"id":1893,"mutability":"mutable","name":"cs","nameLocation":"3841:2:11","nodeType":"VariableDeclaration","scope":1916,"src":"3818:25:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_CounterStorage_$1682_storage_ptr","typeString":"struct CounterFacet.CounterStorage"},"typeName":{"id":1892,"nodeType":"UserDefinedTypeName","pathNode":{"id":1891,"name":"CounterStorage","nameLocations":["3818:14:11"],"nodeType":"IdentifierPath","referencedDeclaration":1682,"src":"3818:14:11"},"referencedDeclaration":1682,"src":"3818:14:11","typeDescriptions":{"typeIdentifier":"t_struct$_CounterStorage_$1682_storage_ptr","typeString":"struct CounterFacet.CounterStorage"}},"visibility":"internal"}],"id":1896,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1894,"name":"counterStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1724,"src":"3846:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_CounterStorage_$1682_storage_ptr_$","typeString":"function () pure returns (struct CounterFacet.CounterStorage storage pointer)"}},"id":1895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3846:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_CounterStorage_$1682_storage_ptr","typeString":"struct CounterFacet.CounterStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3818:44:11"},{"expression":{"id":1904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1897,"name":"cs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1893,"src":"3872:2:11","typeDescriptions":{"typeIdentifier":"t_struct$_CounterStorage_$1682_storage_ptr","typeString":"struct CounterFacet.CounterStorage storage pointer"}},"id":1901,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3875:12:11","memberName":"userCounters","nodeType":"MemberAccess","referencedDeclaration":1681,"src":"3872:15:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1902,"indexExpression":{"expression":{"id":1899,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3888:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3892:6:11","memberName":"sender","nodeType":"MemberAccess","src":"3888:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3872:27:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3903:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3872:32:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1905,"nodeType":"ExpressionStatement","src":"3872:32:11"},{"eventCall":{"arguments":[{"expression":{"id":1907,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3947:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3951:6:11","memberName":"sender","nodeType":"MemberAccess","src":"3947:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"expression":{"id":1909,"name":"cs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1893,"src":"3959:2:11","typeDescriptions":{"typeIdentifier":"t_struct$_CounterStorage_$1682_storage_ptr","typeString":"struct CounterFacet.CounterStorage storage pointer"}},"id":1910,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3962:12:11","memberName":"userCounters","nodeType":"MemberAccess","referencedDeclaration":1681,"src":"3959:15:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1913,"indexExpression":{"expression":{"id":1911,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3975:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3979:6:11","memberName":"sender","nodeType":"MemberAccess","src":"3975:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3959:27:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1906,"name":"UserCounterUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"3928:18:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3928:59:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1915,"nodeType":"EmitStatement","src":"3923:64:11"}]},"documentation":{"id":1888,"nodeType":"StructuredDocumentation","src":"3626:136:11","text":" @notice Increment a user's personal counter\n @dev Each user has their own counter independent of the global one"},"functionSelector":"8806a32f","id":1917,"implemented":true,"kind":"function","modifiers":[],"name":"incrementUserCounter","nameLocation":"3776:20:11","nodeType":"FunctionDefinition","parameters":{"id":1889,"nodeType":"ParameterList","parameters":[],"src":"3796:2:11"},"returnParameters":{"id":1890,"nodeType":"ParameterList","parameters":[],"src":"3808:0:11"},"scope":1994,"src":"3767:227:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1931,"nodeType":"Block","src":"4220:59:11","statements":[{"expression":{"baseExpression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1925,"name":"counterStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1724,"src":"4237:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_CounterStorage_$1682_storage_ptr_$","typeString":"function () pure returns (struct CounterFacet.CounterStorage storage pointer)"}},"id":1926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4237:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_CounterStorage_$1682_storage_ptr","typeString":"struct CounterFacet.CounterStorage storage pointer"}},"id":1927,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4254:12:11","memberName":"userCounters","nodeType":"MemberAccess","referencedDeclaration":1681,"src":"4237:29:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1929,"indexExpression":{"id":1928,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1920,"src":"4267:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4237:35:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1924,"id":1930,"nodeType":"Return","src":"4230:42:11"}]},"documentation":{"id":1918,"nodeType":"StructuredDocumentation","src":"4000:145:11","text":" @notice Get a user's personal counter value\n @param user The address of the user\n @return The user's counter value"},"functionSelector":"16cb1bc7","id":1932,"implemented":true,"kind":"function","modifiers":[],"name":"getUserCounter","nameLocation":"4159:14:11","nodeType":"FunctionDefinition","parameters":{"id":1921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1920,"mutability":"mutable","name":"user","nameLocation":"4182:4:11","nodeType":"VariableDeclaration","scope":1932,"src":"4174:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1919,"name":"address","nodeType":"ElementaryTypeName","src":"4174:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4173:14:11"},"returnParameters":{"id":1924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1923,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1932,"src":"4211:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1922,"name":"uint256","nodeType":"ElementaryTypeName","src":"4211:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4210:9:11"},"scope":1994,"src":"4150:129:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1959,"nodeType":"Block","src":"4527:167:11","statements":[{"assignments":[1940],"declarations":[{"constant":false,"id":1940,"mutability":"mutable","name":"cs","nameLocation":"4560:2:11","nodeType":"VariableDeclaration","scope":1959,"src":"4537:25:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_CounterStorage_$1682_storage_ptr","typeString":"struct CounterFacet.CounterStorage"},"typeName":{"id":1939,"nodeType":"UserDefinedTypeName","pathNode":{"id":1938,"name":"CounterStorage","nameLocations":["4537:14:11"],"nodeType":"IdentifierPath","referencedDeclaration":1682,"src":"4537:14:11"},"referencedDeclaration":1682,"src":"4537:14:11","typeDescriptions":{"typeIdentifier":"t_struct$_CounterStorage_$1682_storage_ptr","typeString":"struct CounterFacet.CounterStorage"}},"visibility":"internal"}],"id":1943,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1941,"name":"counterStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1724,"src":"4565:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_CounterStorage_$1682_storage_ptr_$","typeString":"function () pure returns (struct CounterFacet.CounterStorage storage pointer)"}},"id":1942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4565:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_CounterStorage_$1682_storage_ptr","typeString":"struct CounterFacet.CounterStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4537:44:11"},{"expression":{"id":1951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1944,"name":"cs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1940,"src":"4591:2:11","typeDescriptions":{"typeIdentifier":"t_struct$_CounterStorage_$1682_storage_ptr","typeString":"struct CounterFacet.CounterStorage storage pointer"}},"id":1948,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4594:12:11","memberName":"userCounters","nodeType":"MemberAccess","referencedDeclaration":1681,"src":"4591:15:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1949,"indexExpression":{"expression":{"id":1946,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4607:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4611:6:11","memberName":"sender","nodeType":"MemberAccess","src":"4607:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4591:27:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1950,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1935,"src":"4621:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4591:35:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1952,"nodeType":"ExpressionStatement","src":"4591:35:11"},{"eventCall":{"arguments":[{"expression":{"id":1954,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4669:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4673:6:11","memberName":"sender","nodeType":"MemberAccess","src":"4669:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1956,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1935,"src":"4681:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1953,"name":"UserCounterUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"4650:18:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4650:37:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1958,"nodeType":"EmitStatement","src":"4645:42:11"}]},"documentation":{"id":1933,"nodeType":"StructuredDocumentation","src":"4285:189:11","text":" @notice Set a user's counter to a specific value\n @dev Only the user themselves or the diamond owner can set their counter\n @param value The new counter value"},"functionSelector":"38c6a5c4","id":1960,"implemented":true,"kind":"function","modifiers":[],"name":"setUserCounter","nameLocation":"4488:14:11","nodeType":"FunctionDefinition","parameters":{"id":1936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1935,"mutability":"mutable","name":"value","nameLocation":"4511:5:11","nodeType":"VariableDeclaration","scope":1960,"src":"4503:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1934,"name":"uint256","nodeType":"ElementaryTypeName","src":"4503:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4502:15:11"},"returnParameters":{"id":1937,"nodeType":"ParameterList","parameters":[],"src":"4527:0:11"},"scope":1994,"src":"4479:215:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1992,"nodeType":"Block","src":"4992:200:11","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1968,"name":"LibDiamond","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"5002:10:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibDiamond_$3887_$","typeString":"type(library LibDiamond)"}},"id":1970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5013:22:11","memberName":"enforceIsContractOwner","nodeType":"MemberAccess","referencedDeclaration":2810,"src":"5002:33:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5002:35:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1972,"nodeType":"ExpressionStatement","src":"5002:35:11"},{"assignments":[1975],"declarations":[{"constant":false,"id":1975,"mutability":"mutable","name":"cs","nameLocation":"5070:2:11","nodeType":"VariableDeclaration","scope":1992,"src":"5047:25:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_CounterStorage_$1682_storage_ptr","typeString":"struct CounterFacet.CounterStorage"},"typeName":{"id":1974,"nodeType":"UserDefinedTypeName","pathNode":{"id":1973,"name":"CounterStorage","nameLocations":["5047:14:11"],"nodeType":"IdentifierPath","referencedDeclaration":1682,"src":"5047:14:11"},"referencedDeclaration":1682,"src":"5047:14:11","typeDescriptions":{"typeIdentifier":"t_struct$_CounterStorage_$1682_storage_ptr","typeString":"struct CounterFacet.CounterStorage"}},"visibility":"internal"}],"id":1978,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1976,"name":"counterStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1724,"src":"5075:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_CounterStorage_$1682_storage_ptr_$","typeString":"function () pure returns (struct CounterFacet.CounterStorage storage pointer)"}},"id":1977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5075:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_CounterStorage_$1682_storage_ptr","typeString":"struct CounterFacet.CounterStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"5047:44:11"},{"expression":{"id":1985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1979,"name":"cs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1975,"src":"5101:2:11","typeDescriptions":{"typeIdentifier":"t_struct$_CounterStorage_$1682_storage_ptr","typeString":"struct CounterFacet.CounterStorage storage pointer"}},"id":1982,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5104:12:11","memberName":"userCounters","nodeType":"MemberAccess","referencedDeclaration":1681,"src":"5101:15:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1983,"indexExpression":{"id":1981,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1963,"src":"5117:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5101:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1984,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1965,"src":"5125:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5101:29:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1986,"nodeType":"ExpressionStatement","src":"5101:29:11"},{"eventCall":{"arguments":[{"id":1988,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1963,"src":"5173:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1989,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1965,"src":"5179:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1987,"name":"UserCounterUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"5154:18:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5154:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1991,"nodeType":"EmitStatement","src":"5149:36:11"}]},"documentation":{"id":1961,"nodeType":"StructuredDocumentation","src":"4700:218:11","text":" @notice Set any user's counter (owner only)\n @dev Only the diamond owner can set other users' counters\n @param user The user whose counter to set\n @param value The new counter value"},"functionSelector":"aaa08914","id":1993,"implemented":true,"kind":"function","modifiers":[],"name":"setUserCounterAsOwner","nameLocation":"4932:21:11","nodeType":"FunctionDefinition","parameters":{"id":1966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1963,"mutability":"mutable","name":"user","nameLocation":"4962:4:11","nodeType":"VariableDeclaration","scope":1993,"src":"4954:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1962,"name":"address","nodeType":"ElementaryTypeName","src":"4954:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1965,"mutability":"mutable","name":"value","nameLocation":"4976:5:11","nodeType":"VariableDeclaration","scope":1993,"src":"4968:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1964,"name":"uint256","nodeType":"ElementaryTypeName","src":"4968:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4953:29:11"},"returnParameters":{"id":1967,"nodeType":"ParameterList","parameters":[],"src":"4992:0:11"},"scope":1994,"src":"4923:269:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1995,"src":"490:4704:11","usedErrors":[],"usedEvents":[1693,1699,1705,1711]}],"src":"32:5162:11"},"id":11},"contracts/facets/DiamondCutFacet.sol":{"ast":{"absolutePath":"contracts/facets/DiamondCutFacet.sol","exportedSymbols":{"DiamondCutFacet":[2080],"IDiamondCut":[2428],"IERC165":[436],"LibDiamond":[3887]},"id":2081,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1996,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:12"},{"absolutePath":"contracts/libraries/LibDiamond.sol","file":"../libraries/LibDiamond.sol","id":1998,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2081,"sourceUnit":3888,"src":"411:57:12","symbolAliases":[{"foreign":{"id":1997,"name":"LibDiamond","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"420:10:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/IDiamondCut.sol","file":"../interfaces/IDiamondCut.sol","id":2000,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2081,"sourceUnit":2429,"src":"469:60:12","symbolAliases":[{"foreign":{"id":1999,"name":"IDiamondCut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"478:11:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"@openzeppelin/contracts/interfaces/IERC165.sol","id":2002,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2081,"sourceUnit":4,"src":"530:73:12","symbolAliases":[{"foreign":{"id":2001,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":436,"src":"539:7:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2004,"name":"IDiamondCut","nameLocations":["1131:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":2428,"src":"1131:11:12"},"id":2005,"nodeType":"InheritanceSpecifier","src":"1131:11:12"}],"canonicalName":"DiamondCutFacet","contractDependencies":[],"contractKind":"contract","documentation":{"id":2003,"nodeType":"StructuredDocumentation","src":"605:497:12","text":" @title DiamondCutFacet\n @dev Implementation of the diamond cut functionality with a timelock mechanism.\n      The diamond cut operation allows adding, replacing, or removing facets and functions\n      from the diamond proxy contract. This implementation adds a security timelock\n      that requires a two-step process (propose and execute) for diamond cuts,\n      enhancing security by allowing time for review before execution.\n      Based on the EIP-2535 Diamond Standard."},"fullyImplemented":true,"id":2080,"linearizedBaseContracts":[2080,2428],"name":"DiamondCutFacet","nameLocation":"1112:15:12","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[2397],"body":{"id":2030,"nodeType":"Block","src":"1910:121:12","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2017,"name":"LibDiamond","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"1920:10:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibDiamond_$3887_$","typeString":"type(library LibDiamond)"}},"id":2019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1931:22:12","memberName":"enforceIsContractOwner","nodeType":"MemberAccess","referencedDeclaration":2810,"src":"1920:33:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":2020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1920:35:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2021,"nodeType":"ExpressionStatement","src":"1920:35:12"},{"expression":{"arguments":[{"id":2025,"name":"_diamondCut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"1994:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$2373_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IDiamondCut.FacetCut calldata[] calldata"}},{"id":2026,"name":"_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"2007:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2027,"name":"_calldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2014,"src":"2014:9:12","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_FacetCut_$2373_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IDiamondCut.FacetCut calldata[] calldata"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":2022,"name":"LibDiamond","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"1965:10:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibDiamond_$3887_$","typeString":"type(library LibDiamond)"}},"id":2024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1976:17:12","memberName":"proposeDiamondCut","nodeType":"MemberAccess","referencedDeclaration":3814,"src":"1965:28:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_FacetCut_$2373_memory_ptr_$dyn_memory_ptr_$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct IDiamondCut.FacetCut memory[] memory,address,bytes memory)"}},"id":2028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1965:59:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2029,"nodeType":"ExpressionStatement","src":"1965:59:12"}]},"documentation":{"id":2006,"nodeType":"StructuredDocumentation","src":"1149:604:12","text":"@notice Propose a diamond cut to be executed after the timelock period\n @dev First step in the two-step process for modifying the diamond. This queues up\n      changes that can only be executed after a predefined timelock period.\n      Only the contract owner can propose changes.\n @param _diamondCut Contains the facet addresses and function selectors to add, replace, or remove\n @param _init The address of the contract or facet to execute initialization code\n @param _calldata A function call, including function selector and arguments, for initialization"},"functionSelector":"bbf2358e","id":2031,"implemented":true,"kind":"function","modifiers":[],"name":"proposeDiamondCut","nameLocation":"1767:17:12","nodeType":"FunctionDefinition","parameters":{"id":2015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2010,"mutability":"mutable","name":"_diamondCut","nameLocation":"1826:11:12","nodeType":"VariableDeclaration","scope":2031,"src":"1794:43:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$2373_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IDiamondCut.FacetCut[]"},"typeName":{"baseType":{"id":2008,"nodeType":"UserDefinedTypeName","pathNode":{"id":2007,"name":"IDiamondCut.FacetCut","nameLocations":["1794:11:12","1806:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":2373,"src":"1794:20:12"},"referencedDeclaration":2373,"src":"1794:20:12","typeDescriptions":{"typeIdentifier":"t_struct$_FacetCut_$2373_storage_ptr","typeString":"struct IDiamondCut.FacetCut"}},"id":2009,"nodeType":"ArrayTypeName","src":"1794:22:12","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$2373_storage_$dyn_storage_ptr","typeString":"struct IDiamondCut.FacetCut[]"}},"visibility":"internal"},{"constant":false,"id":2012,"mutability":"mutable","name":"_init","nameLocation":"1855:5:12","nodeType":"VariableDeclaration","scope":2031,"src":"1847:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2011,"name":"address","nodeType":"ElementaryTypeName","src":"1847:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2014,"mutability":"mutable","name":"_calldata","nameLocation":"1885:9:12","nodeType":"VariableDeclaration","scope":2031,"src":"1870:24:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2013,"name":"bytes","nodeType":"ElementaryTypeName","src":"1870:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1784:116:12"},"returnParameters":{"id":2016,"nodeType":"ParameterList","parameters":[],"src":"1910:0:12"},"scope":2080,"src":"1758:273:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[2401],"body":{"id":2045,"nodeType":"Block","src":"2732:92:12","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2035,"name":"LibDiamond","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"2742:10:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibDiamond_$3887_$","typeString":"type(library LibDiamond)"}},"id":2037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2753:22:12","memberName":"enforceIsContractOwner","nodeType":"MemberAccess","referencedDeclaration":2810,"src":"2742:33:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":2038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2742:35:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2039,"nodeType":"ExpressionStatement","src":"2742:35:12"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2040,"name":"LibDiamond","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"2787:10:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibDiamond_$3887_$","typeString":"type(library LibDiamond)"}},"id":2042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2798:17:12","memberName":"executeDiamondCut","nodeType":"MemberAccess","referencedDeclaration":3860,"src":"2787:28:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2787:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2044,"nodeType":"ExpressionStatement","src":"2787:30:12"}]},"documentation":{"id":2032,"nodeType":"StructuredDocumentation","src":"2041:648:12","text":"@notice Execute a previously proposed diamond cut after the timelock period has elapsed\n @dev Second and final step in the two-step diamond modification process.\n      This executes the changes that were previously proposed, but only if\n      the required timelock period has passed. The timelock period is a\n      security measure to allow stakeholders time to review proposed changes.\n      Only the contract owner can execute the diamond cut.\n @custom:security Reverts if no diamond cut is proposed, if the timelock period\n                  hasn't expired, or if the initialization call fails"},"functionSelector":"f37a5da0","id":2046,"implemented":true,"kind":"function","modifiers":[],"name":"executeDiamondCut","nameLocation":"2703:17:12","nodeType":"FunctionDefinition","parameters":{"id":2033,"nodeType":"ParameterList","parameters":[],"src":"2720:2:12"},"returnParameters":{"id":2034,"nodeType":"ParameterList","parameters":[],"src":"2732:0:12"},"scope":2080,"src":"2694:130:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[2405],"body":{"id":2060,"nodeType":"Block","src":"3379:91:12","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2050,"name":"LibDiamond","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"3389:10:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibDiamond_$3887_$","typeString":"type(library LibDiamond)"}},"id":2052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3400:22:12","memberName":"enforceIsContractOwner","nodeType":"MemberAccess","referencedDeclaration":2810,"src":"3389:33:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":2053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3389:35:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2054,"nodeType":"ExpressionStatement","src":"3389:35:12"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2055,"name":"LibDiamond","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"3434:10:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibDiamond_$3887_$","typeString":"type(library LibDiamond)"}},"id":2057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3445:16:12","memberName":"cancelDiamondCut","nodeType":"MemberAccess","referencedDeclaration":3886,"src":"3434:27:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3434:29:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2059,"nodeType":"ExpressionStatement","src":"3434:29:12"}]},"documentation":{"id":2047,"nodeType":"StructuredDocumentation","src":"2834:503:12","text":"@notice Cancel a previously proposed diamond cut\n @dev Allows the contract owner to cancel a pending diamond cut proposal\n      before it is executed. This is useful if errors are found in the\n      proposed changes during the timelock period or if the changes\n      are no longer desired. Once cancelled, the proposal is completely\n      removed and a new proposal would need to be submitted if needed.\n @custom:security Only callable by the contract owner"},"functionSelector":"6fb05998","id":2061,"implemented":true,"kind":"function","modifiers":[],"name":"cancelDiamondCut","nameLocation":"3351:16:12","nodeType":"FunctionDefinition","parameters":{"id":2048,"nodeType":"ParameterList","parameters":[],"src":"3367:2:12"},"returnParameters":{"id":2049,"nodeType":"ParameterList","parameters":[],"src":"3379:0:12"},"scope":2080,"src":"3342:128:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[2385],"body":{"id":2078,"nodeType":"Block","src":"4190:101:12","statements":[{"expression":{"arguments":[{"hexValue":"46756e6374696f6e20646570726563617465643a205573652070726f706f73654469616d6f6e644375742829202b20657865637574654469616d6f6e64437574282920696e7374656164","id":2075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4207:76:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_056fd20c5b5e35526abef0fa8bd3b11181703fb66c442d2bb546f62d84466063","typeString":"literal_string \"Function deprecated: Use proposeDiamondCut() + executeDiamondCut() instead\""},"value":"Function deprecated: Use proposeDiamondCut() + executeDiamondCut() instead"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_056fd20c5b5e35526abef0fa8bd3b11181703fb66c442d2bb546f62d84466063","typeString":"literal_string \"Function deprecated: Use proposeDiamondCut() + executeDiamondCut() instead\""}],"id":2074,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"4200:6:12","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4200:84:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2077,"nodeType":"ExpressionStatement","src":"4200:84:12"}]},"documentation":{"id":2062,"nodeType":"StructuredDocumentation","src":"3480:574:12","text":"@notice Add/replace/remove any number of functions and optionally execute initialization code\n @dev THIS FUNCTION IS DEPRECATED and will always revert when called.\n      It has been replaced by the more secure two-step process using\n      proposeDiamondCut() followed by executeDiamondCut(), which adds a timelock\n      security feature. This function remains to maintain compatibility with\n      the IDiamondCut interface but cannot be used.\n @custom:security Always reverts with an error message directing to the new functions"},"functionSelector":"1f931c1c","id":2079,"implemented":true,"kind":"function","modifiers":[],"name":"diamondCut","nameLocation":"4068:10:12","nodeType":"FunctionDefinition","overrides":{"id":2072,"nodeType":"OverrideSpecifier","overrides":[],"src":"4181:8:12"},"parameters":{"id":2071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2066,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2079,"src":"4088:31:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$2373_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IDiamondCut.FacetCut[]"},"typeName":{"baseType":{"id":2064,"nodeType":"UserDefinedTypeName","pathNode":{"id":2063,"name":"IDiamondCut.FacetCut","nameLocations":["4088:11:12","4100:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":2373,"src":"4088:20:12"},"referencedDeclaration":2373,"src":"4088:20:12","typeDescriptions":{"typeIdentifier":"t_struct$_FacetCut_$2373_storage_ptr","typeString":"struct IDiamondCut.FacetCut"}},"id":2065,"nodeType":"ArrayTypeName","src":"4088:22:12","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$2373_storage_$dyn_storage_ptr","typeString":"struct IDiamondCut.FacetCut[]"}},"visibility":"internal"},{"constant":false,"id":2068,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2079,"src":"4129:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2067,"name":"address","nodeType":"ElementaryTypeName","src":"4129:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2070,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2079,"src":"4146:14:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2069,"name":"bytes","nodeType":"ElementaryTypeName","src":"4146:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4078:88:12"},"returnParameters":{"id":2073,"nodeType":"ParameterList","parameters":[],"src":"4190:0:12"},"scope":2080,"src":"4059:232:12","stateMutability":"pure","virtual":false,"visibility":"external"}],"scope":2081,"src":"1103:3190:12","usedErrors":[],"usedEvents":[2415,2423,2427,2683,2691,2695]}],"src":"32:4261:12"},"id":12},"contracts/facets/DiamondLoupeFacet.sol":{"ast":{"absolutePath":"contracts/facets/DiamondLoupeFacet.sol","exportedSymbols":{"DiamondLoupeFacet":[2280],"IDiamondLoupe":[2540],"IERC165":[436],"LibDiamond":[3887]},"id":2281,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2082,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:13"},{"absolutePath":"contracts/libraries/LibDiamond.sol","file":"../libraries/LibDiamond.sol","id":2084,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2281,"sourceUnit":3888,"src":"413:57:13","symbolAliases":[{"foreign":{"id":2083,"name":"LibDiamond","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"422:10:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/IDiamondLoupe.sol","file":"../interfaces/IDiamondLoupe.sol","id":2086,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2281,"sourceUnit":2541,"src":"471:64:13","symbolAliases":[{"foreign":{"id":2085,"name":"IDiamondLoupe","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2540,"src":"480:13:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"@openzeppelin/contracts/interfaces/IERC165.sol","id":2088,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2281,"sourceUnit":4,"src":"536:73:13","symbolAliases":[{"foreign":{"id":2087,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":436,"src":"545:7:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2090,"name":"IDiamondLoupe","nameLocations":["1031:13:13"],"nodeType":"IdentifierPath","referencedDeclaration":2540,"src":"1031:13:13"},"id":2091,"nodeType":"InheritanceSpecifier","src":"1031:13:13"},{"baseName":{"id":2092,"name":"IERC165","nameLocations":["1046:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":436,"src":"1046:7:13"},"id":2093,"nodeType":"InheritanceSpecifier","src":"1046:7:13"}],"canonicalName":"DiamondLoupeFacet","contractDependencies":[],"contractKind":"contract","documentation":{"id":2089,"nodeType":"StructuredDocumentation","src":"611:389:13","text":" @title DiamondLoupeFacet\n @dev Implementation of the DiamondLoupe standard which provides introspection functions\n      to view what facets and functions are available in the diamond contract.\n      The Diamond Loupe functions make it possible to look up facets and functions\n      implemented by a diamond. This implementation is based on the EIP-2535 Diamond Standard."},"fullyImplemented":true,"id":2280,"linearizedBaseContracts":[2280,436,2540],"name":"DiamondLoupeFacet","nameLocation":"1010:17:13","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[2515],"body":{"id":2162,"nodeType":"Block","src":"1446:449:13","statements":[{"assignments":[2106],"declarations":[{"constant":false,"id":2106,"mutability":"mutable","name":"ds","nameLocation":"1490:2:13","nodeType":"VariableDeclaration","scope":2162,"src":"1456:36:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage"},"typeName":{"id":2105,"nodeType":"UserDefinedTypeName","pathNode":{"id":2104,"name":"LibDiamond.DiamondStorage","nameLocations":["1456:10:13","1467:14:13"],"nodeType":"IdentifierPath","referencedDeclaration":2744,"src":"1456:25:13"},"referencedDeclaration":2744,"src":"1456:25:13","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage"}},"visibility":"internal"}],"id":2110,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2107,"name":"LibDiamond","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"1495:10:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibDiamond_$3887_$","typeString":"type(library LibDiamond)"}},"id":2108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1506:14:13","memberName":"diamondStorage","nodeType":"MemberAccess","referencedDeclaration":2756,"src":"1495:25:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$2744_storage_ptr_$","typeString":"function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"}},"id":2109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1495:27:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"1456:66:13"},{"assignments":[2112],"declarations":[{"constant":false,"id":2112,"mutability":"mutable","name":"numFacets","nameLocation":"1540:9:13","nodeType":"VariableDeclaration","scope":2162,"src":"1532:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2111,"name":"uint256","nodeType":"ElementaryTypeName","src":"1532:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2116,"initialValue":{"expression":{"expression":{"id":2113,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2106,"src":"1552:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":2114,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1555:14:13","memberName":"facetAddresses","nodeType":"MemberAccess","referencedDeclaration":2732,"src":"1552:17:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":2115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1570:6:13","memberName":"length","nodeType":"MemberAccess","src":"1552:24:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1532:44:13"},{"expression":{"id":2124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2117,"name":"facets_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"1586:7:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Facet_$2507_memory_ptr_$dyn_memory_ptr","typeString":"struct IDiamondLoupe.Facet memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2122,"name":"numFacets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2112,"src":"1608:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2121,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1596:11:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Facet_$2507_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct IDiamondLoupe.Facet memory[] memory)"},"typeName":{"baseType":{"id":2119,"nodeType":"UserDefinedTypeName","pathNode":{"id":2118,"name":"Facet","nameLocations":["1600:5:13"],"nodeType":"IdentifierPath","referencedDeclaration":2507,"src":"1600:5:13"},"referencedDeclaration":2507,"src":"1600:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_Facet_$2507_storage_ptr","typeString":"struct IDiamondLoupe.Facet"}},"id":2120,"nodeType":"ArrayTypeName","src":"1600:7:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Facet_$2507_storage_$dyn_storage_ptr","typeString":"struct IDiamondLoupe.Facet[]"}}},"id":2123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1596:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Facet_$2507_memory_ptr_$dyn_memory_ptr","typeString":"struct IDiamondLoupe.Facet memory[] memory"}},"src":"1586:32:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Facet_$2507_memory_ptr_$dyn_memory_ptr","typeString":"struct IDiamondLoupe.Facet memory[] memory"}},"id":2125,"nodeType":"ExpressionStatement","src":"1586:32:13"},{"body":{"id":2160,"nodeType":"Block","src":"1664:225:13","statements":[{"assignments":[2136],"declarations":[{"constant":false,"id":2136,"mutability":"mutable","name":"facetAddress_","nameLocation":"1686:13:13","nodeType":"VariableDeclaration","scope":2160,"src":"1678:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2135,"name":"address","nodeType":"ElementaryTypeName","src":"1678:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2141,"initialValue":{"baseExpression":{"expression":{"id":2137,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2106,"src":"1702:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":2138,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1705:14:13","memberName":"facetAddresses","nodeType":"MemberAccess","referencedDeclaration":2732,"src":"1702:17:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":2140,"indexExpression":{"id":2139,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2127,"src":"1720:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1702:20:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1678:44:13"},{"expression":{"id":2147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2142,"name":"facets_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"1736:7:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Facet_$2507_memory_ptr_$dyn_memory_ptr","typeString":"struct IDiamondLoupe.Facet memory[] memory"}},"id":2144,"indexExpression":{"id":2143,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2127,"src":"1744:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1736:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Facet_$2507_memory_ptr","typeString":"struct IDiamondLoupe.Facet memory"}},"id":2145,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1747:12:13","memberName":"facetAddress","nodeType":"MemberAccess","referencedDeclaration":2503,"src":"1736:23:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2146,"name":"facetAddress_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"1762:13:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1736:39:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2148,"nodeType":"ExpressionStatement","src":"1736:39:13"},{"expression":{"id":2158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":2149,"name":"facets_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"1789:7:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Facet_$2507_memory_ptr_$dyn_memory_ptr","typeString":"struct IDiamondLoupe.Facet memory[] memory"}},"id":2151,"indexExpression":{"id":2150,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2127,"src":"1797:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1789:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Facet_$2507_memory_ptr","typeString":"struct IDiamondLoupe.Facet memory"}},"id":2152,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1800:17:13","memberName":"functionSelectors","nodeType":"MemberAccess","referencedDeclaration":2506,"src":"1789:28:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"expression":{"id":2153,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2106,"src":"1820:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":2154,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1823:22:13","memberName":"facetFunctionSelectors","nodeType":"MemberAccess","referencedDeclaration":2729,"src":"1820:25:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_FacetFunctionSelectors_$2706_storage_$","typeString":"mapping(address => struct LibDiamond.FacetFunctionSelectors storage ref)"}},"id":2156,"indexExpression":{"id":2155,"name":"facetAddress_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"1846:13:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1820:40:13","typeDescriptions":{"typeIdentifier":"t_struct$_FacetFunctionSelectors_$2706_storage","typeString":"struct LibDiamond.FacetFunctionSelectors storage ref"}},"id":2157,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1861:17:13","memberName":"functionSelectors","nodeType":"MemberAccess","referencedDeclaration":2703,"src":"1820:58:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_storage","typeString":"bytes4[] storage ref"}},"src":"1789:89:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}},"id":2159,"nodeType":"ExpressionStatement","src":"1789:89:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2129,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2127,"src":"1644:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2130,"name":"numFacets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2112,"src":"1648:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1644:13:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2161,"initializationExpression":{"assignments":[2127],"declarations":[{"constant":false,"id":2127,"mutability":"mutable","name":"i","nameLocation":"1641:1:13","nodeType":"VariableDeclaration","scope":2161,"src":"1633:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2126,"name":"uint256","nodeType":"ElementaryTypeName","src":"1633:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2128,"nodeType":"VariableDeclarationStatement","src":"1633:9:13"},"loopExpression":{"expression":{"id":2133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1659:3:13","subExpression":{"id":2132,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2127,"src":"1659:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2134,"nodeType":"ExpressionStatement","src":"1659:3:13"},"nodeType":"ForStatement","src":"1628:261:13"}]},"documentation":{"id":2094,"nodeType":"StructuredDocumentation","src":"1060:307:13","text":"@notice Gets all facets and their selectors that are registered with the diamond\n @dev This function is used to inspect the full facet structure of the diamond\n @return facets_ An array of Facet structs containing the facet addresses and\n         their associated function selectors"},"functionSelector":"7a0ed627","id":2163,"implemented":true,"kind":"function","modifiers":[],"name":"facets","nameLocation":"1381:6:13","nodeType":"FunctionDefinition","overrides":{"id":2096,"nodeType":"OverrideSpecifier","overrides":[],"src":"1399:8:13"},"parameters":{"id":2095,"nodeType":"ParameterList","parameters":[],"src":"1387:2:13"},"returnParameters":{"id":2101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2100,"mutability":"mutable","name":"facets_","nameLocation":"1437:7:13","nodeType":"VariableDeclaration","scope":2163,"src":"1422:22:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Facet_$2507_memory_ptr_$dyn_memory_ptr","typeString":"struct IDiamondLoupe.Facet[]"},"typeName":{"baseType":{"id":2098,"nodeType":"UserDefinedTypeName","pathNode":{"id":2097,"name":"Facet","nameLocations":["1422:5:13"],"nodeType":"IdentifierPath","referencedDeclaration":2507,"src":"1422:5:13"},"referencedDeclaration":2507,"src":"1422:5:13","typeDescriptions":{"typeIdentifier":"t_struct$_Facet_$2507_storage_ptr","typeString":"struct IDiamondLoupe.Facet"}},"id":2099,"nodeType":"ArrayTypeName","src":"1422:7:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Facet_$2507_storage_$dyn_storage_ptr","typeString":"struct IDiamondLoupe.Facet[]"}},"visibility":"internal"}],"src":"1421:24:13"},"scope":2280,"src":"1372:523:13","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[2524],"body":{"id":2190,"nodeType":"Block","src":"2343:170:13","statements":[{"assignments":[2177],"declarations":[{"constant":false,"id":2177,"mutability":"mutable","name":"ds","nameLocation":"2387:2:13","nodeType":"VariableDeclaration","scope":2190,"src":"2353:36:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage"},"typeName":{"id":2176,"nodeType":"UserDefinedTypeName","pathNode":{"id":2175,"name":"LibDiamond.DiamondStorage","nameLocations":["2353:10:13","2364:14:13"],"nodeType":"IdentifierPath","referencedDeclaration":2744,"src":"2353:25:13"},"referencedDeclaration":2744,"src":"2353:25:13","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage"}},"visibility":"internal"}],"id":2181,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2178,"name":"LibDiamond","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"2392:10:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibDiamond_$3887_$","typeString":"type(library LibDiamond)"}},"id":2179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2403:14:13","memberName":"diamondStorage","nodeType":"MemberAccess","referencedDeclaration":2756,"src":"2392:25:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$2744_storage_ptr_$","typeString":"function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"}},"id":2180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2392:27:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2353:66:13"},{"expression":{"id":2188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2182,"name":"facetFunctionSelectors_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"2429:23:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"expression":{"id":2183,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2177,"src":"2455:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":2184,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2458:22:13","memberName":"facetFunctionSelectors","nodeType":"MemberAccess","referencedDeclaration":2729,"src":"2455:25:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_FacetFunctionSelectors_$2706_storage_$","typeString":"mapping(address => struct LibDiamond.FacetFunctionSelectors storage ref)"}},"id":2186,"indexExpression":{"id":2185,"name":"_facet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2166,"src":"2481:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2455:33:13","typeDescriptions":{"typeIdentifier":"t_struct$_FacetFunctionSelectors_$2706_storage","typeString":"struct LibDiamond.FacetFunctionSelectors storage ref"}},"id":2187,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2489:17:13","memberName":"functionSelectors","nodeType":"MemberAccess","referencedDeclaration":2703,"src":"2455:51:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_storage","typeString":"bytes4[] storage ref"}},"src":"2429:77:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}},"id":2189,"nodeType":"ExpressionStatement","src":"2429:77:13"}]},"documentation":{"id":2164,"nodeType":"StructuredDocumentation","src":"1901:316:13","text":"@notice Gets all the function selectors supported by a specific facet\n @dev Used to retrieve all function selectors managed by a single facet implementation\n @param _facet The facet address to query\n @return facetFunctionSelectors_ Array of function selectors (bytes4) supported by the facet"},"functionSelector":"adfca15e","id":2191,"implemented":true,"kind":"function","modifiers":[],"name":"facetFunctionSelectors","nameLocation":"2231:22:13","nodeType":"FunctionDefinition","overrides":{"id":2168,"nodeType":"OverrideSpecifier","overrides":[],"src":"2279:8:13"},"parameters":{"id":2167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2166,"mutability":"mutable","name":"_facet","nameLocation":"2262:6:13","nodeType":"VariableDeclaration","scope":2191,"src":"2254:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2165,"name":"address","nodeType":"ElementaryTypeName","src":"2254:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2253:16:13"},"returnParameters":{"id":2172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2171,"mutability":"mutable","name":"facetFunctionSelectors_","nameLocation":"2318:23:13","nodeType":"VariableDeclaration","scope":2191,"src":"2302:39:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[]"},"typeName":{"baseType":{"id":2169,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2302:6:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":2170,"nodeType":"ArrayTypeName","src":"2302:8:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_storage_ptr","typeString":"bytes4[]"}},"visibility":"internal"}],"src":"2301:41:13"},"scope":2280,"src":"2222:291:13","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[2531],"body":{"id":2213,"nodeType":"Block","src":"2860:128:13","statements":[{"assignments":[2203],"declarations":[{"constant":false,"id":2203,"mutability":"mutable","name":"ds","nameLocation":"2904:2:13","nodeType":"VariableDeclaration","scope":2213,"src":"2870:36:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage"},"typeName":{"id":2202,"nodeType":"UserDefinedTypeName","pathNode":{"id":2201,"name":"LibDiamond.DiamondStorage","nameLocations":["2870:10:13","2881:14:13"],"nodeType":"IdentifierPath","referencedDeclaration":2744,"src":"2870:25:13"},"referencedDeclaration":2744,"src":"2870:25:13","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage"}},"visibility":"internal"}],"id":2207,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2204,"name":"LibDiamond","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"2909:10:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibDiamond_$3887_$","typeString":"type(library LibDiamond)"}},"id":2205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2920:14:13","memberName":"diamondStorage","nodeType":"MemberAccess","referencedDeclaration":2756,"src":"2909:25:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$2744_storage_ptr_$","typeString":"function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"}},"id":2206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2909:27:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2870:66:13"},{"expression":{"id":2211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2208,"name":"facetAddresses_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2197,"src":"2946:15:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2209,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2203,"src":"2964:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":2210,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2967:14:13","memberName":"facetAddresses","nodeType":"MemberAccess","referencedDeclaration":2732,"src":"2964:17:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"src":"2946:35:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2212,"nodeType":"ExpressionStatement","src":"2946:35:13"}]},"documentation":{"id":2192,"nodeType":"StructuredDocumentation","src":"2519:244:13","text":"@notice Get all the facet addresses registered in the diamond\n @dev Provides a complete list of implementation contracts that make up the diamond's functionality\n @return facetAddresses_ Array of all registered facet addresses"},"functionSelector":"52ef6b2c","id":2214,"implemented":true,"kind":"function","modifiers":[],"name":"facetAddresses","nameLocation":"2777:14:13","nodeType":"FunctionDefinition","overrides":{"id":2194,"nodeType":"OverrideSpecifier","overrides":[],"src":"2803:8:13"},"parameters":{"id":2193,"nodeType":"ParameterList","parameters":[],"src":"2791:2:13"},"returnParameters":{"id":2198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2197,"mutability":"mutable","name":"facetAddresses_","nameLocation":"2843:15:13","nodeType":"VariableDeclaration","scope":2214,"src":"2826:32:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2195,"name":"address","nodeType":"ElementaryTypeName","src":"2826:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2196,"nodeType":"ArrayTypeName","src":"2826:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2825:34:13"},"scope":2280,"src":"2768:220:13","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[2539],"body":{"id":2240,"nodeType":"Block","src":"3628:170:13","statements":[{"assignments":[2227],"declarations":[{"constant":false,"id":2227,"mutability":"mutable","name":"ds","nameLocation":"3672:2:13","nodeType":"VariableDeclaration","scope":2240,"src":"3638:36:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage"},"typeName":{"id":2226,"nodeType":"UserDefinedTypeName","pathNode":{"id":2225,"name":"LibDiamond.DiamondStorage","nameLocations":["3638:10:13","3649:14:13"],"nodeType":"IdentifierPath","referencedDeclaration":2744,"src":"3638:25:13"},"referencedDeclaration":2744,"src":"3638:25:13","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage"}},"visibility":"internal"}],"id":2231,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2228,"name":"LibDiamond","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"3677:10:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibDiamond_$3887_$","typeString":"type(library LibDiamond)"}},"id":2229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3688:14:13","memberName":"diamondStorage","nodeType":"MemberAccess","referencedDeclaration":2756,"src":"3677:25:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$2744_storage_ptr_$","typeString":"function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"}},"id":2230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3677:27:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3638:66:13"},{"expression":{"id":2238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2232,"name":"facetAddress_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2221,"src":"3714:13:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"expression":{"id":2233,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2227,"src":"3730:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":2234,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3733:26:13","memberName":"selectorToFacetAndPosition","nodeType":"MemberAccess","referencedDeclaration":2724,"src":"3730:29:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_struct$_FacetAddressAndPosition_$2700_storage_$","typeString":"mapping(bytes4 => struct LibDiamond.FacetAddressAndPosition storage ref)"}},"id":2236,"indexExpression":{"id":2235,"name":"_functionSelector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"3760:17:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3730:48:13","typeDescriptions":{"typeIdentifier":"t_struct$_FacetAddressAndPosition_$2700_storage","typeString":"struct LibDiamond.FacetAddressAndPosition storage ref"}},"id":2237,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3779:12:13","memberName":"facetAddress","nodeType":"MemberAccess","referencedDeclaration":2697,"src":"3730:61:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3714:77:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2239,"nodeType":"ExpressionStatement","src":"3714:77:13"}]},"documentation":{"id":2215,"nodeType":"StructuredDocumentation","src":"2994:526:13","text":"@notice Gets the facet address that implements a specific function\n @dev Used to determine which implementation contract handles a particular function.\n      This function is critical for understanding the diamond's current function routing.\n      If no facet is found for the selector, returns address(0).\n @param _functionSelector The 4-byte function selector to find the implementation for\n @return facetAddress_ The facet address implementing the function, or address(0) if not found"},"functionSelector":"cdffacc6","id":2241,"implemented":true,"kind":"function","modifiers":[],"name":"facetAddress","nameLocation":"3534:12:13","nodeType":"FunctionDefinition","overrides":{"id":2219,"nodeType":"OverrideSpecifier","overrides":[],"src":"3582:8:13"},"parameters":{"id":2218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2217,"mutability":"mutable","name":"_functionSelector","nameLocation":"3554:17:13","nodeType":"VariableDeclaration","scope":2241,"src":"3547:24:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2216,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3547:6:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"3546:26:13"},"returnParameters":{"id":2222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2221,"mutability":"mutable","name":"facetAddress_","nameLocation":"3613:13:13","nodeType":"VariableDeclaration","scope":2241,"src":"3605:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2220,"name":"address","nodeType":"ElementaryTypeName","src":"3605:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3604:23:13"},"scope":2280,"src":"3525:273:13","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[435],"body":{"id":2278,"nodeType":"Block","src":"4353:263:13","statements":[{"assignments":[2254],"declarations":[{"constant":false,"id":2254,"mutability":"mutable","name":"ds","nameLocation":"4397:2:13","nodeType":"VariableDeclaration","scope":2278,"src":"4363:36:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage"},"typeName":{"id":2253,"nodeType":"UserDefinedTypeName","pathNode":{"id":2252,"name":"LibDiamond.DiamondStorage","nameLocations":["4363:10:13","4374:14:13"],"nodeType":"IdentifierPath","referencedDeclaration":2744,"src":"4363:25:13"},"referencedDeclaration":2744,"src":"4363:25:13","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage"}},"visibility":"internal"}],"id":2258,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2255,"name":"LibDiamond","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"4402:10:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibDiamond_$3887_$","typeString":"type(library LibDiamond)"}},"id":2256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4413:14:13","memberName":"diamondStorage","nodeType":"MemberAccess","referencedDeclaration":2756,"src":"4402:25:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$2744_storage_ptr_$","typeString":"function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"}},"id":2257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4402:27:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4363:66:13"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2259,"name":"_interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"4446:12:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2261,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":436,"src":"4467:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$436_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$436_$","typeString":"type(contract IERC165)"}],"id":2260,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4462:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4462:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$436","typeString":"type(contract IERC165)"}},"id":2263,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4476:11:13","memberName":"interfaceId","nodeType":"MemberAccess","src":"4462:25:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"4446:41:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2265,"name":"_interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"4507:12:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2267,"name":"IDiamondLoupe","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2540,"src":"4528:13:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IDiamondLoupe_$2540_$","typeString":"type(contract IDiamondLoupe)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IDiamondLoupe_$2540_$","typeString":"type(contract IDiamondLoupe)"}],"id":2266,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4523:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4523:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IDiamondLoupe_$2540","typeString":"type(contract IDiamondLoupe)"}},"id":2269,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4543:11:13","memberName":"interfaceId","nodeType":"MemberAccess","src":"4523:31:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"4507:47:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4446:108:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"baseExpression":{"expression":{"id":2272,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2254,"src":"4573:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":2273,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4576:19:13","memberName":"supportedInterfaces","nodeType":"MemberAccess","referencedDeclaration":2736,"src":"4573:22:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_bool_$","typeString":"mapping(bytes4 => bool)"}},"id":2275,"indexExpression":{"id":2274,"name":"_interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"4596:12:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4573:36:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4446:163:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2249,"id":2277,"nodeType":"Return","src":"4439:170:13"}]},"documentation":{"id":2242,"nodeType":"StructuredDocumentation","src":"3804:458:13","text":"@notice Checks if the contract implements an interface\n @dev ERC-165 implementation that checks if the diamond supports a specific interface.\n      Returns true for IDiamondLoupe and IERC165 interfaces, and any additional\n      interfaces registered with the diamond.\n @param _interfaceId The interface identifier to check, as specified in ERC-165\n @return True if the contract implements the interface, false otherwise"},"functionSelector":"01ffc9a7","id":2279,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"4276:17:13","nodeType":"FunctionDefinition","overrides":{"id":2246,"nodeType":"OverrideSpecifier","overrides":[],"src":"4329:8:13"},"parameters":{"id":2245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2244,"mutability":"mutable","name":"_interfaceId","nameLocation":"4301:12:13","nodeType":"VariableDeclaration","scope":2279,"src":"4294:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2243,"name":"bytes4","nodeType":"ElementaryTypeName","src":"4294:6:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"4293:21:13"},"returnParameters":{"id":2249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2248,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2279,"src":"4347:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2247,"name":"bool","nodeType":"ElementaryTypeName","src":"4347:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4346:6:13"},"scope":2280,"src":"4267:349:13","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2281,"src":"1001:3617:13","usedErrors":[],"usedEvents":[]}],"src":"32:4586:13"},"id":13},"contracts/facets/OwnershipFacet.sol":{"ast":{"absolutePath":"contracts/facets/OwnershipFacet.sol","exportedSymbols":{"IERC165":[436],"IERC173":[2574],"LibDiamond":[3887],"OwnershipFacet":[2327]},"id":2328,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2282,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:14"},{"absolutePath":"contracts/libraries/LibDiamond.sol","file":"../libraries/LibDiamond.sol","id":2284,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2328,"sourceUnit":3888,"src":"57:57:14","symbolAliases":[{"foreign":{"id":2283,"name":"LibDiamond","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"66:10:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/IERC173.sol","file":"../interfaces/IERC173.sol","id":2286,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2328,"sourceUnit":2575,"src":"115:52:14","symbolAliases":[{"foreign":{"id":2285,"name":"IERC173","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2574,"src":"124:7:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"@openzeppelin/contracts/interfaces/IERC165.sol","id":2288,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2328,"sourceUnit":4,"src":"168:73:14","symbolAliases":[{"foreign":{"id":2287,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":436,"src":"177:7:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2290,"name":"IERC173","nameLocations":["883:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":2574,"src":"883:7:14"},"id":2291,"nodeType":"InheritanceSpecifier","src":"883:7:14"},{"baseName":{"id":2292,"name":"IERC165","nameLocations":["892:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":436,"src":"892:7:14"},"id":2293,"nodeType":"InheritanceSpecifier","src":"892:7:14"}],"canonicalName":"OwnershipFacet","contractDependencies":[],"contractKind":"contract","documentation":{"id":2289,"nodeType":"StructuredDocumentation","src":"243:603:14","text":" @title OwnershipFacet\n @dev Implementation of the ERC-173 ownership standard for the Diamond proxy pattern.\n      This facet manages the ownership of the diamond contract, which is a critical\n      security consideration as the owner has complete control over the contract's\n      functionality through diamond cuts. The ownership model follows the standard\n      single-owner pattern where the owner can transfer ownership to another address.\n      This facet implements both the IERC173 interface for ownership and the IERC165\n      interface for standard interface detection."},"fullyImplemented":false,"id":2327,"linearizedBaseContracts":[2327,436,2574],"name":"OwnershipFacet","nameLocation":"865:14:14","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[2573],"body":{"id":2311,"nodeType":"Block","src":"1641:100:14","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2300,"name":"LibDiamond","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"1651:10:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibDiamond_$3887_$","typeString":"type(library LibDiamond)"}},"id":2302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1662:22:14","memberName":"enforceIsContractOwner","nodeType":"MemberAccess","referencedDeclaration":2810,"src":"1651:33:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":2303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1651:35:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2304,"nodeType":"ExpressionStatement","src":"1651:35:14"},{"expression":{"arguments":[{"id":2308,"name":"_newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2296,"src":"1724:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2305,"name":"LibDiamond","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"1696:10:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibDiamond_$3887_$","typeString":"type(library LibDiamond)"}},"id":2307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1707:16:14","memberName":"setContractOwner","nodeType":"MemberAccess","referencedDeclaration":2784,"src":"1696:27:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1696:38:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2310,"nodeType":"ExpressionStatement","src":"1696:38:14"}]},"documentation":{"id":2294,"nodeType":"StructuredDocumentation","src":"906:666:14","text":" @notice Transfer ownership of the contract to a new address\n @dev Only the current owner can call this function. This is a critical\n      security function as the owner has complete control over the diamond.\n      The ownership transfer happens immediately with no two-step process,\n      so extreme care should be taken to ensure the new owner address is correct.\n      Setting the owner to address(0) will effectively renounce ownership,\n      leaving the contract without an owner and unable to perform privileged\n      operations like diamond cuts.\n @param _newOwner The address of the new owner"},"functionSelector":"f2fde38b","id":2312,"implemented":true,"kind":"function","modifiers":[],"name":"transferOwnership","nameLocation":"1586:17:14","nodeType":"FunctionDefinition","overrides":{"id":2298,"nodeType":"OverrideSpecifier","overrides":[],"src":"1632:8:14"},"parameters":{"id":2297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2296,"mutability":"mutable","name":"_newOwner","nameLocation":"1612:9:14","nodeType":"VariableDeclaration","scope":2312,"src":"1604:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2295,"name":"address","nodeType":"ElementaryTypeName","src":"1604:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1603:19:14"},"returnParameters":{"id":2299,"nodeType":"ParameterList","parameters":[],"src":"1641:0:14"},"scope":2327,"src":"1577:164:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[2567],"body":{"id":2325,"nodeType":"Block","src":"2293:52:14","statements":[{"expression":{"id":2323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2319,"name":"owner_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2317,"src":"2303:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2320,"name":"LibDiamond","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"2312:10:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibDiamond_$3887_$","typeString":"type(library LibDiamond)"}},"id":2321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2323:13:14","memberName":"contractOwner","nodeType":"MemberAccess","referencedDeclaration":2796,"src":"2312:24:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2312:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2303:35:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2324,"nodeType":"ExpressionStatement","src":"2303:35:14"}]},"documentation":{"id":2313,"nodeType":"StructuredDocumentation","src":"1747:476:14","text":" @notice Get the current contract owner's address\n @dev This view function returns the address of the current owner\n      without making any state changes. The owner is stored in the\n      diamond storage pattern and retrieved through the LibDiamond library.\n      The owner has exclusive privileges for critical operations including\n      diamond cuts and transferring ownership.\n @return owner_ The current owner address"},"functionSelector":"8da5cb5b","id":2326,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"2237:5:14","nodeType":"FunctionDefinition","overrides":{"id":2315,"nodeType":"OverrideSpecifier","overrides":[],"src":"2254:8:14"},"parameters":{"id":2314,"nodeType":"ParameterList","parameters":[],"src":"2242:2:14"},"returnParameters":{"id":2318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2317,"mutability":"mutable","name":"owner_","nameLocation":"2285:6:14","nodeType":"VariableDeclaration","scope":2326,"src":"2277:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2316,"name":"address","nodeType":"ElementaryTypeName","src":"2277:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2276:16:14"},"scope":2327,"src":"2228:117:14","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2328,"src":"847:1613:14","usedErrors":[],"usedEvents":[2561,2673]}],"src":"32:2428:14"},"id":14},"contracts/interfaces/IDiamond.sol":{"ast":{"absolutePath":"contracts/interfaces/IDiamond.sol","exportedSymbols":{"DiamondContract":[2348],"DiamondSettings":[2340],"DiamondStorage":[2352],"IDiamond":[2358]},"id":2359,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2329,"literals":["solidity","^","0.8",".6"],"nodeType":"PragmaDirective","src":"31:23:15"},{"canonicalName":"DiamondSettings","id":2340,"members":[{"constant":false,"id":2331,"mutability":"mutable","name":"owner","nameLocation":"92:5:15","nodeType":"VariableDeclaration","scope":2340,"src":"84:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2330,"name":"address","nodeType":"ElementaryTypeName","src":"84:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2333,"mutability":"mutable","name":"factory","nameLocation":"109:7:15","nodeType":"VariableDeclaration","scope":2340,"src":"101:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2332,"name":"address","nodeType":"ElementaryTypeName","src":"101:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2335,"mutability":"mutable","name":"svgManager","nameLocation":"128:10:15","nodeType":"VariableDeclaration","scope":2340,"src":"120:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2334,"name":"address","nodeType":"ElementaryTypeName","src":"120:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2337,"mutability":"mutable","name":"symbol","nameLocation":"149:6:15","nodeType":"VariableDeclaration","scope":2340,"src":"142:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2336,"name":"string","nodeType":"ElementaryTypeName","src":"142:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2339,"mutability":"mutable","name":"name","nameLocation":"166:4:15","nodeType":"VariableDeclaration","scope":2340,"src":"159:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2338,"name":"string","nodeType":"ElementaryTypeName","src":"159:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"DiamondSettings","nameLocation":"64:15:15","nodeType":"StructDefinition","scope":2359,"src":"57:116:15","visibility":"public"},{"canonicalName":"DiamondContract","id":2348,"members":[{"constant":false,"id":2343,"mutability":"mutable","name":"settings","nameLocation":"218:8:15","nodeType":"VariableDeclaration","scope":2348,"src":"202:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondSettings_$2340_storage_ptr","typeString":"struct DiamondSettings"},"typeName":{"id":2342,"nodeType":"UserDefinedTypeName","pathNode":{"id":2341,"name":"DiamondSettings","nameLocations":["202:15:15"],"nodeType":"IdentifierPath","referencedDeclaration":2340,"src":"202:15:15"},"referencedDeclaration":2340,"src":"202:15:15","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondSettings_$2340_storage_ptr","typeString":"struct DiamondSettings"}},"visibility":"internal"},{"constant":false,"id":2347,"mutability":"mutable","name":"metadata","nameLocation":"254:8:15","nodeType":"VariableDeclaration","scope":2348,"src":"230:32:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_string_storage_$","typeString":"mapping(string => string)"},"typeName":{"id":2346,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2344,"name":"string","nodeType":"ElementaryTypeName","src":"238:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"230:23:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_string_storage_$","typeString":"mapping(string => string)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2345,"name":"string","nodeType":"ElementaryTypeName","src":"246:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"internal"}],"name":"DiamondContract","nameLocation":"182:15:15","nodeType":"StructDefinition","scope":2359,"src":"175:90:15","visibility":"public"},{"canonicalName":"DiamondStorage","id":2352,"members":[{"constant":false,"id":2351,"mutability":"mutable","name":"diamondContract","nameLocation":"309:15:15","nodeType":"VariableDeclaration","scope":2352,"src":"293:31:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondContract_$2348_storage_ptr","typeString":"struct DiamondContract"},"typeName":{"id":2350,"nodeType":"UserDefinedTypeName","pathNode":{"id":2349,"name":"DiamondContract","nameLocations":["293:15:15"],"nodeType":"IdentifierPath","referencedDeclaration":2348,"src":"293:15:15"},"referencedDeclaration":2348,"src":"293:15:15","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondContract_$2348_storage_ptr","typeString":"struct DiamondContract"}},"visibility":"internal"}],"name":"DiamondStorage","nameLocation":"274:14:15","nodeType":"StructDefinition","scope":2359,"src":"267:60:15","visibility":"public"},{"abstract":false,"baseContracts":[],"canonicalName":"IDiamond","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2358,"linearizedBaseContracts":[2358],"name":"IDiamond","nameLocation":"340:8:15","nodeType":"ContractDefinition","nodes":[{"functionSelector":"6013c44c","id":2357,"implemented":false,"kind":"function","modifiers":[],"name":"getDiamondAddress","nameLocation":"362:17:15","nodeType":"FunctionDefinition","parameters":{"id":2353,"nodeType":"ParameterList","parameters":[],"src":"379:2:15"},"returnParameters":{"id":2356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2355,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2357,"src":"405:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2354,"name":"address","nodeType":"ElementaryTypeName","src":"405:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"404:9:15"},"scope":2358,"src":"353:61:15","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2359,"src":"330:86:15","usedErrors":[],"usedEvents":[]}],"src":"31:387:15"},"id":15},"contracts/interfaces/IDiamondCut.sol":{"ast":{"absolutePath":"contracts/interfaces/IDiamondCut.sol","exportedSymbols":{"IDiamondCut":[2428]},"id":2429,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2360,"literals":["solidity","^","0.8",".6"],"nodeType":"PragmaDirective","src":"33:23:16"},{"abstract":false,"baseContracts":[],"canonicalName":"IDiamondCut","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2428,"linearizedBaseContracts":[2428],"name":"IDiamondCut","nameLocation":"380:11:16","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IDiamondCut.FacetCutAction","id":2364,"members":[{"id":2361,"name":"Add","nameLocation":"420:3:16","nodeType":"EnumValue","src":"420:3:16"},{"id":2362,"name":"Replace","nameLocation":"425:7:16","nodeType":"EnumValue","src":"425:7:16"},{"id":2363,"name":"Remove","nameLocation":"434:6:16","nodeType":"EnumValue","src":"434:6:16"}],"name":"FacetCutAction","nameLocation":"404:14:16","nodeType":"EnumDefinition","src":"399:42:16"},{"canonicalName":"IDiamondCut.FacetCut","id":2373,"members":[{"constant":false,"id":2366,"mutability":"mutable","name":"facetAddress","nameLocation":"519:12:16","nodeType":"VariableDeclaration","scope":2373,"src":"511:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2365,"name":"address","nodeType":"ElementaryTypeName","src":"511:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2369,"mutability":"mutable","name":"action","nameLocation":"557:6:16","nodeType":"VariableDeclaration","scope":2373,"src":"542:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_FacetCutAction_$2364","typeString":"enum IDiamondCut.FacetCutAction"},"typeName":{"id":2368,"nodeType":"UserDefinedTypeName","pathNode":{"id":2367,"name":"FacetCutAction","nameLocations":["542:14:16"],"nodeType":"IdentifierPath","referencedDeclaration":2364,"src":"542:14:16"},"referencedDeclaration":2364,"src":"542:14:16","typeDescriptions":{"typeIdentifier":"t_enum$_FacetCutAction_$2364","typeString":"enum IDiamondCut.FacetCutAction"}},"visibility":"internal"},{"constant":false,"id":2372,"mutability":"mutable","name":"functionSelectors","nameLocation":"583:17:16","nodeType":"VariableDeclaration","scope":2373,"src":"574:26:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_storage_ptr","typeString":"bytes4[]"},"typeName":{"baseType":{"id":2370,"name":"bytes4","nodeType":"ElementaryTypeName","src":"574:6:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":2371,"nodeType":"ArrayTypeName","src":"574:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_storage_ptr","typeString":"bytes4[]"}},"visibility":"internal"}],"name":"FacetCut","nameLocation":"491:8:16","nodeType":"StructDefinition","scope":2428,"src":"484:124:16","visibility":"public"},{"documentation":{"id":2374,"nodeType":"StructuredDocumentation","src":"616:443:16","text":"@notice Add/replace/remove any number of functions and optionally execute\n         a function with delegatecall\n @param _diamondCut Contains the facet addresses and function selectors\n @param _init The address of the contract or facet to execute _calldata\n @param _calldata A function call, including function selector and arguments\n                  _calldata is executed with delegatecall on _init"},"functionSelector":"1f931c1c","id":2385,"implemented":false,"kind":"function","modifiers":[],"name":"diamondCut","nameLocation":"1074:10:16","nodeType":"FunctionDefinition","parameters":{"id":2383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2378,"mutability":"mutable","name":"_diamondCut","nameLocation":"1115:11:16","nodeType":"VariableDeclaration","scope":2385,"src":"1095:31:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$2373_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IDiamondCut.FacetCut[]"},"typeName":{"baseType":{"id":2376,"nodeType":"UserDefinedTypeName","pathNode":{"id":2375,"name":"FacetCut","nameLocations":["1095:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":2373,"src":"1095:8:16"},"referencedDeclaration":2373,"src":"1095:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_FacetCut_$2373_storage_ptr","typeString":"struct IDiamondCut.FacetCut"}},"id":2377,"nodeType":"ArrayTypeName","src":"1095:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$2373_storage_$dyn_storage_ptr","typeString":"struct IDiamondCut.FacetCut[]"}},"visibility":"internal"},{"constant":false,"id":2380,"mutability":"mutable","name":"_init","nameLocation":"1145:5:16","nodeType":"VariableDeclaration","scope":2385,"src":"1137:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2379,"name":"address","nodeType":"ElementaryTypeName","src":"1137:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2382,"mutability":"mutable","name":"_calldata","nameLocation":"1176:9:16","nodeType":"VariableDeclaration","scope":2385,"src":"1161:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2381,"name":"bytes","nodeType":"ElementaryTypeName","src":"1161:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1084:108:16"},"returnParameters":{"id":2384,"nodeType":"ParameterList","parameters":[],"src":"1201:0:16"},"scope":2428,"src":"1065:137:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2386,"nodeType":"StructuredDocumentation","src":"1214:316:16","text":"@notice Propose an upgrade to be executed after the timelock period\n @param _diamondCut Contains the facet addresses and function selectors\n @param _init The address of the contract or facet to execute _calldata\n @param _calldata A function call, including function selector and arguments"},"functionSelector":"bbf2358e","id":2397,"implemented":false,"kind":"function","modifiers":[],"name":"proposeDiamondCut","nameLocation":"1545:17:16","nodeType":"FunctionDefinition","parameters":{"id":2395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2390,"mutability":"mutable","name":"_diamondCut","nameLocation":"1593:11:16","nodeType":"VariableDeclaration","scope":2397,"src":"1573:31:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$2373_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IDiamondCut.FacetCut[]"},"typeName":{"baseType":{"id":2388,"nodeType":"UserDefinedTypeName","pathNode":{"id":2387,"name":"FacetCut","nameLocations":["1573:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":2373,"src":"1573:8:16"},"referencedDeclaration":2373,"src":"1573:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_FacetCut_$2373_storage_ptr","typeString":"struct IDiamondCut.FacetCut"}},"id":2389,"nodeType":"ArrayTypeName","src":"1573:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$2373_storage_$dyn_storage_ptr","typeString":"struct IDiamondCut.FacetCut[]"}},"visibility":"internal"},{"constant":false,"id":2392,"mutability":"mutable","name":"_init","nameLocation":"1623:5:16","nodeType":"VariableDeclaration","scope":2397,"src":"1615:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2391,"name":"address","nodeType":"ElementaryTypeName","src":"1615:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2394,"mutability":"mutable","name":"_calldata","nameLocation":"1654:9:16","nodeType":"VariableDeclaration","scope":2397,"src":"1639:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2393,"name":"bytes","nodeType":"ElementaryTypeName","src":"1639:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1562:108:16"},"returnParameters":{"id":2396,"nodeType":"ParameterList","parameters":[],"src":"1679:0:16"},"scope":2428,"src":"1536:144:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2398,"nodeType":"StructuredDocumentation","src":"1692:75:16","text":"@notice Execute a previously proposed upgrade after the timelock period"},"functionSelector":"f37a5da0","id":2401,"implemented":false,"kind":"function","modifiers":[],"name":"executeDiamondCut","nameLocation":"1782:17:16","nodeType":"FunctionDefinition","parameters":{"id":2399,"nodeType":"ParameterList","parameters":[],"src":"1799:2:16"},"returnParameters":{"id":2400,"nodeType":"ParameterList","parameters":[],"src":"1810:0:16"},"scope":2428,"src":"1773:38:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2402,"nodeType":"StructuredDocumentation","src":"1823:37:16","text":"@notice Cancel a proposed upgrade"},"functionSelector":"6fb05998","id":2405,"implemented":false,"kind":"function","modifiers":[],"name":"cancelDiamondCut","nameLocation":"1875:16:16","nodeType":"FunctionDefinition","parameters":{"id":2403,"nodeType":"ParameterList","parameters":[],"src":"1891:2:16"},"returnParameters":{"id":2404,"nodeType":"ParameterList","parameters":[],"src":"1902:0:16"},"scope":2428,"src":"1866:37:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"eventSelector":"8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb673","id":2415,"name":"DiamondCut","nameLocation":"1917:10:16","nodeType":"EventDefinition","parameters":{"id":2414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2409,"indexed":false,"mutability":"mutable","name":"_diamondCut","nameLocation":"1939:11:16","nodeType":"VariableDeclaration","scope":2415,"src":"1928:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$2373_memory_ptr_$dyn_memory_ptr","typeString":"struct IDiamondCut.FacetCut[]"},"typeName":{"baseType":{"id":2407,"nodeType":"UserDefinedTypeName","pathNode":{"id":2406,"name":"FacetCut","nameLocations":["1928:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":2373,"src":"1928:8:16"},"referencedDeclaration":2373,"src":"1928:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_FacetCut_$2373_storage_ptr","typeString":"struct IDiamondCut.FacetCut"}},"id":2408,"nodeType":"ArrayTypeName","src":"1928:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$2373_storage_$dyn_storage_ptr","typeString":"struct IDiamondCut.FacetCut[]"}},"visibility":"internal"},{"constant":false,"id":2411,"indexed":false,"mutability":"mutable","name":"_init","nameLocation":"1960:5:16","nodeType":"VariableDeclaration","scope":2415,"src":"1952:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2410,"name":"address","nodeType":"ElementaryTypeName","src":"1952:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2413,"indexed":false,"mutability":"mutable","name":"_calldata","nameLocation":"1973:9:16","nodeType":"VariableDeclaration","scope":2415,"src":"1967:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2412,"name":"bytes","nodeType":"ElementaryTypeName","src":"1967:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1927:56:16"},"src":"1911:73:16"},{"anonymous":false,"eventSelector":"11c0a67eabfbe53177aaac87bbbb2f9c5730614d4c5c6a6ec177e86ddfe5c7e0","id":2423,"name":"DiamondCutProposed","nameLocation":"1996:18:16","nodeType":"EventDefinition","parameters":{"id":2422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2417,"indexed":true,"mutability":"mutable","name":"proposer","nameLocation":"2031:8:16","nodeType":"VariableDeclaration","scope":2423,"src":"2015:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2416,"name":"address","nodeType":"ElementaryTypeName","src":"2015:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2419,"indexed":true,"mutability":"mutable","name":"proposalTime","nameLocation":"2057:12:16","nodeType":"VariableDeclaration","scope":2423,"src":"2041:28:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2418,"name":"uint256","nodeType":"ElementaryTypeName","src":"2041:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2421,"indexed":false,"mutability":"mutable","name":"executionTime","nameLocation":"2079:13:16","nodeType":"VariableDeclaration","scope":2423,"src":"2071:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2420,"name":"uint256","nodeType":"ElementaryTypeName","src":"2071:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2014:79:16"},"src":"1990:104:16"},{"anonymous":false,"eventSelector":"de8f30fefd36ba49bcf89e333c7bafb2b3b3bad08938db1630376b2a66b15f6c","id":2427,"name":"DiamondCutCancelled","nameLocation":"2106:19:16","nodeType":"EventDefinition","parameters":{"id":2426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2425,"indexed":true,"mutability":"mutable","name":"canceller","nameLocation":"2142:9:16","nodeType":"VariableDeclaration","scope":2427,"src":"2126:25:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2424,"name":"address","nodeType":"ElementaryTypeName","src":"2126:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2125:27:16"},"src":"2100:53:16"}],"scope":2429,"src":"370:1786:16","usedErrors":[],"usedEvents":[2415,2423,2427]}],"src":"33:2125:16"},"id":16},"contracts/interfaces/IDiamondFacetInit.sol":{"ast":{"absolutePath":"contracts/interfaces/IDiamondFacetInit.sol","exportedSymbols":{"IDiamondCut":[2428],"IDiamondFacetInit":[2445],"IERC165":[2551]},"id":2446,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2430,"literals":["solidity","^","0.8",".6"],"nodeType":"PragmaDirective","src":"32:23:17"},{"absolutePath":"contracts/interfaces/IDiamondCut.sol","file":"./IDiamondCut.sol","id":2431,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2446,"sourceUnit":2429,"src":"57:27:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IERC165.sol","file":"./IERC165.sol","id":2432,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2446,"sourceUnit":2552,"src":"85:23:17","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2433,"name":"IERC165","nameLocations":["141:7:17"],"nodeType":"IdentifierPath","referencedDeclaration":2551,"src":"141:7:17"},"id":2434,"nodeType":"InheritanceSpecifier","src":"141:7:17"}],"canonicalName":"IDiamondFacetInit","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2445,"linearizedBaseContracts":[2445,2551],"name":"IDiamondFacetInit","nameLocation":"120:17:17","nodeType":"ContractDefinition","nodes":[{"functionSelector":"1a782b68","id":2444,"implemented":false,"kind":"function","modifiers":[],"name":"initializeFacet","nameLocation":"164:15:17","nodeType":"FunctionDefinition","parameters":{"id":2442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2436,"mutability":"mutable","name":"_owner","nameLocation":"197:6:17","nodeType":"VariableDeclaration","scope":2444,"src":"189:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2435,"name":"address","nodeType":"ElementaryTypeName","src":"189:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2439,"mutability":"mutable","name":"_facet","nameLocation":"242:6:17","nodeType":"VariableDeclaration","scope":2444,"src":"214:34:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FacetCut_$2373_memory_ptr","typeString":"struct IDiamondCut.FacetCut"},"typeName":{"id":2438,"nodeType":"UserDefinedTypeName","pathNode":{"id":2437,"name":"IDiamondCut.FacetCut","nameLocations":["214:11:17","226:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":2373,"src":"214:20:17"},"referencedDeclaration":2373,"src":"214:20:17","typeDescriptions":{"typeIdentifier":"t_struct$_FacetCut_$2373_storage_ptr","typeString":"struct IDiamondCut.FacetCut"}},"visibility":"internal"},{"constant":false,"id":2441,"mutability":"mutable","name":"_calldata","nameLocation":"273:9:17","nodeType":"VariableDeclaration","scope":2444,"src":"258:24:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2440,"name":"bytes","nodeType":"ElementaryTypeName","src":"258:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"179:104:17"},"returnParameters":{"id":2443,"nodeType":"ParameterList","parameters":[],"src":"292:0:17"},"scope":2445,"src":"155:138:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2446,"src":"110:185:17","usedErrors":[],"usedEvents":[]}],"src":"32:264:17"},"id":17},"contracts/interfaces/IDiamondFactory.sol":{"ast":{"absolutePath":"contracts/interfaces/IDiamondFactory.sol","exportedSymbols":{"DiamondFactoryContract":[2481],"DiamondFactoryInit":[2458],"IDiamondCut":[2428]},"id":2482,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2447,"literals":["solidity","^","0.8",".6"],"nodeType":"PragmaDirective","src":"32:23:18"},{"absolutePath":"contracts/interfaces/IDiamondCut.sol","file":"./IDiamondCut.sol","id":2449,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2482,"sourceUnit":2429,"src":"57:48:18","symbolAliases":[{"foreign":{"id":2448,"name":"IDiamondCut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"66:11:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"DiamondFactoryInit","id":2458,"members":[{"constant":false,"id":2451,"mutability":"mutable","name":"setName","nameLocation":"146:7:18","nodeType":"VariableDeclaration","scope":2458,"src":"139:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2450,"name":"string","nodeType":"ElementaryTypeName","src":"139:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2455,"mutability":"mutable","name":"facetAddresses","nameLocation":"182:14:18","nodeType":"VariableDeclaration","scope":2458,"src":"159:37:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$2373_storage_$dyn_storage_ptr","typeString":"struct IDiamondCut.FacetCut[]"},"typeName":{"baseType":{"id":2453,"nodeType":"UserDefinedTypeName","pathNode":{"id":2452,"name":"IDiamondCut.FacetCut","nameLocations":["159:11:18","171:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":2373,"src":"159:20:18"},"referencedDeclaration":2373,"src":"159:20:18","typeDescriptions":{"typeIdentifier":"t_struct$_FacetCut_$2373_storage_ptr","typeString":"struct IDiamondCut.FacetCut"}},"id":2454,"nodeType":"ArrayTypeName","src":"159:22:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$2373_storage_$dyn_storage_ptr","typeString":"struct IDiamondCut.FacetCut[]"}},"visibility":"internal"},{"constant":false,"id":2457,"mutability":"mutable","name":"diamondBytecode","nameLocation":"208:15:18","nodeType":"VariableDeclaration","scope":2458,"src":"202:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2456,"name":"bytes","nodeType":"ElementaryTypeName","src":"202:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"DiamondFactoryInit","nameLocation":"114:18:18","nodeType":"StructDefinition","scope":2482,"src":"107:119:18","visibility":"public"},{"canonicalName":"DiamondFactoryContract","id":2481,"members":[{"constant":false,"id":2461,"mutability":"mutable","name":"diamondSymbols","nameLocation":"273:14:18","nodeType":"VariableDeclaration","scope":2481,"src":"264:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2459,"name":"string","nodeType":"ElementaryTypeName","src":"264:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2460,"nodeType":"ArrayTypeName","src":"264:8:18","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":2465,"mutability":"mutable","name":"diamondAddresses","nameLocation":"320:16:18","nodeType":"VariableDeclaration","scope":2481,"src":"293:43:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string => address)"},"typeName":{"id":2464,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2462,"name":"string","nodeType":"ElementaryTypeName","src":"301:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"293:26:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2463,"name":"address","nodeType":"ElementaryTypeName","src":"311:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"internal"},{"constant":false,"id":2471,"mutability":"mutable","name":"facetsToAdd","nameLocation":"384:11:18","nodeType":"VariableDeclaration","scope":2481,"src":"342:53:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_array$_t_struct$_FacetCut_$2373_storage_$dyn_storage_$","typeString":"mapping(string => struct IDiamondCut.FacetCut[])"},"typeName":{"id":2470,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2466,"name":"string","nodeType":"ElementaryTypeName","src":"350:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"342:41:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_array$_t_struct$_FacetCut_$2373_storage_$dyn_storage_$","typeString":"mapping(string => struct IDiamondCut.FacetCut[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":2468,"nodeType":"UserDefinedTypeName","pathNode":{"id":2467,"name":"IDiamondCut.FacetCut","nameLocations":["360:11:18","372:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":2373,"src":"360:20:18"},"referencedDeclaration":2373,"src":"360:20:18","typeDescriptions":{"typeIdentifier":"t_struct$_FacetCut_$2373_storage_ptr","typeString":"struct IDiamondCut.FacetCut"}},"id":2469,"nodeType":"ArrayTypeName","src":"360:22:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$2373_storage_$dyn_storage_ptr","typeString":"struct IDiamondCut.FacetCut[]"}}},"visibility":"internal"},{"constant":false,"id":2474,"mutability":"mutable","name":"facetSets","nameLocation":"410:9:18","nodeType":"VariableDeclaration","scope":2481,"src":"401:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2472,"name":"string","nodeType":"ElementaryTypeName","src":"401:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2473,"nodeType":"ArrayTypeName","src":"401:8:18","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":2476,"mutability":"mutable","name":"defaultFacetSet","nameLocation":"432:15:18","nodeType":"VariableDeclaration","scope":2481,"src":"425:22:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2475,"name":"string","nodeType":"ElementaryTypeName","src":"425:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2478,"mutability":"mutable","name":"diamondInit_","nameLocation":"461:12:18","nodeType":"VariableDeclaration","scope":2481,"src":"453:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2477,"name":"address","nodeType":"ElementaryTypeName","src":"453:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2480,"mutability":"mutable","name":"calldata_","nameLocation":"485:9:18","nodeType":"VariableDeclaration","scope":2481,"src":"479:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2479,"name":"bytes","nodeType":"ElementaryTypeName","src":"479:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"DiamondFactoryContract","nameLocation":"235:22:18","nodeType":"StructDefinition","scope":2482,"src":"228:269:18","visibility":"public"}],"src":"32:466:18"},"id":18},"contracts/interfaces/IDiamondInit.sol":{"ast":{"absolutePath":"contracts/interfaces/IDiamondInit.sol","exportedSymbols":{"IDiamondCut":[2428],"IDiamondInit":[2498]},"id":2499,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2483,"literals":["solidity","^","0.8",".6"],"nodeType":"PragmaDirective","src":"32:23:19"},{"absolutePath":"contracts/interfaces/IDiamondCut.sol","file":"./IDiamondCut.sol","id":2484,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2499,"sourceUnit":2429,"src":"57:27:19","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IDiamondInit","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2498,"linearizedBaseContracts":[2498],"name":"IDiamondInit","nameLocation":"96:12:19","nodeType":"ContractDefinition","nodes":[{"functionSelector":"8130e84a","id":2497,"implemented":false,"kind":"function","modifiers":[],"name":"initialize","nameLocation":"124:10:19","nodeType":"FunctionDefinition","parameters":{"id":2495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2486,"mutability":"mutable","name":"_owner","nameLocation":"152:6:19","nodeType":"VariableDeclaration","scope":2497,"src":"144:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2485,"name":"address","nodeType":"ElementaryTypeName","src":"144:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2490,"mutability":"mutable","name":"_facets","nameLocation":"199:7:19","nodeType":"VariableDeclaration","scope":2497,"src":"169:37:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$2373_memory_ptr_$dyn_memory_ptr","typeString":"struct IDiamondCut.FacetCut[]"},"typeName":{"baseType":{"id":2488,"nodeType":"UserDefinedTypeName","pathNode":{"id":2487,"name":"IDiamondCut.FacetCut","nameLocations":["169:11:19","181:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":2373,"src":"169:20:19"},"referencedDeclaration":2373,"src":"169:20:19","typeDescriptions":{"typeIdentifier":"t_struct$_FacetCut_$2373_storage_ptr","typeString":"struct IDiamondCut.FacetCut"}},"id":2489,"nodeType":"ArrayTypeName","src":"169:22:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$2373_storage_$dyn_storage_ptr","typeString":"struct IDiamondCut.FacetCut[]"}},"visibility":"internal"},{"constant":false,"id":2492,"mutability":"mutable","name":"_init","nameLocation":"224:5:19","nodeType":"VariableDeclaration","scope":2497,"src":"216:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2491,"name":"address","nodeType":"ElementaryTypeName","src":"216:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2494,"mutability":"mutable","name":"_calldata","nameLocation":"254:9:19","nodeType":"VariableDeclaration","scope":2497,"src":"239:24:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2493,"name":"bytes","nodeType":"ElementaryTypeName","src":"239:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"134:130:19"},"returnParameters":{"id":2496,"nodeType":"ParameterList","parameters":[],"src":"273:0:19"},"scope":2498,"src":"115:159:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2499,"src":"86:190:19","usedErrors":[],"usedEvents":[]}],"src":"32:245:19"},"id":19},"contracts/interfaces/IDiamondLoupe.sol":{"ast":{"absolutePath":"contracts/interfaces/IDiamondLoupe.sol","exportedSymbols":{"IDiamondLoupe":[2540]},"id":2541,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2500,"literals":["solidity","^","0.8",".6"],"nodeType":"PragmaDirective","src":"33:23:20"},{"abstract":false,"baseContracts":[],"canonicalName":"IDiamondLoupe","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2540,"linearizedBaseContracts":[2540],"name":"IDiamondLoupe","nameLocation":"483:13:20","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IDiamondLoupe.Facet","documentation":{"id":2501,"nodeType":"StructuredDocumentation","src":"504:77:20","text":"These functions are expected to be called frequently\n by tools."},"id":2507,"members":[{"constant":false,"id":2503,"mutability":"mutable","name":"facetAddress","nameLocation":"619:12:20","nodeType":"VariableDeclaration","scope":2507,"src":"611:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2502,"name":"address","nodeType":"ElementaryTypeName","src":"611:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2506,"mutability":"mutable","name":"functionSelectors","nameLocation":"651:17:20","nodeType":"VariableDeclaration","scope":2507,"src":"642:26:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_storage_ptr","typeString":"bytes4[]"},"typeName":{"baseType":{"id":2504,"name":"bytes4","nodeType":"ElementaryTypeName","src":"642:6:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":2505,"nodeType":"ArrayTypeName","src":"642:8:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_storage_ptr","typeString":"bytes4[]"}},"visibility":"internal"}],"name":"Facet","nameLocation":"594:5:20","nodeType":"StructDefinition","scope":2540,"src":"587:89:20","visibility":"public"},{"documentation":{"id":2508,"nodeType":"StructuredDocumentation","src":"684:107:20","text":"@notice Gets all facet addresses and their four byte function selectors.\n @return facets_ Facet"},"functionSelector":"7a0ed627","id":2515,"implemented":false,"kind":"function","modifiers":[],"name":"facets","nameLocation":"806:6:20","nodeType":"FunctionDefinition","parameters":{"id":2509,"nodeType":"ParameterList","parameters":[],"src":"812:2:20"},"returnParameters":{"id":2514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2513,"mutability":"mutable","name":"facets_","nameLocation":"853:7:20","nodeType":"VariableDeclaration","scope":2515,"src":"838:22:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Facet_$2507_memory_ptr_$dyn_memory_ptr","typeString":"struct IDiamondLoupe.Facet[]"},"typeName":{"baseType":{"id":2511,"nodeType":"UserDefinedTypeName","pathNode":{"id":2510,"name":"Facet","nameLocations":["838:5:20"],"nodeType":"IdentifierPath","referencedDeclaration":2507,"src":"838:5:20"},"referencedDeclaration":2507,"src":"838:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_Facet_$2507_storage_ptr","typeString":"struct IDiamondLoupe.Facet"}},"id":2512,"nodeType":"ArrayTypeName","src":"838:7:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Facet_$2507_storage_$dyn_storage_ptr","typeString":"struct IDiamondLoupe.Facet[]"}},"visibility":"internal"}],"src":"837:24:20"},"scope":2540,"src":"797:65:20","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2516,"nodeType":"StructuredDocumentation","src":"870:157:20","text":"@notice Gets all the function selectors supported by a specific facet.\n @param _facet The facet address.\n @return facetFunctionSelectors_"},"functionSelector":"adfca15e","id":2524,"implemented":false,"kind":"function","modifiers":[],"name":"facetFunctionSelectors","nameLocation":"1042:22:20","nodeType":"FunctionDefinition","parameters":{"id":2519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2518,"mutability":"mutable","name":"_facet","nameLocation":"1073:6:20","nodeType":"VariableDeclaration","scope":2524,"src":"1065:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2517,"name":"address","nodeType":"ElementaryTypeName","src":"1065:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1064:16:20"},"returnParameters":{"id":2523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2522,"mutability":"mutable","name":"facetFunctionSelectors_","nameLocation":"1120:23:20","nodeType":"VariableDeclaration","scope":2524,"src":"1104:39:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[]"},"typeName":{"baseType":{"id":2520,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1104:6:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":2521,"nodeType":"ArrayTypeName","src":"1104:8:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_storage_ptr","typeString":"bytes4[]"}},"visibility":"internal"}],"src":"1103:41:20"},"scope":2540,"src":"1033:112:20","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2525,"nodeType":"StructuredDocumentation","src":"1153:91:20","text":"@notice Get all the facet addresses used by a diamond.\n @return facetAddresses_"},"functionSelector":"52ef6b2c","id":2531,"implemented":false,"kind":"function","modifiers":[],"name":"facetAddresses","nameLocation":"1259:14:20","nodeType":"FunctionDefinition","parameters":{"id":2526,"nodeType":"ParameterList","parameters":[],"src":"1273:2:20"},"returnParameters":{"id":2530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2529,"mutability":"mutable","name":"facetAddresses_","nameLocation":"1316:15:20","nodeType":"VariableDeclaration","scope":2531,"src":"1299:32:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2527,"name":"address","nodeType":"ElementaryTypeName","src":"1299:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2528,"nodeType":"ArrayTypeName","src":"1299:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"1298:34:20"},"scope":2540,"src":"1250:83:20","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2532,"nodeType":"StructuredDocumentation","src":"1341:222:20","text":"@notice Gets the facet that supports the given selector.\n @dev If facet is not found return address(0).\n @param _functionSelector The function selector.\n @return facetAddress_ The facet address."},"functionSelector":"cdffacc6","id":2539,"implemented":false,"kind":"function","modifiers":[],"name":"facetAddress","nameLocation":"1578:12:20","nodeType":"FunctionDefinition","parameters":{"id":2535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2534,"mutability":"mutable","name":"_functionSelector","nameLocation":"1598:17:20","nodeType":"VariableDeclaration","scope":2539,"src":"1591:24:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2533,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1591:6:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1590:26:20"},"returnParameters":{"id":2538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2537,"mutability":"mutable","name":"facetAddress_","nameLocation":"1648:13:20","nodeType":"VariableDeclaration","scope":2539,"src":"1640:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2536,"name":"address","nodeType":"ElementaryTypeName","src":"1640:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1639:23:20"},"scope":2540,"src":"1569:94:20","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2541,"src":"473:1193:20","usedErrors":[],"usedEvents":[]}],"src":"33:1635:20"},"id":20},"contracts/interfaces/IERC165.sol":{"ast":{"absolutePath":"contracts/interfaces/IERC165.sol","exportedSymbols":{"IERC165":[2551]},"id":2552,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2542,"literals":["solidity","^","0.8",".6"],"nodeType":"PragmaDirective","src":"32:23:21"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2551,"linearizedBaseContracts":[2551],"name":"IERC165","nameLocation":"67:7:21","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2543,"nodeType":"StructuredDocumentation","src":"81:373:21","text":"@notice Query if a contract implements an interface\n @param interfaceId The interface identifier, as specified in ERC-165\n @dev Interface identification is specified in ERC-165. This function\n  uses less than 30,000 gas.\n @return `true` if the contract implements `interfaceID` and\n  `interfaceID` is not 0xffffffff, `false` otherwise"},"functionSelector":"01ffc9a7","id":2550,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"468:17:21","nodeType":"FunctionDefinition","parameters":{"id":2546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2545,"mutability":"mutable","name":"interfaceId","nameLocation":"493:11:21","nodeType":"VariableDeclaration","scope":2550,"src":"486:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2544,"name":"bytes4","nodeType":"ElementaryTypeName","src":"486:6:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"485:20:21"},"returnParameters":{"id":2549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2548,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2550,"src":"529:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2547,"name":"bool","nodeType":"ElementaryTypeName","src":"529:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"528:6:21"},"scope":2551,"src":"459:76:21","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2552,"src":"57:480:21","usedErrors":[],"usedEvents":[]}],"src":"32:506:21"},"id":21},"contracts/interfaces/IERC173.sol":{"ast":{"absolutePath":"contracts/interfaces/IERC173.sol","exportedSymbols":{"IERC173":[2574]},"id":2575,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2553,"literals":["solidity","^","0.8",".6"],"nodeType":"PragmaDirective","src":"32:23:22"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC173","contractDependencies":[],"contractKind":"interface","documentation":{"id":2554,"nodeType":"StructuredDocumentation","src":"57:114:22","text":"@title ERC-173 Contract Ownership Standard\n  Note: the ERC-165 identifier for this interface is 0x7f5828d0"},"fullyImplemented":false,"id":2574,"linearizedBaseContracts":[2574],"name":"IERC173","nameLocation":"197:7:22","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2555,"nodeType":"StructuredDocumentation","src":"211:57:22","text":"@dev This emits when ownership of a contract changes."},"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":2561,"name":"OwnershipTransferred","nameLocation":"279:20:22","nodeType":"EventDefinition","parameters":{"id":2560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2557,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"316:13:22","nodeType":"VariableDeclaration","scope":2561,"src":"300:29:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2556,"name":"address","nodeType":"ElementaryTypeName","src":"300:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2559,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"347:8:22","nodeType":"VariableDeclaration","scope":2561,"src":"331:24:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2558,"name":"address","nodeType":"ElementaryTypeName","src":"331:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"299:57:22"},"src":"273:84:22"},{"documentation":{"id":2562,"nodeType":"StructuredDocumentation","src":"363:89:22","text":"@notice Get the address of the owner\n @return owner_ The address of the owner."},"functionSelector":"8da5cb5b","id":2567,"implemented":false,"kind":"function","modifiers":[],"name":"owner","nameLocation":"466:5:22","nodeType":"FunctionDefinition","parameters":{"id":2563,"nodeType":"ParameterList","parameters":[],"src":"471:2:22"},"returnParameters":{"id":2566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2565,"mutability":"mutable","name":"owner_","nameLocation":"505:6:22","nodeType":"VariableDeclaration","scope":2567,"src":"497:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2564,"name":"address","nodeType":"ElementaryTypeName","src":"497:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"496:16:22"},"scope":2574,"src":"457:56:22","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2568,"nodeType":"StructuredDocumentation","src":"519:198:22","text":"@notice Set the address of the new owner of the contract\n @dev Set _newOwner to address(0) to renounce any ownership.\n @param _newOwner The address of the new owner of the contract"},"functionSelector":"f2fde38b","id":2573,"implemented":false,"kind":"function","modifiers":[],"name":"transferOwnership","nameLocation":"731:17:22","nodeType":"FunctionDefinition","parameters":{"id":2571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2570,"mutability":"mutable","name":"_newOwner","nameLocation":"757:9:22","nodeType":"VariableDeclaration","scope":2573,"src":"749:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2569,"name":"address","nodeType":"ElementaryTypeName","src":"749:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"748:19:22"},"returnParameters":{"id":2572,"nodeType":"ParameterList","parameters":[],"src":"776:0:22"},"scope":2574,"src":"722:55:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2575,"src":"187:592:22","usedErrors":[],"usedEvents":[2561]}],"src":"32:748:22"},"id":22},"contracts/interfaces/IERC721Enumerable.sol":{"ast":{"absolutePath":"contracts/interfaces/IERC721Enumerable.sol","exportedSymbols":{"ERC721EnumerableContract":[2595],"IERC721":[396],"IERC721Enumerable":[2623]},"id":2624,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2576,"literals":["solidity","^","0.8",".6"],"nodeType":"PragmaDirective","src":"129:23:23"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC721.sol","file":"@openzeppelin/contracts/interfaces/IERC721.sol","id":2577,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2624,"sourceUnit":8,"src":"154:56:23","symbolAliases":[],"unitAlias":""},{"canonicalName":"ERC721EnumerableContract","id":2595,"members":[{"constant":false,"id":2583,"mutability":"mutable","name":"_ownedTokens","nameLocation":"351:12:23","nodeType":"VariableDeclaration","scope":2595,"src":"303:60:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"},"typeName":{"id":2582,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2578,"name":"address","nodeType":"ElementaryTypeName","src":"311:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"303:47:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2581,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2579,"name":"uint256","nodeType":"ElementaryTypeName","src":"330:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"322:27:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2580,"name":"uint256","nodeType":"ElementaryTypeName","src":"341:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"internal"},{"constant":false,"id":2587,"mutability":"mutable","name":"_ownedTokensIndex","nameLocation":"461:17:23","nodeType":"VariableDeclaration","scope":2595,"src":"433:45:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":2586,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2584,"name":"uint256","nodeType":"ElementaryTypeName","src":"441:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"433:27:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2585,"name":"uint256","nodeType":"ElementaryTypeName","src":"452:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"constant":false,"id":2590,"mutability":"mutable","name":"_allTokens","nameLocation":"549:10:23","nodeType":"VariableDeclaration","scope":2595,"src":"539:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2588,"name":"uint256","nodeType":"ElementaryTypeName","src":"539:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2589,"nodeType":"ArrayTypeName","src":"539:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2594,"mutability":"mutable","name":"_allTokensIndex","nameLocation":"658:15:23","nodeType":"VariableDeclaration","scope":2595,"src":"630:43:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":2593,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2591,"name":"uint256","nodeType":"ElementaryTypeName","src":"638:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"630:27:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2592,"name":"uint256","nodeType":"ElementaryTypeName","src":"649:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"ERC721EnumerableContract","nameLocation":"219:24:23","nodeType":"StructDefinition","scope":2624,"src":"212:464:23","visibility":"public"},{"abstract":false,"baseContracts":[{"baseName":{"id":2597,"name":"IERC721","nameLocations":["846:7:23"],"nodeType":"IdentifierPath","referencedDeclaration":396,"src":"846:7:23"},"id":2598,"nodeType":"InheritanceSpecifier","src":"846:7:23"}],"canonicalName":"IERC721Enumerable","contractDependencies":[],"contractKind":"interface","documentation":{"id":2596,"nodeType":"StructuredDocumentation","src":"678:136:23","text":" @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":2623,"linearizedBaseContracts":[2623,396,436],"name":"IERC721Enumerable","nameLocation":"825:17:23","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2599,"nodeType":"StructuredDocumentation","src":"860:82:23","text":" @dev Returns the total amount of tokens stored by the contract."},"functionSelector":"18160ddd","id":2604,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"956:11:23","nodeType":"FunctionDefinition","parameters":{"id":2600,"nodeType":"ParameterList","parameters":[],"src":"967:2:23"},"returnParameters":{"id":2603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2602,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2604,"src":"993:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2601,"name":"uint256","nodeType":"ElementaryTypeName","src":"993:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"992:9:23"},"scope":2623,"src":"947:55:23","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2605,"nodeType":"StructuredDocumentation","src":"1008:171:23","text":" @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n Use along with {balanceOf} to enumerate all of ``owner``'s tokens."},"functionSelector":"2f745c59","id":2614,"implemented":false,"kind":"function","modifiers":[],"name":"tokenOfOwnerByIndex","nameLocation":"1193:19:23","nodeType":"FunctionDefinition","parameters":{"id":2610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2607,"mutability":"mutable","name":"owner","nameLocation":"1221:5:23","nodeType":"VariableDeclaration","scope":2614,"src":"1213:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2606,"name":"address","nodeType":"ElementaryTypeName","src":"1213:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2609,"mutability":"mutable","name":"index","nameLocation":"1236:5:23","nodeType":"VariableDeclaration","scope":2614,"src":"1228:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2608,"name":"uint256","nodeType":"ElementaryTypeName","src":"1228:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1212:30:23"},"returnParameters":{"id":2613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2612,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2614,"src":"1266:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2611,"name":"uint256","nodeType":"ElementaryTypeName","src":"1266:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1265:9:23"},"scope":2623,"src":"1184:91:23","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2615,"nodeType":"StructuredDocumentation","src":"1281:164:23","text":" @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n Use along with {totalSupply} to enumerate all tokens."},"functionSelector":"4f6ccce7","id":2622,"implemented":false,"kind":"function","modifiers":[],"name":"tokenByIndex","nameLocation":"1459:12:23","nodeType":"FunctionDefinition","parameters":{"id":2618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2617,"mutability":"mutable","name":"index","nameLocation":"1480:5:23","nodeType":"VariableDeclaration","scope":2622,"src":"1472:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2616,"name":"uint256","nodeType":"ElementaryTypeName","src":"1472:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1471:15:23"},"returnParameters":{"id":2621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2620,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2622,"src":"1510:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2619,"name":"uint256","nodeType":"ElementaryTypeName","src":"1510:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1509:9:23"},"scope":2623,"src":"1450:69:23","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2624,"src":"815:706:23","usedErrors":[],"usedEvents":[295,304,313]}],"src":"129:1393:23"},"id":23},"contracts/libraries/DiamondLib.sol":{"ast":{"absolutePath":"contracts/libraries/DiamondLib.sol","exportedSymbols":{"DiamondInit":[3905],"DiamondLib":[2656],"DiamondStorage":[2352],"IDiamondCut":[2428],"IDiamondLoupe":[2540],"IERC165":[436],"IERC173":[2574],"IERC721":[396],"IERC721Metadata":[424],"LibDiamond":[3887]},"id":2657,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2625,"literals":["solidity","^","0.8",".6"],"nodeType":"PragmaDirective","src":"31:23:24"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"@openzeppelin/contracts/interfaces/IERC165.sol","id":2626,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2657,"sourceUnit":4,"src":"56:56:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC721.sol","file":"@openzeppelin/contracts/interfaces/IERC721.sol","id":2627,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2657,"sourceUnit":8,"src":"113:56:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC721Metadata.sol","file":"@openzeppelin/contracts/interfaces/IERC721Metadata.sol","id":2628,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2657,"sourceUnit":12,"src":"170:64:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IDiamondCut.sol","file":"../interfaces/IDiamondCut.sol","id":2630,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2657,"sourceUnit":2429,"src":"236:60:24","symbolAliases":[{"foreign":{"id":2629,"name":"IDiamondCut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"245:11:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/IDiamond.sol","file":"../interfaces/IDiamond.sol","id":2632,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2657,"sourceUnit":2359,"src":"297:60:24","symbolAliases":[{"foreign":{"id":2631,"name":"DiamondStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"306:14:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/IDiamondLoupe.sol","file":"../interfaces/IDiamondLoupe.sol","id":2634,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2657,"sourceUnit":2541,"src":"358:64:24","symbolAliases":[{"foreign":{"id":2633,"name":"IDiamondLoupe","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2540,"src":"367:13:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/IERC173.sol","file":"../interfaces/IERC173.sol","id":2636,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2657,"sourceUnit":2575,"src":"423:52:24","symbolAliases":[{"foreign":{"id":2635,"name":"IERC173","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2574,"src":"432:7:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/libraries/LibDiamond.sol","file":"./LibDiamond.sol","id":2637,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2657,"sourceUnit":3888,"src":"477:26:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/upgradeInitializers/DiamondInit.sol","file":"../upgradeInitializers/DiamondInit.sol","id":2638,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2657,"sourceUnit":3906,"src":"505:48:24","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"DiamondLib","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":2656,"linearizedBaseContracts":[2656],"name":"DiamondLib","nameLocation":"563:10:24","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2643,"mutability":"constant","name":"DIAMOND_STORAGE_POSITION","nameLocation":"605:24:24","nodeType":"VariableDeclaration","scope":2656,"src":"579:121:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2639,"name":"bytes32","nodeType":"ElementaryTypeName","src":"579:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"6469616d6f6e642e6e657874626c6f636b2e62697467656d2e6170702e4469616d6f6e6453746f726167652e73746f72616765","id":2641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"646:53:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b28ada7424160f36dba04e603ff68d11ac4a3eeb1ef7a9911d79d949607b740","typeString":"literal_string \"diamond.nextblock.bitgem.app.DiamondStorage.storage\""},"value":"diamond.nextblock.bitgem.app.DiamondStorage.storage"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_3b28ada7424160f36dba04e603ff68d11ac4a3eeb1ef7a9911d79d949607b740","typeString":"literal_string \"diamond.nextblock.bitgem.app.DiamondStorage.storage\""}],"id":2640,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"636:9:24","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"636:64:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"body":{"id":2654,"nodeType":"Block","src":"781:101:24","statements":[{"assignments":[2650],"declarations":[{"constant":false,"id":2650,"mutability":"mutable","name":"position","nameLocation":"795:8:24","nodeType":"VariableDeclaration","scope":2654,"src":"787:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2649,"name":"bytes32","nodeType":"ElementaryTypeName","src":"787:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2652,"initialValue":{"id":2651,"name":"DIAMOND_STORAGE_POSITION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2643,"src":"806:24:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"787:43:24"},{"AST":{"nodeType":"YulBlock","src":"845:33:24","statements":[{"nodeType":"YulAssignment","src":"853:19:24","value":{"name":"position","nodeType":"YulIdentifier","src":"864:8:24"},"variableNames":[{"name":"ds.slot","nodeType":"YulIdentifier","src":"853:7:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2647,"isOffset":false,"isSlot":true,"src":"853:7:24","suffix":"slot","valueSize":1},{"declaration":2650,"isOffset":false,"isSlot":false,"src":"864:8:24","valueSize":1}],"id":2653,"nodeType":"InlineAssembly","src":"836:42:24"}]},"id":2655,"implemented":true,"kind":"function","modifiers":[],"name":"diamondStorage","nameLocation":"714:14:24","nodeType":"FunctionDefinition","parameters":{"id":2644,"nodeType":"ParameterList","parameters":[],"src":"728:2:24"},"returnParameters":{"id":2648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2647,"mutability":"mutable","name":"ds","nameLocation":"777:2:24","nodeType":"VariableDeclaration","scope":2655,"src":"754:25:24","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2352_storage_ptr","typeString":"struct DiamondStorage"},"typeName":{"id":2646,"nodeType":"UserDefinedTypeName","pathNode":{"id":2645,"name":"DiamondStorage","nameLocations":["754:14:24"],"nodeType":"IdentifierPath","referencedDeclaration":2352,"src":"754:14:24"},"referencedDeclaration":2352,"src":"754:14:24","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2352_storage_ptr","typeString":"struct DiamondStorage"}},"visibility":"internal"}],"src":"753:27:24"},"scope":2656,"src":"705:177:24","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2657,"src":"555:329:24","usedErrors":[],"usedEvents":[]}],"src":"31:854:24"},"id":24},"contracts/libraries/LibDiamond.sol":{"ast":{"absolutePath":"contracts/libraries/LibDiamond.sol","exportedSymbols":{"IDiamondCut":[2428],"IERC173":[2574],"LibDiamond":[3887]},"id":3888,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2658,"literals":["solidity","^","0.8",".6"],"nodeType":"PragmaDirective","src":"32:23:25"},{"absolutePath":"contracts/interfaces/IDiamondCut.sol","file":"../interfaces/IDiamondCut.sol","id":2660,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3888,"sourceUnit":2429,"src":"361:60:25","symbolAliases":[{"foreign":{"id":2659,"name":"IDiamondCut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"370:11:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/IERC173.sol","file":"../interfaces/IERC173.sol","id":2661,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3888,"sourceUnit":2575,"src":"422:35:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IDiamondCut.sol","file":"../interfaces/IDiamondCut.sol","id":2662,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3888,"sourceUnit":2429,"src":"483:39:25","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"LibDiamond","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":3887,"linearizedBaseContracts":[3887],"name":"LibDiamond","nameLocation":"680:10:25","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2667,"mutability":"constant","name":"DIAMOND_STORAGE_POSITION","nameLocation":"714:24:25","nodeType":"VariableDeclaration","scope":3887,"src":"697:89:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2663,"name":"bytes32","nodeType":"ElementaryTypeName","src":"697:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"6469616d6f6e642e7374616e646172642e6469616d6f6e642e73746f72616765","id":2665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"751:34:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_c8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c","typeString":"literal_string \"diamond.standard.diamond.storage\""},"value":"diamond.standard.diamond.storage"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c","typeString":"literal_string \"diamond.standard.diamond.storage\""}],"id":2664,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"741:9:25","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"741:45:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":2673,"name":"OwnershipTransferred","nameLocation":"799:20:25","nodeType":"EventDefinition","parameters":{"id":2672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2669,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"836:13:25","nodeType":"VariableDeclaration","scope":2673,"src":"820:29:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2668,"name":"address","nodeType":"ElementaryTypeName","src":"820:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2671,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"867:8:25","nodeType":"VariableDeclaration","scope":2673,"src":"851:24:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2670,"name":"address","nodeType":"ElementaryTypeName","src":"851:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"819:57:25"},"src":"793:84:25"},{"anonymous":false,"eventSelector":"8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb673","id":2683,"name":"DiamondCut","nameLocation":"888:10:25","nodeType":"EventDefinition","parameters":{"id":2682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2677,"indexed":false,"mutability":"mutable","name":"_diamondCut","nameLocation":"922:11:25","nodeType":"VariableDeclaration","scope":2683,"src":"899:34:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$2373_memory_ptr_$dyn_memory_ptr","typeString":"struct IDiamondCut.FacetCut[]"},"typeName":{"baseType":{"id":2675,"nodeType":"UserDefinedTypeName","pathNode":{"id":2674,"name":"IDiamondCut.FacetCut","nameLocations":["899:11:25","911:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":2373,"src":"899:20:25"},"referencedDeclaration":2373,"src":"899:20:25","typeDescriptions":{"typeIdentifier":"t_struct$_FacetCut_$2373_storage_ptr","typeString":"struct IDiamondCut.FacetCut"}},"id":2676,"nodeType":"ArrayTypeName","src":"899:22:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$2373_storage_$dyn_storage_ptr","typeString":"struct IDiamondCut.FacetCut[]"}},"visibility":"internal"},{"constant":false,"id":2679,"indexed":false,"mutability":"mutable","name":"_init","nameLocation":"943:5:25","nodeType":"VariableDeclaration","scope":2683,"src":"935:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2678,"name":"address","nodeType":"ElementaryTypeName","src":"935:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2681,"indexed":false,"mutability":"mutable","name":"_calldata","nameLocation":"956:9:25","nodeType":"VariableDeclaration","scope":2683,"src":"950:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2680,"name":"bytes","nodeType":"ElementaryTypeName","src":"950:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"898:68:25"},"src":"882:85:25"},{"anonymous":false,"eventSelector":"11c0a67eabfbe53177aaac87bbbb2f9c5730614d4c5c6a6ec177e86ddfe5c7e0","id":2691,"name":"DiamondCutProposed","nameLocation":"978:18:25","nodeType":"EventDefinition","parameters":{"id":2690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2685,"indexed":true,"mutability":"mutable","name":"proposer","nameLocation":"1013:8:25","nodeType":"VariableDeclaration","scope":2691,"src":"997:24:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2684,"name":"address","nodeType":"ElementaryTypeName","src":"997:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2687,"indexed":true,"mutability":"mutable","name":"proposalTime","nameLocation":"1039:12:25","nodeType":"VariableDeclaration","scope":2691,"src":"1023:28:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2686,"name":"uint256","nodeType":"ElementaryTypeName","src":"1023:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2689,"indexed":false,"mutability":"mutable","name":"executionTime","nameLocation":"1061:13:25","nodeType":"VariableDeclaration","scope":2691,"src":"1053:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2688,"name":"uint256","nodeType":"ElementaryTypeName","src":"1053:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"996:79:25"},"src":"972:104:25"},{"anonymous":false,"eventSelector":"de8f30fefd36ba49bcf89e333c7bafb2b3b3bad08938db1630376b2a66b15f6c","id":2695,"name":"DiamondCutCancelled","nameLocation":"1087:19:25","nodeType":"EventDefinition","parameters":{"id":2694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2693,"indexed":true,"mutability":"mutable","name":"canceller","nameLocation":"1123:9:25","nodeType":"VariableDeclaration","scope":2695,"src":"1107:25:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2692,"name":"address","nodeType":"ElementaryTypeName","src":"1107:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1106:27:25"},"src":"1081:53:25"},{"canonicalName":"LibDiamond.FacetAddressAndPosition","id":2700,"members":[{"constant":false,"id":2697,"mutability":"mutable","name":"facetAddress","nameLocation":"1189:12:25","nodeType":"VariableDeclaration","scope":2700,"src":"1181:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2696,"name":"address","nodeType":"ElementaryTypeName","src":"1181:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2699,"mutability":"mutable","name":"functionSelectorPosition","nameLocation":"1218:24:25","nodeType":"VariableDeclaration","scope":2700,"src":"1211:31:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2698,"name":"uint96","nodeType":"ElementaryTypeName","src":"1211:6:25","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"name":"FacetAddressAndPosition","nameLocation":"1147:23:25","nodeType":"StructDefinition","scope":3887,"src":"1140:171:25","visibility":"public"},{"canonicalName":"LibDiamond.FacetFunctionSelectors","id":2706,"members":[{"constant":false,"id":2703,"mutability":"mutable","name":"functionSelectors","nameLocation":"1366:17:25","nodeType":"VariableDeclaration","scope":2706,"src":"1357:26:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_storage_ptr","typeString":"bytes4[]"},"typeName":{"baseType":{"id":2701,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1357:6:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":2702,"nodeType":"ArrayTypeName","src":"1357:8:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_storage_ptr","typeString":"bytes4[]"}},"visibility":"internal"},{"constant":false,"id":2705,"mutability":"mutable","name":"facetAddressPosition","nameLocation":"1401:20:25","nodeType":"VariableDeclaration","scope":2706,"src":"1393:28:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2704,"name":"uint256","nodeType":"ElementaryTypeName","src":"1393:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"FacetFunctionSelectors","nameLocation":"1324:22:25","nodeType":"StructDefinition","scope":3887,"src":"1317:163:25","visibility":"public"},{"canonicalName":"LibDiamond.UpgradeProposal","id":2719,"members":[{"constant":false,"id":2710,"mutability":"mutable","name":"diamondCut","nameLocation":"1600:10:25","nodeType":"VariableDeclaration","scope":2719,"src":"1577:33:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$2373_storage_$dyn_storage_ptr","typeString":"struct IDiamondCut.FacetCut[]"},"typeName":{"baseType":{"id":2708,"nodeType":"UserDefinedTypeName","pathNode":{"id":2707,"name":"IDiamondCut.FacetCut","nameLocations":["1577:11:25","1589:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":2373,"src":"1577:20:25"},"referencedDeclaration":2373,"src":"1577:20:25","typeDescriptions":{"typeIdentifier":"t_struct$_FacetCut_$2373_storage_ptr","typeString":"struct IDiamondCut.FacetCut"}},"id":2709,"nodeType":"ArrayTypeName","src":"1577:22:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$2373_storage_$dyn_storage_ptr","typeString":"struct IDiamondCut.FacetCut[]"}},"visibility":"internal"},{"constant":false,"id":2712,"mutability":"mutable","name":"initAddress","nameLocation":"1628:11:25","nodeType":"VariableDeclaration","scope":2719,"src":"1620:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2711,"name":"address","nodeType":"ElementaryTypeName","src":"1620:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2714,"mutability":"mutable","name":"initCalldata","nameLocation":"1655:12:25","nodeType":"VariableDeclaration","scope":2719,"src":"1649:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2713,"name":"bytes","nodeType":"ElementaryTypeName","src":"1649:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2716,"mutability":"mutable","name":"proposalTime","nameLocation":"1685:12:25","nodeType":"VariableDeclaration","scope":2719,"src":"1677:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2715,"name":"uint256","nodeType":"ElementaryTypeName","src":"1677:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2718,"mutability":"mutable","name":"exists","nameLocation":"1712:6:25","nodeType":"VariableDeclaration","scope":2719,"src":"1707:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2717,"name":"bool","nodeType":"ElementaryTypeName","src":"1707:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"UpgradeProposal","nameLocation":"1551:15:25","nodeType":"StructDefinition","scope":3887,"src":"1544:181:25","visibility":"public"},{"canonicalName":"LibDiamond.DiamondStorage","id":2744,"members":[{"constant":false,"id":2724,"mutability":"mutable","name":"selectorToFacetAndPosition","nameLocation":"1951:26:25","nodeType":"VariableDeclaration","scope":2744,"src":"1908:69:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_struct$_FacetAddressAndPosition_$2700_storage_$","typeString":"mapping(bytes4 => struct LibDiamond.FacetAddressAndPosition)"},"typeName":{"id":2723,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2720,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1916:6:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"Mapping","src":"1908:42:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_struct$_FacetAddressAndPosition_$2700_storage_$","typeString":"mapping(bytes4 => struct LibDiamond.FacetAddressAndPosition)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2722,"nodeType":"UserDefinedTypeName","pathNode":{"id":2721,"name":"FacetAddressAndPosition","nameLocations":["1926:23:25"],"nodeType":"IdentifierPath","referencedDeclaration":2700,"src":"1926:23:25"},"referencedDeclaration":2700,"src":"1926:23:25","typeDescriptions":{"typeIdentifier":"t_struct$_FacetAddressAndPosition_$2700_storage_ptr","typeString":"struct LibDiamond.FacetAddressAndPosition"}}},"visibility":"internal"},{"constant":false,"id":2729,"mutability":"mutable","name":"facetFunctionSelectors","nameLocation":"2084:22:25","nodeType":"VariableDeclaration","scope":2744,"src":"2041:65:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_FacetFunctionSelectors_$2706_storage_$","typeString":"mapping(address => struct LibDiamond.FacetFunctionSelectors)"},"typeName":{"id":2728,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2725,"name":"address","nodeType":"ElementaryTypeName","src":"2049:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2041:42:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_FacetFunctionSelectors_$2706_storage_$","typeString":"mapping(address => struct LibDiamond.FacetFunctionSelectors)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2727,"nodeType":"UserDefinedTypeName","pathNode":{"id":2726,"name":"FacetFunctionSelectors","nameLocations":["2060:22:25"],"nodeType":"IdentifierPath","referencedDeclaration":2706,"src":"2060:22:25"},"referencedDeclaration":2706,"src":"2060:22:25","typeDescriptions":{"typeIdentifier":"t_struct$_FacetFunctionSelectors_$2706_storage_ptr","typeString":"struct LibDiamond.FacetFunctionSelectors"}}},"visibility":"internal"},{"constant":false,"id":2732,"mutability":"mutable","name":"facetAddresses","nameLocation":"2153:14:25","nodeType":"VariableDeclaration","scope":2744,"src":"2143:24:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2730,"name":"address","nodeType":"ElementaryTypeName","src":"2143:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2731,"nodeType":"ArrayTypeName","src":"2143:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2736,"mutability":"mutable","name":"supportedInterfaces","nameLocation":"2303:19:25","nodeType":"VariableDeclaration","scope":2744,"src":"2279:43:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_bool_$","typeString":"mapping(bytes4 => bool)"},"typeName":{"id":2735,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2733,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2287:6:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"Mapping","src":"2279:23:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_bool_$","typeString":"mapping(bytes4 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2734,"name":"bool","nodeType":"ElementaryTypeName","src":"2297:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":2738,"mutability":"mutable","name":"contractOwner","nameLocation":"2373:13:25","nodeType":"VariableDeclaration","scope":2744,"src":"2365:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2737,"name":"address","nodeType":"ElementaryTypeName","src":"2365:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2740,"mutability":"mutable","name":"upgradeTimelock","nameLocation":"2450:15:25","nodeType":"VariableDeclaration","scope":2744,"src":"2442:23:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2739,"name":"uint256","nodeType":"ElementaryTypeName","src":"2442:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2743,"mutability":"mutable","name":"upgradeProposal","nameLocation":"2543:15:25","nodeType":"VariableDeclaration","scope":2744,"src":"2527:31:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_UpgradeProposal_$2719_storage_ptr","typeString":"struct LibDiamond.UpgradeProposal"},"typeName":{"id":2742,"nodeType":"UserDefinedTypeName","pathNode":{"id":2741,"name":"UpgradeProposal","nameLocations":["2527:15:25"],"nodeType":"IdentifierPath","referencedDeclaration":2719,"src":"2527:15:25"},"referencedDeclaration":2719,"src":"2527:15:25","typeDescriptions":{"typeIdentifier":"t_struct$_UpgradeProposal_$2719_storage_ptr","typeString":"struct LibDiamond.UpgradeProposal"}},"visibility":"internal"}],"name":"DiamondStorage","nameLocation":"1738:14:25","nodeType":"StructDefinition","scope":3887,"src":"1731:834:25","visibility":"public"},{"body":{"id":2755,"nodeType":"Block","src":"2647:121:25","statements":[{"assignments":[2751],"declarations":[{"constant":false,"id":2751,"mutability":"mutable","name":"position","nameLocation":"2665:8:25","nodeType":"VariableDeclaration","scope":2755,"src":"2657:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2750,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2657:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2753,"initialValue":{"id":2752,"name":"DIAMOND_STORAGE_POSITION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"2676:24:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2657:43:25"},{"AST":{"nodeType":"YulBlock","src":"2719:43:25","statements":[{"nodeType":"YulAssignment","src":"2733:19:25","value":{"name":"position","nodeType":"YulIdentifier","src":"2744:8:25"},"variableNames":[{"name":"ds.slot","nodeType":"YulIdentifier","src":"2733:7:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2748,"isOffset":false,"isSlot":true,"src":"2733:7:25","suffix":"slot","valueSize":1},{"declaration":2751,"isOffset":false,"isSlot":false,"src":"2744:8:25","valueSize":1}],"id":2754,"nodeType":"InlineAssembly","src":"2710:52:25"}]},"id":2756,"implemented":true,"kind":"function","modifiers":[],"name":"diamondStorage","nameLocation":"2580:14:25","nodeType":"FunctionDefinition","parameters":{"id":2745,"nodeType":"ParameterList","parameters":[],"src":"2594:2:25"},"returnParameters":{"id":2749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2748,"mutability":"mutable","name":"ds","nameLocation":"2643:2:25","nodeType":"VariableDeclaration","scope":2756,"src":"2620:25:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage"},"typeName":{"id":2747,"nodeType":"UserDefinedTypeName","pathNode":{"id":2746,"name":"DiamondStorage","nameLocations":["2620:14:25"],"nodeType":"IdentifierPath","referencedDeclaration":2744,"src":"2620:14:25"},"referencedDeclaration":2744,"src":"2620:14:25","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage"}},"visibility":"internal"}],"src":"2619:27:25"},"scope":3887,"src":"2571:197:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2783,"nodeType":"Block","src":"2828:210:25","statements":[{"assignments":[2763],"declarations":[{"constant":false,"id":2763,"mutability":"mutable","name":"ds","nameLocation":"2861:2:25","nodeType":"VariableDeclaration","scope":2783,"src":"2838:25:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage"},"typeName":{"id":2762,"nodeType":"UserDefinedTypeName","pathNode":{"id":2761,"name":"DiamondStorage","nameLocations":["2838:14:25"],"nodeType":"IdentifierPath","referencedDeclaration":2744,"src":"2838:14:25"},"referencedDeclaration":2744,"src":"2838:14:25","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage"}},"visibility":"internal"}],"id":2766,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2764,"name":"diamondStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2756,"src":"2866:14:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$2744_storage_ptr_$","typeString":"function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"}},"id":2765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2866:16:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2838:44:25"},{"assignments":[2768],"declarations":[{"constant":false,"id":2768,"mutability":"mutable","name":"previousOwner","nameLocation":"2900:13:25","nodeType":"VariableDeclaration","scope":2783,"src":"2892:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2767,"name":"address","nodeType":"ElementaryTypeName","src":"2892:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2771,"initialValue":{"expression":{"id":2769,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"2916:2:25","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":2770,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2919:13:25","memberName":"contractOwner","nodeType":"MemberAccess","referencedDeclaration":2738,"src":"2916:16:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2892:40:25"},{"expression":{"id":2776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2772,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"2942:2:25","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":2774,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2945:13:25","memberName":"contractOwner","nodeType":"MemberAccess","referencedDeclaration":2738,"src":"2942:16:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2775,"name":"_newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2758,"src":"2961:9:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2942:28:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2777,"nodeType":"ExpressionStatement","src":"2942:28:25"},{"eventCall":{"arguments":[{"id":2779,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2768,"src":"3006:13:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2780,"name":"_newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2758,"src":"3021:9:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2778,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"2985:20:25","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":2781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2985:46:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2782,"nodeType":"EmitStatement","src":"2980:51:25"}]},"id":2784,"implemented":true,"kind":"function","modifiers":[],"name":"setContractOwner","nameLocation":"2783:16:25","nodeType":"FunctionDefinition","parameters":{"id":2759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2758,"mutability":"mutable","name":"_newOwner","nameLocation":"2808:9:25","nodeType":"VariableDeclaration","scope":2784,"src":"2800:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2757,"name":"address","nodeType":"ElementaryTypeName","src":"2800:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2799:19:25"},"returnParameters":{"id":2760,"nodeType":"ParameterList","parameters":[],"src":"2828:0:25"},"scope":3887,"src":"2774:264:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2795,"nodeType":"Block","src":"3116:64:25","statements":[{"expression":{"id":2793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2789,"name":"contractOwner_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2787,"src":"3126:14:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2790,"name":"diamondStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2756,"src":"3143:14:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$2744_storage_ptr_$","typeString":"function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"}},"id":2791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3143:16:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":2792,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3160:13:25","memberName":"contractOwner","nodeType":"MemberAccess","referencedDeclaration":2738,"src":"3143:30:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3126:47:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2794,"nodeType":"ExpressionStatement","src":"3126:47:25"}]},"id":2796,"implemented":true,"kind":"function","modifiers":[],"name":"contractOwner","nameLocation":"3053:13:25","nodeType":"FunctionDefinition","parameters":{"id":2785,"nodeType":"ParameterList","parameters":[],"src":"3066:2:25"},"returnParameters":{"id":2788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2787,"mutability":"mutable","name":"contractOwner_","nameLocation":"3100:14:25","nodeType":"VariableDeclaration","scope":2796,"src":"3092:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2786,"name":"address","nodeType":"ElementaryTypeName","src":"3092:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3091:24:25"},"scope":3887,"src":"3044:136:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2809,"nodeType":"Block","src":"3234:108:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2800,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3252:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3256:6:25","memberName":"sender","nodeType":"MemberAccess","src":"3252:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2802,"name":"diamondStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2756,"src":"3266:14:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$2744_storage_ptr_$","typeString":"function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"}},"id":2803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3266:16:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":2804,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3283:13:25","memberName":"contractOwner","nodeType":"MemberAccess","referencedDeclaration":2738,"src":"3266:30:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3252:44:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c69624469616d6f6e643a204d75737420626520636f6e7472616374206f776e6572","id":2806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3298:36:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_0d4ae41009c51fd276653a54d7793c24f266ddc8c56ce21f8be5e2c6595ab3ac","typeString":"literal_string \"LibDiamond: Must be contract owner\""},"value":"LibDiamond: Must be contract owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0d4ae41009c51fd276653a54d7793c24f266ddc8c56ce21f8be5e2c6595ab3ac","typeString":"literal_string \"LibDiamond: Must be contract owner\""}],"id":2799,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3244:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:91:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2808,"nodeType":"ExpressionStatement","src":"3244:91:25"}]},"id":2810,"implemented":true,"kind":"function","modifiers":[],"name":"enforceIsContractOwner","nameLocation":"3195:22:25","nodeType":"FunctionDefinition","parameters":{"id":2797,"nodeType":"ParameterList","parameters":[],"src":"3217:2:25"},"returnParameters":{"id":2798,"nodeType":"ParameterList","parameters":[],"src":"3234:0:25"},"scope":3887,"src":"3186:156:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"constant":true,"id":2813,"mutability":"constant","name":"DEFAULT_UPGRADE_TIMELOCK","nameLocation":"3391:24:25","nodeType":"VariableDeclaration","scope":3887,"src":"3374:50:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2811,"name":"uint256","nodeType":"ElementaryTypeName","src":"3374:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":2812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3418:6:25","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_172800_by_1","typeString":"int_const 172800"},"value":"2"},"visibility":"internal"},{"body":{"id":2916,"nodeType":"Block","src":"3619:926:25","statements":[{"body":{"id":2903,"nodeType":"Block","src":"3701:734:25","statements":[{"assignments":[2838],"declarations":[{"constant":false,"id":2838,"mutability":"mutable","name":"action","nameLocation":"3742:6:25","nodeType":"VariableDeclaration","scope":2903,"src":"3715:33:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_FacetCutAction_$2364","typeString":"enum IDiamondCut.FacetCutAction"},"typeName":{"id":2837,"nodeType":"UserDefinedTypeName","pathNode":{"id":2836,"name":"IDiamondCut.FacetCutAction","nameLocations":["3715:11:25","3727:14:25"],"nodeType":"IdentifierPath","referencedDeclaration":2364,"src":"3715:26:25"},"referencedDeclaration":2364,"src":"3715:26:25","typeDescriptions":{"typeIdentifier":"t_enum$_FacetCutAction_$2364","typeString":"enum IDiamondCut.FacetCutAction"}},"visibility":"internal"}],"id":2843,"initialValue":{"expression":{"baseExpression":{"id":2839,"name":"_diamondCut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"3751:11:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$2373_memory_ptr_$dyn_memory_ptr","typeString":"struct IDiamondCut.FacetCut memory[] memory"}},"id":2841,"indexExpression":{"id":2840,"name":"facetIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"3763:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3751:23:25","typeDescriptions":{"typeIdentifier":"t_struct$_FacetCut_$2373_memory_ptr","typeString":"struct IDiamondCut.FacetCut memory"}},"id":2842,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3775:6:25","memberName":"action","nodeType":"MemberAccess","referencedDeclaration":2369,"src":"3751:30:25","typeDescriptions":{"typeIdentifier":"t_enum$_FacetCutAction_$2364","typeString":"enum IDiamondCut.FacetCutAction"}},"nodeType":"VariableDeclarationStatement","src":"3715:66:25"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_FacetCutAction_$2364","typeString":"enum IDiamondCut.FacetCutAction"},"id":2848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2844,"name":"action","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2838,"src":"3799:6:25","typeDescriptions":{"typeIdentifier":"t_enum$_FacetCutAction_$2364","typeString":"enum IDiamondCut.FacetCutAction"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":2845,"name":"IDiamondCut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"3809:11:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IDiamondCut_$2428_$","typeString":"type(contract IDiamondCut)"}},"id":2846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3821:14:25","memberName":"FacetCutAction","nodeType":"MemberAccess","referencedDeclaration":2364,"src":"3809:26:25","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_FacetCutAction_$2364_$","typeString":"type(enum IDiamondCut.FacetCutAction)"}},"id":2847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3836:3:25","memberName":"Add","nodeType":"MemberAccess","referencedDeclaration":2361,"src":"3809:30:25","typeDescriptions":{"typeIdentifier":"t_enum$_FacetCutAction_$2364","typeString":"enum IDiamondCut.FacetCutAction"}},"src":"3799:40:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_FacetCutAction_$2364","typeString":"enum IDiamondCut.FacetCutAction"},"id":2865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2861,"name":"action","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2838,"src":"3977:6:25","typeDescriptions":{"typeIdentifier":"t_enum$_FacetCutAction_$2364","typeString":"enum IDiamondCut.FacetCutAction"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":2862,"name":"IDiamondCut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"3987:11:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IDiamondCut_$2428_$","typeString":"type(contract IDiamondCut)"}},"id":2863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3999:14:25","memberName":"FacetCutAction","nodeType":"MemberAccess","referencedDeclaration":2364,"src":"3987:26:25","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_FacetCutAction_$2364_$","typeString":"type(enum IDiamondCut.FacetCutAction)"}},"id":2864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4014:7:25","memberName":"Replace","nodeType":"MemberAccess","referencedDeclaration":2362,"src":"3987:34:25","typeDescriptions":{"typeIdentifier":"t_enum$_FacetCutAction_$2364","typeString":"enum IDiamondCut.FacetCutAction"}},"src":"3977:44:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_FacetCutAction_$2364","typeString":"enum IDiamondCut.FacetCutAction"},"id":2882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2878,"name":"action","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2838,"src":"4163:6:25","typeDescriptions":{"typeIdentifier":"t_enum$_FacetCutAction_$2364","typeString":"enum IDiamondCut.FacetCutAction"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":2879,"name":"IDiamondCut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"4173:11:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IDiamondCut_$2428_$","typeString":"type(contract IDiamondCut)"}},"id":2880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4185:14:25","memberName":"FacetCutAction","nodeType":"MemberAccess","referencedDeclaration":2364,"src":"4173:26:25","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_FacetCutAction_$2364_$","typeString":"type(enum IDiamondCut.FacetCutAction)"}},"id":2881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4200:6:25","memberName":"Remove","nodeType":"MemberAccess","referencedDeclaration":2363,"src":"4173:33:25","typeDescriptions":{"typeIdentifier":"t_enum$_FacetCutAction_$2364","typeString":"enum IDiamondCut.FacetCutAction"}},"src":"4163:43:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2899,"nodeType":"Block","src":"4343:82:25","statements":[{"expression":{"arguments":[{"hexValue":"4c69624469616d6f6e644375743a20496e636f7272656374204661636574437574416374696f6e","id":2896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4368:41:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_48267d8daf5ea9c6bbad1fe9c53dc4c04a2a01b2b85bad432956cf42f45b2f54","typeString":"literal_string \"LibDiamondCut: Incorrect FacetCutAction\""},"value":"LibDiamondCut: Incorrect FacetCutAction"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_48267d8daf5ea9c6bbad1fe9c53dc4c04a2a01b2b85bad432956cf42f45b2f54","typeString":"literal_string \"LibDiamondCut: Incorrect FacetCutAction\""}],"id":2895,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"4361:6:25","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4361:49:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2898,"nodeType":"ExpressionStatement","src":"4361:49:25"}]},"id":2900,"nodeType":"IfStatement","src":"4159:266:25","trueBody":{"id":2894,"nodeType":"Block","src":"4208:129:25","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":2884,"name":"_diamondCut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"4242:11:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$2373_memory_ptr_$dyn_memory_ptr","typeString":"struct IDiamondCut.FacetCut memory[] memory"}},"id":2886,"indexExpression":{"id":2885,"name":"facetIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"4254:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4242:23:25","typeDescriptions":{"typeIdentifier":"t_struct$_FacetCut_$2373_memory_ptr","typeString":"struct IDiamondCut.FacetCut memory"}},"id":2887,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4266:12:25","memberName":"facetAddress","nodeType":"MemberAccess","referencedDeclaration":2366,"src":"4242:36:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":2888,"name":"_diamondCut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"4280:11:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$2373_memory_ptr_$dyn_memory_ptr","typeString":"struct IDiamondCut.FacetCut memory[] memory"}},"id":2890,"indexExpression":{"id":2889,"name":"facetIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"4292:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4280:23:25","typeDescriptions":{"typeIdentifier":"t_struct$_FacetCut_$2373_memory_ptr","typeString":"struct IDiamondCut.FacetCut memory"}},"id":2891,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4304:17:25","memberName":"functionSelectors","nodeType":"MemberAccess","referencedDeclaration":2372,"src":"4280:41:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}],"id":2883,"name":"removeFunctions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3187,"src":"4226:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_array$_t_bytes4_$dyn_memory_ptr_$returns$__$","typeString":"function (address,bytes4[] memory)"}},"id":2892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4226:96:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2893,"nodeType":"ExpressionStatement","src":"4226:96:25"}]}},"id":2901,"nodeType":"IfStatement","src":"3973:452:25","trueBody":{"id":2877,"nodeType":"Block","src":"4023:130:25","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":2867,"name":"_diamondCut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"4058:11:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$2373_memory_ptr_$dyn_memory_ptr","typeString":"struct IDiamondCut.FacetCut memory[] memory"}},"id":2869,"indexExpression":{"id":2868,"name":"facetIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"4070:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4058:23:25","typeDescriptions":{"typeIdentifier":"t_struct$_FacetCut_$2373_memory_ptr","typeString":"struct IDiamondCut.FacetCut memory"}},"id":2870,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4082:12:25","memberName":"facetAddress","nodeType":"MemberAccess","referencedDeclaration":2366,"src":"4058:36:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":2871,"name":"_diamondCut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"4096:11:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$2373_memory_ptr_$dyn_memory_ptr","typeString":"struct IDiamondCut.FacetCut memory[] memory"}},"id":2873,"indexExpression":{"id":2872,"name":"facetIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"4108:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4096:23:25","typeDescriptions":{"typeIdentifier":"t_struct$_FacetCut_$2373_memory_ptr","typeString":"struct IDiamondCut.FacetCut memory"}},"id":2874,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4120:17:25","memberName":"functionSelectors","nodeType":"MemberAccess","referencedDeclaration":2372,"src":"4096:41:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}],"id":2866,"name":"replaceFunctions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3122,"src":"4041:16:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_array$_t_bytes4_$dyn_memory_ptr_$returns$__$","typeString":"function (address,bytes4[] memory)"}},"id":2875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4041:97:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2876,"nodeType":"ExpressionStatement","src":"4041:97:25"}]}},"id":2902,"nodeType":"IfStatement","src":"3795:630:25","trueBody":{"id":2860,"nodeType":"Block","src":"3841:126:25","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":2850,"name":"_diamondCut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"3872:11:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$2373_memory_ptr_$dyn_memory_ptr","typeString":"struct IDiamondCut.FacetCut memory[] memory"}},"id":2852,"indexExpression":{"id":2851,"name":"facetIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"3884:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3872:23:25","typeDescriptions":{"typeIdentifier":"t_struct$_FacetCut_$2373_memory_ptr","typeString":"struct IDiamondCut.FacetCut memory"}},"id":2853,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3896:12:25","memberName":"facetAddress","nodeType":"MemberAccess","referencedDeclaration":2366,"src":"3872:36:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":2854,"name":"_diamondCut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"3910:11:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$2373_memory_ptr_$dyn_memory_ptr","typeString":"struct IDiamondCut.FacetCut memory[] memory"}},"id":2856,"indexExpression":{"id":2855,"name":"facetIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"3922:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3910:23:25","typeDescriptions":{"typeIdentifier":"t_struct$_FacetCut_$2373_memory_ptr","typeString":"struct IDiamondCut.FacetCut memory"}},"id":2857,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3934:17:25","memberName":"functionSelectors","nodeType":"MemberAccess","referencedDeclaration":2372,"src":"3910:41:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}],"id":2849,"name":"addFunctions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3018,"src":"3859:12:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_array$_t_bytes4_$dyn_memory_ptr_$returns$__$","typeString":"function (address,bytes4[] memory)"}},"id":2858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3859:93:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2859,"nodeType":"ExpressionStatement","src":"3859:93:25"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2827,"name":"facetIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"3654:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2828,"name":"_diamondCut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"3667:11:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$2373_memory_ptr_$dyn_memory_ptr","typeString":"struct IDiamondCut.FacetCut memory[] memory"}},"id":2829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3679:6:25","memberName":"length","nodeType":"MemberAccess","src":"3667:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3654:31:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2904,"initializationExpression":{"assignments":[2825],"declarations":[{"constant":false,"id":2825,"mutability":"mutable","name":"facetIndex","nameLocation":"3642:10:25","nodeType":"VariableDeclaration","scope":2904,"src":"3634:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2824,"name":"uint256","nodeType":"ElementaryTypeName","src":"3634:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2826,"nodeType":"VariableDeclarationStatement","src":"3634:18:25"},"loopExpression":{"expression":{"id":2832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3687:12:25","subExpression":{"id":2831,"name":"facetIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"3687:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2833,"nodeType":"ExpressionStatement","src":"3687:12:25"},"nodeType":"ForStatement","src":"3629:806:25"},{"eventCall":{"arguments":[{"id":2906,"name":"_diamondCut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"4460:11:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$2373_memory_ptr_$dyn_memory_ptr","typeString":"struct IDiamondCut.FacetCut memory[] memory"}},{"id":2907,"name":"_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2819,"src":"4473:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2908,"name":"_calldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2821,"src":"4480:9:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_FacetCut_$2373_memory_ptr_$dyn_memory_ptr","typeString":"struct IDiamondCut.FacetCut memory[] memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2905,"name":"DiamondCut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2683,"src":"4449:10:25","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_array$_t_struct$_FacetCut_$2373_memory_ptr_$dyn_memory_ptr_$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct IDiamondCut.FacetCut memory[] memory,address,bytes memory)"}},"id":2909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4449:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2910,"nodeType":"EmitStatement","src":"4444:46:25"},{"expression":{"arguments":[{"id":2912,"name":"_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2819,"src":"4521:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2913,"name":"_calldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2821,"src":"4528:9:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2911,"name":"initializeDiamondCut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3505,"src":"4500:20:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":2914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4500:38:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2915,"nodeType":"ExpressionStatement","src":"4500:38:25"}]},"id":2917,"implemented":true,"kind":"function","modifiers":[],"name":"diamondCut","nameLocation":"3487:10:25","nodeType":"FunctionDefinition","parameters":{"id":2822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2817,"mutability":"mutable","name":"_diamondCut","nameLocation":"3537:11:25","nodeType":"VariableDeclaration","scope":2917,"src":"3507:41:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$2373_memory_ptr_$dyn_memory_ptr","typeString":"struct IDiamondCut.FacetCut[]"},"typeName":{"baseType":{"id":2815,"nodeType":"UserDefinedTypeName","pathNode":{"id":2814,"name":"IDiamondCut.FacetCut","nameLocations":["3507:11:25","3519:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":2373,"src":"3507:20:25"},"referencedDeclaration":2373,"src":"3507:20:25","typeDescriptions":{"typeIdentifier":"t_struct$_FacetCut_$2373_storage_ptr","typeString":"struct IDiamondCut.FacetCut"}},"id":2816,"nodeType":"ArrayTypeName","src":"3507:22:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$2373_storage_$dyn_storage_ptr","typeString":"struct IDiamondCut.FacetCut[]"}},"visibility":"internal"},{"constant":false,"id":2819,"mutability":"mutable","name":"_init","nameLocation":"3566:5:25","nodeType":"VariableDeclaration","scope":2917,"src":"3558:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2818,"name":"address","nodeType":"ElementaryTypeName","src":"3558:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2821,"mutability":"mutable","name":"_calldata","nameLocation":"3594:9:25","nodeType":"VariableDeclaration","scope":2917,"src":"3581:22:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2820,"name":"bytes","nodeType":"ElementaryTypeName","src":"3581:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3497:112:25"},"returnParameters":{"id":2823,"nodeType":"ParameterList","parameters":[],"src":"3619:0:25"},"scope":3887,"src":"3478:1067:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3017,"nodeType":"Block","src":"4641:999:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2926,"name":"_functionSelectors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2922,"src":"4659:18:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}},"id":2927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4678:6:25","memberName":"length","nodeType":"MemberAccess","src":"4659:25:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4687:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4659:29:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c69624469616d6f6e644375743a204e6f2073656c6563746f727320696e20666163657420746f20637574","id":2930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4690:45:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ffc682bcfedefd5e93ba9ed0c2d1bc0b18319886e3b4bd28a03a3d3729f85c0","typeString":"literal_string \"LibDiamondCut: No selectors in facet to cut\""},"value":"LibDiamondCut: No selectors in facet to cut"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ffc682bcfedefd5e93ba9ed0c2d1bc0b18319886e3b4bd28a03a3d3729f85c0","typeString":"literal_string \"LibDiamondCut: No selectors in facet to cut\""}],"id":2925,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4651:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4651:85:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2932,"nodeType":"ExpressionStatement","src":"4651:85:25"},{"assignments":[2935],"declarations":[{"constant":false,"id":2935,"mutability":"mutable","name":"ds","nameLocation":"4769:2:25","nodeType":"VariableDeclaration","scope":3017,"src":"4746:25:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage"},"typeName":{"id":2934,"nodeType":"UserDefinedTypeName","pathNode":{"id":2933,"name":"DiamondStorage","nameLocations":["4746:14:25"],"nodeType":"IdentifierPath","referencedDeclaration":2744,"src":"4746:14:25"},"referencedDeclaration":2744,"src":"4746:14:25","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage"}},"visibility":"internal"}],"id":2938,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2936,"name":"diamondStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2756,"src":"4774:14:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$2744_storage_ptr_$","typeString":"function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"}},"id":2937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4774:16:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4746:44:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2940,"name":"_facetAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"4816:13:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4841:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4833:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2941,"name":"address","nodeType":"ElementaryTypeName","src":"4833:7:25","typeDescriptions":{}}},"id":2944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4833:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4816:27:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c69624469616d6f6e644375743a204164642066616365742063616e27742062652061646472657373283029","id":2946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4845:46:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_64609d8b93c93a06b98d7db7a87b04044cd4a52c5661d603bb9b90ad8b914a3a","typeString":"literal_string \"LibDiamondCut: Add facet can't be address(0)\""},"value":"LibDiamondCut: Add facet can't be address(0)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_64609d8b93c93a06b98d7db7a87b04044cd4a52c5661d603bb9b90ad8b914a3a","typeString":"literal_string \"LibDiamondCut: Add facet can't be address(0)\""}],"id":2939,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4808:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4808:84:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2948,"nodeType":"ExpressionStatement","src":"4808:84:25"},{"assignments":[2950],"declarations":[{"constant":false,"id":2950,"mutability":"mutable","name":"selectorPosition","nameLocation":"4909:16:25","nodeType":"VariableDeclaration","scope":3017,"src":"4902:23:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2949,"name":"uint96","nodeType":"ElementaryTypeName","src":"4902:6:25","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"id":2960,"initialValue":{"arguments":[{"expression":{"expression":{"baseExpression":{"expression":{"id":2953,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2935,"src":"4935:2:25","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":2954,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4938:22:25","memberName":"facetFunctionSelectors","nodeType":"MemberAccess","referencedDeclaration":2729,"src":"4935:25:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_FacetFunctionSelectors_$2706_storage_$","typeString":"mapping(address => struct LibDiamond.FacetFunctionSelectors storage ref)"}},"id":2956,"indexExpression":{"id":2955,"name":"_facetAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"4961:13:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4935:40:25","typeDescriptions":{"typeIdentifier":"t_struct$_FacetFunctionSelectors_$2706_storage","typeString":"struct LibDiamond.FacetFunctionSelectors storage ref"}},"id":2957,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4976:17:25","memberName":"functionSelectors","nodeType":"MemberAccess","referencedDeclaration":2703,"src":"4935:58:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_storage","typeString":"bytes4[] storage ref"}},"id":2958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4994:6:25","memberName":"length","nodeType":"MemberAccess","src":"4935:65:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2952,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4928:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":2951,"name":"uint96","nodeType":"ElementaryTypeName","src":"4928:6:25","typeDescriptions":{}}},"id":2959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4928:73:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"4902:99:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":2963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2961,"name":"selectorPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"5069:16:25","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5089:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5069:21:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2970,"nodeType":"IfStatement","src":"5065:91:25","trueBody":{"id":2969,"nodeType":"Block","src":"5092:64:25","statements":[{"expression":{"arguments":[{"id":2965,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2935,"src":"5115:2:25","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},{"id":2966,"name":"_facetAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"5119:13:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2964,"name":"addFacet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3220,"src":"5106:8:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_DiamondStorage_$2744_storage_ptr_$_t_address_$returns$__$","typeString":"function (struct LibDiamond.DiamondStorage storage pointer,address)"}},"id":2967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5106:27:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2968,"nodeType":"ExpressionStatement","src":"5106:27:25"}]}},{"body":{"id":3015,"nodeType":"Block","src":"5253:381:25","statements":[{"assignments":[2982],"declarations":[{"constant":false,"id":2982,"mutability":"mutable","name":"selector","nameLocation":"5274:8:25","nodeType":"VariableDeclaration","scope":3015,"src":"5267:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2981,"name":"bytes4","nodeType":"ElementaryTypeName","src":"5267:6:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"id":2986,"initialValue":{"baseExpression":{"id":2983,"name":"_functionSelectors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2922,"src":"5285:18:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}},"id":2985,"indexExpression":{"id":2984,"name":"selectorIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2972,"src":"5304:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5285:33:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"VariableDeclarationStatement","src":"5267:51:25"},{"assignments":[2988],"declarations":[{"constant":false,"id":2988,"mutability":"mutable","name":"oldFacetAddress","nameLocation":"5340:15:25","nodeType":"VariableDeclaration","scope":3015,"src":"5332:23:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2987,"name":"address","nodeType":"ElementaryTypeName","src":"5332:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2994,"initialValue":{"expression":{"baseExpression":{"expression":{"id":2989,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2935,"src":"5358:2:25","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":2990,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5361:26:25","memberName":"selectorToFacetAndPosition","nodeType":"MemberAccess","referencedDeclaration":2724,"src":"5358:29:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_struct$_FacetAddressAndPosition_$2700_storage_$","typeString":"mapping(bytes4 => struct LibDiamond.FacetAddressAndPosition storage ref)"}},"id":2992,"indexExpression":{"id":2991,"name":"selector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2982,"src":"5388:8:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5358:39:25","typeDescriptions":{"typeIdentifier":"t_struct$_FacetAddressAndPosition_$2700_storage","typeString":"struct LibDiamond.FacetAddressAndPosition storage ref"}},"id":2993,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5398:12:25","memberName":"facetAddress","nodeType":"MemberAccess","referencedDeclaration":2697,"src":"5358:52:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5332:78:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2996,"name":"oldFacetAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2988,"src":"5432:15:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5459:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2998,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5451:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2997,"name":"address","nodeType":"ElementaryTypeName","src":"5451:7:25","typeDescriptions":{}}},"id":3000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5451:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5432:29:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c69624469616d6f6e644375743a2043616e2774206164642066756e6374696f6e207468617420616c726561647920657869737473","id":3002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5463:55:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_99a7418ee014d613f46da44561258cdbb58064508097483a319062b99fa37700","typeString":"literal_string \"LibDiamondCut: Can't add function that already exists\""},"value":"LibDiamondCut: Can't add function that already exists"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_99a7418ee014d613f46da44561258cdbb58064508097483a319062b99fa37700","typeString":"literal_string \"LibDiamondCut: Can't add function that already exists\""}],"id":2995,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5424:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5424:95:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3004,"nodeType":"ExpressionStatement","src":"5424:95:25"},{"expression":{"arguments":[{"id":3006,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2935,"src":"5545:2:25","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},{"id":3007,"name":"selector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2982,"src":"5549:8:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":3008,"name":"selectorPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"5559:16:25","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":3009,"name":"_facetAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"5577:13:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3005,"name":"addFunction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3261,"src":"5533:11:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_DiamondStorage_$2744_storage_ptr_$_t_bytes4_$_t_uint96_$_t_address_$returns$__$","typeString":"function (struct LibDiamond.DiamondStorage storage pointer,bytes4,uint96,address)"}},"id":3010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5533:58:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3011,"nodeType":"ExpressionStatement","src":"5533:58:25"},{"expression":{"id":3013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5605:18:25","subExpression":{"id":3012,"name":"selectorPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"5605:16:25","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":3014,"nodeType":"ExpressionStatement","src":"5605:18:25"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2974,"name":"selectorIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2972,"src":"5193:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2975,"name":"_functionSelectors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2922,"src":"5209:18:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}},"id":2976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5228:6:25","memberName":"length","nodeType":"MemberAccess","src":"5209:25:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5193:41:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3016,"initializationExpression":{"assignments":[2972],"declarations":[{"constant":false,"id":2972,"mutability":"mutable","name":"selectorIndex","nameLocation":"5178:13:25","nodeType":"VariableDeclaration","scope":3016,"src":"5170:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2971,"name":"uint256","nodeType":"ElementaryTypeName","src":"5170:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2973,"nodeType":"VariableDeclarationStatement","src":"5170:21:25"},"loopExpression":{"expression":{"id":2979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5236:15:25","subExpression":{"id":2978,"name":"selectorIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2972,"src":"5236:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2980,"nodeType":"ExpressionStatement","src":"5236:15:25"},"nodeType":"ForStatement","src":"5165:469:25"}]},"id":3018,"implemented":true,"kind":"function","modifiers":[],"name":"addFunctions","nameLocation":"4560:12:25","nodeType":"FunctionDefinition","parameters":{"id":2923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2919,"mutability":"mutable","name":"_facetAddress","nameLocation":"4581:13:25","nodeType":"VariableDeclaration","scope":3018,"src":"4573:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2918,"name":"address","nodeType":"ElementaryTypeName","src":"4573:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2922,"mutability":"mutable","name":"_functionSelectors","nameLocation":"4612:18:25","nodeType":"VariableDeclaration","scope":3018,"src":"4596:34:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[]"},"typeName":{"baseType":{"id":2920,"name":"bytes4","nodeType":"ElementaryTypeName","src":"4596:6:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":2921,"nodeType":"ArrayTypeName","src":"4596:8:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_storage_ptr","typeString":"bytes4[]"}},"visibility":"internal"}],"src":"4572:59:25"},"returnParameters":{"id":2924,"nodeType":"ParameterList","parameters":[],"src":"4641:0:25"},"scope":3887,"src":"4551:1089:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3121,"nodeType":"Block","src":"5740:1044:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3027,"name":"_functionSelectors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"5758:18:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}},"id":3028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5777:6:25","memberName":"length","nodeType":"MemberAccess","src":"5758:25:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5786:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5758:29:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c69624469616d6f6e644375743a204e6f2073656c6563746f727320696e20666163657420746f20637574","id":3031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5789:45:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ffc682bcfedefd5e93ba9ed0c2d1bc0b18319886e3b4bd28a03a3d3729f85c0","typeString":"literal_string \"LibDiamondCut: No selectors in facet to cut\""},"value":"LibDiamondCut: No selectors in facet to cut"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ffc682bcfedefd5e93ba9ed0c2d1bc0b18319886e3b4bd28a03a3d3729f85c0","typeString":"literal_string \"LibDiamondCut: No selectors in facet to cut\""}],"id":3026,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5750:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5750:85:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3033,"nodeType":"ExpressionStatement","src":"5750:85:25"},{"assignments":[3036],"declarations":[{"constant":false,"id":3036,"mutability":"mutable","name":"ds","nameLocation":"5868:2:25","nodeType":"VariableDeclaration","scope":3121,"src":"5845:25:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage"},"typeName":{"id":3035,"nodeType":"UserDefinedTypeName","pathNode":{"id":3034,"name":"DiamondStorage","nameLocations":["5845:14:25"],"nodeType":"IdentifierPath","referencedDeclaration":2744,"src":"5845:14:25"},"referencedDeclaration":2744,"src":"5845:14:25","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage"}},"visibility":"internal"}],"id":3039,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3037,"name":"diamondStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2756,"src":"5873:14:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$2744_storage_ptr_$","typeString":"function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"}},"id":3038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5873:16:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"5845:44:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3041,"name":"_facetAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3020,"src":"5907:13:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5932:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3043,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5924:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3042,"name":"address","nodeType":"ElementaryTypeName","src":"5924:7:25","typeDescriptions":{}}},"id":3045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5924:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5907:27:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c69624469616d6f6e644375743a204164642066616365742063616e27742062652061646472657373283029","id":3047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5936:46:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_64609d8b93c93a06b98d7db7a87b04044cd4a52c5661d603bb9b90ad8b914a3a","typeString":"literal_string \"LibDiamondCut: Add facet can't be address(0)\""},"value":"LibDiamondCut: Add facet can't be address(0)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_64609d8b93c93a06b98d7db7a87b04044cd4a52c5661d603bb9b90ad8b914a3a","typeString":"literal_string \"LibDiamondCut: Add facet can't be address(0)\""}],"id":3040,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5899:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5899:84:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3049,"nodeType":"ExpressionStatement","src":"5899:84:25"},{"assignments":[3051],"declarations":[{"constant":false,"id":3051,"mutability":"mutable","name":"selectorPosition","nameLocation":"6000:16:25","nodeType":"VariableDeclaration","scope":3121,"src":"5993:23:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":3050,"name":"uint96","nodeType":"ElementaryTypeName","src":"5993:6:25","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"id":3061,"initialValue":{"arguments":[{"expression":{"expression":{"baseExpression":{"expression":{"id":3054,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3036,"src":"6026:2:25","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":3055,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6029:22:25","memberName":"facetFunctionSelectors","nodeType":"MemberAccess","referencedDeclaration":2729,"src":"6026:25:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_FacetFunctionSelectors_$2706_storage_$","typeString":"mapping(address => struct LibDiamond.FacetFunctionSelectors storage ref)"}},"id":3057,"indexExpression":{"id":3056,"name":"_facetAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3020,"src":"6052:13:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6026:40:25","typeDescriptions":{"typeIdentifier":"t_struct$_FacetFunctionSelectors_$2706_storage","typeString":"struct LibDiamond.FacetFunctionSelectors storage ref"}},"id":3058,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6067:17:25","memberName":"functionSelectors","nodeType":"MemberAccess","referencedDeclaration":2703,"src":"6026:58:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_storage","typeString":"bytes4[] storage ref"}},"id":3059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6085:6:25","memberName":"length","nodeType":"MemberAccess","src":"6026:65:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3053,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6019:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":3052,"name":"uint96","nodeType":"ElementaryTypeName","src":"6019:6:25","typeDescriptions":{}}},"id":3060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6019:73:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"5993:99:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":3064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3062,"name":"selectorPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3051,"src":"6160:16:25","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6180:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6160:21:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3071,"nodeType":"IfStatement","src":"6156:79:25","trueBody":{"id":3070,"nodeType":"Block","src":"6183:52:25","statements":[{"expression":{"arguments":[{"id":3066,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3036,"src":"6206:2:25","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},{"id":3067,"name":"_facetAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3020,"src":"6210:13:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3065,"name":"addFacet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3220,"src":"6197:8:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_DiamondStorage_$2744_storage_ptr_$_t_address_$returns$__$","typeString":"function (struct LibDiamond.DiamondStorage storage pointer,address)"}},"id":3068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6197:27:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3069,"nodeType":"ExpressionStatement","src":"6197:27:25"}]}},{"body":{"id":3119,"nodeType":"Block","src":"6332:446:25","statements":[{"assignments":[3083],"declarations":[{"constant":false,"id":3083,"mutability":"mutable","name":"selector","nameLocation":"6353:8:25","nodeType":"VariableDeclaration","scope":3119,"src":"6346:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3082,"name":"bytes4","nodeType":"ElementaryTypeName","src":"6346:6:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"id":3087,"initialValue":{"baseExpression":{"id":3084,"name":"_functionSelectors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"6364:18:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}},"id":3086,"indexExpression":{"id":3085,"name":"selectorIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3073,"src":"6383:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6364:33:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"VariableDeclarationStatement","src":"6346:51:25"},{"assignments":[3089],"declarations":[{"constant":false,"id":3089,"mutability":"mutable","name":"oldFacetAddress","nameLocation":"6419:15:25","nodeType":"VariableDeclaration","scope":3119,"src":"6411:23:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3088,"name":"address","nodeType":"ElementaryTypeName","src":"6411:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3095,"initialValue":{"expression":{"baseExpression":{"expression":{"id":3090,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3036,"src":"6437:2:25","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":3091,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6440:26:25","memberName":"selectorToFacetAndPosition","nodeType":"MemberAccess","referencedDeclaration":2724,"src":"6437:29:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_struct$_FacetAddressAndPosition_$2700_storage_$","typeString":"mapping(bytes4 => struct LibDiamond.FacetAddressAndPosition storage ref)"}},"id":3093,"indexExpression":{"id":3092,"name":"selector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3083,"src":"6467:8:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6437:39:25","typeDescriptions":{"typeIdentifier":"t_struct$_FacetAddressAndPosition_$2700_storage","typeString":"struct LibDiamond.FacetAddressAndPosition storage ref"}},"id":3094,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6477:12:25","memberName":"facetAddress","nodeType":"MemberAccess","referencedDeclaration":2697,"src":"6437:52:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6411:78:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3097,"name":"oldFacetAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3089,"src":"6511:15:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3098,"name":"_facetAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3020,"src":"6530:13:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6511:32:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c69624469616d6f6e644375743a2043616e2774207265706c6163652066756e6374696f6e20776974682073616d652066756e6374696f6e","id":3100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6545:58:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5a7112edf707196456f338fdcc19cd849be6cb8c0d166bcd035f4cfb00e7078","typeString":"literal_string \"LibDiamondCut: Can't replace function with same function\""},"value":"LibDiamondCut: Can't replace function with same function"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b5a7112edf707196456f338fdcc19cd849be6cb8c0d166bcd035f4cfb00e7078","typeString":"literal_string \"LibDiamondCut: Can't replace function with same function\""}],"id":3096,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6503:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6503:101:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3102,"nodeType":"ExpressionStatement","src":"6503:101:25"},{"expression":{"arguments":[{"id":3104,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3036,"src":"6633:2:25","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},{"id":3105,"name":"oldFacetAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3089,"src":"6637:15:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3106,"name":"selector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3083,"src":"6654:8:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":3103,"name":"removeFunction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3428,"src":"6618:14:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_DiamondStorage_$2744_storage_ptr_$_t_address_$_t_bytes4_$returns$__$","typeString":"function (struct LibDiamond.DiamondStorage storage pointer,address,bytes4)"}},"id":3107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6618:45:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3108,"nodeType":"ExpressionStatement","src":"6618:45:25"},{"expression":{"arguments":[{"id":3110,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3036,"src":"6689:2:25","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},{"id":3111,"name":"selector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3083,"src":"6693:8:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":3112,"name":"selectorPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3051,"src":"6703:16:25","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":3113,"name":"_facetAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3020,"src":"6721:13:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3109,"name":"addFunction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3261,"src":"6677:11:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_DiamondStorage_$2744_storage_ptr_$_t_bytes4_$_t_uint96_$_t_address_$returns$__$","typeString":"function (struct LibDiamond.DiamondStorage storage pointer,bytes4,uint96,address)"}},"id":3114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6677:58:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3115,"nodeType":"ExpressionStatement","src":"6677:58:25"},{"expression":{"id":3117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6749:18:25","subExpression":{"id":3116,"name":"selectorPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3051,"src":"6749:16:25","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":3118,"nodeType":"ExpressionStatement","src":"6749:18:25"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3075,"name":"selectorIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3073,"src":"6272:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3076,"name":"_functionSelectors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"6288:18:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}},"id":3077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6307:6:25","memberName":"length","nodeType":"MemberAccess","src":"6288:25:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6272:41:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3120,"initializationExpression":{"assignments":[3073],"declarations":[{"constant":false,"id":3073,"mutability":"mutable","name":"selectorIndex","nameLocation":"6257:13:25","nodeType":"VariableDeclaration","scope":3120,"src":"6249:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3072,"name":"uint256","nodeType":"ElementaryTypeName","src":"6249:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3074,"nodeType":"VariableDeclarationStatement","src":"6249:21:25"},"loopExpression":{"expression":{"id":3080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6315:15:25","subExpression":{"id":3079,"name":"selectorIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3073,"src":"6315:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3081,"nodeType":"ExpressionStatement","src":"6315:15:25"},"nodeType":"ForStatement","src":"6244:534:25"}]},"id":3122,"implemented":true,"kind":"function","modifiers":[],"name":"replaceFunctions","nameLocation":"5655:16:25","nodeType":"FunctionDefinition","parameters":{"id":3024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3020,"mutability":"mutable","name":"_facetAddress","nameLocation":"5680:13:25","nodeType":"VariableDeclaration","scope":3122,"src":"5672:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3019,"name":"address","nodeType":"ElementaryTypeName","src":"5672:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3023,"mutability":"mutable","name":"_functionSelectors","nameLocation":"5711:18:25","nodeType":"VariableDeclaration","scope":3122,"src":"5695:34:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[]"},"typeName":{"baseType":{"id":3021,"name":"bytes4","nodeType":"ElementaryTypeName","src":"5695:6:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":3022,"nodeType":"ArrayTypeName","src":"5695:8:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_storage_ptr","typeString":"bytes4[]"}},"visibility":"internal"}],"src":"5671:59:25"},"returnParameters":{"id":3025,"nodeType":"ParameterList","parameters":[],"src":"5740:0:25"},"scope":3887,"src":"5646:1138:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3186,"nodeType":"Block","src":"6883:649:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3131,"name":"_functionSelectors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3127,"src":"6901:18:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}},"id":3132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6920:6:25","memberName":"length","nodeType":"MemberAccess","src":"6901:25:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6929:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6901:29:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c69624469616d6f6e644375743a204e6f2073656c6563746f727320696e20666163657420746f20637574","id":3135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6932:45:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ffc682bcfedefd5e93ba9ed0c2d1bc0b18319886e3b4bd28a03a3d3729f85c0","typeString":"literal_string \"LibDiamondCut: No selectors in facet to cut\""},"value":"LibDiamondCut: No selectors in facet to cut"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ffc682bcfedefd5e93ba9ed0c2d1bc0b18319886e3b4bd28a03a3d3729f85c0","typeString":"literal_string \"LibDiamondCut: No selectors in facet to cut\""}],"id":3130,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6893:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6893:85:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3137,"nodeType":"ExpressionStatement","src":"6893:85:25"},{"assignments":[3140],"declarations":[{"constant":false,"id":3140,"mutability":"mutable","name":"ds","nameLocation":"7011:2:25","nodeType":"VariableDeclaration","scope":3186,"src":"6988:25:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage"},"typeName":{"id":3139,"nodeType":"UserDefinedTypeName","pathNode":{"id":3138,"name":"DiamondStorage","nameLocations":["6988:14:25"],"nodeType":"IdentifierPath","referencedDeclaration":2744,"src":"6988:14:25"},"referencedDeclaration":2744,"src":"6988:14:25","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage"}},"visibility":"internal"}],"id":3143,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3141,"name":"diamondStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2756,"src":"7016:14:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$2744_storage_ptr_$","typeString":"function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"}},"id":3142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7016:16:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6988:44:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3145,"name":"_facetAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3124,"src":"7115:13:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7140:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3147,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7132:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3146,"name":"address","nodeType":"ElementaryTypeName","src":"7132:7:25","typeDescriptions":{}}},"id":3149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7132:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7115:27:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c69624469616d6f6e644375743a2052656d6f76652066616365742061646472657373206d7573742062652061646472657373283029","id":3151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7144:56:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_b739aae768f79b96e91d9f66398733516895e39eb09ee54a795b49dcc77504d4","typeString":"literal_string \"LibDiamondCut: Remove facet address must be address(0)\""},"value":"LibDiamondCut: Remove facet address must be address(0)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b739aae768f79b96e91d9f66398733516895e39eb09ee54a795b49dcc77504d4","typeString":"literal_string \"LibDiamondCut: Remove facet address must be address(0)\""}],"id":3144,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7107:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7107:94:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3153,"nodeType":"ExpressionStatement","src":"7107:94:25"},{"body":{"id":3184,"nodeType":"Block","src":"7299:227:25","statements":[{"assignments":[3165],"declarations":[{"constant":false,"id":3165,"mutability":"mutable","name":"selector","nameLocation":"7320:8:25","nodeType":"VariableDeclaration","scope":3184,"src":"7313:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3164,"name":"bytes4","nodeType":"ElementaryTypeName","src":"7313:6:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"id":3169,"initialValue":{"baseExpression":{"id":3166,"name":"_functionSelectors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3127,"src":"7331:18:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}},"id":3168,"indexExpression":{"id":3167,"name":"selectorIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3155,"src":"7350:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7331:33:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"VariableDeclarationStatement","src":"7313:51:25"},{"assignments":[3171],"declarations":[{"constant":false,"id":3171,"mutability":"mutable","name":"oldFacetAddress","nameLocation":"7386:15:25","nodeType":"VariableDeclaration","scope":3184,"src":"7378:23:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3170,"name":"address","nodeType":"ElementaryTypeName","src":"7378:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3177,"initialValue":{"expression":{"baseExpression":{"expression":{"id":3172,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3140,"src":"7404:2:25","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":3173,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7407:26:25","memberName":"selectorToFacetAndPosition","nodeType":"MemberAccess","referencedDeclaration":2724,"src":"7404:29:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_struct$_FacetAddressAndPosition_$2700_storage_$","typeString":"mapping(bytes4 => struct LibDiamond.FacetAddressAndPosition storage ref)"}},"id":3175,"indexExpression":{"id":3174,"name":"selector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3165,"src":"7434:8:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7404:39:25","typeDescriptions":{"typeIdentifier":"t_struct$_FacetAddressAndPosition_$2700_storage","typeString":"struct LibDiamond.FacetAddressAndPosition storage ref"}},"id":3176,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7444:12:25","memberName":"facetAddress","nodeType":"MemberAccess","referencedDeclaration":2697,"src":"7404:52:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7378:78:25"},{"expression":{"arguments":[{"id":3179,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3140,"src":"7485:2:25","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},{"id":3180,"name":"oldFacetAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3171,"src":"7489:15:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3181,"name":"selector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3165,"src":"7506:8:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":3178,"name":"removeFunction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3428,"src":"7470:14:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_DiamondStorage_$2744_storage_ptr_$_t_address_$_t_bytes4_$returns$__$","typeString":"function (struct LibDiamond.DiamondStorage storage pointer,address,bytes4)"}},"id":3182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7470:45:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3183,"nodeType":"ExpressionStatement","src":"7470:45:25"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3157,"name":"selectorIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3155,"src":"7239:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3158,"name":"_functionSelectors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3127,"src":"7255:18:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}},"id":3159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7274:6:25","memberName":"length","nodeType":"MemberAccess","src":"7255:25:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7239:41:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3185,"initializationExpression":{"assignments":[3155],"declarations":[{"constant":false,"id":3155,"mutability":"mutable","name":"selectorIndex","nameLocation":"7224:13:25","nodeType":"VariableDeclaration","scope":3185,"src":"7216:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3154,"name":"uint256","nodeType":"ElementaryTypeName","src":"7216:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3156,"nodeType":"VariableDeclarationStatement","src":"7216:21:25"},"loopExpression":{"expression":{"id":3162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7282:15:25","subExpression":{"id":3161,"name":"selectorIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3155,"src":"7282:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3163,"nodeType":"ExpressionStatement","src":"7282:15:25"},"nodeType":"ForStatement","src":"7211:315:25"}]},"id":3187,"implemented":true,"kind":"function","modifiers":[],"name":"removeFunctions","nameLocation":"6799:15:25","nodeType":"FunctionDefinition","parameters":{"id":3128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3124,"mutability":"mutable","name":"_facetAddress","nameLocation":"6823:13:25","nodeType":"VariableDeclaration","scope":3187,"src":"6815:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3123,"name":"address","nodeType":"ElementaryTypeName","src":"6815:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3127,"mutability":"mutable","name":"_functionSelectors","nameLocation":"6854:18:25","nodeType":"VariableDeclaration","scope":3187,"src":"6838:34:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[]"},"typeName":{"baseType":{"id":3125,"name":"bytes4","nodeType":"ElementaryTypeName","src":"6838:6:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":3126,"nodeType":"ArrayTypeName","src":"6838:8:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_storage_ptr","typeString":"bytes4[]"}},"visibility":"internal"}],"src":"6814:59:25"},"returnParameters":{"id":3129,"nodeType":"ParameterList","parameters":[],"src":"6883:0:25"},"scope":3887,"src":"6790:742:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3219,"nodeType":"Block","src":"7615:239:25","statements":[{"expression":{"arguments":[{"id":3196,"name":"_facetAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"7648:13:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"4c69624469616d6f6e644375743a204e657720666163657420686173206e6f20636f6465","id":3197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7663:38:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_846ccbeb9c32d4d40d2c1bf991251db6ab65744a2f52b273947cee088a65504b","typeString":"literal_string \"LibDiamondCut: New facet has no code\""},"value":"LibDiamondCut: New facet has no code"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_stringliteral_846ccbeb9c32d4d40d2c1bf991251db6ab65744a2f52b273947cee088a65504b","typeString":"literal_string \"LibDiamondCut: New facet has no code\""}],"id":3195,"name":"enforceHasContractCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3524,"src":"7625:22:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,string memory) view"}},"id":3198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7625:77:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3199,"nodeType":"ExpressionStatement","src":"7625:77:25"},{"expression":{"id":3209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"expression":{"id":3200,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3190,"src":"7712:2:25","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":3203,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7715:22:25","memberName":"facetFunctionSelectors","nodeType":"MemberAccess","referencedDeclaration":2729,"src":"7712:25:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_FacetFunctionSelectors_$2706_storage_$","typeString":"mapping(address => struct LibDiamond.FacetFunctionSelectors storage ref)"}},"id":3204,"indexExpression":{"id":3202,"name":"_facetAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"7738:13:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7712:40:25","typeDescriptions":{"typeIdentifier":"t_struct$_FacetFunctionSelectors_$2706_storage","typeString":"struct LibDiamond.FacetFunctionSelectors storage ref"}},"id":3205,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7753:20:25","memberName":"facetAddressPosition","nodeType":"MemberAccess","referencedDeclaration":2705,"src":"7712:61:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":3206,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3190,"src":"7776:2:25","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":3207,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7779:14:25","memberName":"facetAddresses","nodeType":"MemberAccess","referencedDeclaration":2732,"src":"7776:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":3208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7794:6:25","memberName":"length","nodeType":"MemberAccess","src":"7776:24:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7712:88:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3210,"nodeType":"ExpressionStatement","src":"7712:88:25"},{"expression":{"arguments":[{"id":3216,"name":"_facetAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"7833:13:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"expression":{"id":3211,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3190,"src":"7810:2:25","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":3214,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7813:14:25","memberName":"facetAddresses","nodeType":"MemberAccess","referencedDeclaration":2732,"src":"7810:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":3215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7828:4:25","memberName":"push","nodeType":"MemberAccess","src":"7810:22:25","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":3217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7810:37:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3218,"nodeType":"ExpressionStatement","src":"7810:37:25"}]},"id":3220,"implemented":true,"kind":"function","modifiers":[],"name":"addFacet","nameLocation":"7547:8:25","nodeType":"FunctionDefinition","parameters":{"id":3193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3190,"mutability":"mutable","name":"ds","nameLocation":"7579:2:25","nodeType":"VariableDeclaration","scope":3220,"src":"7556:25:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage"},"typeName":{"id":3189,"nodeType":"UserDefinedTypeName","pathNode":{"id":3188,"name":"DiamondStorage","nameLocations":["7556:14:25"],"nodeType":"IdentifierPath","referencedDeclaration":2744,"src":"7556:14:25"},"referencedDeclaration":2744,"src":"7556:14:25","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage"}},"visibility":"internal"},{"constant":false,"id":3192,"mutability":"mutable","name":"_facetAddress","nameLocation":"7591:13:25","nodeType":"VariableDeclaration","scope":3220,"src":"7583:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3191,"name":"address","nodeType":"ElementaryTypeName","src":"7583:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7555:50:25"},"returnParameters":{"id":3194,"nodeType":"ParameterList","parameters":[],"src":"7615:0:25"},"scope":3887,"src":"7538:316:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3260,"nodeType":"Block","src":"7989:265:25","statements":[{"expression":{"id":3239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"expression":{"id":3232,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3223,"src":"7999:2:25","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":3235,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8002:26:25","memberName":"selectorToFacetAndPosition","nodeType":"MemberAccess","referencedDeclaration":2724,"src":"7999:29:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_struct$_FacetAddressAndPosition_$2700_storage_$","typeString":"mapping(bytes4 => struct LibDiamond.FacetAddressAndPosition storage ref)"}},"id":3236,"indexExpression":{"id":3234,"name":"_selector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3225,"src":"8029:9:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7999:40:25","typeDescriptions":{"typeIdentifier":"t_struct$_FacetAddressAndPosition_$2700_storage","typeString":"struct LibDiamond.FacetAddressAndPosition storage ref"}},"id":3237,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8040:24:25","memberName":"functionSelectorPosition","nodeType":"MemberAccess","referencedDeclaration":2699,"src":"7999:65:25","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3238,"name":"_selectorPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3227,"src":"8067:17:25","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"7999:85:25","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":3240,"nodeType":"ExpressionStatement","src":"7999:85:25"},{"expression":{"arguments":[{"id":3248,"name":"_selector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3225,"src":"8158:9:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"expression":{"baseExpression":{"expression":{"id":3241,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3223,"src":"8094:2:25","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":3244,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8097:22:25","memberName":"facetFunctionSelectors","nodeType":"MemberAccess","referencedDeclaration":2729,"src":"8094:25:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_FacetFunctionSelectors_$2706_storage_$","typeString":"mapping(address => struct LibDiamond.FacetFunctionSelectors storage ref)"}},"id":3245,"indexExpression":{"id":3243,"name":"_facetAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3229,"src":"8120:13:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8094:40:25","typeDescriptions":{"typeIdentifier":"t_struct$_FacetFunctionSelectors_$2706_storage","typeString":"struct LibDiamond.FacetFunctionSelectors storage ref"}},"id":3246,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8135:17:25","memberName":"functionSelectors","nodeType":"MemberAccess","referencedDeclaration":2703,"src":"8094:58:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_storage","typeString":"bytes4[] storage ref"}},"id":3247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8153:4:25","memberName":"push","nodeType":"MemberAccess","src":"8094:63:25","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes4_$dyn_storage_ptr_$_t_bytes4_$returns$__$attached_to$_t_array$_t_bytes4_$dyn_storage_ptr_$","typeString":"function (bytes4[] storage pointer,bytes4)"}},"id":3249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8094:74:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3250,"nodeType":"ExpressionStatement","src":"8094:74:25"},{"expression":{"id":3258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"expression":{"id":3251,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3223,"src":"8178:2:25","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":3254,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8181:26:25","memberName":"selectorToFacetAndPosition","nodeType":"MemberAccess","referencedDeclaration":2724,"src":"8178:29:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_struct$_FacetAddressAndPosition_$2700_storage_$","typeString":"mapping(bytes4 => struct LibDiamond.FacetAddressAndPosition storage ref)"}},"id":3255,"indexExpression":{"id":3253,"name":"_selector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3225,"src":"8208:9:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8178:40:25","typeDescriptions":{"typeIdentifier":"t_struct$_FacetAddressAndPosition_$2700_storage","typeString":"struct LibDiamond.FacetAddressAndPosition storage ref"}},"id":3256,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8219:12:25","memberName":"facetAddress","nodeType":"MemberAccess","referencedDeclaration":2697,"src":"8178:53:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3257,"name":"_facetAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3229,"src":"8234:13:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8178:69:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3259,"nodeType":"ExpressionStatement","src":"8178:69:25"}]},"id":3261,"implemented":true,"kind":"function","modifiers":[],"name":"addFunction","nameLocation":"7874:11:25","nodeType":"FunctionDefinition","parameters":{"id":3230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3223,"mutability":"mutable","name":"ds","nameLocation":"7909:2:25","nodeType":"VariableDeclaration","scope":3261,"src":"7886:25:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage"},"typeName":{"id":3222,"nodeType":"UserDefinedTypeName","pathNode":{"id":3221,"name":"DiamondStorage","nameLocations":["7886:14:25"],"nodeType":"IdentifierPath","referencedDeclaration":2744,"src":"7886:14:25"},"referencedDeclaration":2744,"src":"7886:14:25","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage"}},"visibility":"internal"},{"constant":false,"id":3225,"mutability":"mutable","name":"_selector","nameLocation":"7920:9:25","nodeType":"VariableDeclaration","scope":3261,"src":"7913:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3224,"name":"bytes4","nodeType":"ElementaryTypeName","src":"7913:6:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":3227,"mutability":"mutable","name":"_selectorPosition","nameLocation":"7938:17:25","nodeType":"VariableDeclaration","scope":3261,"src":"7931:24:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":3226,"name":"uint96","nodeType":"ElementaryTypeName","src":"7931:6:25","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":3229,"mutability":"mutable","name":"_facetAddress","nameLocation":"7965:13:25","nodeType":"VariableDeclaration","scope":3261,"src":"7957:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3228,"name":"address","nodeType":"ElementaryTypeName","src":"7957:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7885:94:25"},"returnParameters":{"id":3231,"nodeType":"ParameterList","parameters":[],"src":"7989:0:25"},"scope":3887,"src":"7865:389:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3427,"nodeType":"Block","src":"8361:2089:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3272,"name":"_facetAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3266,"src":"8387:13:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8412:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3274,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8404:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3273,"name":"address","nodeType":"ElementaryTypeName","src":"8404:7:25","typeDescriptions":{}}},"id":3276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8404:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8387:27:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c69624469616d6f6e644375743a2043616e27742072656d6f76652066756e6374696f6e207468617420646f65736e2774206578697374","id":3278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8416:57:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_2c590e498c4d56c984a7092fd5e89a68b9f4541ce9f97252fb74e44a00ffbb71","typeString":"literal_string \"LibDiamondCut: Can't remove function that doesn't exist\""},"value":"LibDiamondCut: Can't remove function that doesn't exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2c590e498c4d56c984a7092fd5e89a68b9f4541ce9f97252fb74e44a00ffbb71","typeString":"literal_string \"LibDiamondCut: Can't remove function that doesn't exist\""}],"id":3271,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8379:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8379:95:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3280,"nodeType":"ExpressionStatement","src":"8379:95:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3282,"name":"_facetAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3266,"src":"8569:13:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":3285,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8594:4:25","typeDescriptions":{"typeIdentifier":"t_contract$_LibDiamond_$3887","typeString":"library LibDiamond"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LibDiamond_$3887","typeString":"library LibDiamond"}],"id":3284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8586:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3283,"name":"address","nodeType":"ElementaryTypeName","src":"8586:7:25","typeDescriptions":{}}},"id":3286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8586:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8569:30:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c69624469616d6f6e644375743a2043616e27742072656d6f766520696d6d757461626c652066756e6374696f6e","id":3288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8601:48:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_8ba063dfaa4be2d2cbe73dbb1364728b0f7031ac048441d5fad19e9541992b21","typeString":"literal_string \"LibDiamondCut: Can't remove immutable function\""},"value":"LibDiamondCut: Can't remove immutable function"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8ba063dfaa4be2d2cbe73dbb1364728b0f7031ac048441d5fad19e9541992b21","typeString":"literal_string \"LibDiamondCut: Can't remove immutable function\""}],"id":3281,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8561:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8561:89:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3290,"nodeType":"ExpressionStatement","src":"8561:89:25"},{"assignments":[3292],"declarations":[{"constant":false,"id":3292,"mutability":"mutable","name":"selectorPosition","nameLocation":"8742:16:25","nodeType":"VariableDeclaration","scope":3427,"src":"8734:24:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3291,"name":"uint256","nodeType":"ElementaryTypeName","src":"8734:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3298,"initialValue":{"expression":{"baseExpression":{"expression":{"id":3293,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"8761:2:25","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":3294,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8764:26:25","memberName":"selectorToFacetAndPosition","nodeType":"MemberAccess","referencedDeclaration":2724,"src":"8761:29:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_struct$_FacetAddressAndPosition_$2700_storage_$","typeString":"mapping(bytes4 => struct LibDiamond.FacetAddressAndPosition storage ref)"}},"id":3296,"indexExpression":{"id":3295,"name":"_selector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"8791:9:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8761:40:25","typeDescriptions":{"typeIdentifier":"t_struct$_FacetAddressAndPosition_$2700_storage","typeString":"struct LibDiamond.FacetAddressAndPosition storage ref"}},"id":3297,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8802:24:25","memberName":"functionSelectorPosition","nodeType":"MemberAccess","referencedDeclaration":2699,"src":"8761:65:25","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"8734:92:25"},{"assignments":[3300],"declarations":[{"constant":false,"id":3300,"mutability":"mutable","name":"lastSelectorPosition","nameLocation":"8844:20:25","nodeType":"VariableDeclaration","scope":3427,"src":"8836:28:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3299,"name":"uint256","nodeType":"ElementaryTypeName","src":"8836:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3309,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"baseExpression":{"expression":{"id":3301,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"8867:2:25","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":3302,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8870:22:25","memberName":"facetFunctionSelectors","nodeType":"MemberAccess","referencedDeclaration":2729,"src":"8867:25:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_FacetFunctionSelectors_$2706_storage_$","typeString":"mapping(address => struct LibDiamond.FacetFunctionSelectors storage ref)"}},"id":3304,"indexExpression":{"id":3303,"name":"_facetAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3266,"src":"8893:13:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8867:40:25","typeDescriptions":{"typeIdentifier":"t_struct$_FacetFunctionSelectors_$2706_storage","typeString":"struct LibDiamond.FacetFunctionSelectors storage ref"}},"id":3305,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8908:17:25","memberName":"functionSelectors","nodeType":"MemberAccess","referencedDeclaration":2703,"src":"8867:58:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_storage","typeString":"bytes4[] storage ref"}},"id":3306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8926:6:25","memberName":"length","nodeType":"MemberAccess","src":"8867:65:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8935:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8867:69:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8836:100:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3310,"name":"selectorPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3292,"src":"9018:16:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3311,"name":"lastSelectorPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3300,"src":"9038:20:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9018:40:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3347,"nodeType":"IfStatement","src":"9014:387:25","trueBody":{"id":3346,"nodeType":"Block","src":"9060:341:25","statements":[{"assignments":[3314],"declarations":[{"constant":false,"id":3314,"mutability":"mutable","name":"lastSelector","nameLocation":"9081:12:25","nodeType":"VariableDeclaration","scope":3346,"src":"9074:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3313,"name":"bytes4","nodeType":"ElementaryTypeName","src":"9074:6:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"id":3322,"initialValue":{"baseExpression":{"expression":{"baseExpression":{"expression":{"id":3315,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"9096:2:25","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":3316,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9099:22:25","memberName":"facetFunctionSelectors","nodeType":"MemberAccess","referencedDeclaration":2729,"src":"9096:25:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_FacetFunctionSelectors_$2706_storage_$","typeString":"mapping(address => struct LibDiamond.FacetFunctionSelectors storage ref)"}},"id":3318,"indexExpression":{"id":3317,"name":"_facetAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3266,"src":"9122:13:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9096:40:25","typeDescriptions":{"typeIdentifier":"t_struct$_FacetFunctionSelectors_$2706_storage","typeString":"struct LibDiamond.FacetFunctionSelectors storage ref"}},"id":3319,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9137:17:25","memberName":"functionSelectors","nodeType":"MemberAccess","referencedDeclaration":2703,"src":"9096:58:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_storage","typeString":"bytes4[] storage ref"}},"id":3321,"indexExpression":{"id":3320,"name":"lastSelectorPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3300,"src":"9155:20:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9096:80:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"VariableDeclarationStatement","src":"9074:102:25"},{"expression":{"id":3332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"expression":{"id":3323,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"9190:2:25","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":3326,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9193:22:25","memberName":"facetFunctionSelectors","nodeType":"MemberAccess","referencedDeclaration":2729,"src":"9190:25:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_FacetFunctionSelectors_$2706_storage_$","typeString":"mapping(address => struct LibDiamond.FacetFunctionSelectors storage ref)"}},"id":3327,"indexExpression":{"id":3325,"name":"_facetAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3266,"src":"9216:13:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9190:40:25","typeDescriptions":{"typeIdentifier":"t_struct$_FacetFunctionSelectors_$2706_storage","typeString":"struct LibDiamond.FacetFunctionSelectors storage ref"}},"id":3328,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9231:17:25","memberName":"functionSelectors","nodeType":"MemberAccess","referencedDeclaration":2703,"src":"9190:58:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_storage","typeString":"bytes4[] storage ref"}},"id":3330,"indexExpression":{"id":3329,"name":"selectorPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3292,"src":"9249:16:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9190:76:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3331,"name":"lastSelector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3314,"src":"9269:12:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"9190:91:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":3333,"nodeType":"ExpressionStatement","src":"9190:91:25"},{"expression":{"id":3344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"expression":{"id":3334,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"9295:2:25","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":3337,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9298:26:25","memberName":"selectorToFacetAndPosition","nodeType":"MemberAccess","referencedDeclaration":2724,"src":"9295:29:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_struct$_FacetAddressAndPosition_$2700_storage_$","typeString":"mapping(bytes4 => struct LibDiamond.FacetAddressAndPosition storage ref)"}},"id":3338,"indexExpression":{"id":3336,"name":"lastSelector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3314,"src":"9325:12:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9295:43:25","typeDescriptions":{"typeIdentifier":"t_struct$_FacetAddressAndPosition_$2700_storage","typeString":"struct LibDiamond.FacetAddressAndPosition storage ref"}},"id":3339,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9339:24:25","memberName":"functionSelectorPosition","nodeType":"MemberAccess","referencedDeclaration":2699,"src":"9295:68:25","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3342,"name":"selectorPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3292,"src":"9373:16:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3341,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9366:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":3340,"name":"uint96","nodeType":"ElementaryTypeName","src":"9366:6:25","typeDescriptions":{}}},"id":3343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9366:24:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"9295:95:25","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":3345,"nodeType":"ExpressionStatement","src":"9295:95:25"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"baseExpression":{"expression":{"id":3348,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"9446:2:25","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":3351,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9449:22:25","memberName":"facetFunctionSelectors","nodeType":"MemberAccess","referencedDeclaration":2729,"src":"9446:25:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_FacetFunctionSelectors_$2706_storage_$","typeString":"mapping(address => struct LibDiamond.FacetFunctionSelectors storage ref)"}},"id":3352,"indexExpression":{"id":3350,"name":"_facetAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3266,"src":"9472:13:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9446:40:25","typeDescriptions":{"typeIdentifier":"t_struct$_FacetFunctionSelectors_$2706_storage","typeString":"struct LibDiamond.FacetFunctionSelectors storage ref"}},"id":3353,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9487:17:25","memberName":"functionSelectors","nodeType":"MemberAccess","referencedDeclaration":2703,"src":"9446:58:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_storage","typeString":"bytes4[] storage ref"}},"id":3354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9505:3:25","memberName":"pop","nodeType":"MemberAccess","src":"9446:62:25","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_bytes4_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_bytes4_$dyn_storage_ptr_$","typeString":"function (bytes4[] storage pointer)"}},"id":3355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9446:64:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3356,"nodeType":"ExpressionStatement","src":"9446:64:25"},{"expression":{"id":3361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"9520:47:25","subExpression":{"baseExpression":{"expression":{"id":3357,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"9527:2:25","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":3358,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9530:26:25","memberName":"selectorToFacetAndPosition","nodeType":"MemberAccess","referencedDeclaration":2724,"src":"9527:29:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_struct$_FacetAddressAndPosition_$2700_storage_$","typeString":"mapping(bytes4 => struct LibDiamond.FacetAddressAndPosition storage ref)"}},"id":3360,"indexExpression":{"id":3359,"name":"_selector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"9557:9:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9527:40:25","typeDescriptions":{"typeIdentifier":"t_struct$_FacetAddressAndPosition_$2700_storage","typeString":"struct LibDiamond.FacetAddressAndPosition storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3362,"nodeType":"ExpressionStatement","src":"9520:47:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3363,"name":"lastSelectorPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3300,"src":"9662:20:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9686:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9662:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3426,"nodeType":"IfStatement","src":"9658:786:25","trueBody":{"id":3425,"nodeType":"Block","src":"9689:755:25","statements":[{"assignments":[3367],"declarations":[{"constant":false,"id":3367,"mutability":"mutable","name":"lastFacetAddressPosition","nameLocation":"9802:24:25","nodeType":"VariableDeclaration","scope":3425,"src":"9794:32:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3366,"name":"uint256","nodeType":"ElementaryTypeName","src":"9794:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3373,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":3368,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"9829:2:25","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":3369,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9832:14:25","memberName":"facetAddresses","nodeType":"MemberAccess","referencedDeclaration":2732,"src":"9829:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":3370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9847:6:25","memberName":"length","nodeType":"MemberAccess","src":"9829:24:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9856:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9829:28:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9794:63:25"},{"assignments":[3375],"declarations":[{"constant":false,"id":3375,"mutability":"mutable","name":"facetAddressPosition","nameLocation":"9879:20:25","nodeType":"VariableDeclaration","scope":3425,"src":"9871:28:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3374,"name":"uint256","nodeType":"ElementaryTypeName","src":"9871:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3381,"initialValue":{"expression":{"baseExpression":{"expression":{"id":3376,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"9902:2:25","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":3377,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9905:22:25","memberName":"facetFunctionSelectors","nodeType":"MemberAccess","referencedDeclaration":2729,"src":"9902:25:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_FacetFunctionSelectors_$2706_storage_$","typeString":"mapping(address => struct LibDiamond.FacetFunctionSelectors storage ref)"}},"id":3379,"indexExpression":{"id":3378,"name":"_facetAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3266,"src":"9928:13:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9902:40:25","typeDescriptions":{"typeIdentifier":"t_struct$_FacetFunctionSelectors_$2706_storage","typeString":"struct LibDiamond.FacetFunctionSelectors storage ref"}},"id":3380,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9943:20:25","memberName":"facetAddressPosition","nodeType":"MemberAccess","referencedDeclaration":2705,"src":"9902:61:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9871:92:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3382,"name":"facetAddressPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3375,"src":"9981:20:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3383,"name":"lastFacetAddressPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3367,"src":"10005:24:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9981:48:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3410,"nodeType":"IfStatement","src":"9977:338:25","trueBody":{"id":3409,"nodeType":"Block","src":"10031:284:25","statements":[{"assignments":[3386],"declarations":[{"constant":false,"id":3386,"mutability":"mutable","name":"lastFacetAddress","nameLocation":"10057:16:25","nodeType":"VariableDeclaration","scope":3409,"src":"10049:24:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3385,"name":"address","nodeType":"ElementaryTypeName","src":"10049:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3391,"initialValue":{"baseExpression":{"expression":{"id":3387,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"10076:2:25","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":3388,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10079:14:25","memberName":"facetAddresses","nodeType":"MemberAccess","referencedDeclaration":2732,"src":"10076:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":3390,"indexExpression":{"id":3389,"name":"lastFacetAddressPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3367,"src":"10094:24:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10076:43:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10049:70:25"},{"expression":{"id":3398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":3392,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"10137:2:25","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":3395,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10140:14:25","memberName":"facetAddresses","nodeType":"MemberAccess","referencedDeclaration":2732,"src":"10137:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":3396,"indexExpression":{"id":3394,"name":"facetAddressPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3375,"src":"10155:20:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10137:39:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3397,"name":"lastFacetAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3386,"src":"10179:16:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10137:58:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3399,"nodeType":"ExpressionStatement","src":"10137:58:25"},{"expression":{"id":3407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"expression":{"id":3400,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"10213:2:25","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":3403,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10216:22:25","memberName":"facetFunctionSelectors","nodeType":"MemberAccess","referencedDeclaration":2729,"src":"10213:25:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_FacetFunctionSelectors_$2706_storage_$","typeString":"mapping(address => struct LibDiamond.FacetFunctionSelectors storage ref)"}},"id":3404,"indexExpression":{"id":3402,"name":"lastFacetAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3386,"src":"10239:16:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10213:43:25","typeDescriptions":{"typeIdentifier":"t_struct$_FacetFunctionSelectors_$2706_storage","typeString":"struct LibDiamond.FacetFunctionSelectors storage ref"}},"id":3405,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10257:20:25","memberName":"facetAddressPosition","nodeType":"MemberAccess","referencedDeclaration":2705,"src":"10213:64:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3406,"name":"facetAddressPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3375,"src":"10280:20:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10213:87:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3408,"nodeType":"ExpressionStatement","src":"10213:87:25"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":3411,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"10328:2:25","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":3414,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10331:14:25","memberName":"facetAddresses","nodeType":"MemberAccess","referencedDeclaration":2732,"src":"10328:17:25","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":3415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10346:3:25","memberName":"pop","nodeType":"MemberAccess","src":"10328:21:25","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer)"}},"id":3416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10328:23:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3417,"nodeType":"ExpressionStatement","src":"10328:23:25"},{"expression":{"id":3423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"10365:68:25","subExpression":{"expression":{"baseExpression":{"expression":{"id":3418,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"10372:2:25","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":3419,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10375:22:25","memberName":"facetFunctionSelectors","nodeType":"MemberAccess","referencedDeclaration":2729,"src":"10372:25:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_FacetFunctionSelectors_$2706_storage_$","typeString":"mapping(address => struct LibDiamond.FacetFunctionSelectors storage ref)"}},"id":3421,"indexExpression":{"id":3420,"name":"_facetAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3266,"src":"10398:13:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10372:40:25","typeDescriptions":{"typeIdentifier":"t_struct$_FacetFunctionSelectors_$2706_storage","typeString":"struct LibDiamond.FacetFunctionSelectors storage ref"}},"id":3422,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10413:20:25","memberName":"facetAddressPosition","nodeType":"MemberAccess","referencedDeclaration":2705,"src":"10372:61:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3424,"nodeType":"ExpressionStatement","src":"10365:68:25"}]}}]},"id":3428,"implemented":true,"kind":"function","modifiers":[],"name":"removeFunction","nameLocation":"8269:14:25","nodeType":"FunctionDefinition","parameters":{"id":3269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3264,"mutability":"mutable","name":"ds","nameLocation":"8307:2:25","nodeType":"VariableDeclaration","scope":3428,"src":"8284:25:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage"},"typeName":{"id":3263,"nodeType":"UserDefinedTypeName","pathNode":{"id":3262,"name":"DiamondStorage","nameLocations":["8284:14:25"],"nodeType":"IdentifierPath","referencedDeclaration":2744,"src":"8284:14:25"},"referencedDeclaration":2744,"src":"8284:14:25","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage"}},"visibility":"internal"},{"constant":false,"id":3266,"mutability":"mutable","name":"_facetAddress","nameLocation":"8319:13:25","nodeType":"VariableDeclaration","scope":3428,"src":"8311:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3265,"name":"address","nodeType":"ElementaryTypeName","src":"8311:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3268,"mutability":"mutable","name":"_selector","nameLocation":"8341:9:25","nodeType":"VariableDeclaration","scope":3428,"src":"8334:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3267,"name":"bytes4","nodeType":"ElementaryTypeName","src":"8334:6:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"8283:68:25"},"returnParameters":{"id":3270,"nodeType":"ParameterList","parameters":[],"src":"8361:0:25"},"scope":3887,"src":"8260:2190:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3504,"nodeType":"Block","src":"10534:793:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3435,"name":"_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3430,"src":"10548:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10565:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10557:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3436,"name":"address","nodeType":"ElementaryTypeName","src":"10557:7:25","typeDescriptions":{}}},"id":3439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10557:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10548:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3502,"nodeType":"Block","src":"10694:627:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3451,"name":"_calldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3432,"src":"10716:9:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10726:6:25","memberName":"length","nodeType":"MemberAccess","src":"10716:16:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10735:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10716:20:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c69624469616d6f6e644375743a205f63616c6c6461746120697320656d70747920627574205f696e6974206973206e6f742061646472657373283029","id":3455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10738:63:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_868d165ec2461661b624442252aed6a645399bfae7b60083a77ea1b61b084042","typeString":"literal_string \"LibDiamondCut: _calldata is empty but _init is not address(0)\""},"value":"LibDiamondCut: _calldata is empty but _init is not address(0)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_868d165ec2461661b624442252aed6a645399bfae7b60083a77ea1b61b084042","typeString":"literal_string \"LibDiamondCut: _calldata is empty but _init is not address(0)\""}],"id":3450,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10708:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10708:94:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3457,"nodeType":"ExpressionStatement","src":"10708:94:25"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3458,"name":"_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3430,"src":"10820:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":3461,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"10837:4:25","typeDescriptions":{"typeIdentifier":"t_contract$_LibDiamond_$3887","typeString":"library LibDiamond"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LibDiamond_$3887","typeString":"library LibDiamond"}],"id":3460,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10829:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3459,"name":"address","nodeType":"ElementaryTypeName","src":"10829:7:25","typeDescriptions":{}}},"id":3462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10829:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10820:22:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3470,"nodeType":"IfStatement","src":"10816:134:25","trueBody":{"id":3469,"nodeType":"Block","src":"10844:106:25","statements":[{"expression":{"arguments":[{"id":3465,"name":"_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3430,"src":"10885:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"4c69624469616d6f6e644375743a205f696e6974206164647265737320686173206e6f20636f6465","id":3466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10892:42:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_460f8f0920c649146ef02741816b1cf9ce4f02ea288ceb73adf027cefe9069a0","typeString":"literal_string \"LibDiamondCut: _init address has no code\""},"value":"LibDiamondCut: _init address has no code"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_stringliteral_460f8f0920c649146ef02741816b1cf9ce4f02ea288ceb73adf027cefe9069a0","typeString":"literal_string \"LibDiamondCut: _init address has no code\""}],"id":3464,"name":"enforceHasContractCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3524,"src":"10862:22:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,string memory) view"}},"id":3467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10862:73:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3468,"nodeType":"ExpressionStatement","src":"10862:73:25"}]}},{"assignments":[3472,3474],"declarations":[{"constant":false,"id":3472,"mutability":"mutable","name":"success","nameLocation":"10969:7:25","nodeType":"VariableDeclaration","scope":3502,"src":"10964:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3471,"name":"bool","nodeType":"ElementaryTypeName","src":"10964:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3474,"mutability":"mutable","name":"error","nameLocation":"10991:5:25","nodeType":"VariableDeclaration","scope":3502,"src":"10978:18:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3473,"name":"bytes","nodeType":"ElementaryTypeName","src":"10978:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3479,"initialValue":{"arguments":[{"id":3477,"name":"_calldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3432,"src":"11019:9:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3475,"name":"_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3430,"src":"11000:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11006:12:25","memberName":"delegatecall","nodeType":"MemberAccess","src":"11000:18:25","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":3478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11000:29:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"10963:66:25"},{"condition":{"id":3481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11047:8:25","subExpression":{"id":3480,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3472,"src":"11048:7:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3501,"nodeType":"IfStatement","src":"11043:268:25","trueBody":{"id":3500,"nodeType":"Block","src":"11057:254:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3482,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3474,"src":"11079:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11085:6:25","memberName":"length","nodeType":"MemberAccess","src":"11079:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11094:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11079:16:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3498,"nodeType":"Block","src":"11208:89:25","statements":[{"expression":{"arguments":[{"hexValue":"4c69624469616d6f6e644375743a205f696e69742066756e6374696f6e207265766572746564","id":3495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11237:40:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_080b2fe78815767d522290509c8fce2af708c8a54455ca1b0cc978c92822465d","typeString":"literal_string \"LibDiamondCut: _init function reverted\""},"value":"LibDiamondCut: _init function reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_080b2fe78815767d522290509c8fce2af708c8a54455ca1b0cc978c92822465d","typeString":"literal_string \"LibDiamondCut: _init function reverted\""}],"id":3494,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"11230:6:25","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":3496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11230:48:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3497,"nodeType":"ExpressionStatement","src":"11230:48:25"}]},"id":3499,"nodeType":"IfStatement","src":"11075:222:25","trueBody":{"id":3493,"nodeType":"Block","src":"11097:105:25","statements":[{"expression":{"arguments":[{"arguments":[{"id":3489,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3474,"src":"11176:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11169:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3487,"name":"string","nodeType":"ElementaryTypeName","src":"11169:6:25","typeDescriptions":{}}},"id":3490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11169:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3486,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"11162:6:25","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":3491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11162:21:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3492,"nodeType":"ExpressionStatement","src":"11162:21:25"}]}}]}}]},"id":3503,"nodeType":"IfStatement","src":"10544:777:25","trueBody":{"id":3449,"nodeType":"Block","src":"10569:119:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3442,"name":"_calldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3432,"src":"10591:9:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10601:6:25","memberName":"length","nodeType":"MemberAccess","src":"10591:16:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10611:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10591:21:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c69624469616d6f6e644375743a205f696e69742069732061646472657373283029206275745f63616c6c64617461206973206e6f7420656d707479","id":3446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10614:62:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_046c761a688d1dc3c500562bc5aaa3544f01f394f9bb3b69aa2a950a45afb1f8","typeString":"literal_string \"LibDiamondCut: _init is address(0) but_calldata is not empty\""},"value":"LibDiamondCut: _init is address(0) but_calldata is not empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_046c761a688d1dc3c500562bc5aaa3544f01f394f9bb3b69aa2a950a45afb1f8","typeString":"literal_string \"LibDiamondCut: _init is address(0) but_calldata is not empty\""}],"id":3441,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10583:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10583:94:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3448,"nodeType":"ExpressionStatement","src":"10583:94:25"}]}}]},"id":3505,"implemented":true,"kind":"function","modifiers":[],"name":"initializeDiamondCut","nameLocation":"10465:20:25","nodeType":"FunctionDefinition","parameters":{"id":3433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3430,"mutability":"mutable","name":"_init","nameLocation":"10494:5:25","nodeType":"VariableDeclaration","scope":3505,"src":"10486:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3429,"name":"address","nodeType":"ElementaryTypeName","src":"10486:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3432,"mutability":"mutable","name":"_calldata","nameLocation":"10514:9:25","nodeType":"VariableDeclaration","scope":3505,"src":"10501:22:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3431,"name":"bytes","nodeType":"ElementaryTypeName","src":"10501:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10485:39:25"},"returnParameters":{"id":3434,"nodeType":"ParameterList","parameters":[],"src":"10534:0:25"},"scope":3887,"src":"10456:871:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3523,"nodeType":"Block","src":"11427:167:25","statements":[{"assignments":[3513],"declarations":[{"constant":false,"id":3513,"mutability":"mutable","name":"contractSize","nameLocation":"11445:12:25","nodeType":"VariableDeclaration","scope":3523,"src":"11437:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3512,"name":"uint256","nodeType":"ElementaryTypeName","src":"11437:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3514,"nodeType":"VariableDeclarationStatement","src":"11437:20:25"},{"AST":{"nodeType":"YulBlock","src":"11476:62:25","statements":[{"nodeType":"YulAssignment","src":"11490:38:25","value":{"arguments":[{"name":"_contract","nodeType":"YulIdentifier","src":"11518:9:25"}],"functionName":{"name":"extcodesize","nodeType":"YulIdentifier","src":"11506:11:25"},"nodeType":"YulFunctionCall","src":"11506:22:25"},"variableNames":[{"name":"contractSize","nodeType":"YulIdentifier","src":"11490:12:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3507,"isOffset":false,"isSlot":false,"src":"11518:9:25","valueSize":1},{"declaration":3513,"isOffset":false,"isSlot":false,"src":"11490:12:25","valueSize":1}],"id":3515,"nodeType":"InlineAssembly","src":"11467:71:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3517,"name":"contractSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3513,"src":"11555:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11570:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11555:16:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3520,"name":"_errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3509,"src":"11573:13:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3516,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11547:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11547:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3522,"nodeType":"ExpressionStatement","src":"11547:40:25"}]},"id":3524,"implemented":true,"kind":"function","modifiers":[],"name":"enforceHasContractCode","nameLocation":"11342:22:25","nodeType":"FunctionDefinition","parameters":{"id":3510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3507,"mutability":"mutable","name":"_contract","nameLocation":"11373:9:25","nodeType":"VariableDeclaration","scope":3524,"src":"11365:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3506,"name":"address","nodeType":"ElementaryTypeName","src":"11365:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3509,"mutability":"mutable","name":"_errorMessage","nameLocation":"11398:13:25","nodeType":"VariableDeclaration","scope":3524,"src":"11384:27:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3508,"name":"string","nodeType":"ElementaryTypeName","src":"11384:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11364:48:25"},"returnParameters":{"id":3511,"nodeType":"ParameterList","parameters":[],"src":"11427:0:25"},"scope":3887,"src":"11333:261:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3554,"nodeType":"Block","src":"11721:230:25","statements":[{"assignments":[3531],"declarations":[{"constant":false,"id":3531,"mutability":"mutable","name":"ds","nameLocation":"11754:2:25","nodeType":"VariableDeclaration","scope":3554,"src":"11731:25:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage"},"typeName":{"id":3530,"nodeType":"UserDefinedTypeName","pathNode":{"id":3529,"name":"DiamondStorage","nameLocations":["11731:14:25"],"nodeType":"IdentifierPath","referencedDeclaration":2744,"src":"11731:14:25"},"referencedDeclaration":2744,"src":"11731:14:25","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage"}},"visibility":"internal"}],"id":3534,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3532,"name":"diamondStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2756,"src":"11759:14:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$2744_storage_ptr_$","typeString":"function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"}},"id":3533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11759:16:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"11731:44:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3536,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3531,"src":"11793:2:25","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":3537,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11796:15:25","memberName":"upgradeTimelock","nodeType":"MemberAccess","referencedDeclaration":2740,"src":"11793:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11815:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11793:23:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c69624469616d6f6e643a2054696d656c6f636b20616c726561647920696e697469616c697a6564","id":3540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11818:42:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_9ce02b7f4f50d9d7f1e7739e5e866ff5614c1b018b3bd10f25d604b80fcb0a4a","typeString":"literal_string \"LibDiamond: Timelock already initialized\""},"value":"LibDiamond: Timelock already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9ce02b7f4f50d9d7f1e7739e5e866ff5614c1b018b3bd10f25d604b80fcb0a4a","typeString":"literal_string \"LibDiamond: Timelock already initialized\""}],"id":3535,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11785:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11785:76:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3542,"nodeType":"ExpressionStatement","src":"11785:76:25"},{"expression":{"id":3552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3543,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3531,"src":"11871:2:25","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":3545,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11874:15:25","memberName":"upgradeTimelock","nodeType":"MemberAccess","referencedDeclaration":2740,"src":"11871:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3546,"name":"_timelock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3526,"src":"11892:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11904:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11892:13:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3550,"name":"DEFAULT_UPGRADE_TIMELOCK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2813,"src":"11920:24:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11892:52:25","trueExpression":{"id":3549,"name":"_timelock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3526,"src":"11908:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11871:73:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3553,"nodeType":"ExpressionStatement","src":"11871:73:25"}]},"id":3555,"implemented":true,"kind":"function","modifiers":[],"name":"initializeUpgradeTimelock","nameLocation":"11667:25:25","nodeType":"FunctionDefinition","parameters":{"id":3527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3526,"mutability":"mutable","name":"_timelock","nameLocation":"11701:9:25","nodeType":"VariableDeclaration","scope":3555,"src":"11693:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3525,"name":"uint256","nodeType":"ElementaryTypeName","src":"11693:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11692:19:25"},"returnParameters":{"id":3528,"nodeType":"ParameterList","parameters":[],"src":"11721:0:25"},"scope":3887,"src":"11658:293:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3813,"nodeType":"Block","src":"12168:2370:25","statements":[{"assignments":[3568],"declarations":[{"constant":false,"id":3568,"mutability":"mutable","name":"ds","nameLocation":"12201:2:25","nodeType":"VariableDeclaration","scope":3813,"src":"12178:25:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage"},"typeName":{"id":3567,"nodeType":"UserDefinedTypeName","pathNode":{"id":3566,"name":"DiamondStorage","nameLocations":["12178:14:25"],"nodeType":"IdentifierPath","referencedDeclaration":2744,"src":"12178:14:25"},"referencedDeclaration":2744,"src":"12178:14:25","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage"}},"visibility":"internal"}],"id":3571,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3569,"name":"diamondStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2756,"src":"12206:14:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$2744_storage_ptr_$","typeString":"function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"}},"id":3570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12206:16:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"12178:44:25"},{"expression":{"arguments":[{"id":3576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"12240:26:25","subExpression":{"expression":{"expression":{"id":3573,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"12241:2:25","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":3574,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12244:15:25","memberName":"upgradeProposal","nodeType":"MemberAccess","referencedDeclaration":2743,"src":"12241:18:25","typeDescriptions":{"typeIdentifier":"t_struct$_UpgradeProposal_$2719_storage","typeString":"struct LibDiamond.UpgradeProposal storage ref"}},"id":3575,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12260:6:25","memberName":"exists","nodeType":"MemberAccess","referencedDeclaration":2718,"src":"12241:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c69624469616d6f6e643a205570677261646520616c72656164792070726f706f736564","id":3577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12268:38:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_b6b860163f09eaf9581a3c3dca757c905d2636dfee636c736999bea07d6a9262","typeString":"literal_string \"LibDiamond: Upgrade already proposed\""},"value":"LibDiamond: Upgrade already proposed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b6b860163f09eaf9581a3c3dca757c905d2636dfee636c736999bea07d6a9262","typeString":"literal_string \"LibDiamond: Upgrade already proposed\""}],"id":3572,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12232:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12232:75:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3579,"nodeType":"ExpressionStatement","src":"12232:75:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3581,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"12325:2:25","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":3582,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12328:15:25","memberName":"upgradeTimelock","nodeType":"MemberAccess","referencedDeclaration":2740,"src":"12325:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12346:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12325:22:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c69624469616d6f6e643a2054696d656c6f636b206e6f7420696e697469616c697a6564","id":3585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12349:38:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_d09b47edbfca4a2ee3b2c8249a392b83c890c9a68484e771caaef2e624a6a02e","typeString":"literal_string \"LibDiamond: Timelock not initialized\""},"value":"LibDiamond: Timelock not initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d09b47edbfca4a2ee3b2c8249a392b83c890c9a68484e771caaef2e624a6a02e","typeString":"literal_string \"LibDiamond: Timelock not initialized\""}],"id":3580,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12317:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12317:71:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3587,"nodeType":"ExpressionStatement","src":"12317:71:25"},{"assignments":[3593],"declarations":[{"constant":false,"id":3593,"mutability":"mutable","name":"diamondCutCopy","nameLocation":"12511:14:25","nodeType":"VariableDeclaration","scope":3813,"src":"12481:44:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$2373_memory_ptr_$dyn_memory_ptr","typeString":"struct IDiamondCut.FacetCut[]"},"typeName":{"baseType":{"id":3591,"nodeType":"UserDefinedTypeName","pathNode":{"id":3590,"name":"IDiamondCut.FacetCut","nameLocations":["12481:11:25","12493:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":2373,"src":"12481:20:25"},"referencedDeclaration":2373,"src":"12481:20:25","typeDescriptions":{"typeIdentifier":"t_struct$_FacetCut_$2373_storage_ptr","typeString":"struct IDiamondCut.FacetCut"}},"id":3592,"nodeType":"ArrayTypeName","src":"12481:22:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$2373_storage_$dyn_storage_ptr","typeString":"struct IDiamondCut.FacetCut[]"}},"visibility":"internal"}],"id":3601,"initialValue":{"arguments":[{"expression":{"id":3598,"name":"_diamondCut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3559,"src":"12555:11:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$2373_memory_ptr_$dyn_memory_ptr","typeString":"struct IDiamondCut.FacetCut memory[] memory"}},"id":3599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12567:6:25","memberName":"length","nodeType":"MemberAccess","src":"12555:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3597,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"12528:26:25","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_FacetCut_$2373_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct IDiamondCut.FacetCut memory[] memory)"},"typeName":{"baseType":{"id":3595,"nodeType":"UserDefinedTypeName","pathNode":{"id":3594,"name":"IDiamondCut.FacetCut","nameLocations":["12532:11:25","12544:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":2373,"src":"12532:20:25"},"referencedDeclaration":2373,"src":"12532:20:25","typeDescriptions":{"typeIdentifier":"t_struct$_FacetCut_$2373_storage_ptr","typeString":"struct IDiamondCut.FacetCut"}},"id":3596,"nodeType":"ArrayTypeName","src":"12532:22:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$2373_storage_$dyn_storage_ptr","typeString":"struct IDiamondCut.FacetCut[]"}}},"id":3600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12528:46:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$2373_memory_ptr_$dyn_memory_ptr","typeString":"struct IDiamondCut.FacetCut memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12481:93:25"},{"body":{"id":3670,"nodeType":"Block","src":"12633:448:25","statements":[{"expression":{"id":3619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3613,"name":"diamondCutCopy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3593,"src":"12647:14:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$2373_memory_ptr_$dyn_memory_ptr","typeString":"struct IDiamondCut.FacetCut memory[] memory"}},"id":3615,"indexExpression":{"id":3614,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"12662:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12647:17:25","typeDescriptions":{"typeIdentifier":"t_struct$_FacetCut_$2373_memory_ptr","typeString":"struct IDiamondCut.FacetCut memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3616,"name":"_diamondCut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3559,"src":"12667:11:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$2373_memory_ptr_$dyn_memory_ptr","typeString":"struct IDiamondCut.FacetCut memory[] memory"}},"id":3618,"indexExpression":{"id":3617,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"12679:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12667:14:25","typeDescriptions":{"typeIdentifier":"t_struct$_FacetCut_$2373_memory_ptr","typeString":"struct IDiamondCut.FacetCut memory"}},"src":"12647:34:25","typeDescriptions":{"typeIdentifier":"t_struct$_FacetCut_$2373_memory_ptr","typeString":"struct IDiamondCut.FacetCut memory"}},"id":3620,"nodeType":"ExpressionStatement","src":"12647:34:25"},{"assignments":[3625],"declarations":[{"constant":false,"id":3625,"mutability":"mutable","name":"selectors","nameLocation":"12778:9:25","nodeType":"VariableDeclaration","scope":3670,"src":"12762:25:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[]"},"typeName":{"baseType":{"id":3623,"name":"bytes4","nodeType":"ElementaryTypeName","src":"12762:6:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":3624,"nodeType":"ArrayTypeName","src":"12762:8:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_storage_ptr","typeString":"bytes4[]"}},"visibility":"internal"}],"id":3635,"initialValue":{"arguments":[{"expression":{"expression":{"baseExpression":{"id":3629,"name":"_diamondCut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3559,"src":"12803:11:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$2373_memory_ptr_$dyn_memory_ptr","typeString":"struct IDiamondCut.FacetCut memory[] memory"}},"id":3631,"indexExpression":{"id":3630,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"12815:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12803:14:25","typeDescriptions":{"typeIdentifier":"t_struct$_FacetCut_$2373_memory_ptr","typeString":"struct IDiamondCut.FacetCut memory"}},"id":3632,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12818:17:25","memberName":"functionSelectors","nodeType":"MemberAccess","referencedDeclaration":2372,"src":"12803:32:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}},"id":3633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12836:6:25","memberName":"length","nodeType":"MemberAccess","src":"12803:39:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3628,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"12790:12:25","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes4_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes4[] memory)"},"typeName":{"baseType":{"id":3626,"name":"bytes4","nodeType":"ElementaryTypeName","src":"12794:6:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":3627,"nodeType":"ArrayTypeName","src":"12794:8:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_storage_ptr","typeString":"bytes4[]"}}},"id":3634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12790:53:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12762:81:25"},{"body":{"id":3661,"nodeType":"Block","src":"12927:83:25","statements":[{"expression":{"id":3659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3650,"name":"selectors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3625,"src":"12945:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}},"id":3652,"indexExpression":{"id":3651,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3637,"src":"12955:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12945:12:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":3653,"name":"_diamondCut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3559,"src":"12960:11:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$2373_memory_ptr_$dyn_memory_ptr","typeString":"struct IDiamondCut.FacetCut memory[] memory"}},"id":3655,"indexExpression":{"id":3654,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"12972:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12960:14:25","typeDescriptions":{"typeIdentifier":"t_struct$_FacetCut_$2373_memory_ptr","typeString":"struct IDiamondCut.FacetCut memory"}},"id":3656,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12975:17:25","memberName":"functionSelectors","nodeType":"MemberAccess","referencedDeclaration":2372,"src":"12960:32:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}},"id":3658,"indexExpression":{"id":3657,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3637,"src":"12993:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12960:35:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"12945:50:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":3660,"nodeType":"ExpressionStatement","src":"12945:50:25"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3640,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3637,"src":"12877:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"expression":{"baseExpression":{"id":3641,"name":"_diamondCut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3559,"src":"12881:11:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$2373_memory_ptr_$dyn_memory_ptr","typeString":"struct IDiamondCut.FacetCut memory[] memory"}},"id":3643,"indexExpression":{"id":3642,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"12893:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12881:14:25","typeDescriptions":{"typeIdentifier":"t_struct$_FacetCut_$2373_memory_ptr","typeString":"struct IDiamondCut.FacetCut memory"}},"id":3644,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12896:17:25","memberName":"functionSelectors","nodeType":"MemberAccess","referencedDeclaration":2372,"src":"12881:32:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}},"id":3645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12914:6:25","memberName":"length","nodeType":"MemberAccess","src":"12881:39:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12877:43:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3662,"initializationExpression":{"assignments":[3637],"declarations":[{"constant":false,"id":3637,"mutability":"mutable","name":"j","nameLocation":"12870:1:25","nodeType":"VariableDeclaration","scope":3662,"src":"12862:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3636,"name":"uint256","nodeType":"ElementaryTypeName","src":"12862:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3639,"initialValue":{"hexValue":"30","id":3638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12874:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12862:13:25"},"loopExpression":{"expression":{"id":3648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12922:3:25","subExpression":{"id":3647,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3637,"src":"12922:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3649,"nodeType":"ExpressionStatement","src":"12922:3:25"},"nodeType":"ForStatement","src":"12857:153:25"},{"expression":{"id":3668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3663,"name":"diamondCutCopy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3593,"src":"13023:14:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$2373_memory_ptr_$dyn_memory_ptr","typeString":"struct IDiamondCut.FacetCut memory[] memory"}},"id":3665,"indexExpression":{"id":3664,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"13038:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13023:17:25","typeDescriptions":{"typeIdentifier":"t_struct$_FacetCut_$2373_memory_ptr","typeString":"struct IDiamondCut.FacetCut memory"}},"id":3666,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13041:17:25","memberName":"functionSelectors","nodeType":"MemberAccess","referencedDeclaration":2372,"src":"13023:35:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3667,"name":"selectors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3625,"src":"13061:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}},"src":"13023:47:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}},"id":3669,"nodeType":"ExpressionStatement","src":"13023:47:25"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3606,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"12604:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3607,"name":"_diamondCut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3559,"src":"12608:11:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$2373_memory_ptr_$dyn_memory_ptr","typeString":"struct IDiamondCut.FacetCut memory[] memory"}},"id":3608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12620:6:25","memberName":"length","nodeType":"MemberAccess","src":"12608:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12604:22:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3671,"initializationExpression":{"assignments":[3603],"declarations":[{"constant":false,"id":3603,"mutability":"mutable","name":"i","nameLocation":"12597:1:25","nodeType":"VariableDeclaration","scope":3671,"src":"12589:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3602,"name":"uint256","nodeType":"ElementaryTypeName","src":"12589:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3605,"initialValue":{"hexValue":"30","id":3604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12601:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12589:13:25"},"loopExpression":{"expression":{"id":3611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12628:3:25","subExpression":{"id":3610,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"12628:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3612,"nodeType":"ExpressionStatement","src":"12628:3:25"},"nodeType":"ForStatement","src":"12584:497:25"},{"expression":{"id":3675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"13176:36:25","subExpression":{"expression":{"expression":{"id":3672,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"13183:2:25","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":3673,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13186:15:25","memberName":"upgradeProposal","nodeType":"MemberAccess","referencedDeclaration":2743,"src":"13183:18:25","typeDescriptions":{"typeIdentifier":"t_struct$_UpgradeProposal_$2719_storage","typeString":"struct LibDiamond.UpgradeProposal storage ref"}},"id":3674,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13202:10:25","memberName":"diamondCut","nodeType":"MemberAccess","referencedDeclaration":2710,"src":"13183:29:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$2373_storage_$dyn_storage","typeString":"struct IDiamondCut.FacetCut storage ref[] storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3676,"nodeType":"ExpressionStatement","src":"13176:36:25"},{"body":{"id":3766,"nodeType":"Block","src":"13351:870:25","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"expression":{"id":3688,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"13445:2:25","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":3692,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13448:15:25","memberName":"upgradeProposal","nodeType":"MemberAccess","referencedDeclaration":2743,"src":"13445:18:25","typeDescriptions":{"typeIdentifier":"t_struct$_UpgradeProposal_$2719_storage","typeString":"struct LibDiamond.UpgradeProposal storage ref"}},"id":3693,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13464:10:25","memberName":"diamondCut","nodeType":"MemberAccess","referencedDeclaration":2710,"src":"13445:29:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$2373_storage_$dyn_storage","typeString":"struct IDiamondCut.FacetCut storage ref[] storage ref"}},"id":3694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13475:4:25","memberName":"push","nodeType":"MemberAccess","src":"13445:34:25","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_FacetCut_$2373_storage_$dyn_storage_ptr_$returns$_t_struct$_FacetCut_$2373_storage_$attached_to$_t_array$_t_struct$_FacetCut_$2373_storage_$dyn_storage_ptr_$","typeString":"function (struct IDiamondCut.FacetCut storage ref[] storage pointer) returns (struct IDiamondCut.FacetCut storage ref)"}},"id":3695,"isConstant":false,"isLValue":true,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13445:36:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_FacetCut_$2373_storage","typeString":"struct IDiamondCut.FacetCut storage ref"}},"id":3696,"nodeType":"ExpressionStatement","src":"13445:36:25"},{"expression":{"id":3709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"expression":{"expression":{"id":3697,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"13568:2:25","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":3701,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13571:15:25","memberName":"upgradeProposal","nodeType":"MemberAccess","referencedDeclaration":2743,"src":"13568:18:25","typeDescriptions":{"typeIdentifier":"t_struct$_UpgradeProposal_$2719_storage","typeString":"struct LibDiamond.UpgradeProposal storage ref"}},"id":3702,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13587:10:25","memberName":"diamondCut","nodeType":"MemberAccess","referencedDeclaration":2710,"src":"13568:29:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$2373_storage_$dyn_storage","typeString":"struct IDiamondCut.FacetCut storage ref[] storage ref"}},"id":3703,"indexExpression":{"id":3700,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"13598:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13568:32:25","typeDescriptions":{"typeIdentifier":"t_struct$_FacetCut_$2373_storage","typeString":"struct IDiamondCut.FacetCut storage ref"}},"id":3704,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13601:12:25","memberName":"facetAddress","nodeType":"MemberAccess","referencedDeclaration":2366,"src":"13568:45:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":3705,"name":"_diamondCut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3559,"src":"13616:11:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$2373_memory_ptr_$dyn_memory_ptr","typeString":"struct IDiamondCut.FacetCut memory[] memory"}},"id":3707,"indexExpression":{"id":3706,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"13628:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13616:14:25","typeDescriptions":{"typeIdentifier":"t_struct$_FacetCut_$2373_memory_ptr","typeString":"struct IDiamondCut.FacetCut memory"}},"id":3708,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13631:12:25","memberName":"facetAddress","nodeType":"MemberAccess","referencedDeclaration":2366,"src":"13616:27:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13568:75:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3710,"nodeType":"ExpressionStatement","src":"13568:75:25"},{"expression":{"id":3723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"expression":{"expression":{"id":3711,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"13657:2:25","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":3715,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13660:15:25","memberName":"upgradeProposal","nodeType":"MemberAccess","referencedDeclaration":2743,"src":"13657:18:25","typeDescriptions":{"typeIdentifier":"t_struct$_UpgradeProposal_$2719_storage","typeString":"struct LibDiamond.UpgradeProposal storage ref"}},"id":3716,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13676:10:25","memberName":"diamondCut","nodeType":"MemberAccess","referencedDeclaration":2710,"src":"13657:29:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$2373_storage_$dyn_storage","typeString":"struct IDiamondCut.FacetCut storage ref[] storage ref"}},"id":3717,"indexExpression":{"id":3714,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"13687:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13657:32:25","typeDescriptions":{"typeIdentifier":"t_struct$_FacetCut_$2373_storage","typeString":"struct IDiamondCut.FacetCut storage ref"}},"id":3718,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13690:6:25","memberName":"action","nodeType":"MemberAccess","referencedDeclaration":2369,"src":"13657:39:25","typeDescriptions":{"typeIdentifier":"t_enum$_FacetCutAction_$2364","typeString":"enum IDiamondCut.FacetCutAction"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":3719,"name":"_diamondCut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3559,"src":"13699:11:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$2373_memory_ptr_$dyn_memory_ptr","typeString":"struct IDiamondCut.FacetCut memory[] memory"}},"id":3721,"indexExpression":{"id":3720,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"13711:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13699:14:25","typeDescriptions":{"typeIdentifier":"t_struct$_FacetCut_$2373_memory_ptr","typeString":"struct IDiamondCut.FacetCut memory"}},"id":3722,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13714:6:25","memberName":"action","nodeType":"MemberAccess","referencedDeclaration":2369,"src":"13699:21:25","typeDescriptions":{"typeIdentifier":"t_enum$_FacetCutAction_$2364","typeString":"enum IDiamondCut.FacetCutAction"}},"src":"13657:63:25","typeDescriptions":{"typeIdentifier":"t_enum$_FacetCutAction_$2364","typeString":"enum IDiamondCut.FacetCutAction"}},"id":3724,"nodeType":"ExpressionStatement","src":"13657:63:25"},{"expression":{"id":3731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"13885:57:25","subExpression":{"expression":{"baseExpression":{"expression":{"expression":{"id":3725,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"13892:2:25","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":3726,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13895:15:25","memberName":"upgradeProposal","nodeType":"MemberAccess","referencedDeclaration":2743,"src":"13892:18:25","typeDescriptions":{"typeIdentifier":"t_struct$_UpgradeProposal_$2719_storage","typeString":"struct LibDiamond.UpgradeProposal storage ref"}},"id":3727,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13911:10:25","memberName":"diamondCut","nodeType":"MemberAccess","referencedDeclaration":2710,"src":"13892:29:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$2373_storage_$dyn_storage","typeString":"struct IDiamondCut.FacetCut storage ref[] storage ref"}},"id":3729,"indexExpression":{"id":3728,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"13922:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13892:32:25","typeDescriptions":{"typeIdentifier":"t_struct$_FacetCut_$2373_storage","typeString":"struct IDiamondCut.FacetCut storage ref"}},"id":3730,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13925:17:25","memberName":"functionSelectors","nodeType":"MemberAccess","referencedDeclaration":2372,"src":"13892:50:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_storage","typeString":"bytes4[] storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3732,"nodeType":"ExpressionStatement","src":"13885:57:25"},{"body":{"id":3764,"nodeType":"Block","src":"14086:125:25","statements":[{"expression":{"arguments":[{"baseExpression":{"expression":{"baseExpression":{"id":3756,"name":"_diamondCut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3559,"src":"14160:11:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$2373_memory_ptr_$dyn_memory_ptr","typeString":"struct IDiamondCut.FacetCut memory[] memory"}},"id":3758,"indexExpression":{"id":3757,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"14172:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14160:14:25","typeDescriptions":{"typeIdentifier":"t_struct$_FacetCut_$2373_memory_ptr","typeString":"struct IDiamondCut.FacetCut memory"}},"id":3759,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14175:17:25","memberName":"functionSelectors","nodeType":"MemberAccess","referencedDeclaration":2372,"src":"14160:32:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}},"id":3761,"indexExpression":{"id":3760,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"14193:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14160:35:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"expression":{"baseExpression":{"expression":{"expression":{"id":3747,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"14104:2:25","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":3751,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14107:15:25","memberName":"upgradeProposal","nodeType":"MemberAccess","referencedDeclaration":2743,"src":"14104:18:25","typeDescriptions":{"typeIdentifier":"t_struct$_UpgradeProposal_$2719_storage","typeString":"struct LibDiamond.UpgradeProposal storage ref"}},"id":3752,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14123:10:25","memberName":"diamondCut","nodeType":"MemberAccess","referencedDeclaration":2710,"src":"14104:29:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$2373_storage_$dyn_storage","typeString":"struct IDiamondCut.FacetCut storage ref[] storage ref"}},"id":3753,"indexExpression":{"id":3750,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"14134:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14104:32:25","typeDescriptions":{"typeIdentifier":"t_struct$_FacetCut_$2373_storage","typeString":"struct IDiamondCut.FacetCut storage ref"}},"id":3754,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14137:17:25","memberName":"functionSelectors","nodeType":"MemberAccess","referencedDeclaration":2372,"src":"14104:50:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_storage","typeString":"bytes4[] storage ref"}},"id":3755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14155:4:25","memberName":"push","nodeType":"MemberAccess","src":"14104:55:25","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes4_$dyn_storage_ptr_$_t_bytes4_$returns$__$attached_to$_t_array$_t_bytes4_$dyn_storage_ptr_$","typeString":"function (bytes4[] storage pointer,bytes4)"}},"id":3762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14104:92:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3763,"nodeType":"ExpressionStatement","src":"14104:92:25"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3737,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"14036:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"expression":{"baseExpression":{"id":3738,"name":"_diamondCut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3559,"src":"14040:11:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$2373_memory_ptr_$dyn_memory_ptr","typeString":"struct IDiamondCut.FacetCut memory[] memory"}},"id":3740,"indexExpression":{"id":3739,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"14052:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14040:14:25","typeDescriptions":{"typeIdentifier":"t_struct$_FacetCut_$2373_memory_ptr","typeString":"struct IDiamondCut.FacetCut memory"}},"id":3741,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14055:17:25","memberName":"functionSelectors","nodeType":"MemberAccess","referencedDeclaration":2372,"src":"14040:32:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}},"id":3742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14073:6:25","memberName":"length","nodeType":"MemberAccess","src":"14040:39:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14036:43:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3765,"initializationExpression":{"assignments":[3734],"declarations":[{"constant":false,"id":3734,"mutability":"mutable","name":"j","nameLocation":"14029:1:25","nodeType":"VariableDeclaration","scope":3765,"src":"14021:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3733,"name":"uint256","nodeType":"ElementaryTypeName","src":"14021:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3736,"initialValue":{"hexValue":"30","id":3735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14033:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14021:13:25"},"loopExpression":{"expression":{"id":3745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14081:3:25","subExpression":{"id":3744,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"14081:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3746,"nodeType":"ExpressionStatement","src":"14081:3:25"},"nodeType":"ForStatement","src":"14016:195:25"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3681,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"13322:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3682,"name":"_diamondCut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3559,"src":"13326:11:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$2373_memory_ptr_$dyn_memory_ptr","typeString":"struct IDiamondCut.FacetCut memory[] memory"}},"id":3683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13338:6:25","memberName":"length","nodeType":"MemberAccess","src":"13326:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13322:22:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3767,"initializationExpression":{"assignments":[3678],"declarations":[{"constant":false,"id":3678,"mutability":"mutable","name":"i","nameLocation":"13315:1:25","nodeType":"VariableDeclaration","scope":3767,"src":"13307:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3677,"name":"uint256","nodeType":"ElementaryTypeName","src":"13307:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3680,"initialValue":{"hexValue":"30","id":3679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13319:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13307:13:25"},"loopExpression":{"expression":{"id":3686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13346:3:25","subExpression":{"id":3685,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"13346:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3687,"nodeType":"ExpressionStatement","src":"13346:3:25"},"nodeType":"ForStatement","src":"13302:919:25"},{"expression":{"id":3774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"expression":{"id":3768,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"14230:2:25","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":3771,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14233:15:25","memberName":"upgradeProposal","nodeType":"MemberAccess","referencedDeclaration":2743,"src":"14230:18:25","typeDescriptions":{"typeIdentifier":"t_struct$_UpgradeProposal_$2719_storage","typeString":"struct LibDiamond.UpgradeProposal storage ref"}},"id":3772,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"14249:11:25","memberName":"initAddress","nodeType":"MemberAccess","referencedDeclaration":2712,"src":"14230:30:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3773,"name":"_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3561,"src":"14263:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14230:38:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3775,"nodeType":"ExpressionStatement","src":"14230:38:25"},{"expression":{"id":3782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"expression":{"id":3776,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"14278:2:25","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":3779,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14281:15:25","memberName":"upgradeProposal","nodeType":"MemberAccess","referencedDeclaration":2743,"src":"14278:18:25","typeDescriptions":{"typeIdentifier":"t_struct$_UpgradeProposal_$2719_storage","typeString":"struct LibDiamond.UpgradeProposal storage ref"}},"id":3780,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"14297:12:25","memberName":"initCalldata","nodeType":"MemberAccess","referencedDeclaration":2714,"src":"14278:31:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3781,"name":"_calldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3563,"src":"14312:9:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"14278:43:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":3783,"nodeType":"ExpressionStatement","src":"14278:43:25"},{"expression":{"id":3791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"expression":{"id":3784,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"14331:2:25","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":3787,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14334:15:25","memberName":"upgradeProposal","nodeType":"MemberAccess","referencedDeclaration":2743,"src":"14331:18:25","typeDescriptions":{"typeIdentifier":"t_struct$_UpgradeProposal_$2719_storage","typeString":"struct LibDiamond.UpgradeProposal storage ref"}},"id":3788,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"14350:12:25","memberName":"proposalTime","nodeType":"MemberAccess","referencedDeclaration":2716,"src":"14331:31:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3789,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"14365:5:25","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14371:9:25","memberName":"timestamp","nodeType":"MemberAccess","src":"14365:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14331:49:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3792,"nodeType":"ExpressionStatement","src":"14331:49:25"},{"expression":{"id":3799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"expression":{"id":3793,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"14390:2:25","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":3796,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14393:15:25","memberName":"upgradeProposal","nodeType":"MemberAccess","referencedDeclaration":2743,"src":"14390:18:25","typeDescriptions":{"typeIdentifier":"t_struct$_UpgradeProposal_$2719_storage","typeString":"struct LibDiamond.UpgradeProposal storage ref"}},"id":3797,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"14409:6:25","memberName":"exists","nodeType":"MemberAccess","referencedDeclaration":2718,"src":"14390:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14418:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"14390:32:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3800,"nodeType":"ExpressionStatement","src":"14390:32:25"},{"eventCall":{"arguments":[{"expression":{"id":3802,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14465:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14469:6:25","memberName":"sender","nodeType":"MemberAccess","src":"14465:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3804,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"14477:5:25","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14483:9:25","memberName":"timestamp","nodeType":"MemberAccess","src":"14477:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3806,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"14494:5:25","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14500:9:25","memberName":"timestamp","nodeType":"MemberAccess","src":"14494:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":3808,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"14512:2:25","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":3809,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14515:15:25","memberName":"upgradeTimelock","nodeType":"MemberAccess","referencedDeclaration":2740,"src":"14512:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14494:36:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3801,"name":"DiamondCutProposed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2691,"src":"14446:18:25","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":3811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14446:85:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3812,"nodeType":"EmitStatement","src":"14441:90:25"}]},"id":3814,"implemented":true,"kind":"function","modifiers":[],"name":"proposeDiamondCut","nameLocation":"12029:17:25","nodeType":"FunctionDefinition","parameters":{"id":3564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3559,"mutability":"mutable","name":"_diamondCut","nameLocation":"12086:11:25","nodeType":"VariableDeclaration","scope":3814,"src":"12056:41:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$2373_memory_ptr_$dyn_memory_ptr","typeString":"struct IDiamondCut.FacetCut[]"},"typeName":{"baseType":{"id":3557,"nodeType":"UserDefinedTypeName","pathNode":{"id":3556,"name":"IDiamondCut.FacetCut","nameLocations":["12056:11:25","12068:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":2373,"src":"12056:20:25"},"referencedDeclaration":2373,"src":"12056:20:25","typeDescriptions":{"typeIdentifier":"t_struct$_FacetCut_$2373_storage_ptr","typeString":"struct IDiamondCut.FacetCut"}},"id":3558,"nodeType":"ArrayTypeName","src":"12056:22:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$2373_storage_$dyn_storage_ptr","typeString":"struct IDiamondCut.FacetCut[]"}},"visibility":"internal"},{"constant":false,"id":3561,"mutability":"mutable","name":"_init","nameLocation":"12115:5:25","nodeType":"VariableDeclaration","scope":3814,"src":"12107:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3560,"name":"address","nodeType":"ElementaryTypeName","src":"12107:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3563,"mutability":"mutable","name":"_calldata","nameLocation":"12143:9:25","nodeType":"VariableDeclaration","scope":3814,"src":"12130:22:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3562,"name":"bytes","nodeType":"ElementaryTypeName","src":"12130:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"12046:112:25"},"returnParameters":{"id":3565,"nodeType":"ParameterList","parameters":[],"src":"12168:0:25"},"scope":3887,"src":"12020:2518:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3859,"nodeType":"Block","src":"14650:594:25","statements":[{"assignments":[3819],"declarations":[{"constant":false,"id":3819,"mutability":"mutable","name":"ds","nameLocation":"14683:2:25","nodeType":"VariableDeclaration","scope":3859,"src":"14660:25:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage"},"typeName":{"id":3818,"nodeType":"UserDefinedTypeName","pathNode":{"id":3817,"name":"DiamondStorage","nameLocations":["14660:14:25"],"nodeType":"IdentifierPath","referencedDeclaration":2744,"src":"14660:14:25"},"referencedDeclaration":2744,"src":"14660:14:25","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage"}},"visibility":"internal"}],"id":3822,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3820,"name":"diamondStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2756,"src":"14688:14:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$2744_storage_ptr_$","typeString":"function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"}},"id":3821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14688:16:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"14660:44:25"},{"expression":{"arguments":[{"expression":{"expression":{"id":3824,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3819,"src":"14722:2:25","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":3825,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14725:15:25","memberName":"upgradeProposal","nodeType":"MemberAccess","referencedDeclaration":2743,"src":"14722:18:25","typeDescriptions":{"typeIdentifier":"t_struct$_UpgradeProposal_$2719_storage","typeString":"struct LibDiamond.UpgradeProposal storage ref"}},"id":3826,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14741:6:25","memberName":"exists","nodeType":"MemberAccess","referencedDeclaration":2718,"src":"14722:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c69624469616d6f6e643a204e6f20757067726164652070726f706f73616c20657869737473","id":3827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14749:40:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_43ca8ee6cd16ca31ce88954982145b31f996f016179581e9a51c2213a748d95d","typeString":"literal_string \"LibDiamond: No upgrade proposal exists\""},"value":"LibDiamond: No upgrade proposal exists"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_43ca8ee6cd16ca31ce88954982145b31f996f016179581e9a51c2213a748d95d","typeString":"literal_string \"LibDiamond: No upgrade proposal exists\""}],"id":3823,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14714:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14714:76:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3829,"nodeType":"ExpressionStatement","src":"14714:76:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3831,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"14821:5:25","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14827:9:25","memberName":"timestamp","nodeType":"MemberAccess","src":"14821:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":3833,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3819,"src":"14840:2:25","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":3834,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14843:15:25","memberName":"upgradeProposal","nodeType":"MemberAccess","referencedDeclaration":2743,"src":"14840:18:25","typeDescriptions":{"typeIdentifier":"t_struct$_UpgradeProposal_$2719_storage","typeString":"struct LibDiamond.UpgradeProposal storage ref"}},"id":3835,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14859:12:25","memberName":"proposalTime","nodeType":"MemberAccess","referencedDeclaration":2716,"src":"14840:31:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":3836,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3819,"src":"14874:2:25","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":3837,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14877:15:25","memberName":"upgradeTimelock","nodeType":"MemberAccess","referencedDeclaration":2740,"src":"14874:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14840:52:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14821:71:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c69624469616d6f6e643a2054696d656c6f636b20706572696f64206e6f7420656c6170736564","id":3840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14906:41:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_82bc3b95773eabe3ca214efb97c15a90d66aca7ebfe83785362b581f73779158","typeString":"literal_string \"LibDiamond: Timelock period not elapsed\""},"value":"LibDiamond: Timelock period not elapsed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_82bc3b95773eabe3ca214efb97c15a90d66aca7ebfe83785362b581f73779158","typeString":"literal_string \"LibDiamond: Timelock period not elapsed\""}],"id":3830,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14800:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14800:157:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3842,"nodeType":"ExpressionStatement","src":"14800:157:25"},{"expression":{"arguments":[{"expression":{"expression":{"id":3844,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3819,"src":"15035:2:25","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":3845,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15038:15:25","memberName":"upgradeProposal","nodeType":"MemberAccess","referencedDeclaration":2743,"src":"15035:18:25","typeDescriptions":{"typeIdentifier":"t_struct$_UpgradeProposal_$2719_storage","typeString":"struct LibDiamond.UpgradeProposal storage ref"}},"id":3846,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15054:10:25","memberName":"diamondCut","nodeType":"MemberAccess","referencedDeclaration":2710,"src":"15035:29:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_FacetCut_$2373_storage_$dyn_storage","typeString":"struct IDiamondCut.FacetCut storage ref[] storage ref"}},{"expression":{"expression":{"id":3847,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3819,"src":"15078:2:25","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":3848,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15081:15:25","memberName":"upgradeProposal","nodeType":"MemberAccess","referencedDeclaration":2743,"src":"15078:18:25","typeDescriptions":{"typeIdentifier":"t_struct$_UpgradeProposal_$2719_storage","typeString":"struct LibDiamond.UpgradeProposal storage ref"}},"id":3849,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15097:11:25","memberName":"initAddress","nodeType":"MemberAccess","referencedDeclaration":2712,"src":"15078:30:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"expression":{"id":3850,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3819,"src":"15122:2:25","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":3851,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15125:15:25","memberName":"upgradeProposal","nodeType":"MemberAccess","referencedDeclaration":2743,"src":"15122:18:25","typeDescriptions":{"typeIdentifier":"t_struct$_UpgradeProposal_$2719_storage","typeString":"struct LibDiamond.UpgradeProposal storage ref"}},"id":3852,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15141:12:25","memberName":"initCalldata","nodeType":"MemberAccess","referencedDeclaration":2714,"src":"15122:31:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_FacetCut_$2373_storage_$dyn_storage","typeString":"struct IDiamondCut.FacetCut storage ref[] storage ref"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}],"id":3843,"name":"diamondCut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"15011:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_FacetCut_$2373_memory_ptr_$dyn_memory_ptr_$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct IDiamondCut.FacetCut memory[] memory,address,bytes memory)"}},"id":3853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15011:152:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3854,"nodeType":"ExpressionStatement","src":"15011:152:25"},{"expression":{"id":3857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"15212:25:25","subExpression":{"expression":{"id":3855,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3819,"src":"15219:2:25","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":3856,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"15222:15:25","memberName":"upgradeProposal","nodeType":"MemberAccess","referencedDeclaration":2743,"src":"15219:18:25","typeDescriptions":{"typeIdentifier":"t_struct$_UpgradeProposal_$2719_storage","typeString":"struct LibDiamond.UpgradeProposal storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3858,"nodeType":"ExpressionStatement","src":"15212:25:25"}]},"id":3860,"implemented":true,"kind":"function","modifiers":[],"name":"executeDiamondCut","nameLocation":"14621:17:25","nodeType":"FunctionDefinition","parameters":{"id":3815,"nodeType":"ParameterList","parameters":[],"src":"14638:2:25"},"returnParameters":{"id":3816,"nodeType":"ParameterList","parameters":[],"src":"14650:0:25"},"scope":3887,"src":"14612:632:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3885,"nodeType":"Block","src":"15328:276:25","statements":[{"assignments":[3865],"declarations":[{"constant":false,"id":3865,"mutability":"mutable","name":"ds","nameLocation":"15361:2:25","nodeType":"VariableDeclaration","scope":3885,"src":"15338:25:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage"},"typeName":{"id":3864,"nodeType":"UserDefinedTypeName","pathNode":{"id":3863,"name":"DiamondStorage","nameLocations":["15338:14:25"],"nodeType":"IdentifierPath","referencedDeclaration":2744,"src":"15338:14:25"},"referencedDeclaration":2744,"src":"15338:14:25","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage"}},"visibility":"internal"}],"id":3868,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3866,"name":"diamondStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2756,"src":"15366:14:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$2744_storage_ptr_$","typeString":"function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"}},"id":3867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15366:16:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"15338:44:25"},{"expression":{"arguments":[{"expression":{"expression":{"id":3870,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3865,"src":"15400:2:25","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":3871,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15403:15:25","memberName":"upgradeProposal","nodeType":"MemberAccess","referencedDeclaration":2743,"src":"15400:18:25","typeDescriptions":{"typeIdentifier":"t_struct$_UpgradeProposal_$2719_storage","typeString":"struct LibDiamond.UpgradeProposal storage ref"}},"id":3872,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15419:6:25","memberName":"exists","nodeType":"MemberAccess","referencedDeclaration":2718,"src":"15400:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c69624469616d6f6e643a204e6f20757067726164652070726f706f73616c20657869737473","id":3873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15427:40:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_43ca8ee6cd16ca31ce88954982145b31f996f016179581e9a51c2213a748d95d","typeString":"literal_string \"LibDiamond: No upgrade proposal exists\""},"value":"LibDiamond: No upgrade proposal exists"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_43ca8ee6cd16ca31ce88954982145b31f996f016179581e9a51c2213a748d95d","typeString":"literal_string \"LibDiamond: No upgrade proposal exists\""}],"id":3869,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15392:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15392:76:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3875,"nodeType":"ExpressionStatement","src":"15392:76:25"},{"expression":{"id":3878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"15517:25:25","subExpression":{"expression":{"id":3876,"name":"ds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3865,"src":"15524:2:25","typeDescriptions":{"typeIdentifier":"t_struct$_DiamondStorage_$2744_storage_ptr","typeString":"struct LibDiamond.DiamondStorage storage pointer"}},"id":3877,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"15527:15:25","memberName":"upgradeProposal","nodeType":"MemberAccess","referencedDeclaration":2743,"src":"15524:18:25","typeDescriptions":{"typeIdentifier":"t_struct$_UpgradeProposal_$2719_storage","typeString":"struct LibDiamond.UpgradeProposal storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3879,"nodeType":"ExpressionStatement","src":"15517:25:25"},{"eventCall":{"arguments":[{"expression":{"id":3881,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15586:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15590:6:25","memberName":"sender","nodeType":"MemberAccess","src":"15586:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3880,"name":"DiamondCutCancelled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2695,"src":"15566:19:25","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15566:31:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3884,"nodeType":"EmitStatement","src":"15561:36:25"}]},"id":3886,"implemented":true,"kind":"function","modifiers":[],"name":"cancelDiamondCut","nameLocation":"15300:16:25","nodeType":"FunctionDefinition","parameters":{"id":3861,"nodeType":"ParameterList","parameters":[],"src":"15316:2:25"},"returnParameters":{"id":3862,"nodeType":"ParameterList","parameters":[],"src":"15328:0:25"},"scope":3887,"src":"15291:313:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":3888,"src":"672:14934:25","usedErrors":[],"usedEvents":[2673,2683,2691,2695]}],"src":"32:15575:25"},"id":25},"contracts/upgradeInitializers/DiamondInit.sol":{"ast":{"absolutePath":"contracts/upgradeInitializers/DiamondInit.sol","exportedSymbols":{"DiamondInit":[3905],"IDiamondCut":[2428],"IDiamondLoupe":[2540],"IERC165":[436],"IERC173":[2574],"IERC721":[396],"IERC721Metadata":[424],"LibDiamond":[3887]},"id":3906,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3889,"literals":["solidity","^","0.8",".6"],"nodeType":"PragmaDirective","src":"32:23:26"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"@openzeppelin/contracts/interfaces/IERC165.sol","id":3890,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3906,"sourceUnit":4,"src":"395:56:26","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"@openzeppelin/contracts/token/ERC721/IERC721.sol","id":3891,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3906,"sourceUnit":397,"src":"452:58:26","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC721Metadata.sol","file":"@openzeppelin/contracts/interfaces/IERC721Metadata.sol","id":3892,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3906,"sourceUnit":12,"src":"511:64:26","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/libraries/LibDiamond.sol","file":"../libraries/LibDiamond.sol","id":3894,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3906,"sourceUnit":3888,"src":"577:57:26","symbolAliases":[{"foreign":{"id":3893,"name":"LibDiamond","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"586:10:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/IDiamondLoupe.sol","file":"../interfaces/IDiamondLoupe.sol","id":3896,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3906,"sourceUnit":2541,"src":"635:64:26","symbolAliases":[{"foreign":{"id":3895,"name":"IDiamondLoupe","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2540,"src":"644:13:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/IDiamondCut.sol","file":"../interfaces/IDiamondCut.sol","id":3898,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3906,"sourceUnit":2429,"src":"700:60:26","symbolAliases":[{"foreign":{"id":3897,"name":"IDiamondCut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"709:11:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/IERC173.sol","file":"../interfaces/IERC173.sol","id":3900,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3906,"sourceUnit":2575,"src":"761:52:26","symbolAliases":[{"foreign":{"id":3899,"name":"IERC173","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2574,"src":"770:7:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"DiamondInit","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3905,"linearizedBaseContracts":[3905],"name":"DiamondInit","nameLocation":"1074:11:26","nodeType":"ContractDefinition","nodes":[{"body":{"id":3903,"nodeType":"Block","src":"1234:16:26","statements":[]},"functionSelector":"e1c7392a","id":3904,"implemented":true,"kind":"function","modifiers":[],"name":"init","nameLocation":"1218:4:26","nodeType":"FunctionDefinition","parameters":{"id":3901,"nodeType":"ParameterList","parameters":[],"src":"1222:2:26"},"returnParameters":{"id":3902,"nodeType":"ParameterList","parameters":[],"src":"1234:0:26"},"scope":3905,"src":"1209:41:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3906,"src":"1065:188:26","usedErrors":[],"usedEvents":[]}],"src":"32:1222:26"},"id":26},"contracts/upgradeInitializers/DynamicDiamondInit.sol":{"ast":{"absolutePath":"contracts/upgradeInitializers/DynamicDiamondInit.sol","exportedSymbols":{"DiamondInit":[3938],"IDiamondCut":[2428],"IDiamondFacetInit":[3931],"IDiamondLoupe":[2540],"IERC165":[436],"IERC173":[2574],"IERC721":[396],"IERC721Metadata":[424],"LibDiamond":[3887]},"id":3939,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3907,"literals":["solidity","^","0.8",".6"],"nodeType":"PragmaDirective","src":"32:23:27"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"@openzeppelin/contracts/interfaces/IERC165.sol","id":3908,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3939,"sourceUnit":4,"src":"395:56:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"@openzeppelin/contracts/token/ERC721/IERC721.sol","id":3909,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3939,"sourceUnit":397,"src":"452:58:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC721Metadata.sol","file":"@openzeppelin/contracts/interfaces/IERC721Metadata.sol","id":3910,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3939,"sourceUnit":12,"src":"511:64:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/libraries/LibDiamond.sol","file":"../libraries/LibDiamond.sol","id":3912,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3939,"sourceUnit":3888,"src":"577:57:27","symbolAliases":[{"foreign":{"id":3911,"name":"LibDiamond","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"586:10:27","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/IDiamondLoupe.sol","file":"../interfaces/IDiamondLoupe.sol","id":3914,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3939,"sourceUnit":2541,"src":"635:64:27","symbolAliases":[{"foreign":{"id":3913,"name":"IDiamondLoupe","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2540,"src":"644:13:27","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/IDiamondCut.sol","file":"../interfaces/IDiamondCut.sol","id":3916,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3939,"sourceUnit":2429,"src":"700:60:27","symbolAliases":[{"foreign":{"id":3915,"name":"IDiamondCut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"709:11:27","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/IERC173.sol","file":"../interfaces/IERC173.sol","id":3918,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3939,"sourceUnit":2575,"src":"761:52:27","symbolAliases":[{"foreign":{"id":3917,"name":"IERC173","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2574,"src":"770:7:27","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3919,"name":"IERC165","nameLocations":["846:7:27"],"nodeType":"IdentifierPath","referencedDeclaration":436,"src":"846:7:27"},"id":3920,"nodeType":"InheritanceSpecifier","src":"846:7:27"}],"canonicalName":"IDiamondFacetInit","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3931,"linearizedBaseContracts":[3931,436],"name":"IDiamondFacetInit","nameLocation":"825:17:27","nodeType":"ContractDefinition","nodes":[{"functionSelector":"1a782b68","id":3930,"implemented":false,"kind":"function","modifiers":[],"name":"initializeFacet","nameLocation":"869:15:27","nodeType":"FunctionDefinition","parameters":{"id":3928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3922,"mutability":"mutable","name":"_owner","nameLocation":"902:6:27","nodeType":"VariableDeclaration","scope":3930,"src":"894:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3921,"name":"address","nodeType":"ElementaryTypeName","src":"894:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3925,"mutability":"mutable","name":"_facet","nameLocation":"947:6:27","nodeType":"VariableDeclaration","scope":3930,"src":"919:34:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FacetCut_$2373_memory_ptr","typeString":"struct IDiamondCut.FacetCut"},"typeName":{"id":3924,"nodeType":"UserDefinedTypeName","pathNode":{"id":3923,"name":"IDiamondCut.FacetCut","nameLocations":["919:11:27","931:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":2373,"src":"919:20:27"},"referencedDeclaration":2373,"src":"919:20:27","typeDescriptions":{"typeIdentifier":"t_struct$_FacetCut_$2373_storage_ptr","typeString":"struct IDiamondCut.FacetCut"}},"visibility":"internal"},{"constant":false,"id":3927,"mutability":"mutable","name":"_calldata","nameLocation":"978:9:27","nodeType":"VariableDeclaration","scope":3930,"src":"963:24:27","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3926,"name":"bytes","nodeType":"ElementaryTypeName","src":"963:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"884:104:27"},"returnParameters":{"id":3929,"nodeType":"ParameterList","parameters":[],"src":"997:0:27"},"scope":3931,"src":"860:138:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3939,"src":"815:185:27","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"DiamondInit","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3938,"linearizedBaseContracts":[3938],"name":"DiamondInit","nameLocation":"1261:11:27","nodeType":"ContractDefinition","nodes":[{"body":{"id":3936,"nodeType":"Block","src":"1332:16:27","statements":[]},"functionSelector":"4ddf47d4","id":3937,"implemented":true,"kind":"function","modifiers":[],"name":"init","nameLocation":"1293:4:27","nodeType":"FunctionDefinition","parameters":{"id":3934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3933,"mutability":"mutable","name":"initParams","nameLocation":"1311:10:27","nodeType":"VariableDeclaration","scope":3937,"src":"1298:23:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3932,"name":"bytes","nodeType":"ElementaryTypeName","src":"1298:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1297:25:27"},"returnParameters":{"id":3935,"nodeType":"ParameterList","parameters":[],"src":"1332:0:27"},"scope":3938,"src":"1284:64:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3939,"src":"1252:99:27","usedErrors":[],"usedEvents":[]}],"src":"32:1320:27"},"id":27}},"contracts":{"@openzeppelin/contracts/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"devdoc":{"custom:oz-upgrades-unsafe-allow":"constructor constructor() {     _disableInitializers(); } ``` ====","details":"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```","errors":{"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reinitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\\n     *\\n     * NOTE: Consider following the ERC-7201 formula to derive storage locations.\\n     */\\n    function _initializableStorageSlot() internal pure virtual returns (bytes32) {\\n        return INITIALIZABLE_STORAGE;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        bytes32 slot = _initializableStorageSlot();\\n        assembly {\\n            $.slot := slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Required interface of an ERC-721 compliant contract.","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity >=0.6.2;\\n\\nimport {IERC165} from \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC-721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\\n     *   {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity >=0.4.16;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"See https://eips.ethereum.org/EIPS/eip-721","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"name()":{"details":"Returns the token collection name."},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"symbol()":{"details":"Returns the token collection symbol."},"tokenURI(uint256)":{"details":"Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"title":"ERC-721 Non-Fungible Token Standard, optional metadata extension","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity >=0.6.2;\\n\\nimport {IERC165} from \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC-721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\\n     *   {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity >=0.6.2;\\n\\nimport {IERC721} from \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity >=0.4.16;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity >=0.4.16;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/Diamond.sol":{"Diamond":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"components":[{"internalType":"address","name":"facetAddress","type":"address"},{"internalType":"enum IDiamondCut.FacetCutAction","name":"action","type":"uint8"},{"internalType":"bytes4[]","name":"functionSelectors","type":"bytes4[]"}],"indexed":false,"internalType":"struct IDiamondCut.FacetCut[]","name":"_diamondCut","type":"tuple[]"},{"indexed":false,"internalType":"address","name":"_init","type":"address"},{"indexed":false,"internalType":"bytes","name":"_calldata","type":"bytes"}],"name":"DiamondCut","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"stateMutability":"payable","type":"fallback"},{"inputs":[],"name":"diamondAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"components":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"factory","type":"address"},{"internalType":"address","name":"svgManager","type":"address"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"string","name":"name","type":"string"}],"internalType":"struct DiamondSettings","name":"params","type":"tuple"},{"components":[{"internalType":"address","name":"facetAddress","type":"address"},{"internalType":"enum IDiamondCut.FacetCutAction","name":"action","type":"uint8"},{"internalType":"bytes4[]","name":"functionSelectors","type":"bytes4[]"}],"internalType":"struct IDiamondCut.FacetCut[]","name":"_facets","type":"tuple[]"},{"internalType":"address","name":"diamondInit","type":"address"},{"internalType":"bytes","name":"_calldata","type":"bytes"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"owner_","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"details":"Core diamond proxy contract implementing the EIP-2535 Diamond Standard Functionality has been separated into facets: - DiamondCutFacet: Handles diamond cut operations - DiamondLoupeFacet: Provides introspection functions - OwnershipFacet: Handles ownership operations","errors":{"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."},"OwnershipTransferred(address,address)":{"details":"This emits when ownership of a contract changes."}},"kind":"dev","methods":{"diamondAddress()":{"returns":{"_0":"This contract's address"}},"initialize(address,(address,address,address,string,string),(address,uint8,bytes4[])[],address,bytes)":{"params":{"_calldata":"The initialization calldata","_facets":"The initial facets to add","_owner":"The owner of the contract","diamondInit":"The initialization contract","params":"Diamond settings including name and symbol"}},"owner()":{"returns":{"owner_":"The current owner address"}},"transferOwnership(address)":{"params":{"_newOwner":"The new owner address"}}},"title":"Diamond","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50611d50806100206000396000f3fe6080604052600436106100435760003560e01c80636a60c3b7146100f75780638da5cb5b14610122578063cde7b2c114610137578063f2fde38b146101575761004a565b3661004a57005b600080356001600160e01b0319168152600080516020611caf833981519152602081905260409091205481906001600160a01b0316806100d15760405162461bcd60e51b815260206004820181905260248201527f4469616d6f6e643a2046756e6374696f6e20646f6573206e6f7420657869737460448201526064015b60405180910390fd5b3660008037600080366000845af43d6000803e8080156100f0573d6000f35b3d6000fd5b005b34801561010357600080fd5b50305b6040516001600160a01b03909116815260200160405180910390f35b34801561012e57600080fd5b50610106610177565b34801561014357600080fd5b506100f56101523660046115de565b6101af565b34801561016357600080fd5b506100f561017236600461171c565b610513565b60006101aa7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c1320546001600160a01b031690565b905090565b60006101b9610527565b805490915060ff600160401b820416159067ffffffffffffffff166000811580156101e15750825b905060008267ffffffffffffffff1660011480156101fe5750303b155b90508115801561020c575080155b1561022a5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561025457845460ff60401b1916600160401b1785555b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131f6020527f699d9daa71b280d05a152715774afa0a81a312594b2d731d6b0b2552b7d6f69f8054600160ff1991821681179092557f19068268aae2a38bd591de99c33751e9001444cb142e32d03cbfc67512a16fff80548216831790557f5622121b47b8cd0120c4efe45dd5483242f54a3d49bd7679be565d47694918c380548216831790557fb0f299ecb5b93181be17d5e233721498930c5361f367b1d41c5b827d4fe4d38080548216831790557f806e5513950c43892aa01780f899fe3e3229f9425b66a2610b01231f5799f44e805482168317905563780e9d6360e01b6000527fc564b00dd622489e8872cfaa1fdbe51ee7adef071bfa99bc1effdc20162fa70a805490911690911790556103cc61038f8a8c611762565b8989898080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061055292505050565b6103d58c610763565b7f3b28ada7424160f36dba04e603ff68d11ac4a3eeb1ef7a9911d79d949607b74080546001600160a01b038e166001600160a01b031990911617905560608b015160408051651cde5b589bdb60d21b81527f3b28ada7424160f36dba04e603ff68d11ac4a3eeb1ef7a9911d79d949607b7456006820152905190819003602601902090610462908261192e565b5060808b015160408051636e616d6560e01b81527f3b28ada7424160f36dba04e603ff68d11ac4a3eeb1ef7a9911d79d949607b74560048201529051908190036024019020906104b2908261192e565b506104bf6202a3006107e6565b831561050557845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050505050505050565b61051b610892565b61052481610763565b50565b6000807ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005b92915050565b60005b8351811015610718576000848281518110610572576105726119ee565b60200260200101516020015190506000600281111561059357610593611a04565b8160028111156105a5576105a5611a04565b036105f3576105ee8583815181106105bf576105bf6119ee565b6020026020010151600001518684815181106105dd576105dd6119ee565b602002602001015160400151610909565b610705565b600181600281111561060757610607611a04565b03610650576105ee858381518110610621576106216119ee565b60200260200101516000015186848151811061063f5761063f6119ee565b602002602001015160400151610a88565b600281600281111561066457610664611a04565b036106ad576105ee85838151811061067e5761067e6119ee565b60200260200101516000015186848151811061069c5761069c6119ee565b602002602001015160400151610c18565b60405162461bcd60e51b815260206004820152602760248201527f4c69624469616d6f6e644375743a20496e636f727265637420466163657443756044820152663a20b1ba34b7b760c91b60648201526084016100c8565b508061071081611a30565b915050610555565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb67383838360405161074c93929190611a99565b60405180910390a161075e8282610d36565b505050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c132080546001600160a01b031981166001600160a01b03848116918217909355604051600080516020611caf833981519152939092169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c132154600080516020611caf83398151915290156108765760405162461bcd60e51b815260206004820152602860248201527f4c69624469616d6f6e643a2054696d656c6f636b20616c726561647920696e696044820152671d1a585b1a5e995960c21b60648201526084016100c8565b60008211610887576202a300610889565b815b60059091015550565b600080516020611caf833981519152600401546001600160a01b031633146109075760405162461bcd60e51b815260206004820152602260248201527f4c69624469616d6f6e643a204d75737420626520636f6e7472616374206f776e60448201526132b960f11b60648201526084016100c8565b565b600081511161092a5760405162461bcd60e51b81526004016100c890611b99565b600080516020611caf8339815191526001600160a01b03831661095f5760405162461bcd60e51b81526004016100c890611be4565b6001600160a01b0383166000908152600182016020526040812054906001600160601b0382169003610995576109958285610f43565b60005b8351811015610a815760008482815181106109b5576109b56119ee565b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b03168015610a535760405162461bcd60e51b815260206004820152603560248201527f4c69624469616d6f6e644375743a2043616e2774206164642066756e6374696f6044820152746e207468617420616c72656164792065786973747360581b60648201526084016100c8565b610a5f8583868a610fad565b83610a6981611c30565b94505050508080610a7990611a30565b915050610998565b5050505050565b6000815111610aa95760405162461bcd60e51b81526004016100c890611b99565b600080516020611caf8339815191526001600160a01b038316610ade5760405162461bcd60e51b81526004016100c890611be4565b6001600160a01b0383166000908152600182016020526040812054906001600160601b0382169003610b1457610b148285610f43565b60005b8351811015610a81576000848281518110610b3457610b346119ee565b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b039081169087168103610bdf5760405162461bcd60e51b815260206004820152603860248201527f4c69624469616d6f6e644375743a2043616e2774207265706c6163652066756e60448201527f6374696f6e20776974682073616d652066756e6374696f6e000000000000000060648201526084016100c8565b610bea85828461104d565b610bf68583868a610fad565b83610c0081611c30565b94505050508080610c1090611a30565b915050610b17565b6000815111610c395760405162461bcd60e51b81526004016100c890611b99565b600080516020611caf8339815191526001600160a01b03831615610cbe5760405162461bcd60e51b815260206004820152603660248201527f4c69624469616d6f6e644375743a2052656d6f76652066616365742061646472604482015275657373206d757374206265206164647265737328302960501b60648201526084016100c8565b60005b8251811015610d30576000838281518110610cde57610cde6119ee565b6020908102919091018101516001600160e01b031981166000908152918590526040909120549091506001600160a01b0316610d1b84828461104d565b50508080610d2890611a30565b915050610cc1565b50505050565b6001600160a01b038216610dbd57805115610db95760405162461bcd60e51b815260206004820152603c60248201527f4c69624469616d6f6e644375743a205f696e697420697320616464726573732860448201527f3029206275745f63616c6c64617461206973206e6f7420656d7074790000000060648201526084016100c8565b5050565b6000815111610e345760405162461bcd60e51b815260206004820152603d60248201527f4c69624469616d6f6e644375743a205f63616c6c6461746120697320656d707460448201527f7920627574205f696e6974206973206e6f74206164647265737328302900000060648201526084016100c8565b6001600160a01b0382163014610e6657610e6682604051806060016040528060288152602001611ccf60289139611410565b600080836001600160a01b031683604051610e819190611c56565b600060405180830381855af49150503d8060008114610ebc576040519150601f19603f3d011682016040523d82523d6000602084013e610ec1565b606091505b509150915081610d3057805115610eec578060405162461bcd60e51b81526004016100c89190611c72565b60405162461bcd60e51b815260206004820152602660248201527f4c69624469616d6f6e644375743a205f696e69742066756e6374696f6e2072656044820152651d995c9d195960d21b60648201526084016100c8565b610f6581604051806060016040528060248152602001611cf760249139611410565b6002820180546001600160a01b0390921660008181526001948501602090815260408220860185905594840183559182529290200180546001600160a01b0319169091179055565b6001600160e01b0319831660008181526020868152604080832080546001600160601b03909716600160a01b026001600160a01b0397881617815594909516808352600180890183529583208054968701815583528183206008870401805460e09890981c60046007909816979097026101000a96870263ffffffff9097021990971695909517909555529290915281546001600160a01b031916179055565b6001600160a01b0382166110c95760405162461bcd60e51b815260206004820152603760248201527f4c69624469616d6f6e644375743a2043616e27742072656d6f76652066756e6360448201527f74696f6e207468617420646f65736e277420657869737400000000000000000060648201526084016100c8565b306001600160a01b038316036111385760405162461bcd60e51b815260206004820152602e60248201527f4c69624469616d6f6e644375743a2043616e27742072656d6f766520696d6d7560448201526d3a30b1363290333ab731ba34b7b760911b60648201526084016100c8565b6001600160e01b03198116600090815260208481526040808320546001600160a01b0386168452600180880190935290832054600160a01b9091046001600160601b0316929161118791611c85565b9050808214611279576001600160a01b038416600090815260018601602052604081208054839081106111bc576111bc6119ee565b600091825260208083206008830401546001600160a01b038916845260018a019091526040909220805460079092166004026101000a90920460e01b92508291908590811061120d5761120d6119ee565b600091825260208083206008830401805463ffffffff60079094166004026101000a938402191660e09590951c929092029390931790556001600160e01b03199290921682528690526040902080546001600160a01b0316600160a01b6001600160601b038516021790555b6001600160a01b038416600090815260018601602052604090208054806112a2576112a2611c98565b60008281526020808220600860001990940193840401805463ffffffff600460078716026101000a0219169055919092556001600160e01b03198516825286905260408120819055819003610a8157600285015460009061130590600190611c85565b6001600160a01b03861660009081526001808901602052604090912001549091508082146113b4576000876002018381548110611344576113446119ee565b6000918252602090912001546002890180546001600160a01b039092169250829184908110611375576113756119ee565b600091825260208083209190910180546001600160a01b0319166001600160a01b03948516179055929091168152600189810190925260409020018190555b866002018054806113c7576113c7611c98565b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b0388168252600189810190915260408220015550505050505050565b813b8181610d305760405162461bcd60e51b81526004016100c89190611c72565b80356001600160a01b038116811461144857600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60405160a0810167ffffffffffffffff811182821017156114865761148661144d565b60405290565b6040516060810167ffffffffffffffff811182821017156114865761148661144d565b604051601f8201601f1916810167ffffffffffffffff811182821017156114d8576114d861144d565b604052919050565b600082601f8301126114f157600080fd5b813567ffffffffffffffff81111561150b5761150b61144d565b61151e601f8201601f19166020016114af565b81815284602083860101111561153357600080fd5b816020850160208301376000918101602001919091529392505050565b60008083601f84011261156257600080fd5b50813567ffffffffffffffff81111561157a57600080fd5b6020830191508360208260051b850101111561159557600080fd5b9250929050565b60008083601f8401126115ae57600080fd5b50813567ffffffffffffffff8111156115c657600080fd5b60208301915083602082850101111561159557600080fd5b600080600080600080600060a0888a0312156115f957600080fd5b61160288611431565b9650602088013567ffffffffffffffff8082111561161f57600080fd5b9089019060a0828c03121561163357600080fd5b61163b611463565b61164483611431565b815261165260208401611431565b602082015261166360408401611431565b604082015260608301358281111561167a57600080fd5b6116868d8286016114e0565b60608301525060808301358281111561169e57600080fd5b6116aa8d8286016114e0565b608083015250975060408a01359150808211156116c657600080fd5b6116d28b838c01611550565b90975095508591506116e660608b01611431565b945060808a01359150808211156116fc57600080fd5b506117098a828b0161159c565b989b979a50959850939692959293505050565b60006020828403121561172e57600080fd5b61173782611431565b9392505050565b600067ffffffffffffffff8211156117585761175861144d565b5060051b60200190565b60006117756117708461173e565b6114af565b83815260208082019190600586811b86013681111561179357600080fd5b865b8181101561189957803567ffffffffffffffff808211156117b65760008081fd5b818a019150606082360312156117cc5760008081fd5b6117d461148c565b6117dd83611431565b815286830135600381106117f15760008081fd5b81880152604083810135838111156118095760008081fd5b939093019236601f85011261182057600092508283fd5b833592506118306117708461173e565b83815292871b8401880192888101903685111561184d5760008081fd5b948901945b848610156118825785356001600160e01b0319811681146118735760008081fd5b82529489019490890190611852565b918301919091525088525050948301948301611795565b5092979650505050505050565b600181811c908216806118ba57607f821691505b6020821081036118da57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561075e57600081815260208120601f850160051c810160208610156119075750805b601f850160051c820191505b8181101561192657828155600101611913565b505050505050565b815167ffffffffffffffff8111156119485761194861144d565b61195c8161195684546118a6565b846118e0565b602080601f83116001811461199157600084156119795750858301515b600019600386901b1c1916600185901b178555611926565b600085815260208120601f198616915b828110156119c0578886015182559484019460019091019084016119a1565b50858210156119de5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611a4257611a42611a1a565b5060010190565b60005b83811015611a64578181015183820152602001611a4c565b50506000910152565b60008151808452611a85816020860160208601611a49565b601f01601f19169290920160200192915050565b60006060808301818452808751808352608092508286019150828160051b8701016020808b0160005b84811015611b6957898403607f19018652815180516001600160a01b03168552838101518986019060038110611b0857634e487b7160e01b600052602160045260246000fd5b868601526040918201519186018a905281519081905290840190600090898701905b80831015611b545783516001600160e01b0319168252928601926001929092019190860190611b2a565b50978501979550505090820190600101611ac2565b50506001600160a01b038a16908801528681036040880152611b8b8189611a6d565b9a9950505050505050505050565b6020808252602b908201527f4c69624469616d6f6e644375743a204e6f2073656c6563746f727320696e206660408201526a1858d95d081d1bc818dd5d60aa1b606082015260800190565b6020808252602c908201527f4c69624469616d6f6e644375743a204164642066616365742063616e2774206260408201526b65206164647265737328302960a01b606082015260800190565b60006001600160601b03808316818103611c4c57611c4c611a1a565b6001019392505050565b60008251611c68818460208701611a49565b9190910192915050565b6020815260006117376020830184611a6d565b8181038181111561054c5761054c611a1a565b634e487b7160e01b600052603160045260246000fdfec8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c4c69624469616d6f6e644375743a205f696e6974206164647265737320686173206e6f20636f64654c69624469616d6f6e644375743a204e657720666163657420686173206e6f20636f6465a2646970667358221220d3a5fd157e44e6573e0ecf26ab8a24b869b4dbe804e485f2916a0cb816a7714164736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D50 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x43 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6A60C3B7 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0xCDE7B2C1 EQ PUSH2 0x137 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x157 JUMPI PUSH2 0x4A JUMP JUMPDEST CALLDATASIZE PUSH2 0x4A JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1CAF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0xD1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4469616D6F6E643A2046756E6374696F6E20646F6573206E6F74206578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0xF0 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x103 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP ADDRESS JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x106 PUSH2 0x177 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x143 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF5 PUSH2 0x152 CALLDATASIZE PUSH1 0x4 PUSH2 0x15DE JUMP JUMPDEST PUSH2 0x1AF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x163 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF5 PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0x171C JUMP JUMPDEST PUSH2 0x513 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AA PUSH32 0xC8FCAD8DB84D3CC18B4C41D551EA0EE66DD599CDE068D998E57D5E09332C1320 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B9 PUSH2 0x527 JUMP JUMPDEST DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF PUSH1 0x1 PUSH1 0x40 SHL DUP3 DIV AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x1E1 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x1FE JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x20C JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x22A JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x254 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH32 0xC8FCAD8DB84D3CC18B4C41D551EA0EE66DD599CDE068D998E57D5E09332C131F PUSH1 0x20 MSTORE PUSH32 0x699D9DAA71B280D05A152715774AFA0A81A312594B2D731D6B0B2552B7D6F69F DUP1 SLOAD PUSH1 0x1 PUSH1 0xFF NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH32 0x19068268AAE2A38BD591DE99C33751E9001444CB142E32D03CBFC67512A16FFF DUP1 SLOAD DUP3 AND DUP4 OR SWAP1 SSTORE PUSH32 0x5622121B47B8CD0120C4EFE45DD5483242F54A3D49BD7679BE565D47694918C3 DUP1 SLOAD DUP3 AND DUP4 OR SWAP1 SSTORE PUSH32 0xB0F299ECB5B93181BE17D5E233721498930C5361F367B1D41C5B827D4FE4D380 DUP1 SLOAD DUP3 AND DUP4 OR SWAP1 SSTORE PUSH32 0x806E5513950C43892AA01780F899FE3E3229F9425B66A2610B01231F5799F44E DUP1 SLOAD DUP3 AND DUP4 OR SWAP1 SSTORE PUSH4 0x780E9D63 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH32 0xC564B00DD622489E8872CFAA1FDBE51EE7ADEF071BFA99BC1EFFDC20162FA70A DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x3CC PUSH2 0x38F DUP11 DUP13 PUSH2 0x1762 JUMP JUMPDEST DUP10 DUP10 DUP10 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x552 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x3D5 DUP13 PUSH2 0x763 JUMP JUMPDEST PUSH32 0x3B28ADA7424160F36DBA04E603FF68D11AC4A3EEB1EF7A9911D79D949607B740 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x60 DUP12 ADD MLOAD PUSH1 0x40 DUP1 MLOAD PUSH6 0x1CDE5B589BDB PUSH1 0xD2 SHL DUP2 MSTORE PUSH32 0x3B28ADA7424160F36DBA04E603FF68D11AC4A3EEB1EF7A9911D79D949607B745 PUSH1 0x6 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x26 ADD SWAP1 KECCAK256 SWAP1 PUSH2 0x462 SWAP1 DUP3 PUSH2 0x192E JUMP JUMPDEST POP PUSH1 0x80 DUP12 ADD MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x6E616D65 PUSH1 0xE0 SHL DUP2 MSTORE PUSH32 0x3B28ADA7424160F36DBA04E603FF68D11AC4A3EEB1EF7A9911D79D949607B745 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x24 ADD SWAP1 KECCAK256 SWAP1 PUSH2 0x4B2 SWAP1 DUP3 PUSH2 0x192E JUMP JUMPDEST POP PUSH2 0x4BF PUSH3 0x2A300 PUSH2 0x7E6 JUMP JUMPDEST DUP4 ISZERO PUSH2 0x505 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x51B PUSH2 0x892 JUMP JUMPDEST PUSH2 0x524 DUP2 PUSH2 0x763 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x718 JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x572 JUMPI PUSH2 0x572 PUSH2 0x19EE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x593 JUMPI PUSH2 0x593 PUSH2 0x1A04 JUMP JUMPDEST DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x5A5 JUMPI PUSH2 0x5A5 PUSH2 0x1A04 JUMP JUMPDEST SUB PUSH2 0x5F3 JUMPI PUSH2 0x5EE DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x5BF JUMPI PUSH2 0x5BF PUSH2 0x19EE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x5DD JUMPI PUSH2 0x5DD PUSH2 0x19EE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH2 0x909 JUMP JUMPDEST PUSH2 0x705 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x607 JUMPI PUSH2 0x607 PUSH2 0x1A04 JUMP JUMPDEST SUB PUSH2 0x650 JUMPI PUSH2 0x5EE DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x621 JUMPI PUSH2 0x621 PUSH2 0x19EE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x63F JUMPI PUSH2 0x63F PUSH2 0x19EE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH2 0xA88 JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x664 JUMPI PUSH2 0x664 PUSH2 0x1A04 JUMP JUMPDEST SUB PUSH2 0x6AD JUMPI PUSH2 0x5EE DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x67E JUMPI PUSH2 0x67E PUSH2 0x19EE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x69C JUMPI PUSH2 0x69C PUSH2 0x19EE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH2 0xC18 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C69624469616D6F6E644375743A20496E636F72726563742046616365744375 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x3A20B1BA34B7B7 PUSH1 0xC9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC8 JUMP JUMPDEST POP DUP1 PUSH2 0x710 DUP2 PUSH2 0x1A30 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x555 JUMP JUMPDEST POP PUSH32 0x8FAA70878671CCD212D20771B795C50AF8FD3FF6CF27F4BDE57E5D4DE0AEB673 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x74C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x75E DUP3 DUP3 PUSH2 0xD36 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0xC8FCAD8DB84D3CC18B4C41D551EA0EE66DD599CDE068D998E57D5E09332C1320 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1CAF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP4 SWAP1 SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH32 0xC8FCAD8DB84D3CC18B4C41D551EA0EE66DD599CDE068D998E57D5E09332C1321 SLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1CAF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 ISZERO PUSH2 0x876 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C69624469616D6F6E643A2054696D656C6F636B20616C726561647920696E69 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x1D1A585B1A5E9959 PUSH1 0xC2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC8 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x887 JUMPI PUSH3 0x2A300 PUSH2 0x889 JUMP JUMPDEST DUP2 JUMPDEST PUSH1 0x5 SWAP1 SWAP2 ADD SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1CAF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x907 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C69624469616D6F6E643A204D75737420626520636F6E7472616374206F776E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x32B9 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC8 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x92A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC8 SWAP1 PUSH2 0x1B99 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1CAF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x95F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC8 SWAP1 PUSH2 0x1BE4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP3 AND SWAP1 SUB PUSH2 0x995 JUMPI PUSH2 0x995 DUP3 DUP6 PUSH2 0xF43 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xA81 JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x9B5 JUMPI PUSH2 0x9B5 PUSH2 0x19EE JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 DUP7 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0xA53 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C69624469616D6F6E644375743A2043616E2774206164642066756E6374696F PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x6E207468617420616C726561647920657869737473 PUSH1 0x58 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC8 JUMP JUMPDEST PUSH2 0xA5F DUP6 DUP4 DUP7 DUP11 PUSH2 0xFAD JUMP JUMPDEST DUP4 PUSH2 0xA69 DUP2 PUSH2 0x1C30 JUMP JUMPDEST SWAP5 POP POP POP POP DUP1 DUP1 PUSH2 0xA79 SWAP1 PUSH2 0x1A30 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x998 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT PUSH2 0xAA9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC8 SWAP1 PUSH2 0x1B99 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1CAF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xADE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC8 SWAP1 PUSH2 0x1BE4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP3 AND SWAP1 SUB PUSH2 0xB14 JUMPI PUSH2 0xB14 DUP3 DUP6 PUSH2 0xF43 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xA81 JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xB34 JUMPI PUSH2 0xB34 PUSH2 0x19EE JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 DUP7 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP8 AND DUP2 SUB PUSH2 0xBDF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C69624469616D6F6E644375743A2043616E2774207265706C6163652066756E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6374696F6E20776974682073616D652066756E6374696F6E0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC8 JUMP JUMPDEST PUSH2 0xBEA DUP6 DUP3 DUP5 PUSH2 0x104D JUMP JUMPDEST PUSH2 0xBF6 DUP6 DUP4 DUP7 DUP11 PUSH2 0xFAD JUMP JUMPDEST DUP4 PUSH2 0xC00 DUP2 PUSH2 0x1C30 JUMP JUMPDEST SWAP5 POP POP POP POP DUP1 DUP1 PUSH2 0xC10 SWAP1 PUSH2 0x1A30 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB17 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT PUSH2 0xC39 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC8 SWAP1 PUSH2 0x1B99 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1CAF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0xCBE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C69624469616D6F6E644375743A2052656D6F76652066616365742061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH22 0x657373206D7573742062652061646472657373283029 PUSH1 0x50 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC8 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xD30 JUMPI PUSH1 0x0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xCDE JUMPI PUSH2 0xCDE PUSH2 0x19EE JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 DUP6 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD1B DUP5 DUP3 DUP5 PUSH2 0x104D JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0xD28 SWAP1 PUSH2 0x1A30 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xCC1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xDBD JUMPI DUP1 MLOAD ISZERO PUSH2 0xDB9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C69624469616D6F6E644375743A205F696E6974206973206164647265737328 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x3029206275745F63616C6C64617461206973206E6F7420656D70747900000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT PUSH2 0xE34 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C69624469616D6F6E644375743A205F63616C6C6461746120697320656D7074 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7920627574205F696E6974206973206E6F742061646472657373283029000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ADDRESS EQ PUSH2 0xE66 JUMPI PUSH2 0xE66 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1CCF PUSH1 0x28 SWAP2 CODECOPY PUSH2 0x1410 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH2 0xE81 SWAP2 SWAP1 PUSH2 0x1C56 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xEBC JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xEC1 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0xD30 JUMPI DUP1 MLOAD ISZERO PUSH2 0xEEC JUMPI DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC8 SWAP2 SWAP1 PUSH2 0x1C72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C69624469616D6F6E644375743A205F696E69742066756E6374696F6E207265 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1D995C9D1959 PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC8 JUMP JUMPDEST PUSH2 0xF65 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1CF7 PUSH1 0x24 SWAP2 CODECOPY PUSH2 0x1410 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 SWAP5 DUP6 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP7 ADD DUP6 SWAP1 SSTORE SWAP5 DUP5 ADD DUP4 SSTORE SWAP2 DUP3 MSTORE SWAP3 SWAP1 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP7 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP8 AND PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP8 DUP9 AND OR DUP2 SSTORE SWAP5 SWAP1 SWAP6 AND DUP1 DUP4 MSTORE PUSH1 0x1 DUP1 DUP10 ADD DUP4 MSTORE SWAP6 DUP4 KECCAK256 DUP1 SLOAD SWAP7 DUP8 ADD DUP2 SSTORE DUP4 MSTORE DUP2 DUP4 KECCAK256 PUSH1 0x8 DUP8 DIV ADD DUP1 SLOAD PUSH1 0xE0 SWAP9 SWAP1 SWAP9 SHR PUSH1 0x4 PUSH1 0x7 SWAP1 SWAP9 AND SWAP8 SWAP1 SWAP8 MUL PUSH2 0x100 EXP SWAP7 DUP8 MUL PUSH4 0xFFFFFFFF SWAP1 SWAP8 MUL NOT SWAP1 SWAP8 AND SWAP6 SWAP1 SWAP6 OR SWAP1 SWAP6 SSTORE MSTORE SWAP3 SWAP1 SWAP2 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x10C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x37 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C69624469616D6F6E644375743A2043616E27742072656D6F76652066756E63 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x74696F6E207468617420646F65736E2774206578697374000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC8 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0x1138 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C69624469616D6F6E644375743A2043616E27742072656D6F766520696D6D75 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x3A30B1363290333AB731BA34B7B7 PUSH1 0x91 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP5 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE PUSH1 0x1 DUP1 DUP9 ADD SWAP1 SWAP4 MSTORE SWAP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP3 SWAP2 PUSH2 0x1187 SWAP2 PUSH2 0x1C85 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 EQ PUSH2 0x1279 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP7 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0x11BC JUMPI PUSH2 0x11BC PUSH2 0x19EE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x8 DUP4 DIV ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP5 MSTORE PUSH1 0x1 DUP11 ADD SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 DUP1 SLOAD PUSH1 0x7 SWAP1 SWAP3 AND PUSH1 0x4 MUL PUSH2 0x100 EXP SWAP1 SWAP3 DIV PUSH1 0xE0 SHL SWAP3 POP DUP3 SWAP2 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0x120D JUMPI PUSH2 0x120D PUSH2 0x19EE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x8 DUP4 DIV ADD DUP1 SLOAD PUSH4 0xFFFFFFFF PUSH1 0x7 SWAP1 SWAP5 AND PUSH1 0x4 MUL PUSH2 0x100 EXP SWAP4 DUP5 MUL NOT AND PUSH1 0xE0 SWAP6 SWAP1 SWAP6 SHR SWAP3 SWAP1 SWAP3 MUL SWAP4 SWAP1 SWAP4 OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE DUP7 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP6 AND MUL OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP7 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP1 PUSH2 0x12A2 JUMPI PUSH2 0x12A2 PUSH2 0x1C98 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 PUSH1 0x8 PUSH1 0x0 NOT SWAP1 SWAP5 ADD SWAP4 DUP5 DIV ADD DUP1 SLOAD PUSH4 0xFFFFFFFF PUSH1 0x4 PUSH1 0x7 DUP8 AND MUL PUSH2 0x100 EXP MUL NOT AND SWAP1 SSTORE SWAP2 SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP6 AND DUP3 MSTORE DUP7 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 SWAP1 SSTORE DUP2 SWAP1 SUB PUSH2 0xA81 JUMPI PUSH1 0x2 DUP6 ADD SLOAD PUSH1 0x0 SWAP1 PUSH2 0x1305 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1C85 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP1 DUP10 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 SWAP2 POP DUP1 DUP3 EQ PUSH2 0x13B4 JUMPI PUSH1 0x0 DUP8 PUSH1 0x2 ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1344 JUMPI PUSH2 0x1344 PUSH2 0x19EE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x2 DUP10 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 POP DUP3 SWAP2 DUP5 SWAP1 DUP2 LT PUSH2 0x1375 JUMPI PUSH2 0x1375 PUSH2 0x19EE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND OR SWAP1 SSTORE SWAP3 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x1 DUP10 DUP2 ADD SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 KECCAK256 ADD DUP2 SWAP1 SSTORE JUMPDEST DUP7 PUSH1 0x2 ADD DUP1 SLOAD DUP1 PUSH2 0x13C7 JUMPI PUSH2 0x13C7 PUSH2 0x1C98 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 DUP4 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE SWAP1 SWAP3 ADD SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP3 MSTORE PUSH1 0x1 DUP10 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST DUP2 EXTCODESIZE DUP2 DUP2 PUSH2 0xD30 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC8 SWAP2 SWAP1 PUSH2 0x1C72 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1448 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xA0 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1486 JUMPI PUSH2 0x1486 PUSH2 0x144D JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1486 JUMPI PUSH2 0x1486 PUSH2 0x144D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x14D8 JUMPI PUSH2 0x14D8 PUSH2 0x144D JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x14F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x150B JUMPI PUSH2 0x150B PUSH2 0x144D JUMP JUMPDEST PUSH2 0x151E PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x14AF JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x1533 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1562 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x157A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x1595 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x15AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1595 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x15F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1602 DUP9 PUSH2 0x1431 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x161F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP10 ADD SWAP1 PUSH1 0xA0 DUP3 DUP13 SUB SLT ISZERO PUSH2 0x1633 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x163B PUSH2 0x1463 JUMP JUMPDEST PUSH2 0x1644 DUP4 PUSH2 0x1431 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x1652 PUSH1 0x20 DUP5 ADD PUSH2 0x1431 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1663 PUSH1 0x40 DUP5 ADD PUSH2 0x1431 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH2 0x167A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1686 DUP14 DUP3 DUP7 ADD PUSH2 0x14E0 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 DUP4 ADD CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH2 0x169E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16AA DUP14 DUP3 DUP7 ADD PUSH2 0x14E0 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP SWAP8 POP PUSH1 0x40 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x16C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16D2 DUP12 DUP4 DUP13 ADD PUSH2 0x1550 JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP DUP6 SWAP2 POP PUSH2 0x16E6 PUSH1 0x60 DUP12 ADD PUSH2 0x1431 JUMP JUMPDEST SWAP5 POP PUSH1 0x80 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x16FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1709 DUP11 DUP3 DUP12 ADD PUSH2 0x159C JUMP JUMPDEST SWAP9 SWAP12 SWAP8 SWAP11 POP SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP3 SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x172E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1737 DUP3 PUSH2 0x1431 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1758 JUMPI PUSH2 0x1758 PUSH2 0x144D JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1775 PUSH2 0x1770 DUP5 PUSH2 0x173E JUMP JUMPDEST PUSH2 0x14AF JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP2 SWAP1 PUSH1 0x5 DUP7 DUP2 SHL DUP7 ADD CALLDATASIZE DUP2 GT ISZERO PUSH2 0x1793 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1899 JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x17B6 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP2 DUP11 ADD SWAP2 POP PUSH1 0x60 DUP3 CALLDATASIZE SUB SLT ISZERO PUSH2 0x17CC JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x17D4 PUSH2 0x148C JUMP JUMPDEST PUSH2 0x17DD DUP4 PUSH2 0x1431 JUMP JUMPDEST DUP2 MSTORE DUP7 DUP4 ADD CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0x17F1 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP2 DUP9 ADD MSTORE PUSH1 0x40 DUP4 DUP2 ADD CALLDATALOAD DUP4 DUP2 GT ISZERO PUSH2 0x1809 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST SWAP4 SWAP1 SWAP4 ADD SWAP3 CALLDATASIZE PUSH1 0x1F DUP6 ADD SLT PUSH2 0x1820 JUMPI PUSH1 0x0 SWAP3 POP DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH2 0x1830 PUSH2 0x1770 DUP5 PUSH2 0x173E JUMP JUMPDEST DUP4 DUP2 MSTORE SWAP3 DUP8 SHL DUP5 ADD DUP9 ADD SWAP3 DUP9 DUP2 ADD SWAP1 CALLDATASIZE DUP6 GT ISZERO PUSH2 0x184D JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST SWAP5 DUP10 ADD SWAP5 JUMPDEST DUP5 DUP7 LT ISZERO PUSH2 0x1882 JUMPI DUP6 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1873 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP3 MSTORE SWAP5 DUP10 ADD SWAP5 SWAP1 DUP10 ADD SWAP1 PUSH2 0x1852 JUMP JUMPDEST SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP9 MSTORE POP POP SWAP5 DUP4 ADD SWAP5 DUP4 ADD PUSH2 0x1795 JUMP JUMPDEST POP SWAP3 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x18BA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x18DA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x75E JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x1907 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1926 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1913 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1948 JUMPI PUSH2 0x1948 PUSH2 0x144D JUMP JUMPDEST PUSH2 0x195C DUP2 PUSH2 0x1956 DUP5 SLOAD PUSH2 0x18A6 JUMP JUMPDEST DUP5 PUSH2 0x18E0 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1991 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1979 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x1926 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x19C0 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x19A1 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x19DE JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1A42 JUMPI PUSH2 0x1A42 PUSH2 0x1A1A JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A64 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1A4C JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1A85 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1A49 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP8 MLOAD DUP1 DUP4 MSTORE PUSH1 0x80 SWAP3 POP DUP3 DUP7 ADD SWAP2 POP DUP3 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD PUSH1 0x20 DUP1 DUP12 ADD PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1B69 JUMPI DUP10 DUP5 SUB PUSH1 0x7F NOT ADD DUP7 MSTORE DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP4 DUP2 ADD MLOAD DUP10 DUP7 ADD SWAP1 PUSH1 0x3 DUP2 LT PUSH2 0x1B08 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP7 DUP7 ADD MSTORE PUSH1 0x40 SWAP2 DUP3 ADD MLOAD SWAP2 DUP7 ADD DUP11 SWAP1 MSTORE DUP2 MLOAD SWAP1 DUP2 SWAP1 MSTORE SWAP1 DUP5 ADD SWAP1 PUSH1 0x0 SWAP1 DUP10 DUP8 ADD SWAP1 JUMPDEST DUP1 DUP4 LT ISZERO PUSH2 0x1B54 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP3 MSTORE SWAP3 DUP7 ADD SWAP3 PUSH1 0x1 SWAP3 SWAP1 SWAP3 ADD SWAP2 SWAP1 DUP7 ADD SWAP1 PUSH2 0x1B2A JUMP JUMPDEST POP SWAP8 DUP6 ADD SWAP8 SWAP6 POP POP POP SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1AC2 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND SWAP1 DUP9 ADD MSTORE DUP7 DUP2 SUB PUSH1 0x40 DUP9 ADD MSTORE PUSH2 0x1B8B DUP2 DUP10 PUSH2 0x1A6D JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x4C69624469616D6F6E644375743A204E6F2073656C6563746F727320696E2066 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x1858D95D081D1BC818DD5D PUSH1 0xAA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x4C69624469616D6F6E644375743A204164642066616365742063616E27742062 PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x652061646472657373283029 PUSH1 0xA0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP1 DUP4 AND DUP2 DUP2 SUB PUSH2 0x1C4C JUMPI PUSH2 0x1C4C PUSH2 0x1A1A JUMP JUMPDEST PUSH1 0x1 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1C68 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1A49 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1737 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1A6D JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x54C JUMPI PUSH2 0x54C PUSH2 0x1A1A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID 0xC8 0xFC 0xAD DUP14 0xB8 0x4D EXTCODECOPY 0xC1 DUP12 0x4C COINBASE 0xD5 MLOAD 0xEA 0xE 0xE6 PUSH14 0xD599CDE068D998E57D5E09332C13 SHR 0x4C PUSH10 0x624469616D6F6E644375 PUSH21 0x3A205F696E6974206164647265737320686173206E PUSH16 0x20636F64654C69624469616D6F6E6443 PUSH22 0x743A204E657720666163657420686173206E6F20636F PUSH5 0x65A2646970 PUSH7 0x7358221220D3A5 REVERT ISZERO PUSH31 0x44E6573E0ECF26AB8A24B869B4DBE804E485F2916A0CB816A7714164736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"1323:3905:7:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_694":{"entryPoint":null,"id":694,"parameterSlots":0,"returnSlots":0},"@_698":{"entryPoint":null,"id":698,"parameterSlots":0,"returnSlots":0},"@_getInitializableStorage_278":{"entryPoint":1319,"id":278,"parameterSlots":0,"returnSlots":1},"@_initializableStorageSlot_264":{"entryPoint":null,"id":264,"parameterSlots":0,"returnSlots":1},"@addFacet_3220":{"entryPoint":3907,"id":3220,"parameterSlots":2,"returnSlots":0},"@addFunction_3261":{"entryPoint":4013,"id":3261,"parameterSlots":4,"returnSlots":0},"@addFunctions_3018":{"entryPoint":2313,"id":3018,"parameterSlots":2,"returnSlots":0},"@contractOwner_2796":{"entryPoint":null,"id":2796,"parameterSlots":0,"returnSlots":1},"@diamondAddress_657":{"entryPoint":null,"id":657,"parameterSlots":0,"returnSlots":1},"@diamondCut_2917":{"entryPoint":1362,"id":2917,"parameterSlots":3,"returnSlots":0},"@diamondStorage_2655":{"entryPoint":null,"id":2655,"parameterSlots":0,"returnSlots":1},"@diamondStorage_2756":{"entryPoint":null,"id":2756,"parameterSlots":0,"returnSlots":1},"@enforceHasContractCode_3524":{"entryPoint":5136,"id":3524,"parameterSlots":2,"returnSlots":0},"@enforceIsContractOwner_2810":{"entryPoint":2194,"id":2810,"parameterSlots":0,"returnSlots":0},"@initializeDiamondCut_3505":{"entryPoint":3382,"id":3505,"parameterSlots":2,"returnSlots":0},"@initializeUpgradeTimelock_3555":{"entryPoint":2022,"id":3555,"parameterSlots":1,"returnSlots":0},"@initialize_612":{"entryPoint":431,"id":612,"parameterSlots":7,"returnSlots":0},"@owner_645":{"entryPoint":375,"id":645,"parameterSlots":0,"returnSlots":1},"@removeFunction_3428":{"entryPoint":4173,"id":3428,"parameterSlots":3,"returnSlots":0},"@removeFunctions_3187":{"entryPoint":3096,"id":3187,"parameterSlots":2,"returnSlots":0},"@replaceFunctions_3122":{"entryPoint":2696,"id":3122,"parameterSlots":2,"returnSlots":0},"@setContractOwner_2784":{"entryPoint":1891,"id":2784,"parameterSlots":1,"returnSlots":0},"@transferOwnership_631":{"entryPoint":1299,"id":631,"parameterSlots":1,"returnSlots":0},"abi_decode_address":{"entryPoint":5169,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_array_struct_FacetCut_calldata_dyn_calldata":{"entryPoint":5456,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_bytes_calldata":{"entryPoint":5532,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_string":{"entryPoint":5344,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":5916,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_struct$_DiamondSettings_$2340_memory_ptrt_array$_t_struct$_FacetCut_$2373_calldata_ptr_$dyn_calldata_ptrt_addresst_bytes_calldata_ptr":{"entryPoint":5598,"id":null,"parameterSlots":2,"returnSlots":7},"abi_encode_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_bytes":{"entryPoint":6765,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":7254,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_2361458367e696363fbcc70777d07ebbd2394e89fd0adcaf147faccd1d294d60__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_be16b05c387bab9ac31918a3e61672f4618601f3c598a2f3f2710f37053e1ea4__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_struct$_FacetCut_$2373_memory_ptr_$dyn_memory_ptr_t_address_t_bytes_memory_ptr__to_t_array$_t_struct$_FacetCut_$2373_memory_ptr_$dyn_memory_ptr_t_address_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":6809,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7282,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_046c761a688d1dc3c500562bc5aaa3544f01f394f9bb3b69aa2a950a45afb1f8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_080b2fe78815767d522290509c8fce2af708c8a54455ca1b0cc978c92822465d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0d4ae41009c51fd276653a54d7793c24f266ddc8c56ce21f8be5e2c6595ab3ac__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1ffc682bcfedefd5e93ba9ed0c2d1bc0b18319886e3b4bd28a03a3d3729f85c0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7065,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2c590e498c4d56c984a7092fd5e89a68b9f4541ce9f97252fb74e44a00ffbb71__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_48267d8daf5ea9c6bbad1fe9c53dc4c04a2a01b2b85bad432956cf42f45b2f54__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_64609d8b93c93a06b98d7db7a87b04044cd4a52c5661d603bb9b90ad8b914a3a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7140,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6e6486aeb9db70da259b7171a739046119facaec2d8a6bd46f1145fe8391014a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_868d165ec2461661b624442252aed6a645399bfae7b60083a77ea1b61b084042__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8ba063dfaa4be2d2cbe73dbb1364728b0f7031ac048441d5fad19e9541992b21__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_99a7418ee014d613f46da44561258cdbb58064508097483a319062b99fa37700__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9ce02b7f4f50d9d7f1e7739e5e866ff5614c1b018b3bd10f25d604b80fcb0a4a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b5a7112edf707196456f338fdcc19cd849be6cb8c0d166bcd035f4cfb00e7078__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b739aae768f79b96e91d9f66398733516895e39eb09ee54a795b49dcc77504d4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory":{"entryPoint":5295,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_3797":{"entryPoint":5219,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_memory_3800":{"entryPoint":5260,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_array_struct_FacetCut_dyn":{"entryPoint":5950,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":7301,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":6368,"id":null,"parameterSlots":3,"returnSlots":0},"convert_array_t_array$_t_struct$_FacetCut_$2373_calldata_ptr_$dyn_calldata_ptr_to_t_array$_t_struct$_FacetCut_$2373_memory_ptr_$dyn_memory_ptr":{"entryPoint":5986,"id":null,"parameterSlots":2,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":6446,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":6729,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":6310,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"increment_t_uint256":{"entryPoint":6704,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint96":{"entryPoint":7216,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":6682,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":6660,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":7320,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":6638,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":5197,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:20880:28","statements":[{"nodeType":"YulBlock","src":"6:3:28","statements":[]},{"body":{"nodeType":"YulBlock","src":"188:182:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"205:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"216:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"198:6:28"},"nodeType":"YulFunctionCall","src":"198:21:28"},"nodeType":"YulExpressionStatement","src":"198:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"239:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"250:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"235:3:28"},"nodeType":"YulFunctionCall","src":"235:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"255:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"228:6:28"},"nodeType":"YulFunctionCall","src":"228:30:28"},"nodeType":"YulExpressionStatement","src":"228:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"278:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"289:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"274:3:28"},"nodeType":"YulFunctionCall","src":"274:18:28"},{"hexValue":"4469616d6f6e643a2046756e6374696f6e20646f6573206e6f74206578697374","kind":"string","nodeType":"YulLiteral","src":"294:34:28","type":"","value":"Diamond: Function does not exist"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"267:6:28"},"nodeType":"YulFunctionCall","src":"267:62:28"},"nodeType":"YulExpressionStatement","src":"267:62:28"},{"nodeType":"YulAssignment","src":"338:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"350:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"361:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"346:3:28"},"nodeType":"YulFunctionCall","src":"346:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"338:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_6e6486aeb9db70da259b7171a739046119facaec2d8a6bd46f1145fe8391014a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"165:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"179:4:28","type":""}],"src":"14:356:28"},{"body":{"nodeType":"YulBlock","src":"419:60:28","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"436:3:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"445:5:28"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"460:3:28","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"465:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"456:3:28"},"nodeType":"YulFunctionCall","src":"456:11:28"},{"kind":"number","nodeType":"YulLiteral","src":"469:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"452:3:28"},"nodeType":"YulFunctionCall","src":"452:19:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"441:3:28"},"nodeType":"YulFunctionCall","src":"441:31:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"429:6:28"},"nodeType":"YulFunctionCall","src":"429:44:28"},"nodeType":"YulExpressionStatement","src":"429:44:28"}]},"name":"abi_encode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"403:5:28","type":""},{"name":"pos","nodeType":"YulTypedName","src":"410:3:28","type":""}],"src":"375:104:28"},{"body":{"nodeType":"YulBlock","src":"585:102:28","statements":[{"nodeType":"YulAssignment","src":"595:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"607:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"618:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"603:3:28"},"nodeType":"YulFunctionCall","src":"603:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"595:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"637:9:28"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"652:6:28"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"668:3:28","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"673:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"664:3:28"},"nodeType":"YulFunctionCall","src":"664:11:28"},{"kind":"number","nodeType":"YulLiteral","src":"677:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"660:3:28"},"nodeType":"YulFunctionCall","src":"660:19:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"648:3:28"},"nodeType":"YulFunctionCall","src":"648:32:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"630:6:28"},"nodeType":"YulFunctionCall","src":"630:51:28"},"nodeType":"YulExpressionStatement","src":"630:51:28"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"554:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"565:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"576:4:28","type":""}],"src":"484:203:28"},{"body":{"nodeType":"YulBlock","src":"741:124:28","statements":[{"nodeType":"YulAssignment","src":"751:29:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"773:6:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"760:12:28"},"nodeType":"YulFunctionCall","src":"760:20:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"751:5:28"}]},{"body":{"nodeType":"YulBlock","src":"843:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"852:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"855:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"845:6:28"},"nodeType":"YulFunctionCall","src":"845:12:28"},"nodeType":"YulExpressionStatement","src":"845:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"802:5:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"813:5:28"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"828:3:28","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"833:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"824:3:28"},"nodeType":"YulFunctionCall","src":"824:11:28"},{"kind":"number","nodeType":"YulLiteral","src":"837:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"820:3:28"},"nodeType":"YulFunctionCall","src":"820:19:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"809:3:28"},"nodeType":"YulFunctionCall","src":"809:31:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"799:2:28"},"nodeType":"YulFunctionCall","src":"799:42:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"792:6:28"},"nodeType":"YulFunctionCall","src":"792:50:28"},"nodeType":"YulIf","src":"789:70:28"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"720:6:28","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"731:5:28","type":""}],"src":"692:173:28"},{"body":{"nodeType":"YulBlock","src":"902:95:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"919:1:28","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"926:3:28","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"931:10:28","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"922:3:28"},"nodeType":"YulFunctionCall","src":"922:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"912:6:28"},"nodeType":"YulFunctionCall","src":"912:31:28"},"nodeType":"YulExpressionStatement","src":"912:31:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"959:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"962:4:28","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"952:6:28"},"nodeType":"YulFunctionCall","src":"952:15:28"},"nodeType":"YulExpressionStatement","src":"952:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"983:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"986:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"976:6:28"},"nodeType":"YulFunctionCall","src":"976:15:28"},"nodeType":"YulExpressionStatement","src":"976:15:28"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"870:127:28"},{"body":{"nodeType":"YulBlock","src":"1048:206:28","statements":[{"nodeType":"YulAssignment","src":"1058:19:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1074:2:28","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1068:5:28"},"nodeType":"YulFunctionCall","src":"1068:9:28"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1058:6:28"}]},{"nodeType":"YulVariableDeclaration","src":"1086:34:28","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1108:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"1116:3:28","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1104:3:28"},"nodeType":"YulFunctionCall","src":"1104:16:28"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"1090:10:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"1195:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1197:16:28"},"nodeType":"YulFunctionCall","src":"1197:18:28"},"nodeType":"YulExpressionStatement","src":"1197:18:28"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1138:10:28"},{"kind":"number","nodeType":"YulLiteral","src":"1150:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1135:2:28"},"nodeType":"YulFunctionCall","src":"1135:34:28"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1174:10:28"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1186:6:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1171:2:28"},"nodeType":"YulFunctionCall","src":"1171:22:28"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1132:2:28"},"nodeType":"YulFunctionCall","src":"1132:62:28"},"nodeType":"YulIf","src":"1129:88:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1233:2:28","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1237:10:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1226:6:28"},"nodeType":"YulFunctionCall","src":"1226:22:28"},"nodeType":"YulExpressionStatement","src":"1226:22:28"}]},"name":"allocate_memory_3797","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1037:6:28","type":""}],"src":"1002:252:28"},{"body":{"nodeType":"YulBlock","src":"1305:207:28","statements":[{"nodeType":"YulAssignment","src":"1315:19:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1331:2:28","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1325:5:28"},"nodeType":"YulFunctionCall","src":"1325:9:28"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1315:6:28"}]},{"nodeType":"YulVariableDeclaration","src":"1343:35:28","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1365:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"1373:4:28","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1361:3:28"},"nodeType":"YulFunctionCall","src":"1361:17:28"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"1347:10:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"1453:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1455:16:28"},"nodeType":"YulFunctionCall","src":"1455:18:28"},"nodeType":"YulExpressionStatement","src":"1455:18:28"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1396:10:28"},{"kind":"number","nodeType":"YulLiteral","src":"1408:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1393:2:28"},"nodeType":"YulFunctionCall","src":"1393:34:28"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1432:10:28"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1444:6:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1429:2:28"},"nodeType":"YulFunctionCall","src":"1429:22:28"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1390:2:28"},"nodeType":"YulFunctionCall","src":"1390:62:28"},"nodeType":"YulIf","src":"1387:88:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1491:2:28","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1495:10:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1484:6:28"},"nodeType":"YulFunctionCall","src":"1484:22:28"},"nodeType":"YulExpressionStatement","src":"1484:22:28"}]},"name":"allocate_memory_3800","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1294:6:28","type":""}],"src":"1259:253:28"},{"body":{"nodeType":"YulBlock","src":"1562:230:28","statements":[{"nodeType":"YulAssignment","src":"1572:19:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1588:2:28","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1582:5:28"},"nodeType":"YulFunctionCall","src":"1582:9:28"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1572:6:28"}]},{"nodeType":"YulVariableDeclaration","src":"1600:58:28","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1622:6:28"},{"arguments":[{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1638:4:28"},{"kind":"number","nodeType":"YulLiteral","src":"1644:2:28","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1634:3:28"},"nodeType":"YulFunctionCall","src":"1634:13:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1653:2:28","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1649:3:28"},"nodeType":"YulFunctionCall","src":"1649:7:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1630:3:28"},"nodeType":"YulFunctionCall","src":"1630:27:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1618:3:28"},"nodeType":"YulFunctionCall","src":"1618:40:28"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"1604:10:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"1733:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1735:16:28"},"nodeType":"YulFunctionCall","src":"1735:18:28"},"nodeType":"YulExpressionStatement","src":"1735:18:28"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1676:10:28"},{"kind":"number","nodeType":"YulLiteral","src":"1688:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1673:2:28"},"nodeType":"YulFunctionCall","src":"1673:34:28"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1712:10:28"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1724:6:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1709:2:28"},"nodeType":"YulFunctionCall","src":"1709:22:28"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1670:2:28"},"nodeType":"YulFunctionCall","src":"1670:62:28"},"nodeType":"YulIf","src":"1667:88:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1771:2:28","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1775:10:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1764:6:28"},"nodeType":"YulFunctionCall","src":"1764:22:28"},"nodeType":"YulExpressionStatement","src":"1764:22:28"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1542:4:28","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1551:6:28","type":""}],"src":"1517:275:28"},{"body":{"nodeType":"YulBlock","src":"1850:478:28","statements":[{"body":{"nodeType":"YulBlock","src":"1899:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1908:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1911:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1901:6:28"},"nodeType":"YulFunctionCall","src":"1901:12:28"},"nodeType":"YulExpressionStatement","src":"1901:12:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1878:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"1886:4:28","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1874:3:28"},"nodeType":"YulFunctionCall","src":"1874:17:28"},{"name":"end","nodeType":"YulIdentifier","src":"1893:3:28"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1870:3:28"},"nodeType":"YulFunctionCall","src":"1870:27:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1863:6:28"},"nodeType":"YulFunctionCall","src":"1863:35:28"},"nodeType":"YulIf","src":"1860:55:28"},{"nodeType":"YulVariableDeclaration","src":"1924:30:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1947:6:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1934:12:28"},"nodeType":"YulFunctionCall","src":"1934:20:28"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1928:2:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"1993:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1995:16:28"},"nodeType":"YulFunctionCall","src":"1995:18:28"},"nodeType":"YulExpressionStatement","src":"1995:18:28"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"1969:2:28"},{"kind":"number","nodeType":"YulLiteral","src":"1973:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1966:2:28"},"nodeType":"YulFunctionCall","src":"1966:26:28"},"nodeType":"YulIf","src":"1963:52:28"},{"nodeType":"YulVariableDeclaration","src":"2024:70:28","value":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2067:2:28"},{"kind":"number","nodeType":"YulLiteral","src":"2071:4:28","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2063:3:28"},"nodeType":"YulFunctionCall","src":"2063:13:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2082:2:28","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2078:3:28"},"nodeType":"YulFunctionCall","src":"2078:7:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2059:3:28"},"nodeType":"YulFunctionCall","src":"2059:27:28"},{"kind":"number","nodeType":"YulLiteral","src":"2088:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2055:3:28"},"nodeType":"YulFunctionCall","src":"2055:38:28"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"2039:15:28"},"nodeType":"YulFunctionCall","src":"2039:55:28"},"variables":[{"name":"array_1","nodeType":"YulTypedName","src":"2028:7:28","type":""}]},{"expression":{"arguments":[{"name":"array_1","nodeType":"YulIdentifier","src":"2110:7:28"},{"name":"_1","nodeType":"YulIdentifier","src":"2119:2:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2103:6:28"},"nodeType":"YulFunctionCall","src":"2103:19:28"},"nodeType":"YulExpressionStatement","src":"2103:19:28"},{"body":{"nodeType":"YulBlock","src":"2170:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2179:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2182:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2172:6:28"},"nodeType":"YulFunctionCall","src":"2172:12:28"},"nodeType":"YulExpressionStatement","src":"2172:12:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2145:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"2153:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2141:3:28"},"nodeType":"YulFunctionCall","src":"2141:15:28"},{"kind":"number","nodeType":"YulLiteral","src":"2158:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2137:3:28"},"nodeType":"YulFunctionCall","src":"2137:26:28"},{"name":"end","nodeType":"YulIdentifier","src":"2165:3:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2134:2:28"},"nodeType":"YulFunctionCall","src":"2134:35:28"},"nodeType":"YulIf","src":"2131:55:28"},{"expression":{"arguments":[{"arguments":[{"name":"array_1","nodeType":"YulIdentifier","src":"2212:7:28"},{"kind":"number","nodeType":"YulLiteral","src":"2221:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2208:3:28"},"nodeType":"YulFunctionCall","src":"2208:18:28"},{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2232:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"2240:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2228:3:28"},"nodeType":"YulFunctionCall","src":"2228:17:28"},{"name":"_1","nodeType":"YulIdentifier","src":"2247:2:28"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"2195:12:28"},"nodeType":"YulFunctionCall","src":"2195:55:28"},"nodeType":"YulExpressionStatement","src":"2195:55:28"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"array_1","nodeType":"YulIdentifier","src":"2274:7:28"},{"name":"_1","nodeType":"YulIdentifier","src":"2283:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2270:3:28"},"nodeType":"YulFunctionCall","src":"2270:16:28"},{"kind":"number","nodeType":"YulLiteral","src":"2288:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2266:3:28"},"nodeType":"YulFunctionCall","src":"2266:27:28"},{"kind":"number","nodeType":"YulLiteral","src":"2295:1:28","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2259:6:28"},"nodeType":"YulFunctionCall","src":"2259:38:28"},"nodeType":"YulExpressionStatement","src":"2259:38:28"},{"nodeType":"YulAssignment","src":"2306:16:28","value":{"name":"array_1","nodeType":"YulIdentifier","src":"2315:7:28"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2306:5:28"}]}]},"name":"abi_decode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1824:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"1832:3:28","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1840:5:28","type":""}],"src":"1797:531:28"},{"body":{"nodeType":"YulBlock","src":"2434:283:28","statements":[{"body":{"nodeType":"YulBlock","src":"2483:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2492:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2495:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2485:6:28"},"nodeType":"YulFunctionCall","src":"2485:12:28"},"nodeType":"YulExpressionStatement","src":"2485:12:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2462:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"2470:4:28","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2458:3:28"},"nodeType":"YulFunctionCall","src":"2458:17:28"},{"name":"end","nodeType":"YulIdentifier","src":"2477:3:28"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2454:3:28"},"nodeType":"YulFunctionCall","src":"2454:27:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2447:6:28"},"nodeType":"YulFunctionCall","src":"2447:35:28"},"nodeType":"YulIf","src":"2444:55:28"},{"nodeType":"YulAssignment","src":"2508:30:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2531:6:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2518:12:28"},"nodeType":"YulFunctionCall","src":"2518:20:28"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2508:6:28"}]},{"body":{"nodeType":"YulBlock","src":"2581:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2590:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2593:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2583:6:28"},"nodeType":"YulFunctionCall","src":"2583:12:28"},"nodeType":"YulExpressionStatement","src":"2583:12:28"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2553:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"2561:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2550:2:28"},"nodeType":"YulFunctionCall","src":"2550:30:28"},"nodeType":"YulIf","src":"2547:50:28"},{"nodeType":"YulAssignment","src":"2606:29:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2622:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"2630:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2618:3:28"},"nodeType":"YulFunctionCall","src":"2618:17:28"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"2606:8:28"}]},{"body":{"nodeType":"YulBlock","src":"2695:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2704:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2707:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2697:6:28"},"nodeType":"YulFunctionCall","src":"2697:12:28"},"nodeType":"YulExpressionStatement","src":"2697:12:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2658:6:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2670:1:28","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"2673:6:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2666:3:28"},"nodeType":"YulFunctionCall","src":"2666:14:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2654:3:28"},"nodeType":"YulFunctionCall","src":"2654:27:28"},{"kind":"number","nodeType":"YulLiteral","src":"2683:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2650:3:28"},"nodeType":"YulFunctionCall","src":"2650:38:28"},{"name":"end","nodeType":"YulIdentifier","src":"2690:3:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2647:2:28"},"nodeType":"YulFunctionCall","src":"2647:47:28"},"nodeType":"YulIf","src":"2644:67:28"}]},"name":"abi_decode_array_struct_FacetCut_calldata_dyn_calldata","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2397:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"2405:3:28","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"2413:8:28","type":""},{"name":"length","nodeType":"YulTypedName","src":"2423:6:28","type":""}],"src":"2333:384:28"},{"body":{"nodeType":"YulBlock","src":"2794:275:28","statements":[{"body":{"nodeType":"YulBlock","src":"2843:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2852:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2855:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2845:6:28"},"nodeType":"YulFunctionCall","src":"2845:12:28"},"nodeType":"YulExpressionStatement","src":"2845:12:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2822:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"2830:4:28","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2818:3:28"},"nodeType":"YulFunctionCall","src":"2818:17:28"},{"name":"end","nodeType":"YulIdentifier","src":"2837:3:28"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2814:3:28"},"nodeType":"YulFunctionCall","src":"2814:27:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2807:6:28"},"nodeType":"YulFunctionCall","src":"2807:35:28"},"nodeType":"YulIf","src":"2804:55:28"},{"nodeType":"YulAssignment","src":"2868:30:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2891:6:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2878:12:28"},"nodeType":"YulFunctionCall","src":"2878:20:28"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2868:6:28"}]},{"body":{"nodeType":"YulBlock","src":"2941:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2950:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2953:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2943:6:28"},"nodeType":"YulFunctionCall","src":"2943:12:28"},"nodeType":"YulExpressionStatement","src":"2943:12:28"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2913:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"2921:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2910:2:28"},"nodeType":"YulFunctionCall","src":"2910:30:28"},"nodeType":"YulIf","src":"2907:50:28"},{"nodeType":"YulAssignment","src":"2966:29:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2982:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"2990:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2978:3:28"},"nodeType":"YulFunctionCall","src":"2978:17:28"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"2966:8:28"}]},{"body":{"nodeType":"YulBlock","src":"3047:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3056:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3059:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3049:6:28"},"nodeType":"YulFunctionCall","src":"3049:12:28"},"nodeType":"YulExpressionStatement","src":"3049:12:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3018:6:28"},{"name":"length","nodeType":"YulIdentifier","src":"3026:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3014:3:28"},"nodeType":"YulFunctionCall","src":"3014:19:28"},{"kind":"number","nodeType":"YulLiteral","src":"3035:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3010:3:28"},"nodeType":"YulFunctionCall","src":"3010:30:28"},{"name":"end","nodeType":"YulIdentifier","src":"3042:3:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3007:2:28"},"nodeType":"YulFunctionCall","src":"3007:39:28"},"nodeType":"YulIf","src":"3004:59:28"}]},"name":"abi_decode_bytes_calldata","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2757:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"2765:3:28","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"2773:8:28","type":""},{"name":"length","nodeType":"YulTypedName","src":"2783:6:28","type":""}],"src":"2722:347:28"},{"body":{"nodeType":"YulBlock","src":"3327:1527:28","statements":[{"body":{"nodeType":"YulBlock","src":"3374:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3383:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3386:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3376:6:28"},"nodeType":"YulFunctionCall","src":"3376:12:28"},"nodeType":"YulExpressionStatement","src":"3376:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3348:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"3357:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3344:3:28"},"nodeType":"YulFunctionCall","src":"3344:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"3369:3:28","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3340:3:28"},"nodeType":"YulFunctionCall","src":"3340:33:28"},"nodeType":"YulIf","src":"3337:53:28"},{"nodeType":"YulAssignment","src":"3399:39:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3428:9:28"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3409:18:28"},"nodeType":"YulFunctionCall","src":"3409:29:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3399:6:28"}]},{"nodeType":"YulVariableDeclaration","src":"3447:46:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3478:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"3489:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3474:3:28"},"nodeType":"YulFunctionCall","src":"3474:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3461:12:28"},"nodeType":"YulFunctionCall","src":"3461:32:28"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3451:6:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3502:28:28","value":{"kind":"number","nodeType":"YulLiteral","src":"3512:18:28","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3506:2:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"3557:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3566:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3569:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3559:6:28"},"nodeType":"YulFunctionCall","src":"3559:12:28"},"nodeType":"YulExpressionStatement","src":"3559:12:28"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3545:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"3553:2:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3542:2:28"},"nodeType":"YulFunctionCall","src":"3542:14:28"},"nodeType":"YulIf","src":"3539:34:28"},{"nodeType":"YulVariableDeclaration","src":"3582:32:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3596:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"3607:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3592:3:28"},"nodeType":"YulFunctionCall","src":"3592:22:28"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"3586:2:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"3653:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3662:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3665:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3655:6:28"},"nodeType":"YulFunctionCall","src":"3655:12:28"},"nodeType":"YulExpressionStatement","src":"3655:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3634:7:28"},{"name":"_2","nodeType":"YulIdentifier","src":"3643:2:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3630:3:28"},"nodeType":"YulFunctionCall","src":"3630:16:28"},{"kind":"number","nodeType":"YulLiteral","src":"3648:3:28","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3626:3:28"},"nodeType":"YulFunctionCall","src":"3626:26:28"},"nodeType":"YulIf","src":"3623:46:28"},{"nodeType":"YulVariableDeclaration","src":"3678:35:28","value":{"arguments":[],"functionName":{"name":"allocate_memory_3797","nodeType":"YulIdentifier","src":"3691:20:28"},"nodeType":"YulFunctionCall","src":"3691:22:28"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3682:5:28","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3729:5:28"},{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"3755:2:28"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3736:18:28"},"nodeType":"YulFunctionCall","src":"3736:22:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3722:6:28"},"nodeType":"YulFunctionCall","src":"3722:37:28"},"nodeType":"YulExpressionStatement","src":"3722:37:28"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3779:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"3786:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3775:3:28"},"nodeType":"YulFunctionCall","src":"3775:14:28"},{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"3814:2:28"},{"kind":"number","nodeType":"YulLiteral","src":"3818:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3810:3:28"},"nodeType":"YulFunctionCall","src":"3810:11:28"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3791:18:28"},"nodeType":"YulFunctionCall","src":"3791:31:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3768:6:28"},"nodeType":"YulFunctionCall","src":"3768:55:28"},"nodeType":"YulExpressionStatement","src":"3768:55:28"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3843:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"3850:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3839:3:28"},"nodeType":"YulFunctionCall","src":"3839:14:28"},{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"3878:2:28"},{"kind":"number","nodeType":"YulLiteral","src":"3882:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3874:3:28"},"nodeType":"YulFunctionCall","src":"3874:11:28"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3855:18:28"},"nodeType":"YulFunctionCall","src":"3855:31:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3832:6:28"},"nodeType":"YulFunctionCall","src":"3832:55:28"},"nodeType":"YulExpressionStatement","src":"3832:55:28"},{"nodeType":"YulVariableDeclaration","src":"3896:41:28","value":{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"3929:2:28"},{"kind":"number","nodeType":"YulLiteral","src":"3933:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3925:3:28"},"nodeType":"YulFunctionCall","src":"3925:11:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3912:12:28"},"nodeType":"YulFunctionCall","src":"3912:25:28"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"3900:8:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"3966:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3975:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3978:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3968:6:28"},"nodeType":"YulFunctionCall","src":"3968:12:28"},"nodeType":"YulExpressionStatement","src":"3968:12:28"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"3952:8:28"},{"name":"_1","nodeType":"YulIdentifier","src":"3962:2:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3949:2:28"},"nodeType":"YulFunctionCall","src":"3949:16:28"},"nodeType":"YulIf","src":"3946:36:28"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4002:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"4009:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3998:3:28"},"nodeType":"YulFunctionCall","src":"3998:14:28"},{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"4036:2:28"},{"name":"offset_1","nodeType":"YulIdentifier","src":"4040:8:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4032:3:28"},"nodeType":"YulFunctionCall","src":"4032:17:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4051:7:28"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"4014:17:28"},"nodeType":"YulFunctionCall","src":"4014:45:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3991:6:28"},"nodeType":"YulFunctionCall","src":"3991:69:28"},"nodeType":"YulExpressionStatement","src":"3991:69:28"},{"nodeType":"YulVariableDeclaration","src":"4069:42:28","value":{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"4102:2:28"},{"kind":"number","nodeType":"YulLiteral","src":"4106:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4098:3:28"},"nodeType":"YulFunctionCall","src":"4098:12:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4085:12:28"},"nodeType":"YulFunctionCall","src":"4085:26:28"},"variables":[{"name":"offset_2","nodeType":"YulTypedName","src":"4073:8:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"4140:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4149:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4152:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4142:6:28"},"nodeType":"YulFunctionCall","src":"4142:12:28"},"nodeType":"YulExpressionStatement","src":"4142:12:28"}]},"condition":{"arguments":[{"name":"offset_2","nodeType":"YulIdentifier","src":"4126:8:28"},{"name":"_1","nodeType":"YulIdentifier","src":"4136:2:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4123:2:28"},"nodeType":"YulFunctionCall","src":"4123:16:28"},"nodeType":"YulIf","src":"4120:36:28"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4176:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"4183:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4172:3:28"},"nodeType":"YulFunctionCall","src":"4172:15:28"},{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"4211:2:28"},{"name":"offset_2","nodeType":"YulIdentifier","src":"4215:8:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4207:3:28"},"nodeType":"YulFunctionCall","src":"4207:17:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4226:7:28"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"4189:17:28"},"nodeType":"YulFunctionCall","src":"4189:45:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4165:6:28"},"nodeType":"YulFunctionCall","src":"4165:70:28"},"nodeType":"YulExpressionStatement","src":"4165:70:28"},{"nodeType":"YulAssignment","src":"4244:15:28","value":{"name":"value","nodeType":"YulIdentifier","src":"4254:5:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4244:6:28"}]},{"nodeType":"YulVariableDeclaration","src":"4268:48:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4301:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4312:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4297:3:28"},"nodeType":"YulFunctionCall","src":"4297:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4284:12:28"},"nodeType":"YulFunctionCall","src":"4284:32:28"},"variables":[{"name":"offset_3","nodeType":"YulTypedName","src":"4272:8:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"4345:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4354:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4357:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4347:6:28"},"nodeType":"YulFunctionCall","src":"4347:12:28"},"nodeType":"YulExpressionStatement","src":"4347:12:28"}]},"condition":{"arguments":[{"name":"offset_3","nodeType":"YulIdentifier","src":"4331:8:28"},{"name":"_1","nodeType":"YulIdentifier","src":"4341:2:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4328:2:28"},"nodeType":"YulFunctionCall","src":"4328:16:28"},"nodeType":"YulIf","src":"4325:36:28"},{"nodeType":"YulVariableDeclaration","src":"4370:115:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4455:9:28"},{"name":"offset_3","nodeType":"YulIdentifier","src":"4466:8:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4451:3:28"},"nodeType":"YulFunctionCall","src":"4451:24:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4477:7:28"}],"functionName":{"name":"abi_decode_array_struct_FacetCut_calldata_dyn_calldata","nodeType":"YulIdentifier","src":"4396:54:28"},"nodeType":"YulFunctionCall","src":"4396:89:28"},"variables":[{"name":"value2_1","nodeType":"YulTypedName","src":"4374:8:28","type":""},{"name":"value3_1","nodeType":"YulTypedName","src":"4384:8:28","type":""}]},{"nodeType":"YulAssignment","src":"4494:18:28","value":{"name":"value2_1","nodeType":"YulIdentifier","src":"4504:8:28"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4494:6:28"}]},{"nodeType":"YulAssignment","src":"4521:18:28","value":{"name":"value3_1","nodeType":"YulIdentifier","src":"4531:8:28"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"4521:6:28"}]},{"nodeType":"YulAssignment","src":"4548:48:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4581:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4592:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4577:3:28"},"nodeType":"YulFunctionCall","src":"4577:18:28"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4558:18:28"},"nodeType":"YulFunctionCall","src":"4558:38:28"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"4548:6:28"}]},{"nodeType":"YulVariableDeclaration","src":"4605:49:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4638:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4649:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4634:3:28"},"nodeType":"YulFunctionCall","src":"4634:19:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4621:12:28"},"nodeType":"YulFunctionCall","src":"4621:33:28"},"variables":[{"name":"offset_4","nodeType":"YulTypedName","src":"4609:8:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"4683:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4692:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4695:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4685:6:28"},"nodeType":"YulFunctionCall","src":"4685:12:28"},"nodeType":"YulExpressionStatement","src":"4685:12:28"}]},"condition":{"arguments":[{"name":"offset_4","nodeType":"YulIdentifier","src":"4669:8:28"},{"name":"_1","nodeType":"YulIdentifier","src":"4679:2:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4666:2:28"},"nodeType":"YulFunctionCall","src":"4666:16:28"},"nodeType":"YulIf","src":"4663:36:28"},{"nodeType":"YulVariableDeclaration","src":"4708:86:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4764:9:28"},{"name":"offset_4","nodeType":"YulIdentifier","src":"4775:8:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4760:3:28"},"nodeType":"YulFunctionCall","src":"4760:24:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4786:7:28"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"4734:25:28"},"nodeType":"YulFunctionCall","src":"4734:60:28"},"variables":[{"name":"value5_1","nodeType":"YulTypedName","src":"4712:8:28","type":""},{"name":"value6_1","nodeType":"YulTypedName","src":"4722:8:28","type":""}]},{"nodeType":"YulAssignment","src":"4803:18:28","value":{"name":"value5_1","nodeType":"YulIdentifier","src":"4813:8:28"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"4803:6:28"}]},{"nodeType":"YulAssignment","src":"4830:18:28","value":{"name":"value6_1","nodeType":"YulIdentifier","src":"4840:8:28"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"4830:6:28"}]}]},"name":"abi_decode_tuple_t_addresst_struct$_DiamondSettings_$2340_memory_ptrt_array$_t_struct$_FacetCut_$2373_calldata_ptr_$dyn_calldata_ptrt_addresst_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3245:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3256:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3268:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3276:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3284:6:28","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3292:6:28","type":""},{"name":"value4","nodeType":"YulTypedName","src":"3300:6:28","type":""},{"name":"value5","nodeType":"YulTypedName","src":"3308:6:28","type":""},{"name":"value6","nodeType":"YulTypedName","src":"3316:6:28","type":""}],"src":"3074:1780:28"},{"body":{"nodeType":"YulBlock","src":"4929:116:28","statements":[{"body":{"nodeType":"YulBlock","src":"4975:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4984:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4987:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4977:6:28"},"nodeType":"YulFunctionCall","src":"4977:12:28"},"nodeType":"YulExpressionStatement","src":"4977:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4950:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"4959:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4946:3:28"},"nodeType":"YulFunctionCall","src":"4946:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"4971:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4942:3:28"},"nodeType":"YulFunctionCall","src":"4942:32:28"},"nodeType":"YulIf","src":"4939:52:28"},{"nodeType":"YulAssignment","src":"5000:39:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5029:9:28"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"5010:18:28"},"nodeType":"YulFunctionCall","src":"5010:29:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5000:6:28"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4895:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4906:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4918:6:28","type":""}],"src":"4859:186:28"},{"body":{"nodeType":"YulBlock","src":"5127:114:28","statements":[{"body":{"nodeType":"YulBlock","src":"5171:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5173:16:28"},"nodeType":"YulFunctionCall","src":"5173:18:28"},"nodeType":"YulExpressionStatement","src":"5173:18:28"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5143:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"5151:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5140:2:28"},"nodeType":"YulFunctionCall","src":"5140:30:28"},"nodeType":"YulIf","src":"5137:56:28"},{"nodeType":"YulAssignment","src":"5202:33:28","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5218:1:28","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"5221:6:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5214:3:28"},"nodeType":"YulFunctionCall","src":"5214:14:28"},{"kind":"number","nodeType":"YulLiteral","src":"5230:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5210:3:28"},"nodeType":"YulFunctionCall","src":"5210:25:28"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"5202:4:28"}]}]},"name":"array_allocation_size_array_struct_FacetCut_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"5107:6:28","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"5118:4:28","type":""}],"src":"5050:191:28"},{"body":{"nodeType":"YulBlock","src":"5430:2541:28","statements":[{"nodeType":"YulVariableDeclaration","src":"5440:83:28","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5515:6:28"}],"functionName":{"name":"array_allocation_size_array_struct_FacetCut_dyn","nodeType":"YulIdentifier","src":"5467:47:28"},"nodeType":"YulFunctionCall","src":"5467:55:28"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"5451:15:28"},"nodeType":"YulFunctionCall","src":"5451:72:28"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"5444:3:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5532:16:28","value":{"name":"dst","nodeType":"YulIdentifier","src":"5545:3:28"},"variables":[{"name":"dst_1","nodeType":"YulTypedName","src":"5536:5:28","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5564:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"5569:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5557:6:28"},"nodeType":"YulFunctionCall","src":"5557:19:28"},"nodeType":"YulExpressionStatement","src":"5557:19:28"},{"nodeType":"YulVariableDeclaration","src":"5585:14:28","value":{"kind":"number","nodeType":"YulLiteral","src":"5595:4:28","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"5589:2:28","type":""}]},{"nodeType":"YulAssignment","src":"5608:19:28","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5619:3:28"},{"name":"_1","nodeType":"YulIdentifier","src":"5624:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5615:3:28"},"nodeType":"YulFunctionCall","src":"5615:12:28"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"5608:3:28"}]},{"nodeType":"YulVariableDeclaration","src":"5636:11:28","value":{"kind":"number","nodeType":"YulLiteral","src":"5646:1:28","type":"","value":"5"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"5640:2:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5656:41:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5674:5:28"},{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"5685:2:28"},{"name":"length","nodeType":"YulIdentifier","src":"5689:6:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5681:3:28"},"nodeType":"YulFunctionCall","src":"5681:15:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5670:3:28"},"nodeType":"YulFunctionCall","src":"5670:27:28"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"5660:6:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"5736:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5745:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5748:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5738:6:28"},"nodeType":"YulFunctionCall","src":"5738:12:28"},"nodeType":"YulExpressionStatement","src":"5738:12:28"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"5712:6:28"},{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"5720:12:28"},"nodeType":"YulFunctionCall","src":"5720:14:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5709:2:28"},"nodeType":"YulFunctionCall","src":"5709:26:28"},"nodeType":"YulIf","src":"5706:46:28"},{"nodeType":"YulVariableDeclaration","src":"5761:16:28","value":{"name":"value","nodeType":"YulIdentifier","src":"5772:5:28"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"5765:3:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"5842:2096:28","statements":[{"nodeType":"YulVariableDeclaration","src":"5856:36:28","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5888:3:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5875:12:28"},"nodeType":"YulFunctionCall","src":"5875:17:28"},"variables":[{"name":"innerOffset","nodeType":"YulTypedName","src":"5860:11:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5905:28:28","value":{"kind":"number","nodeType":"YulLiteral","src":"5915:18:28","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"5909:2:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"5981:74:28","statements":[{"nodeType":"YulVariableDeclaration","src":"5999:11:28","value":{"kind":"number","nodeType":"YulLiteral","src":"6009:1:28","type":"","value":"0"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"6003:2:28","type":""}]},{"expression":{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"6034:2:28"},{"name":"_4","nodeType":"YulIdentifier","src":"6038:2:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6027:6:28"},"nodeType":"YulFunctionCall","src":"6027:14:28"},"nodeType":"YulExpressionStatement","src":"6027:14:28"}]},"condition":{"arguments":[{"name":"innerOffset","nodeType":"YulIdentifier","src":"5952:11:28"},{"name":"_3","nodeType":"YulIdentifier","src":"5965:2:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5949:2:28"},"nodeType":"YulFunctionCall","src":"5949:19:28"},"nodeType":"YulIf","src":"5946:109:28"},{"nodeType":"YulVariableDeclaration","src":"6068:33:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6082:5:28"},{"name":"innerOffset","nodeType":"YulIdentifier","src":"6089:11:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6078:3:28"},"nodeType":"YulFunctionCall","src":"6078:23:28"},"variables":[{"name":"_5","nodeType":"YulTypedName","src":"6072:2:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"6164:74:28","statements":[{"nodeType":"YulVariableDeclaration","src":"6182:11:28","value":{"kind":"number","nodeType":"YulLiteral","src":"6192:1:28","type":"","value":"0"},"variables":[{"name":"_6","nodeType":"YulTypedName","src":"6186:2:28","type":""}]},{"expression":{"arguments":[{"name":"_6","nodeType":"YulIdentifier","src":"6217:2:28"},{"name":"_6","nodeType":"YulIdentifier","src":"6221:2:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6210:6:28"},"nodeType":"YulFunctionCall","src":"6210:14:28"},"nodeType":"YulExpressionStatement","src":"6210:14:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"6125:12:28"},"nodeType":"YulFunctionCall","src":"6125:14:28"},{"name":"_5","nodeType":"YulIdentifier","src":"6141:2:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6121:3:28"},"nodeType":"YulFunctionCall","src":"6121:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"6146:4:28","type":"","value":"0x60"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6117:3:28"},"nodeType":"YulFunctionCall","src":"6117:34:28"},"nodeType":"YulIf","src":"6114:124:28"},{"nodeType":"YulVariableDeclaration","src":"6251:37:28","value":{"arguments":[],"functionName":{"name":"allocate_memory_3800","nodeType":"YulIdentifier","src":"6266:20:28"},"nodeType":"YulFunctionCall","src":"6266:22:28"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"6255:7:28","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"6308:7:28"},{"arguments":[{"name":"_5","nodeType":"YulIdentifier","src":"6336:2:28"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"6317:18:28"},"nodeType":"YulFunctionCall","src":"6317:22:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6301:6:28"},"nodeType":"YulFunctionCall","src":"6301:39:28"},"nodeType":"YulExpressionStatement","src":"6301:39:28"},{"nodeType":"YulVariableDeclaration","src":"6353:40:28","value":{"arguments":[{"arguments":[{"name":"_5","nodeType":"YulIdentifier","src":"6385:2:28"},{"name":"_1","nodeType":"YulIdentifier","src":"6389:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6381:3:28"},"nodeType":"YulFunctionCall","src":"6381:11:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6368:12:28"},"nodeType":"YulFunctionCall","src":"6368:25:28"},"variables":[{"name":"value_2","nodeType":"YulTypedName","src":"6357:7:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"6444:74:28","statements":[{"nodeType":"YulVariableDeclaration","src":"6462:11:28","value":{"kind":"number","nodeType":"YulLiteral","src":"6472:1:28","type":"","value":"0"},"variables":[{"name":"_7","nodeType":"YulTypedName","src":"6466:2:28","type":""}]},{"expression":{"arguments":[{"name":"_7","nodeType":"YulIdentifier","src":"6497:2:28"},{"name":"_7","nodeType":"YulIdentifier","src":"6501:2:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6490:6:28"},"nodeType":"YulFunctionCall","src":"6490:14:28"},"nodeType":"YulExpressionStatement","src":"6490:14:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value_2","nodeType":"YulIdentifier","src":"6419:7:28"},{"kind":"number","nodeType":"YulLiteral","src":"6428:1:28","type":"","value":"3"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6416:2:28"},"nodeType":"YulFunctionCall","src":"6416:14:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6409:6:28"},"nodeType":"YulFunctionCall","src":"6409:22:28"},"nodeType":"YulIf","src":"6406:112:28"},{"expression":{"arguments":[{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"6542:7:28"},{"name":"_1","nodeType":"YulIdentifier","src":"6551:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6538:3:28"},"nodeType":"YulFunctionCall","src":"6538:16:28"},{"name":"value_2","nodeType":"YulIdentifier","src":"6556:7:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6531:6:28"},"nodeType":"YulFunctionCall","src":"6531:33:28"},"nodeType":"YulExpressionStatement","src":"6531:33:28"},{"nodeType":"YulVariableDeclaration","src":"6577:12:28","value":{"kind":"number","nodeType":"YulLiteral","src":"6587:2:28","type":"","value":"64"},"variables":[{"name":"_8","nodeType":"YulTypedName","src":"6581:2:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6602:39:28","value":{"arguments":[{"arguments":[{"name":"_5","nodeType":"YulIdentifier","src":"6633:2:28"},{"name":"_8","nodeType":"YulIdentifier","src":"6637:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6629:3:28"},"nodeType":"YulFunctionCall","src":"6629:11:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6616:12:28"},"nodeType":"YulFunctionCall","src":"6616:25:28"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6606:6:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"6684:74:28","statements":[{"nodeType":"YulVariableDeclaration","src":"6702:11:28","value":{"kind":"number","nodeType":"YulLiteral","src":"6712:1:28","type":"","value":"0"},"variables":[{"name":"_9","nodeType":"YulTypedName","src":"6706:2:28","type":""}]},{"expression":{"arguments":[{"name":"_9","nodeType":"YulIdentifier","src":"6737:2:28"},{"name":"_9","nodeType":"YulIdentifier","src":"6741:2:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6730:6:28"},"nodeType":"YulFunctionCall","src":"6730:14:28"},"nodeType":"YulExpressionStatement","src":"6730:14:28"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6660:6:28"},{"name":"_3","nodeType":"YulIdentifier","src":"6668:2:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6657:2:28"},"nodeType":"YulFunctionCall","src":"6657:14:28"},"nodeType":"YulIf","src":"6654:104:28"},{"nodeType":"YulVariableDeclaration","src":"6771:26:28","value":{"arguments":[{"name":"_5","nodeType":"YulIdentifier","src":"6786:2:28"},{"name":"offset","nodeType":"YulIdentifier","src":"6790:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6782:3:28"},"nodeType":"YulFunctionCall","src":"6782:15:28"},"variables":[{"name":"_10","nodeType":"YulTypedName","src":"6775:3:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"6869:77:28","statements":[{"nodeType":"YulVariableDeclaration","src":"6887:12:28","value":{"kind":"number","nodeType":"YulLiteral","src":"6898:1:28","type":"","value":"0"},"variables":[{"name":"_11","nodeType":"YulTypedName","src":"6891:3:28","type":""}]},{"expression":{"arguments":[{"name":"_11","nodeType":"YulIdentifier","src":"6923:3:28"},{"name":"_11","nodeType":"YulIdentifier","src":"6928:3:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6916:6:28"},"nodeType":"YulFunctionCall","src":"6916:16:28"},"nodeType":"YulExpressionStatement","src":"6916:16:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_10","nodeType":"YulIdentifier","src":"6828:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"6833:4:28","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6824:3:28"},"nodeType":"YulFunctionCall","src":"6824:14:28"},{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"6840:12:28"},"nodeType":"YulFunctionCall","src":"6840:14:28"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6820:3:28"},"nodeType":"YulFunctionCall","src":"6820:35:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6813:6:28"},"nodeType":"YulFunctionCall","src":"6813:43:28"},"nodeType":"YulIf","src":"6810:136:28"},{"nodeType":"YulVariableDeclaration","src":"6959:28:28","value":{"arguments":[{"name":"_10","nodeType":"YulIdentifier","src":"6983:3:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6970:12:28"},"nodeType":"YulFunctionCall","src":"6970:17:28"},"variables":[{"name":"_12","nodeType":"YulTypedName","src":"6963:3:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7000:82:28","value":{"arguments":[{"arguments":[{"name":"_12","nodeType":"YulIdentifier","src":"7077:3:28"}],"functionName":{"name":"array_allocation_size_array_struct_FacetCut_dyn","nodeType":"YulIdentifier","src":"7029:47:28"},"nodeType":"YulFunctionCall","src":"7029:52:28"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"7013:15:28"},"nodeType":"YulFunctionCall","src":"7013:69:28"},"variables":[{"name":"dst_2","nodeType":"YulTypedName","src":"7004:5:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7095:18:28","value":{"name":"dst_2","nodeType":"YulIdentifier","src":"7108:5:28"},"variables":[{"name":"dst_3","nodeType":"YulTypedName","src":"7099:5:28","type":""}]},{"expression":{"arguments":[{"name":"dst_2","nodeType":"YulIdentifier","src":"7133:5:28"},{"name":"_12","nodeType":"YulIdentifier","src":"7140:3:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7126:6:28"},"nodeType":"YulFunctionCall","src":"7126:18:28"},"nodeType":"YulExpressionStatement","src":"7126:18:28"},{"nodeType":"YulAssignment","src":"7157:23:28","value":{"arguments":[{"name":"dst_2","nodeType":"YulIdentifier","src":"7170:5:28"},{"name":"_1","nodeType":"YulIdentifier","src":"7177:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7166:3:28"},"nodeType":"YulFunctionCall","src":"7166:14:28"},"variableNames":[{"name":"dst_2","nodeType":"YulIdentifier","src":"7157:5:28"}]},{"nodeType":"YulVariableDeclaration","src":"7193:47:28","value":{"arguments":[{"arguments":[{"name":"_10","nodeType":"YulIdentifier","src":"7217:3:28"},{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"7226:2:28"},{"name":"_12","nodeType":"YulIdentifier","src":"7230:3:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7222:3:28"},"nodeType":"YulFunctionCall","src":"7222:12:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7213:3:28"},"nodeType":"YulFunctionCall","src":"7213:22:28"},{"name":"_1","nodeType":"YulIdentifier","src":"7237:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7209:3:28"},"nodeType":"YulFunctionCall","src":"7209:31:28"},"variables":[{"name":"srcEnd_1","nodeType":"YulTypedName","src":"7197:8:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"7297:77:28","statements":[{"nodeType":"YulVariableDeclaration","src":"7315:12:28","value":{"kind":"number","nodeType":"YulLiteral","src":"7326:1:28","type":"","value":"0"},"variables":[{"name":"_13","nodeType":"YulTypedName","src":"7319:3:28","type":""}]},{"expression":{"arguments":[{"name":"_13","nodeType":"YulIdentifier","src":"7351:3:28"},{"name":"_13","nodeType":"YulIdentifier","src":"7356:3:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7344:6:28"},"nodeType":"YulFunctionCall","src":"7344:16:28"},"nodeType":"YulExpressionStatement","src":"7344:16:28"}]},"condition":{"arguments":[{"name":"srcEnd_1","nodeType":"YulIdentifier","src":"7259:8:28"},{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"7269:12:28"},"nodeType":"YulFunctionCall","src":"7269:14:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7256:2:28"},"nodeType":"YulFunctionCall","src":"7256:28:28"},"nodeType":"YulIf","src":"7253:121:28"},{"nodeType":"YulVariableDeclaration","src":"7387:25:28","value":{"arguments":[{"name":"_10","nodeType":"YulIdentifier","src":"7404:3:28"},{"name":"_1","nodeType":"YulIdentifier","src":"7409:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7400:3:28"},"nodeType":"YulFunctionCall","src":"7400:12:28"},"variables":[{"name":"src_1","nodeType":"YulTypedName","src":"7391:5:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"7493:326:28","statements":[{"nodeType":"YulVariableDeclaration","src":"7511:34:28","value":{"arguments":[{"name":"src_1","nodeType":"YulIdentifier","src":"7539:5:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7526:12:28"},"nodeType":"YulFunctionCall","src":"7526:19:28"},"variables":[{"name":"value_3","nodeType":"YulTypedName","src":"7515:7:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"7637:89:28","statements":[{"nodeType":"YulVariableDeclaration","src":"7659:12:28","value":{"kind":"number","nodeType":"YulLiteral","src":"7670:1:28","type":"","value":"0"},"variables":[{"name":"_14","nodeType":"YulTypedName","src":"7663:3:28","type":""}]},{"expression":{"arguments":[{"name":"_14","nodeType":"YulIdentifier","src":"7699:3:28"},{"name":"_14","nodeType":"YulIdentifier","src":"7704:3:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7692:6:28"},"nodeType":"YulFunctionCall","src":"7692:16:28"},"nodeType":"YulExpressionStatement","src":"7692:16:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value_3","nodeType":"YulIdentifier","src":"7575:7:28"},{"arguments":[{"name":"value_3","nodeType":"YulIdentifier","src":"7588:7:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7601:3:28","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"7606:10:28","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7597:3:28"},"nodeType":"YulFunctionCall","src":"7597:20:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7584:3:28"},"nodeType":"YulFunctionCall","src":"7584:34:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7572:2:28"},"nodeType":"YulFunctionCall","src":"7572:47:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7565:6:28"},"nodeType":"YulFunctionCall","src":"7565:55:28"},"nodeType":"YulIf","src":"7562:164:28"},{"expression":{"arguments":[{"name":"dst_2","nodeType":"YulIdentifier","src":"7750:5:28"},{"name":"value_3","nodeType":"YulIdentifier","src":"7757:7:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7743:6:28"},"nodeType":"YulFunctionCall","src":"7743:22:28"},"nodeType":"YulExpressionStatement","src":"7743:22:28"},{"nodeType":"YulAssignment","src":"7782:23:28","value":{"arguments":[{"name":"dst_2","nodeType":"YulIdentifier","src":"7795:5:28"},{"name":"_1","nodeType":"YulIdentifier","src":"7802:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7791:3:28"},"nodeType":"YulFunctionCall","src":"7791:14:28"},"variableNames":[{"name":"dst_2","nodeType":"YulIdentifier","src":"7782:5:28"}]}]},"condition":{"arguments":[{"name":"src_1","nodeType":"YulIdentifier","src":"7436:5:28"},{"name":"srcEnd_1","nodeType":"YulIdentifier","src":"7443:8:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7433:2:28"},"nodeType":"YulFunctionCall","src":"7433:19:28"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7453:27:28","statements":[{"nodeType":"YulAssignment","src":"7455:23:28","value":{"arguments":[{"name":"src_1","nodeType":"YulIdentifier","src":"7468:5:28"},{"name":"_1","nodeType":"YulIdentifier","src":"7475:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7464:3:28"},"nodeType":"YulFunctionCall","src":"7464:14:28"},"variableNames":[{"name":"src_1","nodeType":"YulIdentifier","src":"7455:5:28"}]}]},"pre":{"nodeType":"YulBlock","src":"7429:3:28","statements":[]},"src":"7425:394:28"},{"expression":{"arguments":[{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"7843:7:28"},{"name":"_8","nodeType":"YulIdentifier","src":"7852:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7839:3:28"},"nodeType":"YulFunctionCall","src":"7839:16:28"},{"name":"dst_3","nodeType":"YulIdentifier","src":"7857:5:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7832:6:28"},"nodeType":"YulFunctionCall","src":"7832:31:28"},"nodeType":"YulExpressionStatement","src":"7832:31:28"},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7883:3:28"},{"name":"value_1","nodeType":"YulIdentifier","src":"7888:7:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7876:6:28"},"nodeType":"YulFunctionCall","src":"7876:20:28"},"nodeType":"YulExpressionStatement","src":"7876:20:28"},{"nodeType":"YulAssignment","src":"7909:19:28","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7920:3:28"},{"name":"_1","nodeType":"YulIdentifier","src":"7925:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7916:3:28"},"nodeType":"YulFunctionCall","src":"7916:12:28"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"7909:3:28"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5797:3:28"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"5802:6:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5794:2:28"},"nodeType":"YulFunctionCall","src":"5794:15:28"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5810:23:28","statements":[{"nodeType":"YulAssignment","src":"5812:19:28","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5823:3:28"},{"name":"_1","nodeType":"YulIdentifier","src":"5828:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5819:3:28"},"nodeType":"YulFunctionCall","src":"5819:12:28"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"5812:3:28"}]}]},"pre":{"nodeType":"YulBlock","src":"5790:3:28","statements":[]},"src":"5786:2152:28"},{"nodeType":"YulAssignment","src":"7947:18:28","value":{"name":"dst_1","nodeType":"YulIdentifier","src":"7960:5:28"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"7947:9:28"}]}]},"name":"convert_array_t_array$_t_struct$_FacetCut_$2373_calldata_ptr_$dyn_calldata_ptr_to_t_array$_t_struct$_FacetCut_$2373_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5398:5:28","type":""},{"name":"length","nodeType":"YulTypedName","src":"5405:6:28","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"5416:9:28","type":""}],"src":"5246:2725:28"},{"body":{"nodeType":"YulBlock","src":"8168:64:28","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8185:3:28"},{"hexValue":"73796d626f6c","kind":"string","nodeType":"YulLiteral","src":"8190:8:28","type":"","value":"symbol"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8178:6:28"},"nodeType":"YulFunctionCall","src":"8178:21:28"},"nodeType":"YulExpressionStatement","src":"8178:21:28"},{"nodeType":"YulAssignment","src":"8208:18:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8219:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"8224:1:28","type":"","value":"6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8215:3:28"},"nodeType":"YulFunctionCall","src":"8215:11:28"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8208:3:28"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_be16b05c387bab9ac31918a3e61672f4618601f3c598a2f3f2710f37053e1ea4__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8152:3:28","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8160:3:28","type":""}],"src":"7976:256:28"},{"body":{"nodeType":"YulBlock","src":"8292:325:28","statements":[{"nodeType":"YulAssignment","src":"8302:22:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8316:1:28","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"8319:4:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"8312:3:28"},"nodeType":"YulFunctionCall","src":"8312:12:28"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8302:6:28"}]},{"nodeType":"YulVariableDeclaration","src":"8333:38:28","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8363:4:28"},{"kind":"number","nodeType":"YulLiteral","src":"8369:1:28","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8359:3:28"},"nodeType":"YulFunctionCall","src":"8359:12:28"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"8337:18:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"8410:31:28","statements":[{"nodeType":"YulAssignment","src":"8412:27:28","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8426:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"8434:4:28","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8422:3:28"},"nodeType":"YulFunctionCall","src":"8422:17:28"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8412:6:28"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"8390:18:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8383:6:28"},"nodeType":"YulFunctionCall","src":"8383:26:28"},"nodeType":"YulIf","src":"8380:61:28"},{"body":{"nodeType":"YulBlock","src":"8500:111:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8521:1:28","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8528:3:28","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"8533:10:28","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8524:3:28"},"nodeType":"YulFunctionCall","src":"8524:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8514:6:28"},"nodeType":"YulFunctionCall","src":"8514:31:28"},"nodeType":"YulExpressionStatement","src":"8514:31:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8565:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8568:4:28","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8558:6:28"},"nodeType":"YulFunctionCall","src":"8558:15:28"},"nodeType":"YulExpressionStatement","src":"8558:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8593:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8596:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8586:6:28"},"nodeType":"YulFunctionCall","src":"8586:15:28"},"nodeType":"YulExpressionStatement","src":"8586:15:28"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"8456:18:28"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8479:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"8487:2:28","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8476:2:28"},"nodeType":"YulFunctionCall","src":"8476:14:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8453:2:28"},"nodeType":"YulFunctionCall","src":"8453:38:28"},"nodeType":"YulIf","src":"8450:161:28"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"8272:4:28","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"8281:6:28","type":""}],"src":"8237:380:28"},{"body":{"nodeType":"YulBlock","src":"8678:65:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8695:1:28","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"8698:3:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8688:6:28"},"nodeType":"YulFunctionCall","src":"8688:14:28"},"nodeType":"YulExpressionStatement","src":"8688:14:28"},{"nodeType":"YulAssignment","src":"8711:26:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8729:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8732:4:28","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"8719:9:28"},"nodeType":"YulFunctionCall","src":"8719:18:28"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"8711:4:28"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"8661:3:28","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"8669:4:28","type":""}],"src":"8622:121:28"},{"body":{"nodeType":"YulBlock","src":"8829:464:28","statements":[{"body":{"nodeType":"YulBlock","src":"8862:425:28","statements":[{"nodeType":"YulVariableDeclaration","src":"8876:11:28","value":{"kind":"number","nodeType":"YulLiteral","src":"8886:1:28","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"8880:2:28","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"8907:2:28"},{"name":"array","nodeType":"YulIdentifier","src":"8911:5:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8900:6:28"},"nodeType":"YulFunctionCall","src":"8900:17:28"},"nodeType":"YulExpressionStatement","src":"8900:17:28"},{"nodeType":"YulVariableDeclaration","src":"8930:31:28","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"8952:2:28"},{"kind":"number","nodeType":"YulLiteral","src":"8956:4:28","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"8942:9:28"},"nodeType":"YulFunctionCall","src":"8942:19:28"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"8934:4:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8974:57:28","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8997:4:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9007:1:28","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"9014:10:28"},{"kind":"number","nodeType":"YulLiteral","src":"9026:2:28","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9010:3:28"},"nodeType":"YulFunctionCall","src":"9010:19:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"9003:3:28"},"nodeType":"YulFunctionCall","src":"9003:27:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8993:3:28"},"nodeType":"YulFunctionCall","src":"8993:38:28"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"8978:11:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"9068:23:28","statements":[{"nodeType":"YulAssignment","src":"9070:19:28","value":{"name":"data","nodeType":"YulIdentifier","src":"9085:4:28"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"9070:11:28"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"9050:10:28"},{"kind":"number","nodeType":"YulLiteral","src":"9062:4:28","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9047:2:28"},"nodeType":"YulFunctionCall","src":"9047:20:28"},"nodeType":"YulIf","src":"9044:47:28"},{"nodeType":"YulVariableDeclaration","src":"9104:41:28","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"9118:4:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9128:1:28","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"9135:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"9140:2:28","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9131:3:28"},"nodeType":"YulFunctionCall","src":"9131:12:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"9124:3:28"},"nodeType":"YulFunctionCall","src":"9124:20:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9114:3:28"},"nodeType":"YulFunctionCall","src":"9114:31:28"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"9108:2:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9158:24:28","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"9171:11:28"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"9162:5:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"9256:21:28","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"9265:5:28"},{"name":"_1","nodeType":"YulIdentifier","src":"9272:2:28"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"9258:6:28"},"nodeType":"YulFunctionCall","src":"9258:17:28"},"nodeType":"YulExpressionStatement","src":"9258:17:28"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"9206:5:28"},{"name":"_2","nodeType":"YulIdentifier","src":"9213:2:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9203:2:28"},"nodeType":"YulFunctionCall","src":"9203:13:28"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"9217:26:28","statements":[{"nodeType":"YulAssignment","src":"9219:22:28","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"9232:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"9239:1:28","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9228:3:28"},"nodeType":"YulFunctionCall","src":"9228:13:28"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"9219:5:28"}]}]},"pre":{"nodeType":"YulBlock","src":"9199:3:28","statements":[]},"src":"9195:82:28"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"8845:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"8850:2:28","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8842:2:28"},"nodeType":"YulFunctionCall","src":"8842:11:28"},"nodeType":"YulIf","src":"8839:448:28"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"8801:5:28","type":""},{"name":"len","nodeType":"YulTypedName","src":"8808:3:28","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"8813:10:28","type":""}],"src":"8748:545:28"},{"body":{"nodeType":"YulBlock","src":"9383:81:28","statements":[{"nodeType":"YulAssignment","src":"9393:65:28","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"9408:4:28"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9426:1:28","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"9429:3:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9422:3:28"},"nodeType":"YulFunctionCall","src":"9422:11:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9439:1:28","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"9435:3:28"},"nodeType":"YulFunctionCall","src":"9435:6:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"9418:3:28"},"nodeType":"YulFunctionCall","src":"9418:24:28"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"9414:3:28"},"nodeType":"YulFunctionCall","src":"9414:29:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9404:3:28"},"nodeType":"YulFunctionCall","src":"9404:40:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9450:1:28","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"9453:3:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9446:3:28"},"nodeType":"YulFunctionCall","src":"9446:11:28"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"9401:2:28"},"nodeType":"YulFunctionCall","src":"9401:57:28"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"9393:4:28"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"9360:4:28","type":""},{"name":"len","nodeType":"YulTypedName","src":"9366:3:28","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"9374:4:28","type":""}],"src":"9298:166:28"},{"body":{"nodeType":"YulBlock","src":"9565:1256:28","statements":[{"nodeType":"YulVariableDeclaration","src":"9575:24:28","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9595:3:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9589:5:28"},"nodeType":"YulFunctionCall","src":"9589:10:28"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"9579:6:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"9642:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"9644:16:28"},"nodeType":"YulFunctionCall","src":"9644:18:28"},"nodeType":"YulExpressionStatement","src":"9644:18:28"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"9614:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"9622:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9611:2:28"},"nodeType":"YulFunctionCall","src":"9611:30:28"},"nodeType":"YulIf","src":"9608:56:28"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"9717:4:28"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"9755:4:28"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"9749:5:28"},"nodeType":"YulFunctionCall","src":"9749:11:28"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"9723:25:28"},"nodeType":"YulFunctionCall","src":"9723:38:28"},{"name":"newLen","nodeType":"YulIdentifier","src":"9763:6:28"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"9673:43:28"},"nodeType":"YulFunctionCall","src":"9673:97:28"},"nodeType":"YulExpressionStatement","src":"9673:97:28"},{"nodeType":"YulVariableDeclaration","src":"9779:18:28","value":{"kind":"number","nodeType":"YulLiteral","src":"9796:1:28","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"9783:9:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9806:23:28","value":{"kind":"number","nodeType":"YulLiteral","src":"9825:4:28","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"9810:11:28","type":""}]},{"nodeType":"YulAssignment","src":"9838:24:28","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"9851:11:28"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"9838:9:28"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"9908:656:28","statements":[{"nodeType":"YulVariableDeclaration","src":"9922:35:28","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"9941:6:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9953:2:28","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"9949:3:28"},"nodeType":"YulFunctionCall","src":"9949:7:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9937:3:28"},"nodeType":"YulFunctionCall","src":"9937:20:28"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"9926:7:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9970:49:28","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"10014:4:28"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"9984:29:28"},"nodeType":"YulFunctionCall","src":"9984:35:28"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"9974:6:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"10032:10:28","value":{"kind":"number","nodeType":"YulLiteral","src":"10041:1:28","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"10036:1:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"10119:172:28","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"10144:6:28"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10162:3:28"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"10167:9:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10158:3:28"},"nodeType":"YulFunctionCall","src":"10158:19:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10152:5:28"},"nodeType":"YulFunctionCall","src":"10152:26:28"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"10137:6:28"},"nodeType":"YulFunctionCall","src":"10137:42:28"},"nodeType":"YulExpressionStatement","src":"10137:42:28"},{"nodeType":"YulAssignment","src":"10196:24:28","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"10210:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"10218:1:28","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10206:3:28"},"nodeType":"YulFunctionCall","src":"10206:14:28"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"10196:6:28"}]},{"nodeType":"YulAssignment","src":"10237:40:28","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"10254:9:28"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"10265:11:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10250:3:28"},"nodeType":"YulFunctionCall","src":"10250:27:28"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"10237:9:28"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10066:1:28"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"10069:7:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10063:2:28"},"nodeType":"YulFunctionCall","src":"10063:14:28"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"10078:28:28","statements":[{"nodeType":"YulAssignment","src":"10080:24:28","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10089:1:28"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"10092:11:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10085:3:28"},"nodeType":"YulFunctionCall","src":"10085:19:28"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"10080:1:28"}]}]},"pre":{"nodeType":"YulBlock","src":"10059:3:28","statements":[]},"src":"10055:236:28"},{"body":{"nodeType":"YulBlock","src":"10339:166:28","statements":[{"nodeType":"YulVariableDeclaration","src":"10357:43:28","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10384:3:28"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"10389:9:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10380:3:28"},"nodeType":"YulFunctionCall","src":"10380:19:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10374:5:28"},"nodeType":"YulFunctionCall","src":"10374:26:28"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"10361:9:28","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"10424:6:28"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"10436:9:28"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10463:1:28","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"10466:6:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10459:3:28"},"nodeType":"YulFunctionCall","src":"10459:14:28"},{"kind":"number","nodeType":"YulLiteral","src":"10475:3:28","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10455:3:28"},"nodeType":"YulFunctionCall","src":"10455:24:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10485:1:28","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"10481:3:28"},"nodeType":"YulFunctionCall","src":"10481:6:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"10451:3:28"},"nodeType":"YulFunctionCall","src":"10451:37:28"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"10447:3:28"},"nodeType":"YulFunctionCall","src":"10447:42:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10432:3:28"},"nodeType":"YulFunctionCall","src":"10432:58:28"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"10417:6:28"},"nodeType":"YulFunctionCall","src":"10417:74:28"},"nodeType":"YulExpressionStatement","src":"10417:74:28"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"10310:7:28"},{"name":"newLen","nodeType":"YulIdentifier","src":"10319:6:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10307:2:28"},"nodeType":"YulFunctionCall","src":"10307:19:28"},"nodeType":"YulIf","src":"10304:201:28"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"10525:4:28"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10539:1:28","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"10542:6:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10535:3:28"},"nodeType":"YulFunctionCall","src":"10535:14:28"},{"kind":"number","nodeType":"YulLiteral","src":"10551:1:28","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10531:3:28"},"nodeType":"YulFunctionCall","src":"10531:22:28"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"10518:6:28"},"nodeType":"YulFunctionCall","src":"10518:36:28"},"nodeType":"YulExpressionStatement","src":"10518:36:28"}]},"nodeType":"YulCase","src":"9901:663:28","value":{"kind":"number","nodeType":"YulLiteral","src":"9906:1:28","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"10581:234:28","statements":[{"nodeType":"YulVariableDeclaration","src":"10595:14:28","value":{"kind":"number","nodeType":"YulLiteral","src":"10608:1:28","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"10599:5:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"10644:67:28","statements":[{"nodeType":"YulAssignment","src":"10662:35:28","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10681:3:28"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"10686:9:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10677:3:28"},"nodeType":"YulFunctionCall","src":"10677:19:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10671:5:28"},"nodeType":"YulFunctionCall","src":"10671:26:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"10662:5:28"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"10625:6:28"},"nodeType":"YulIf","src":"10622:89:28"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"10731:4:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10790:5:28"},{"name":"newLen","nodeType":"YulIdentifier","src":"10797:6:28"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"10737:52:28"},"nodeType":"YulFunctionCall","src":"10737:67:28"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"10724:6:28"},"nodeType":"YulFunctionCall","src":"10724:81:28"},"nodeType":"YulExpressionStatement","src":"10724:81:28"}]},"nodeType":"YulCase","src":"10573:242:28","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"9881:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"9889:2:28","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9878:2:28"},"nodeType":"YulFunctionCall","src":"9878:14:28"},"nodeType":"YulSwitch","src":"9871:944:28"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"9550:4:28","type":""},{"name":"src","nodeType":"YulTypedName","src":"9556:3:28","type":""}],"src":"9469:1352:28"},{"body":{"nodeType":"YulBlock","src":"11018:62:28","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11035:3:28"},{"hexValue":"6e616d65","kind":"string","nodeType":"YulLiteral","src":"11040:6:28","type":"","value":"name"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11028:6:28"},"nodeType":"YulFunctionCall","src":"11028:19:28"},"nodeType":"YulExpressionStatement","src":"11028:19:28"},{"nodeType":"YulAssignment","src":"11056:18:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11067:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"11072:1:28","type":"","value":"4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11063:3:28"},"nodeType":"YulFunctionCall","src":"11063:11:28"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11056:3:28"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_2361458367e696363fbcc70777d07ebbd2394e89fd0adcaf147faccd1d294d60__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11002:3:28","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11010:3:28","type":""}],"src":"10826:254:28"},{"body":{"nodeType":"YulBlock","src":"11193:101:28","statements":[{"nodeType":"YulAssignment","src":"11203:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11215:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"11226:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11211:3:28"},"nodeType":"YulFunctionCall","src":"11211:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11203:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11245:9:28"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11260:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"11268:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11256:3:28"},"nodeType":"YulFunctionCall","src":"11256:31:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11238:6:28"},"nodeType":"YulFunctionCall","src":"11238:50:28"},"nodeType":"YulExpressionStatement","src":"11238:50:28"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11162:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11173:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11184:4:28","type":""}],"src":"11085:209:28"},{"body":{"nodeType":"YulBlock","src":"11331:95:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11348:1:28","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11355:3:28","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"11360:10:28","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11351:3:28"},"nodeType":"YulFunctionCall","src":"11351:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11341:6:28"},"nodeType":"YulFunctionCall","src":"11341:31:28"},"nodeType":"YulExpressionStatement","src":"11341:31:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11388:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11391:4:28","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11381:6:28"},"nodeType":"YulFunctionCall","src":"11381:15:28"},"nodeType":"YulExpressionStatement","src":"11381:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11412:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11415:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11405:6:28"},"nodeType":"YulFunctionCall","src":"11405:15:28"},"nodeType":"YulExpressionStatement","src":"11405:15:28"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"11299:127:28"},{"body":{"nodeType":"YulBlock","src":"11463:95:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11480:1:28","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11487:3:28","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"11492:10:28","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11483:3:28"},"nodeType":"YulFunctionCall","src":"11483:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11473:6:28"},"nodeType":"YulFunctionCall","src":"11473:31:28"},"nodeType":"YulExpressionStatement","src":"11473:31:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11520:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11523:4:28","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11513:6:28"},"nodeType":"YulFunctionCall","src":"11513:15:28"},"nodeType":"YulExpressionStatement","src":"11513:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11544:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11547:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11537:6:28"},"nodeType":"YulFunctionCall","src":"11537:15:28"},"nodeType":"YulExpressionStatement","src":"11537:15:28"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"11431:127:28"},{"body":{"nodeType":"YulBlock","src":"11737:229:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11754:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"11765:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11747:6:28"},"nodeType":"YulFunctionCall","src":"11747:21:28"},"nodeType":"YulExpressionStatement","src":"11747:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11788:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"11799:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11784:3:28"},"nodeType":"YulFunctionCall","src":"11784:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"11804:2:28","type":"","value":"39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11777:6:28"},"nodeType":"YulFunctionCall","src":"11777:30:28"},"nodeType":"YulExpressionStatement","src":"11777:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11827:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"11838:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11823:3:28"},"nodeType":"YulFunctionCall","src":"11823:18:28"},{"hexValue":"4c69624469616d6f6e644375743a20496e636f72726563742046616365744375","kind":"string","nodeType":"YulLiteral","src":"11843:34:28","type":"","value":"LibDiamondCut: Incorrect FacetCu"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11816:6:28"},"nodeType":"YulFunctionCall","src":"11816:62:28"},"nodeType":"YulExpressionStatement","src":"11816:62:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11898:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"11909:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11894:3:28"},"nodeType":"YulFunctionCall","src":"11894:18:28"},{"hexValue":"74416374696f6e","kind":"string","nodeType":"YulLiteral","src":"11914:9:28","type":"","value":"tAction"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11887:6:28"},"nodeType":"YulFunctionCall","src":"11887:37:28"},"nodeType":"YulExpressionStatement","src":"11887:37:28"},{"nodeType":"YulAssignment","src":"11933:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11945:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"11956:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11941:3:28"},"nodeType":"YulFunctionCall","src":"11941:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11933:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_48267d8daf5ea9c6bbad1fe9c53dc4c04a2a01b2b85bad432956cf42f45b2f54__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11714:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11728:4:28","type":""}],"src":"11563:403:28"},{"body":{"nodeType":"YulBlock","src":"12003:95:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12020:1:28","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12027:3:28","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"12032:10:28","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12023:3:28"},"nodeType":"YulFunctionCall","src":"12023:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12013:6:28"},"nodeType":"YulFunctionCall","src":"12013:31:28"},"nodeType":"YulExpressionStatement","src":"12013:31:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12060:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12063:4:28","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12053:6:28"},"nodeType":"YulFunctionCall","src":"12053:15:28"},"nodeType":"YulExpressionStatement","src":"12053:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12084:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12087:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12077:6:28"},"nodeType":"YulFunctionCall","src":"12077:15:28"},"nodeType":"YulExpressionStatement","src":"12077:15:28"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"11971:127:28"},{"body":{"nodeType":"YulBlock","src":"12150:88:28","statements":[{"body":{"nodeType":"YulBlock","src":"12181:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"12183:16:28"},"nodeType":"YulFunctionCall","src":"12183:18:28"},"nodeType":"YulExpressionStatement","src":"12183:18:28"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12166:5:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12177:1:28","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"12173:3:28"},"nodeType":"YulFunctionCall","src":"12173:6:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"12163:2:28"},"nodeType":"YulFunctionCall","src":"12163:17:28"},"nodeType":"YulIf","src":"12160:43:28"},{"nodeType":"YulAssignment","src":"12212:20:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12223:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"12230:1:28","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12219:3:28"},"nodeType":"YulFunctionCall","src":"12219:13:28"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"12212:3:28"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12132:5:28","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"12142:3:28","type":""}],"src":"12103:135:28"},{"body":{"nodeType":"YulBlock","src":"12309:184:28","statements":[{"nodeType":"YulVariableDeclaration","src":"12319:10:28","value":{"kind":"number","nodeType":"YulLiteral","src":"12328:1:28","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"12323:1:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"12388:63:28","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"12413:3:28"},{"name":"i","nodeType":"YulIdentifier","src":"12418:1:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12409:3:28"},"nodeType":"YulFunctionCall","src":"12409:11:28"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"12432:3:28"},{"name":"i","nodeType":"YulIdentifier","src":"12437:1:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12428:3:28"},"nodeType":"YulFunctionCall","src":"12428:11:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12422:5:28"},"nodeType":"YulFunctionCall","src":"12422:18:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12402:6:28"},"nodeType":"YulFunctionCall","src":"12402:39:28"},"nodeType":"YulExpressionStatement","src":"12402:39:28"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"12349:1:28"},{"name":"length","nodeType":"YulIdentifier","src":"12352:6:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12346:2:28"},"nodeType":"YulFunctionCall","src":"12346:13:28"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"12360:19:28","statements":[{"nodeType":"YulAssignment","src":"12362:15:28","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"12371:1:28"},{"kind":"number","nodeType":"YulLiteral","src":"12374:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12367:3:28"},"nodeType":"YulFunctionCall","src":"12367:10:28"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"12362:1:28"}]}]},"pre":{"nodeType":"YulBlock","src":"12342:3:28","statements":[]},"src":"12338:113:28"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"12471:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"12476:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12467:3:28"},"nodeType":"YulFunctionCall","src":"12467:16:28"},{"kind":"number","nodeType":"YulLiteral","src":"12485:1:28","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12460:6:28"},"nodeType":"YulFunctionCall","src":"12460:27:28"},"nodeType":"YulExpressionStatement","src":"12460:27:28"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"12287:3:28","type":""},{"name":"dst","nodeType":"YulTypedName","src":"12292:3:28","type":""},{"name":"length","nodeType":"YulTypedName","src":"12297:6:28","type":""}],"src":"12243:250:28"},{"body":{"nodeType":"YulBlock","src":"12547:221:28","statements":[{"nodeType":"YulVariableDeclaration","src":"12557:26:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12577:5:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12571:5:28"},"nodeType":"YulFunctionCall","src":"12571:12:28"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"12561:6:28","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12599:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"12604:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12592:6:28"},"nodeType":"YulFunctionCall","src":"12592:19:28"},"nodeType":"YulExpressionStatement","src":"12592:19:28"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12659:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"12666:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12655:3:28"},"nodeType":"YulFunctionCall","src":"12655:16:28"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12677:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"12682:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12673:3:28"},"nodeType":"YulFunctionCall","src":"12673:14:28"},{"name":"length","nodeType":"YulIdentifier","src":"12689:6:28"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"12620:34:28"},"nodeType":"YulFunctionCall","src":"12620:76:28"},"nodeType":"YulExpressionStatement","src":"12620:76:28"},{"nodeType":"YulAssignment","src":"12705:57:28","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12720:3:28"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12733:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"12741:2:28","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12729:3:28"},"nodeType":"YulFunctionCall","src":"12729:15:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12750:2:28","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"12746:3:28"},"nodeType":"YulFunctionCall","src":"12746:7:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12725:3:28"},"nodeType":"YulFunctionCall","src":"12725:29:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12716:3:28"},"nodeType":"YulFunctionCall","src":"12716:39:28"},{"kind":"number","nodeType":"YulLiteral","src":"12757:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12712:3:28"},"nodeType":"YulFunctionCall","src":"12712:50:28"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12705:3:28"}]}]},"name":"abi_encode_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12524:5:28","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12531:3:28","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12539:3:28","type":""}],"src":"12498:270:28"},{"body":{"nodeType":"YulBlock","src":"13050:1813:28","statements":[{"nodeType":"YulVariableDeclaration","src":"13060:12:28","value":{"kind":"number","nodeType":"YulLiteral","src":"13070:2:28","type":"","value":"96"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"13064:2:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13081:32:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13099:9:28"},{"name":"_1","nodeType":"YulIdentifier","src":"13110:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13095:3:28"},"nodeType":"YulFunctionCall","src":"13095:18:28"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"13085:6:28","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13129:9:28"},{"name":"_1","nodeType":"YulIdentifier","src":"13140:2:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13122:6:28"},"nodeType":"YulFunctionCall","src":"13122:21:28"},"nodeType":"YulExpressionStatement","src":"13122:21:28"},{"nodeType":"YulVariableDeclaration","src":"13152:17:28","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"13163:6:28"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"13156:3:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13178:27:28","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13198:6:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13192:5:28"},"nodeType":"YulFunctionCall","src":"13192:13:28"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"13182:6:28","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"13221:6:28"},{"name":"length","nodeType":"YulIdentifier","src":"13229:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13214:6:28"},"nodeType":"YulFunctionCall","src":"13214:22:28"},"nodeType":"YulExpressionStatement","src":"13214:22:28"},{"nodeType":"YulVariableDeclaration","src":"13245:13:28","value":{"kind":"number","nodeType":"YulLiteral","src":"13255:3:28","type":"","value":"128"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"13249:2:28","type":""}]},{"nodeType":"YulAssignment","src":"13267:25:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13278:9:28"},{"name":"_2","nodeType":"YulIdentifier","src":"13289:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13274:3:28"},"nodeType":"YulFunctionCall","src":"13274:18:28"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13267:3:28"}]},{"nodeType":"YulVariableDeclaration","src":"13301:53:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13323:9:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13338:1:28","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"13341:6:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"13334:3:28"},"nodeType":"YulFunctionCall","src":"13334:14:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13319:3:28"},"nodeType":"YulFunctionCall","src":"13319:30:28"},{"name":"_2","nodeType":"YulIdentifier","src":"13351:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13315:3:28"},"nodeType":"YulFunctionCall","src":"13315:39:28"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"13305:6:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13363:14:28","value":{"kind":"number","nodeType":"YulLiteral","src":"13373:4:28","type":"","value":"0x20"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"13367:2:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13386:29:28","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13404:6:28"},{"name":"_3","nodeType":"YulIdentifier","src":"13412:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13400:3:28"},"nodeType":"YulFunctionCall","src":"13400:15:28"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"13390:6:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13424:10:28","value":{"kind":"number","nodeType":"YulLiteral","src":"13433:1:28","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"13428:1:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"13492:1200:28","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13513:3:28"},{"arguments":[{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"13526:6:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"13534:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13522:3:28"},"nodeType":"YulFunctionCall","src":"13522:22:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13550:3:28","type":"","value":"127"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"13546:3:28"},"nodeType":"YulFunctionCall","src":"13546:8:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13518:3:28"},"nodeType":"YulFunctionCall","src":"13518:37:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13506:6:28"},"nodeType":"YulFunctionCall","src":"13506:50:28"},"nodeType":"YulExpressionStatement","src":"13506:50:28"},{"nodeType":"YulVariableDeclaration","src":"13569:23:28","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"13585:6:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13579:5:28"},"nodeType":"YulFunctionCall","src":"13579:13:28"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"13573:2:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13605:29:28","value":{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"13623:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"13631:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13619:3:28"},"nodeType":"YulFunctionCall","src":"13619:15:28"},"variables":[{"name":"tail_3","nodeType":"YulTypedName","src":"13609:6:28","type":""}]},{"expression":{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"13654:6:28"},{"arguments":[{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"13672:2:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13666:5:28"},"nodeType":"YulFunctionCall","src":"13666:9:28"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13685:3:28","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"13690:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"13681:3:28"},"nodeType":"YulFunctionCall","src":"13681:11:28"},{"kind":"number","nodeType":"YulLiteral","src":"13694:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13677:3:28"},"nodeType":"YulFunctionCall","src":"13677:19:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13662:3:28"},"nodeType":"YulFunctionCall","src":"13662:35:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13647:6:28"},"nodeType":"YulFunctionCall","src":"13647:51:28"},"nodeType":"YulExpressionStatement","src":"13647:51:28"},{"nodeType":"YulVariableDeclaration","src":"13711:38:28","value":{"arguments":[{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"13741:2:28"},{"name":"_3","nodeType":"YulIdentifier","src":"13745:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13737:3:28"},"nodeType":"YulFunctionCall","src":"13737:11:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13731:5:28"},"nodeType":"YulFunctionCall","src":"13731:18:28"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"13715:12:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"13805:127:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13830:1:28","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13837:3:28","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"13842:10:28","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"13833:3:28"},"nodeType":"YulFunctionCall","src":"13833:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13823:6:28"},"nodeType":"YulFunctionCall","src":"13823:31:28"},"nodeType":"YulExpressionStatement","src":"13823:31:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13878:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"13881:4:28","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13871:6:28"},"nodeType":"YulFunctionCall","src":"13871:15:28"},"nodeType":"YulExpressionStatement","src":"13871:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13910:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13913:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13903:6:28"},"nodeType":"YulFunctionCall","src":"13903:15:28"},"nodeType":"YulExpressionStatement","src":"13903:15:28"}]},"condition":{"arguments":[{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"13775:12:28"},{"kind":"number","nodeType":"YulLiteral","src":"13789:1:28","type":"","value":"3"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13772:2:28"},"nodeType":"YulFunctionCall","src":"13772:19:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13765:6:28"},"nodeType":"YulFunctionCall","src":"13765:27:28"},"nodeType":"YulIf","src":"13762:170:28"},{"expression":{"arguments":[{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"13956:6:28"},{"name":"_3","nodeType":"YulIdentifier","src":"13964:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13952:3:28"},"nodeType":"YulFunctionCall","src":"13952:15:28"},{"name":"memberValue0","nodeType":"YulIdentifier","src":"13969:12:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13945:6:28"},"nodeType":"YulFunctionCall","src":"13945:37:28"},"nodeType":"YulExpressionStatement","src":"13945:37:28"},{"nodeType":"YulVariableDeclaration","src":"13995:14:28","value":{"kind":"number","nodeType":"YulLiteral","src":"14005:4:28","type":"","value":"0x40"},"variables":[{"name":"_5","nodeType":"YulTypedName","src":"13999:2:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14022:40:28","value":{"arguments":[{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"14054:2:28"},{"name":"_5","nodeType":"YulIdentifier","src":"14058:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14050:3:28"},"nodeType":"YulFunctionCall","src":"14050:11:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14044:5:28"},"nodeType":"YulFunctionCall","src":"14044:18:28"},"variables":[{"name":"memberValue0_1","nodeType":"YulTypedName","src":"14026:14:28","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"14086:6:28"},{"name":"_5","nodeType":"YulIdentifier","src":"14094:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14082:3:28"},"nodeType":"YulFunctionCall","src":"14082:15:28"},{"name":"_1","nodeType":"YulIdentifier","src":"14099:2:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14075:6:28"},"nodeType":"YulFunctionCall","src":"14075:27:28"},"nodeType":"YulExpressionStatement","src":"14075:27:28"},{"nodeType":"YulVariableDeclaration","src":"14115:19:28","value":{"name":"tail_3","nodeType":"YulIdentifier","src":"14128:6:28"},"variables":[{"name":"pos_1","nodeType":"YulTypedName","src":"14119:5:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14147:37:28","value":{"arguments":[{"name":"memberValue0_1","nodeType":"YulIdentifier","src":"14169:14:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14163:5:28"},"nodeType":"YulFunctionCall","src":"14163:21:28"},"variables":[{"name":"length_1","nodeType":"YulTypedName","src":"14151:8:28","type":""}]},{"expression":{"arguments":[{"name":"tail_3","nodeType":"YulIdentifier","src":"14204:6:28"},{"name":"length_1","nodeType":"YulIdentifier","src":"14212:8:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14197:6:28"},"nodeType":"YulFunctionCall","src":"14197:24:28"},"nodeType":"YulExpressionStatement","src":"14197:24:28"},{"nodeType":"YulAssignment","src":"14234:24:28","value":{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"14247:6:28"},{"name":"_2","nodeType":"YulIdentifier","src":"14255:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14243:3:28"},"nodeType":"YulFunctionCall","src":"14243:15:28"},"variableNames":[{"name":"pos_1","nodeType":"YulIdentifier","src":"14234:5:28"}]},{"nodeType":"YulVariableDeclaration","src":"14271:39:28","value":{"arguments":[{"name":"memberValue0_1","nodeType":"YulIdentifier","src":"14291:14:28"},{"name":"_3","nodeType":"YulIdentifier","src":"14307:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14287:3:28"},"nodeType":"YulFunctionCall","src":"14287:23:28"},"variables":[{"name":"srcPtr_1","nodeType":"YulTypedName","src":"14275:8:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14323:12:28","value":{"kind":"number","nodeType":"YulLiteral","src":"14334:1:28","type":"","value":"0"},"variables":[{"name":"i_1","nodeType":"YulTypedName","src":"14327:3:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"14409:175:28","statements":[{"expression":{"arguments":[{"name":"pos_1","nodeType":"YulIdentifier","src":"14434:5:28"},{"arguments":[{"arguments":[{"name":"srcPtr_1","nodeType":"YulIdentifier","src":"14451:8:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14445:5:28"},"nodeType":"YulFunctionCall","src":"14445:15:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14466:3:28","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"14471:10:28","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"14462:3:28"},"nodeType":"YulFunctionCall","src":"14462:20:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14441:3:28"},"nodeType":"YulFunctionCall","src":"14441:42:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14427:6:28"},"nodeType":"YulFunctionCall","src":"14427:57:28"},"nodeType":"YulExpressionStatement","src":"14427:57:28"},{"nodeType":"YulAssignment","src":"14501:23:28","value":{"arguments":[{"name":"pos_1","nodeType":"YulIdentifier","src":"14514:5:28"},{"name":"_3","nodeType":"YulIdentifier","src":"14521:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14510:3:28"},"nodeType":"YulFunctionCall","src":"14510:14:28"},"variableNames":[{"name":"pos_1","nodeType":"YulIdentifier","src":"14501:5:28"}]},{"nodeType":"YulAssignment","src":"14541:29:28","value":{"arguments":[{"name":"srcPtr_1","nodeType":"YulIdentifier","src":"14557:8:28"},{"name":"_3","nodeType":"YulIdentifier","src":"14567:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14553:3:28"},"nodeType":"YulFunctionCall","src":"14553:17:28"},"variableNames":[{"name":"srcPtr_1","nodeType":"YulIdentifier","src":"14541:8:28"}]}]},"condition":{"arguments":[{"name":"i_1","nodeType":"YulIdentifier","src":"14359:3:28"},{"name":"length_1","nodeType":"YulIdentifier","src":"14364:8:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"14356:2:28"},"nodeType":"YulFunctionCall","src":"14356:17:28"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"14374:22:28","statements":[{"nodeType":"YulAssignment","src":"14376:18:28","value":{"arguments":[{"name":"i_1","nodeType":"YulIdentifier","src":"14387:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"14392:1:28","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14383:3:28"},"nodeType":"YulFunctionCall","src":"14383:11:28"},"variableNames":[{"name":"i_1","nodeType":"YulIdentifier","src":"14376:3:28"}]}]},"pre":{"nodeType":"YulBlock","src":"14352:3:28","statements":[]},"src":"14348:236:28"},{"nodeType":"YulAssignment","src":"14597:15:28","value":{"name":"pos_1","nodeType":"YulIdentifier","src":"14607:5:28"},"variableNames":[{"name":"tail_2","nodeType":"YulIdentifier","src":"14597:6:28"}]},{"nodeType":"YulAssignment","src":"14625:25:28","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"14639:6:28"},{"name":"_3","nodeType":"YulIdentifier","src":"14647:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14635:3:28"},"nodeType":"YulFunctionCall","src":"14635:15:28"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"14625:6:28"}]},{"nodeType":"YulAssignment","src":"14663:19:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14674:3:28"},{"name":"_3","nodeType":"YulIdentifier","src":"14679:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14670:3:28"},"nodeType":"YulFunctionCall","src":"14670:12:28"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14663:3:28"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"13454:1:28"},{"name":"length","nodeType":"YulIdentifier","src":"13457:6:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13451:2:28"},"nodeType":"YulFunctionCall","src":"13451:13:28"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"13465:18:28","statements":[{"nodeType":"YulAssignment","src":"13467:14:28","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"13476:1:28"},{"kind":"number","nodeType":"YulLiteral","src":"13479:1:28","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13472:3:28"},"nodeType":"YulFunctionCall","src":"13472:9:28"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"13467:1:28"}]}]},"pre":{"nodeType":"YulBlock","src":"13447:3:28","statements":[]},"src":"13443:1249:28"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14720:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14732:9:28"},{"name":"_3","nodeType":"YulIdentifier","src":"14743:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14728:3:28"},"nodeType":"YulFunctionCall","src":"14728:18:28"}],"functionName":{"name":"abi_encode_address","nodeType":"YulIdentifier","src":"14701:18:28"},"nodeType":"YulFunctionCall","src":"14701:46:28"},"nodeType":"YulExpressionStatement","src":"14701:46:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14767:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"14778:4:28","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14763:3:28"},"nodeType":"YulFunctionCall","src":"14763:20:28"},{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"14789:6:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"14797:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14785:3:28"},"nodeType":"YulFunctionCall","src":"14785:22:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14756:6:28"},"nodeType":"YulFunctionCall","src":"14756:52:28"},"nodeType":"YulExpressionStatement","src":"14756:52:28"},{"nodeType":"YulAssignment","src":"14817:40:28","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"14842:6:28"},{"name":"tail_2","nodeType":"YulIdentifier","src":"14850:6:28"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"14825:16:28"},"nodeType":"YulFunctionCall","src":"14825:32:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14817:4:28"}]}]},"name":"abi_encode_tuple_t_array$_t_struct$_FacetCut_$2373_memory_ptr_$dyn_memory_ptr_t_address_t_bytes_memory_ptr__to_t_array$_t_struct$_FacetCut_$2373_memory_ptr_$dyn_memory_ptr_t_address_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13003:9:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13014:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13022:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13030:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13041:4:28","type":""}],"src":"12773:2090:28"},{"body":{"nodeType":"YulBlock","src":"15042:230:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15059:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"15070:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15052:6:28"},"nodeType":"YulFunctionCall","src":"15052:21:28"},"nodeType":"YulExpressionStatement","src":"15052:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15093:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"15104:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15089:3:28"},"nodeType":"YulFunctionCall","src":"15089:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"15109:2:28","type":"","value":"40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15082:6:28"},"nodeType":"YulFunctionCall","src":"15082:30:28"},"nodeType":"YulExpressionStatement","src":"15082:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15132:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"15143:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15128:3:28"},"nodeType":"YulFunctionCall","src":"15128:18:28"},{"hexValue":"4c69624469616d6f6e643a2054696d656c6f636b20616c726561647920696e69","kind":"string","nodeType":"YulLiteral","src":"15148:34:28","type":"","value":"LibDiamond: Timelock already ini"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15121:6:28"},"nodeType":"YulFunctionCall","src":"15121:62:28"},"nodeType":"YulExpressionStatement","src":"15121:62:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15203:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"15214:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15199:3:28"},"nodeType":"YulFunctionCall","src":"15199:18:28"},{"hexValue":"7469616c697a6564","kind":"string","nodeType":"YulLiteral","src":"15219:10:28","type":"","value":"tialized"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15192:6:28"},"nodeType":"YulFunctionCall","src":"15192:38:28"},"nodeType":"YulExpressionStatement","src":"15192:38:28"},{"nodeType":"YulAssignment","src":"15239:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15251:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"15262:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15247:3:28"},"nodeType":"YulFunctionCall","src":"15247:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15239:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_9ce02b7f4f50d9d7f1e7739e5e866ff5614c1b018b3bd10f25d604b80fcb0a4a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15019:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15033:4:28","type":""}],"src":"14868:404:28"},{"body":{"nodeType":"YulBlock","src":"15451:224:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15468:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"15479:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15461:6:28"},"nodeType":"YulFunctionCall","src":"15461:21:28"},"nodeType":"YulExpressionStatement","src":"15461:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15502:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"15513:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15498:3:28"},"nodeType":"YulFunctionCall","src":"15498:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"15518:2:28","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15491:6:28"},"nodeType":"YulFunctionCall","src":"15491:30:28"},"nodeType":"YulExpressionStatement","src":"15491:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15541:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"15552:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15537:3:28"},"nodeType":"YulFunctionCall","src":"15537:18:28"},{"hexValue":"4c69624469616d6f6e643a204d75737420626520636f6e7472616374206f776e","kind":"string","nodeType":"YulLiteral","src":"15557:34:28","type":"","value":"LibDiamond: Must be contract own"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15530:6:28"},"nodeType":"YulFunctionCall","src":"15530:62:28"},"nodeType":"YulExpressionStatement","src":"15530:62:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15612:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"15623:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15608:3:28"},"nodeType":"YulFunctionCall","src":"15608:18:28"},{"hexValue":"6572","kind":"string","nodeType":"YulLiteral","src":"15628:4:28","type":"","value":"er"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15601:6:28"},"nodeType":"YulFunctionCall","src":"15601:32:28"},"nodeType":"YulExpressionStatement","src":"15601:32:28"},{"nodeType":"YulAssignment","src":"15642:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15654:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"15665:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15650:3:28"},"nodeType":"YulFunctionCall","src":"15650:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15642:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_0d4ae41009c51fd276653a54d7793c24f266ddc8c56ce21f8be5e2c6595ab3ac__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15428:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15442:4:28","type":""}],"src":"15277:398:28"},{"body":{"nodeType":"YulBlock","src":"15854:233:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15871:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"15882:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15864:6:28"},"nodeType":"YulFunctionCall","src":"15864:21:28"},"nodeType":"YulExpressionStatement","src":"15864:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15905:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"15916:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15901:3:28"},"nodeType":"YulFunctionCall","src":"15901:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"15921:2:28","type":"","value":"43"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15894:6:28"},"nodeType":"YulFunctionCall","src":"15894:30:28"},"nodeType":"YulExpressionStatement","src":"15894:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15944:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"15955:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15940:3:28"},"nodeType":"YulFunctionCall","src":"15940:18:28"},{"hexValue":"4c69624469616d6f6e644375743a204e6f2073656c6563746f727320696e2066","kind":"string","nodeType":"YulLiteral","src":"15960:34:28","type":"","value":"LibDiamondCut: No selectors in f"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15933:6:28"},"nodeType":"YulFunctionCall","src":"15933:62:28"},"nodeType":"YulExpressionStatement","src":"15933:62:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16015:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"16026:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16011:3:28"},"nodeType":"YulFunctionCall","src":"16011:18:28"},{"hexValue":"6163657420746f20637574","kind":"string","nodeType":"YulLiteral","src":"16031:13:28","type":"","value":"acet to cut"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16004:6:28"},"nodeType":"YulFunctionCall","src":"16004:41:28"},"nodeType":"YulExpressionStatement","src":"16004:41:28"},{"nodeType":"YulAssignment","src":"16054:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16066:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"16077:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16062:3:28"},"nodeType":"YulFunctionCall","src":"16062:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16054:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_1ffc682bcfedefd5e93ba9ed0c2d1bc0b18319886e3b4bd28a03a3d3729f85c0__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15831:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15845:4:28","type":""}],"src":"15680:407:28"},{"body":{"nodeType":"YulBlock","src":"16266:234:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16283:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"16294:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16276:6:28"},"nodeType":"YulFunctionCall","src":"16276:21:28"},"nodeType":"YulExpressionStatement","src":"16276:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16317:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"16328:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16313:3:28"},"nodeType":"YulFunctionCall","src":"16313:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"16333:2:28","type":"","value":"44"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16306:6:28"},"nodeType":"YulFunctionCall","src":"16306:30:28"},"nodeType":"YulExpressionStatement","src":"16306:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16356:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"16367:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16352:3:28"},"nodeType":"YulFunctionCall","src":"16352:18:28"},{"hexValue":"4c69624469616d6f6e644375743a204164642066616365742063616e27742062","kind":"string","nodeType":"YulLiteral","src":"16372:34:28","type":"","value":"LibDiamondCut: Add facet can't b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16345:6:28"},"nodeType":"YulFunctionCall","src":"16345:62:28"},"nodeType":"YulExpressionStatement","src":"16345:62:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16427:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"16438:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16423:3:28"},"nodeType":"YulFunctionCall","src":"16423:18:28"},{"hexValue":"652061646472657373283029","kind":"string","nodeType":"YulLiteral","src":"16443:14:28","type":"","value":"e address(0)"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16416:6:28"},"nodeType":"YulFunctionCall","src":"16416:42:28"},"nodeType":"YulExpressionStatement","src":"16416:42:28"},{"nodeType":"YulAssignment","src":"16467:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16479:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"16490:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16475:3:28"},"nodeType":"YulFunctionCall","src":"16475:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16467:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_64609d8b93c93a06b98d7db7a87b04044cd4a52c5661d603bb9b90ad8b914a3a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16243:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16257:4:28","type":""}],"src":"16092:408:28"},{"body":{"nodeType":"YulBlock","src":"16679:243:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16696:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"16707:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16689:6:28"},"nodeType":"YulFunctionCall","src":"16689:21:28"},"nodeType":"YulExpressionStatement","src":"16689:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16730:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"16741:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16726:3:28"},"nodeType":"YulFunctionCall","src":"16726:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"16746:2:28","type":"","value":"53"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16719:6:28"},"nodeType":"YulFunctionCall","src":"16719:30:28"},"nodeType":"YulExpressionStatement","src":"16719:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16769:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"16780:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16765:3:28"},"nodeType":"YulFunctionCall","src":"16765:18:28"},{"hexValue":"4c69624469616d6f6e644375743a2043616e2774206164642066756e6374696f","kind":"string","nodeType":"YulLiteral","src":"16785:34:28","type":"","value":"LibDiamondCut: Can't add functio"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16758:6:28"},"nodeType":"YulFunctionCall","src":"16758:62:28"},"nodeType":"YulExpressionStatement","src":"16758:62:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16840:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"16851:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16836:3:28"},"nodeType":"YulFunctionCall","src":"16836:18:28"},{"hexValue":"6e207468617420616c726561647920657869737473","kind":"string","nodeType":"YulLiteral","src":"16856:23:28","type":"","value":"n that already exists"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16829:6:28"},"nodeType":"YulFunctionCall","src":"16829:51:28"},"nodeType":"YulExpressionStatement","src":"16829:51:28"},{"nodeType":"YulAssignment","src":"16889:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16901:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"16912:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16897:3:28"},"nodeType":"YulFunctionCall","src":"16897:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16889:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_99a7418ee014d613f46da44561258cdbb58064508097483a319062b99fa37700__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16656:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16670:4:28","type":""}],"src":"16505:417:28"},{"body":{"nodeType":"YulBlock","src":"16973:171:28","statements":[{"nodeType":"YulVariableDeclaration","src":"16983:36:28","value":{"kind":"number","nodeType":"YulLiteral","src":"16993:26:28","type":"","value":"0xffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"16987:2:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"17028:29:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17047:5:28"},{"name":"_1","nodeType":"YulIdentifier","src":"17054:2:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17043:3:28"},"nodeType":"YulFunctionCall","src":"17043:14:28"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"17032:7:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"17085:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"17087:16:28"},"nodeType":"YulFunctionCall","src":"17087:18:28"},"nodeType":"YulExpressionStatement","src":"17087:18:28"}]},"condition":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"17072:7:28"},{"name":"_1","nodeType":"YulIdentifier","src":"17081:2:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"17069:2:28"},"nodeType":"YulFunctionCall","src":"17069:15:28"},"nodeType":"YulIf","src":"17066:41:28"},{"nodeType":"YulAssignment","src":"17116:22:28","value":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"17127:7:28"},{"kind":"number","nodeType":"YulLiteral","src":"17136:1:28","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17123:3:28"},"nodeType":"YulFunctionCall","src":"17123:15:28"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"17116:3:28"}]}]},"name":"increment_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16955:5:28","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"16965:3:28","type":""}],"src":"16927:217:28"},{"body":{"nodeType":"YulBlock","src":"17323:246:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17340:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"17351:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17333:6:28"},"nodeType":"YulFunctionCall","src":"17333:21:28"},"nodeType":"YulExpressionStatement","src":"17333:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17374:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"17385:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17370:3:28"},"nodeType":"YulFunctionCall","src":"17370:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"17390:2:28","type":"","value":"56"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17363:6:28"},"nodeType":"YulFunctionCall","src":"17363:30:28"},"nodeType":"YulExpressionStatement","src":"17363:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17413:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"17424:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17409:3:28"},"nodeType":"YulFunctionCall","src":"17409:18:28"},{"hexValue":"4c69624469616d6f6e644375743a2043616e2774207265706c6163652066756e","kind":"string","nodeType":"YulLiteral","src":"17429:34:28","type":"","value":"LibDiamondCut: Can't replace fun"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17402:6:28"},"nodeType":"YulFunctionCall","src":"17402:62:28"},"nodeType":"YulExpressionStatement","src":"17402:62:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17484:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"17495:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17480:3:28"},"nodeType":"YulFunctionCall","src":"17480:18:28"},{"hexValue":"6374696f6e20776974682073616d652066756e6374696f6e","kind":"string","nodeType":"YulLiteral","src":"17500:26:28","type":"","value":"ction with same function"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17473:6:28"},"nodeType":"YulFunctionCall","src":"17473:54:28"},"nodeType":"YulExpressionStatement","src":"17473:54:28"},{"nodeType":"YulAssignment","src":"17536:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17548:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"17559:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17544:3:28"},"nodeType":"YulFunctionCall","src":"17544:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17536:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_b5a7112edf707196456f338fdcc19cd849be6cb8c0d166bcd035f4cfb00e7078__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17300:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17314:4:28","type":""}],"src":"17149:420:28"},{"body":{"nodeType":"YulBlock","src":"17748:244:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17765:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"17776:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17758:6:28"},"nodeType":"YulFunctionCall","src":"17758:21:28"},"nodeType":"YulExpressionStatement","src":"17758:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17799:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"17810:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17795:3:28"},"nodeType":"YulFunctionCall","src":"17795:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"17815:2:28","type":"","value":"54"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17788:6:28"},"nodeType":"YulFunctionCall","src":"17788:30:28"},"nodeType":"YulExpressionStatement","src":"17788:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17838:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"17849:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17834:3:28"},"nodeType":"YulFunctionCall","src":"17834:18:28"},{"hexValue":"4c69624469616d6f6e644375743a2052656d6f76652066616365742061646472","kind":"string","nodeType":"YulLiteral","src":"17854:34:28","type":"","value":"LibDiamondCut: Remove facet addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17827:6:28"},"nodeType":"YulFunctionCall","src":"17827:62:28"},"nodeType":"YulExpressionStatement","src":"17827:62:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17909:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"17920:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17905:3:28"},"nodeType":"YulFunctionCall","src":"17905:18:28"},{"hexValue":"657373206d7573742062652061646472657373283029","kind":"string","nodeType":"YulLiteral","src":"17925:24:28","type":"","value":"ess must be address(0)"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17898:6:28"},"nodeType":"YulFunctionCall","src":"17898:52:28"},"nodeType":"YulExpressionStatement","src":"17898:52:28"},{"nodeType":"YulAssignment","src":"17959:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17971:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"17982:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17967:3:28"},"nodeType":"YulFunctionCall","src":"17967:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17959:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_b739aae768f79b96e91d9f66398733516895e39eb09ee54a795b49dcc77504d4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17725:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17739:4:28","type":""}],"src":"17574:418:28"},{"body":{"nodeType":"YulBlock","src":"18171:250:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18188:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"18199:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18181:6:28"},"nodeType":"YulFunctionCall","src":"18181:21:28"},"nodeType":"YulExpressionStatement","src":"18181:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18222:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"18233:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18218:3:28"},"nodeType":"YulFunctionCall","src":"18218:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"18238:2:28","type":"","value":"60"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18211:6:28"},"nodeType":"YulFunctionCall","src":"18211:30:28"},"nodeType":"YulExpressionStatement","src":"18211:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18261:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"18272:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18257:3:28"},"nodeType":"YulFunctionCall","src":"18257:18:28"},{"hexValue":"4c69624469616d6f6e644375743a205f696e6974206973206164647265737328","kind":"string","nodeType":"YulLiteral","src":"18277:34:28","type":"","value":"LibDiamondCut: _init is address("}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18250:6:28"},"nodeType":"YulFunctionCall","src":"18250:62:28"},"nodeType":"YulExpressionStatement","src":"18250:62:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18332:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"18343:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18328:3:28"},"nodeType":"YulFunctionCall","src":"18328:18:28"},{"hexValue":"3029206275745f63616c6c64617461206973206e6f7420656d707479","kind":"string","nodeType":"YulLiteral","src":"18348:30:28","type":"","value":"0) but_calldata is not empty"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18321:6:28"},"nodeType":"YulFunctionCall","src":"18321:58:28"},"nodeType":"YulExpressionStatement","src":"18321:58:28"},{"nodeType":"YulAssignment","src":"18388:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18400:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"18411:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18396:3:28"},"nodeType":"YulFunctionCall","src":"18396:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18388:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_046c761a688d1dc3c500562bc5aaa3544f01f394f9bb3b69aa2a950a45afb1f8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18148:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18162:4:28","type":""}],"src":"17997:424:28"},{"body":{"nodeType":"YulBlock","src":"18600:251:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18617:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"18628:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18610:6:28"},"nodeType":"YulFunctionCall","src":"18610:21:28"},"nodeType":"YulExpressionStatement","src":"18610:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18651:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"18662:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18647:3:28"},"nodeType":"YulFunctionCall","src":"18647:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"18667:2:28","type":"","value":"61"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18640:6:28"},"nodeType":"YulFunctionCall","src":"18640:30:28"},"nodeType":"YulExpressionStatement","src":"18640:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18690:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"18701:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18686:3:28"},"nodeType":"YulFunctionCall","src":"18686:18:28"},{"hexValue":"4c69624469616d6f6e644375743a205f63616c6c6461746120697320656d7074","kind":"string","nodeType":"YulLiteral","src":"18706:34:28","type":"","value":"LibDiamondCut: _calldata is empt"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18679:6:28"},"nodeType":"YulFunctionCall","src":"18679:62:28"},"nodeType":"YulExpressionStatement","src":"18679:62:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18761:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"18772:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18757:3:28"},"nodeType":"YulFunctionCall","src":"18757:18:28"},{"hexValue":"7920627574205f696e6974206973206e6f742061646472657373283029","kind":"string","nodeType":"YulLiteral","src":"18777:31:28","type":"","value":"y but _init is not address(0)"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18750:6:28"},"nodeType":"YulFunctionCall","src":"18750:59:28"},"nodeType":"YulExpressionStatement","src":"18750:59:28"},{"nodeType":"YulAssignment","src":"18818:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18830:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"18841:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18826:3:28"},"nodeType":"YulFunctionCall","src":"18826:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18818:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_868d165ec2461661b624442252aed6a645399bfae7b60083a77ea1b61b084042__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18577:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18591:4:28","type":""}],"src":"18426:425:28"},{"body":{"nodeType":"YulBlock","src":"18993:150:28","statements":[{"nodeType":"YulVariableDeclaration","src":"19003:27:28","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19023:6:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19017:5:28"},"nodeType":"YulFunctionCall","src":"19017:13:28"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"19007:6:28","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19078:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"19086:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19074:3:28"},"nodeType":"YulFunctionCall","src":"19074:17:28"},{"name":"pos","nodeType":"YulIdentifier","src":"19093:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"19098:6:28"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"19039:34:28"},"nodeType":"YulFunctionCall","src":"19039:66:28"},"nodeType":"YulExpressionStatement","src":"19039:66:28"},{"nodeType":"YulAssignment","src":"19114:23:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19125:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"19130:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19121:3:28"},"nodeType":"YulFunctionCall","src":"19121:16:28"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19114:3:28"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18969:3:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18974:6:28","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18985:3:28","type":""}],"src":"18856:287:28"},{"body":{"nodeType":"YulBlock","src":"19269:98:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19286:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"19297:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19279:6:28"},"nodeType":"YulFunctionCall","src":"19279:21:28"},"nodeType":"YulExpressionStatement","src":"19279:21:28"},{"nodeType":"YulAssignment","src":"19309:52:28","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19334:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19346:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"19357:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19342:3:28"},"nodeType":"YulFunctionCall","src":"19342:18:28"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"19317:16:28"},"nodeType":"YulFunctionCall","src":"19317:44:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19309:4:28"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19238:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19249:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19260:4:28","type":""}],"src":"19148:219:28"},{"body":{"nodeType":"YulBlock","src":"19546:228:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19563:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"19574:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19556:6:28"},"nodeType":"YulFunctionCall","src":"19556:21:28"},"nodeType":"YulExpressionStatement","src":"19556:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19597:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"19608:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19593:3:28"},"nodeType":"YulFunctionCall","src":"19593:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"19613:2:28","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19586:6:28"},"nodeType":"YulFunctionCall","src":"19586:30:28"},"nodeType":"YulExpressionStatement","src":"19586:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19636:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"19647:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19632:3:28"},"nodeType":"YulFunctionCall","src":"19632:18:28"},{"hexValue":"4c69624469616d6f6e644375743a205f696e69742066756e6374696f6e207265","kind":"string","nodeType":"YulLiteral","src":"19652:34:28","type":"","value":"LibDiamondCut: _init function re"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19625:6:28"},"nodeType":"YulFunctionCall","src":"19625:62:28"},"nodeType":"YulExpressionStatement","src":"19625:62:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19707:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"19718:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19703:3:28"},"nodeType":"YulFunctionCall","src":"19703:18:28"},{"hexValue":"766572746564","kind":"string","nodeType":"YulLiteral","src":"19723:8:28","type":"","value":"verted"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19696:6:28"},"nodeType":"YulFunctionCall","src":"19696:36:28"},"nodeType":"YulExpressionStatement","src":"19696:36:28"},{"nodeType":"YulAssignment","src":"19741:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19753:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"19764:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19749:3:28"},"nodeType":"YulFunctionCall","src":"19749:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19741:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_080b2fe78815767d522290509c8fce2af708c8a54455ca1b0cc978c92822465d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19523:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19537:4:28","type":""}],"src":"19372:402:28"},{"body":{"nodeType":"YulBlock","src":"19953:245:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19970:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"19981:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19963:6:28"},"nodeType":"YulFunctionCall","src":"19963:21:28"},"nodeType":"YulExpressionStatement","src":"19963:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20004:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"20015:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20000:3:28"},"nodeType":"YulFunctionCall","src":"20000:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"20020:2:28","type":"","value":"55"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19993:6:28"},"nodeType":"YulFunctionCall","src":"19993:30:28"},"nodeType":"YulExpressionStatement","src":"19993:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20043:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"20054:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20039:3:28"},"nodeType":"YulFunctionCall","src":"20039:18:28"},{"hexValue":"4c69624469616d6f6e644375743a2043616e27742072656d6f76652066756e63","kind":"string","nodeType":"YulLiteral","src":"20059:34:28","type":"","value":"LibDiamondCut: Can't remove func"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20032:6:28"},"nodeType":"YulFunctionCall","src":"20032:62:28"},"nodeType":"YulExpressionStatement","src":"20032:62:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20114:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"20125:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20110:3:28"},"nodeType":"YulFunctionCall","src":"20110:18:28"},{"hexValue":"74696f6e207468617420646f65736e2774206578697374","kind":"string","nodeType":"YulLiteral","src":"20130:25:28","type":"","value":"tion that doesn't exist"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20103:6:28"},"nodeType":"YulFunctionCall","src":"20103:53:28"},"nodeType":"YulExpressionStatement","src":"20103:53:28"},{"nodeType":"YulAssignment","src":"20165:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20177:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"20188:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20173:3:28"},"nodeType":"YulFunctionCall","src":"20173:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20165:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_2c590e498c4d56c984a7092fd5e89a68b9f4541ce9f97252fb74e44a00ffbb71__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19930:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19944:4:28","type":""}],"src":"19779:419:28"},{"body":{"nodeType":"YulBlock","src":"20377:236:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20394:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"20405:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20387:6:28"},"nodeType":"YulFunctionCall","src":"20387:21:28"},"nodeType":"YulExpressionStatement","src":"20387:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20428:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"20439:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20424:3:28"},"nodeType":"YulFunctionCall","src":"20424:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"20444:2:28","type":"","value":"46"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20417:6:28"},"nodeType":"YulFunctionCall","src":"20417:30:28"},"nodeType":"YulExpressionStatement","src":"20417:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20467:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"20478:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20463:3:28"},"nodeType":"YulFunctionCall","src":"20463:18:28"},{"hexValue":"4c69624469616d6f6e644375743a2043616e27742072656d6f766520696d6d75","kind":"string","nodeType":"YulLiteral","src":"20483:34:28","type":"","value":"LibDiamondCut: Can't remove immu"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20456:6:28"},"nodeType":"YulFunctionCall","src":"20456:62:28"},"nodeType":"YulExpressionStatement","src":"20456:62:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20538:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"20549:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20534:3:28"},"nodeType":"YulFunctionCall","src":"20534:18:28"},{"hexValue":"7461626c652066756e6374696f6e","kind":"string","nodeType":"YulLiteral","src":"20554:16:28","type":"","value":"table function"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20527:6:28"},"nodeType":"YulFunctionCall","src":"20527:44:28"},"nodeType":"YulExpressionStatement","src":"20527:44:28"},{"nodeType":"YulAssignment","src":"20580:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20592:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"20603:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20588:3:28"},"nodeType":"YulFunctionCall","src":"20588:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20580:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_8ba063dfaa4be2d2cbe73dbb1364728b0f7031ac048441d5fad19e9541992b21__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20354:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20368:4:28","type":""}],"src":"20203:410:28"},{"body":{"nodeType":"YulBlock","src":"20667:79:28","statements":[{"nodeType":"YulAssignment","src":"20677:17:28","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"20689:1:28"},{"name":"y","nodeType":"YulIdentifier","src":"20692:1:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20685:3:28"},"nodeType":"YulFunctionCall","src":"20685:9:28"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"20677:4:28"}]},{"body":{"nodeType":"YulBlock","src":"20718:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"20720:16:28"},"nodeType":"YulFunctionCall","src":"20720:18:28"},"nodeType":"YulExpressionStatement","src":"20720:18:28"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"20709:4:28"},{"name":"x","nodeType":"YulIdentifier","src":"20715:1:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"20706:2:28"},"nodeType":"YulFunctionCall","src":"20706:11:28"},"nodeType":"YulIf","src":"20703:37:28"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"20649:1:28","type":""},{"name":"y","nodeType":"YulTypedName","src":"20652:1:28","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"20658:4:28","type":""}],"src":"20618:128:28"},{"body":{"nodeType":"YulBlock","src":"20783:95:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20800:1:28","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20807:3:28","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"20812:10:28","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"20803:3:28"},"nodeType":"YulFunctionCall","src":"20803:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20793:6:28"},"nodeType":"YulFunctionCall","src":"20793:31:28"},"nodeType":"YulExpressionStatement","src":"20793:31:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20840:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"20843:4:28","type":"","value":"0x31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20833:6:28"},"nodeType":"YulFunctionCall","src":"20833:15:28"},"nodeType":"YulExpressionStatement","src":"20833:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20864:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20867:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20857:6:28"},"nodeType":"YulFunctionCall","src":"20857:15:28"},"nodeType":"YulExpressionStatement","src":"20857:15:28"}]},"name":"panic_error_0x31","nodeType":"YulFunctionDefinition","src":"20751:127:28"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_stringliteral_6e6486aeb9db70da259b7171a739046119facaec2d8a6bd46f1145fe8391014a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Diamond: Function does not exist\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_address(value, pos)\n    {\n        mstore(pos, and(value, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory_3797() -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, 160)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function allocate_memory_3800() -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, 0x60)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(array_1, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(array_1, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(array_1, _1), 0x20), 0)\n        array := array_1\n    }\n    function abi_decode_array_struct_FacetCut_calldata_dyn_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, shl(5, length)), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_bytes_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_struct$_DiamondSettings_$2340_memory_ptrt_array$_t_struct$_FacetCut_$2373_calldata_ptr_$dyn_calldata_ptrt_addresst_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if slt(sub(dataEnd, _2), 160) { revert(0, 0) }\n        let value := allocate_memory_3797()\n        mstore(value, abi_decode_address(_2))\n        mstore(add(value, 32), abi_decode_address(add(_2, 32)))\n        mstore(add(value, 64), abi_decode_address(add(_2, 64)))\n        let offset_1 := calldataload(add(_2, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        mstore(add(value, 96), abi_decode_string(add(_2, offset_1), dataEnd))\n        let offset_2 := calldataload(add(_2, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        mstore(add(value, 128), abi_decode_string(add(_2, offset_2), dataEnd))\n        value1 := value\n        let offset_3 := calldataload(add(headStart, 64))\n        if gt(offset_3, _1) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_array_struct_FacetCut_calldata_dyn_calldata(add(headStart, offset_3), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n        value4 := abi_decode_address(add(headStart, 96))\n        let offset_4 := calldataload(add(headStart, 128))\n        if gt(offset_4, _1) { revert(0, 0) }\n        let value5_1, value6_1 := abi_decode_bytes_calldata(add(headStart, offset_4), dataEnd)\n        value5 := value5_1\n        value6 := value6_1\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function array_allocation_size_array_struct_FacetCut_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function convert_array_t_array$_t_struct$_FacetCut_$2373_calldata_ptr_$dyn_calldata_ptr_to_t_array$_t_struct$_FacetCut_$2373_memory_ptr_$dyn_memory_ptr(value, length) -> converted\n    {\n        let dst := allocate_memory(array_allocation_size_array_struct_FacetCut_dyn(length))\n        let dst_1 := dst\n        mstore(dst, length)\n        let _1 := 0x20\n        dst := add(dst, _1)\n        let _2 := 5\n        let srcEnd := add(value, shl(_2, length))\n        if gt(srcEnd, calldatasize()) { revert(0, 0) }\n        let src := value\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            let innerOffset := calldataload(src)\n            let _3 := 0xffffffffffffffff\n            if gt(innerOffset, _3)\n            {\n                let _4 := 0\n                revert(_4, _4)\n            }\n            let _5 := add(value, innerOffset)\n            if slt(sub(calldatasize(), _5), 0x60)\n            {\n                let _6 := 0\n                revert(_6, _6)\n            }\n            let value_1 := allocate_memory_3800()\n            mstore(value_1, abi_decode_address(_5))\n            let value_2 := calldataload(add(_5, _1))\n            if iszero(lt(value_2, 3))\n            {\n                let _7 := 0\n                revert(_7, _7)\n            }\n            mstore(add(value_1, _1), value_2)\n            let _8 := 64\n            let offset := calldataload(add(_5, _8))\n            if gt(offset, _3)\n            {\n                let _9 := 0\n                revert(_9, _9)\n            }\n            let _10 := add(_5, offset)\n            if iszero(slt(add(_10, 0x1f), calldatasize()))\n            {\n                let _11 := 0\n                revert(_11, _11)\n            }\n            let _12 := calldataload(_10)\n            let dst_2 := allocate_memory(array_allocation_size_array_struct_FacetCut_dyn(_12))\n            let dst_3 := dst_2\n            mstore(dst_2, _12)\n            dst_2 := add(dst_2, _1)\n            let srcEnd_1 := add(add(_10, shl(_2, _12)), _1)\n            if gt(srcEnd_1, calldatasize())\n            {\n                let _13 := 0\n                revert(_13, _13)\n            }\n            let src_1 := add(_10, _1)\n            for { } lt(src_1, srcEnd_1) { src_1 := add(src_1, _1) }\n            {\n                let value_3 := calldataload(src_1)\n                if iszero(eq(value_3, and(value_3, shl(224, 0xffffffff))))\n                {\n                    let _14 := 0\n                    revert(_14, _14)\n                }\n                mstore(dst_2, value_3)\n                dst_2 := add(dst_2, _1)\n            }\n            mstore(add(value_1, _8), dst_3)\n            mstore(dst, value_1)\n            dst := add(dst, _1)\n        }\n        converted := dst_1\n    }\n    function abi_encode_tuple_packed_t_stringliteral_be16b05c387bab9ac31918a3e61672f4618601f3c598a2f3f2710f37053e1ea4__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"symbol\")\n        end := add(pos, 6)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_packed_t_stringliteral_2361458367e696363fbcc70777d07ebbd2394e89fd0adcaf147faccd1d294d60__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"name\")\n        end := add(pos, 4)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_48267d8daf5ea9c6bbad1fe9c53dc4c04a2a01b2b85bad432956cf42f45b2f54__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"LibDiamondCut: Incorrect FacetCu\")\n        mstore(add(headStart, 96), \"tAction\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_array$_t_struct$_FacetCut_$2373_memory_ptr_$dyn_memory_ptr_t_address_t_bytes_memory_ptr__to_t_array$_t_struct$_FacetCut_$2373_memory_ptr_$dyn_memory_ptr_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        let _1 := 96\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        let _2 := 128\n        pos := add(headStart, _2)\n        let tail_2 := add(add(headStart, shl(5, length)), _2)\n        let _3 := 0x20\n        let srcPtr := add(value0, _3)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, add(sub(tail_2, headStart), not(127)))\n            let _4 := mload(srcPtr)\n            let tail_3 := add(tail_2, _1)\n            mstore(tail_2, and(mload(_4), sub(shl(160, 1), 1)))\n            let memberValue0 := mload(add(_4, _3))\n            if iszero(lt(memberValue0, 3))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x21)\n                revert(0, 0x24)\n            }\n            mstore(add(tail_2, _3), memberValue0)\n            let _5 := 0x40\n            let memberValue0_1 := mload(add(_4, _5))\n            mstore(add(tail_2, _5), _1)\n            let pos_1 := tail_3\n            let length_1 := mload(memberValue0_1)\n            mstore(tail_3, length_1)\n            pos_1 := add(tail_2, _2)\n            let srcPtr_1 := add(memberValue0_1, _3)\n            let i_1 := 0\n            for { } lt(i_1, length_1) { i_1 := add(i_1, 1) }\n            {\n                mstore(pos_1, and(mload(srcPtr_1), shl(224, 0xffffffff)))\n                pos_1 := add(pos_1, _3)\n                srcPtr_1 := add(srcPtr_1, _3)\n            }\n            tail_2 := pos_1\n            srcPtr := add(srcPtr, _3)\n            pos := add(pos, _3)\n        }\n        abi_encode_address(value1, add(headStart, _3))\n        mstore(add(headStart, 0x40), sub(tail_2, headStart))\n        tail := abi_encode_bytes(value2, tail_2)\n    }\n    function abi_encode_tuple_t_stringliteral_9ce02b7f4f50d9d7f1e7739e5e866ff5614c1b018b3bd10f25d604b80fcb0a4a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"LibDiamond: Timelock already ini\")\n        mstore(add(headStart, 96), \"tialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0d4ae41009c51fd276653a54d7793c24f266ddc8c56ce21f8be5e2c6595ab3ac__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"LibDiamond: Must be contract own\")\n        mstore(add(headStart, 96), \"er\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1ffc682bcfedefd5e93ba9ed0c2d1bc0b18319886e3b4bd28a03a3d3729f85c0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"LibDiamondCut: No selectors in f\")\n        mstore(add(headStart, 96), \"acet to cut\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_64609d8b93c93a06b98d7db7a87b04044cd4a52c5661d603bb9b90ad8b914a3a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"LibDiamondCut: Add facet can't b\")\n        mstore(add(headStart, 96), \"e address(0)\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_99a7418ee014d613f46da44561258cdbb58064508097483a319062b99fa37700__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 53)\n        mstore(add(headStart, 64), \"LibDiamondCut: Can't add functio\")\n        mstore(add(headStart, 96), \"n that already exists\")\n        tail := add(headStart, 128)\n    }\n    function increment_t_uint96(value) -> ret\n    {\n        let _1 := 0xffffffffffffffffffffffff\n        let value_1 := and(value, _1)\n        if eq(value_1, _1) { panic_error_0x11() }\n        ret := add(value_1, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_b5a7112edf707196456f338fdcc19cd849be6cb8c0d166bcd035f4cfb00e7078__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 56)\n        mstore(add(headStart, 64), \"LibDiamondCut: Can't replace fun\")\n        mstore(add(headStart, 96), \"ction with same function\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b739aae768f79b96e91d9f66398733516895e39eb09ee54a795b49dcc77504d4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 54)\n        mstore(add(headStart, 64), \"LibDiamondCut: Remove facet addr\")\n        mstore(add(headStart, 96), \"ess must be address(0)\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_046c761a688d1dc3c500562bc5aaa3544f01f394f9bb3b69aa2a950a45afb1f8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 60)\n        mstore(add(headStart, 64), \"LibDiamondCut: _init is address(\")\n        mstore(add(headStart, 96), \"0) but_calldata is not empty\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_868d165ec2461661b624442252aed6a645399bfae7b60083a77ea1b61b084042__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 61)\n        mstore(add(headStart, 64), \"LibDiamondCut: _calldata is empt\")\n        mstore(add(headStart, 96), \"y but _init is not address(0)\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_080b2fe78815767d522290509c8fce2af708c8a54455ca1b0cc978c92822465d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"LibDiamondCut: _init function re\")\n        mstore(add(headStart, 96), \"verted\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_2c590e498c4d56c984a7092fd5e89a68b9f4541ce9f97252fb74e44a00ffbb71__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 55)\n        mstore(add(headStart, 64), \"LibDiamondCut: Can't remove func\")\n        mstore(add(headStart, 96), \"tion that doesn't exist\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8ba063dfaa4be2d2cbe73dbb1364728b0f7031ac048441d5fad19e9541992b21__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"LibDiamondCut: Can't remove immu\")\n        mstore(add(headStart, 96), \"table function\")\n        tail := add(headStart, 128)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n}","id":28,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436106100435760003560e01c80636a60c3b7146100f75780638da5cb5b14610122578063cde7b2c114610137578063f2fde38b146101575761004a565b3661004a57005b600080356001600160e01b0319168152600080516020611caf833981519152602081905260409091205481906001600160a01b0316806100d15760405162461bcd60e51b815260206004820181905260248201527f4469616d6f6e643a2046756e6374696f6e20646f6573206e6f7420657869737460448201526064015b60405180910390fd5b3660008037600080366000845af43d6000803e8080156100f0573d6000f35b3d6000fd5b005b34801561010357600080fd5b50305b6040516001600160a01b03909116815260200160405180910390f35b34801561012e57600080fd5b50610106610177565b34801561014357600080fd5b506100f56101523660046115de565b6101af565b34801561016357600080fd5b506100f561017236600461171c565b610513565b60006101aa7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c1320546001600160a01b031690565b905090565b60006101b9610527565b805490915060ff600160401b820416159067ffffffffffffffff166000811580156101e15750825b905060008267ffffffffffffffff1660011480156101fe5750303b155b90508115801561020c575080155b1561022a5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561025457845460ff60401b1916600160401b1785555b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131f6020527f699d9daa71b280d05a152715774afa0a81a312594b2d731d6b0b2552b7d6f69f8054600160ff1991821681179092557f19068268aae2a38bd591de99c33751e9001444cb142e32d03cbfc67512a16fff80548216831790557f5622121b47b8cd0120c4efe45dd5483242f54a3d49bd7679be565d47694918c380548216831790557fb0f299ecb5b93181be17d5e233721498930c5361f367b1d41c5b827d4fe4d38080548216831790557f806e5513950c43892aa01780f899fe3e3229f9425b66a2610b01231f5799f44e805482168317905563780e9d6360e01b6000527fc564b00dd622489e8872cfaa1fdbe51ee7adef071bfa99bc1effdc20162fa70a805490911690911790556103cc61038f8a8c611762565b8989898080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061055292505050565b6103d58c610763565b7f3b28ada7424160f36dba04e603ff68d11ac4a3eeb1ef7a9911d79d949607b74080546001600160a01b038e166001600160a01b031990911617905560608b015160408051651cde5b589bdb60d21b81527f3b28ada7424160f36dba04e603ff68d11ac4a3eeb1ef7a9911d79d949607b7456006820152905190819003602601902090610462908261192e565b5060808b015160408051636e616d6560e01b81527f3b28ada7424160f36dba04e603ff68d11ac4a3eeb1ef7a9911d79d949607b74560048201529051908190036024019020906104b2908261192e565b506104bf6202a3006107e6565b831561050557845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050505050505050565b61051b610892565b61052481610763565b50565b6000807ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005b92915050565b60005b8351811015610718576000848281518110610572576105726119ee565b60200260200101516020015190506000600281111561059357610593611a04565b8160028111156105a5576105a5611a04565b036105f3576105ee8583815181106105bf576105bf6119ee565b6020026020010151600001518684815181106105dd576105dd6119ee565b602002602001015160400151610909565b610705565b600181600281111561060757610607611a04565b03610650576105ee858381518110610621576106216119ee565b60200260200101516000015186848151811061063f5761063f6119ee565b602002602001015160400151610a88565b600281600281111561066457610664611a04565b036106ad576105ee85838151811061067e5761067e6119ee565b60200260200101516000015186848151811061069c5761069c6119ee565b602002602001015160400151610c18565b60405162461bcd60e51b815260206004820152602760248201527f4c69624469616d6f6e644375743a20496e636f727265637420466163657443756044820152663a20b1ba34b7b760c91b60648201526084016100c8565b508061071081611a30565b915050610555565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb67383838360405161074c93929190611a99565b60405180910390a161075e8282610d36565b505050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c132080546001600160a01b031981166001600160a01b03848116918217909355604051600080516020611caf833981519152939092169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c132154600080516020611caf83398151915290156108765760405162461bcd60e51b815260206004820152602860248201527f4c69624469616d6f6e643a2054696d656c6f636b20616c726561647920696e696044820152671d1a585b1a5e995960c21b60648201526084016100c8565b60008211610887576202a300610889565b815b60059091015550565b600080516020611caf833981519152600401546001600160a01b031633146109075760405162461bcd60e51b815260206004820152602260248201527f4c69624469616d6f6e643a204d75737420626520636f6e7472616374206f776e60448201526132b960f11b60648201526084016100c8565b565b600081511161092a5760405162461bcd60e51b81526004016100c890611b99565b600080516020611caf8339815191526001600160a01b03831661095f5760405162461bcd60e51b81526004016100c890611be4565b6001600160a01b0383166000908152600182016020526040812054906001600160601b0382169003610995576109958285610f43565b60005b8351811015610a815760008482815181106109b5576109b56119ee565b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b03168015610a535760405162461bcd60e51b815260206004820152603560248201527f4c69624469616d6f6e644375743a2043616e2774206164642066756e6374696f6044820152746e207468617420616c72656164792065786973747360581b60648201526084016100c8565b610a5f8583868a610fad565b83610a6981611c30565b94505050508080610a7990611a30565b915050610998565b5050505050565b6000815111610aa95760405162461bcd60e51b81526004016100c890611b99565b600080516020611caf8339815191526001600160a01b038316610ade5760405162461bcd60e51b81526004016100c890611be4565b6001600160a01b0383166000908152600182016020526040812054906001600160601b0382169003610b1457610b148285610f43565b60005b8351811015610a81576000848281518110610b3457610b346119ee565b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b039081169087168103610bdf5760405162461bcd60e51b815260206004820152603860248201527f4c69624469616d6f6e644375743a2043616e2774207265706c6163652066756e60448201527f6374696f6e20776974682073616d652066756e6374696f6e000000000000000060648201526084016100c8565b610bea85828461104d565b610bf68583868a610fad565b83610c0081611c30565b94505050508080610c1090611a30565b915050610b17565b6000815111610c395760405162461bcd60e51b81526004016100c890611b99565b600080516020611caf8339815191526001600160a01b03831615610cbe5760405162461bcd60e51b815260206004820152603660248201527f4c69624469616d6f6e644375743a2052656d6f76652066616365742061646472604482015275657373206d757374206265206164647265737328302960501b60648201526084016100c8565b60005b8251811015610d30576000838281518110610cde57610cde6119ee565b6020908102919091018101516001600160e01b031981166000908152918590526040909120549091506001600160a01b0316610d1b84828461104d565b50508080610d2890611a30565b915050610cc1565b50505050565b6001600160a01b038216610dbd57805115610db95760405162461bcd60e51b815260206004820152603c60248201527f4c69624469616d6f6e644375743a205f696e697420697320616464726573732860448201527f3029206275745f63616c6c64617461206973206e6f7420656d7074790000000060648201526084016100c8565b5050565b6000815111610e345760405162461bcd60e51b815260206004820152603d60248201527f4c69624469616d6f6e644375743a205f63616c6c6461746120697320656d707460448201527f7920627574205f696e6974206973206e6f74206164647265737328302900000060648201526084016100c8565b6001600160a01b0382163014610e6657610e6682604051806060016040528060288152602001611ccf60289139611410565b600080836001600160a01b031683604051610e819190611c56565b600060405180830381855af49150503d8060008114610ebc576040519150601f19603f3d011682016040523d82523d6000602084013e610ec1565b606091505b509150915081610d3057805115610eec578060405162461bcd60e51b81526004016100c89190611c72565b60405162461bcd60e51b815260206004820152602660248201527f4c69624469616d6f6e644375743a205f696e69742066756e6374696f6e2072656044820152651d995c9d195960d21b60648201526084016100c8565b610f6581604051806060016040528060248152602001611cf760249139611410565b6002820180546001600160a01b0390921660008181526001948501602090815260408220860185905594840183559182529290200180546001600160a01b0319169091179055565b6001600160e01b0319831660008181526020868152604080832080546001600160601b03909716600160a01b026001600160a01b0397881617815594909516808352600180890183529583208054968701815583528183206008870401805460e09890981c60046007909816979097026101000a96870263ffffffff9097021990971695909517909555529290915281546001600160a01b031916179055565b6001600160a01b0382166110c95760405162461bcd60e51b815260206004820152603760248201527f4c69624469616d6f6e644375743a2043616e27742072656d6f76652066756e6360448201527f74696f6e207468617420646f65736e277420657869737400000000000000000060648201526084016100c8565b306001600160a01b038316036111385760405162461bcd60e51b815260206004820152602e60248201527f4c69624469616d6f6e644375743a2043616e27742072656d6f766520696d6d7560448201526d3a30b1363290333ab731ba34b7b760911b60648201526084016100c8565b6001600160e01b03198116600090815260208481526040808320546001600160a01b0386168452600180880190935290832054600160a01b9091046001600160601b0316929161118791611c85565b9050808214611279576001600160a01b038416600090815260018601602052604081208054839081106111bc576111bc6119ee565b600091825260208083206008830401546001600160a01b038916845260018a019091526040909220805460079092166004026101000a90920460e01b92508291908590811061120d5761120d6119ee565b600091825260208083206008830401805463ffffffff60079094166004026101000a938402191660e09590951c929092029390931790556001600160e01b03199290921682528690526040902080546001600160a01b0316600160a01b6001600160601b038516021790555b6001600160a01b038416600090815260018601602052604090208054806112a2576112a2611c98565b60008281526020808220600860001990940193840401805463ffffffff600460078716026101000a0219169055919092556001600160e01b03198516825286905260408120819055819003610a8157600285015460009061130590600190611c85565b6001600160a01b03861660009081526001808901602052604090912001549091508082146113b4576000876002018381548110611344576113446119ee565b6000918252602090912001546002890180546001600160a01b039092169250829184908110611375576113756119ee565b600091825260208083209190910180546001600160a01b0319166001600160a01b03948516179055929091168152600189810190925260409020018190555b866002018054806113c7576113c7611c98565b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b0388168252600189810190915260408220015550505050505050565b813b8181610d305760405162461bcd60e51b81526004016100c89190611c72565b80356001600160a01b038116811461144857600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60405160a0810167ffffffffffffffff811182821017156114865761148661144d565b60405290565b6040516060810167ffffffffffffffff811182821017156114865761148661144d565b604051601f8201601f1916810167ffffffffffffffff811182821017156114d8576114d861144d565b604052919050565b600082601f8301126114f157600080fd5b813567ffffffffffffffff81111561150b5761150b61144d565b61151e601f8201601f19166020016114af565b81815284602083860101111561153357600080fd5b816020850160208301376000918101602001919091529392505050565b60008083601f84011261156257600080fd5b50813567ffffffffffffffff81111561157a57600080fd5b6020830191508360208260051b850101111561159557600080fd5b9250929050565b60008083601f8401126115ae57600080fd5b50813567ffffffffffffffff8111156115c657600080fd5b60208301915083602082850101111561159557600080fd5b600080600080600080600060a0888a0312156115f957600080fd5b61160288611431565b9650602088013567ffffffffffffffff8082111561161f57600080fd5b9089019060a0828c03121561163357600080fd5b61163b611463565b61164483611431565b815261165260208401611431565b602082015261166360408401611431565b604082015260608301358281111561167a57600080fd5b6116868d8286016114e0565b60608301525060808301358281111561169e57600080fd5b6116aa8d8286016114e0565b608083015250975060408a01359150808211156116c657600080fd5b6116d28b838c01611550565b90975095508591506116e660608b01611431565b945060808a01359150808211156116fc57600080fd5b506117098a828b0161159c565b989b979a50959850939692959293505050565b60006020828403121561172e57600080fd5b61173782611431565b9392505050565b600067ffffffffffffffff8211156117585761175861144d565b5060051b60200190565b60006117756117708461173e565b6114af565b83815260208082019190600586811b86013681111561179357600080fd5b865b8181101561189957803567ffffffffffffffff808211156117b65760008081fd5b818a019150606082360312156117cc5760008081fd5b6117d461148c565b6117dd83611431565b815286830135600381106117f15760008081fd5b81880152604083810135838111156118095760008081fd5b939093019236601f85011261182057600092508283fd5b833592506118306117708461173e565b83815292871b8401880192888101903685111561184d5760008081fd5b948901945b848610156118825785356001600160e01b0319811681146118735760008081fd5b82529489019490890190611852565b918301919091525088525050948301948301611795565b5092979650505050505050565b600181811c908216806118ba57607f821691505b6020821081036118da57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561075e57600081815260208120601f850160051c810160208610156119075750805b601f850160051c820191505b8181101561192657828155600101611913565b505050505050565b815167ffffffffffffffff8111156119485761194861144d565b61195c8161195684546118a6565b846118e0565b602080601f83116001811461199157600084156119795750858301515b600019600386901b1c1916600185901b178555611926565b600085815260208120601f198616915b828110156119c0578886015182559484019460019091019084016119a1565b50858210156119de5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611a4257611a42611a1a565b5060010190565b60005b83811015611a64578181015183820152602001611a4c565b50506000910152565b60008151808452611a85816020860160208601611a49565b601f01601f19169290920160200192915050565b60006060808301818452808751808352608092508286019150828160051b8701016020808b0160005b84811015611b6957898403607f19018652815180516001600160a01b03168552838101518986019060038110611b0857634e487b7160e01b600052602160045260246000fd5b868601526040918201519186018a905281519081905290840190600090898701905b80831015611b545783516001600160e01b0319168252928601926001929092019190860190611b2a565b50978501979550505090820190600101611ac2565b50506001600160a01b038a16908801528681036040880152611b8b8189611a6d565b9a9950505050505050505050565b6020808252602b908201527f4c69624469616d6f6e644375743a204e6f2073656c6563746f727320696e206660408201526a1858d95d081d1bc818dd5d60aa1b606082015260800190565b6020808252602c908201527f4c69624469616d6f6e644375743a204164642066616365742063616e2774206260408201526b65206164647265737328302960a01b606082015260800190565b60006001600160601b03808316818103611c4c57611c4c611a1a565b6001019392505050565b60008251611c68818460208701611a49565b9190910192915050565b6020815260006117376020830184611a6d565b8181038181111561054c5761054c611a1a565b634e487b7160e01b600052603160045260246000fdfec8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c4c69624469616d6f6e644375743a205f696e6974206164647265737320686173206e6f20636f64654c69624469616d6f6e644375743a204e657720666163657420686173206e6f20636f6465a2646970667358221220d3a5fd157e44e6573e0ecf26ab8a24b869b4dbe804e485f2916a0cb816a7714164736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x43 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6A60C3B7 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0xCDE7B2C1 EQ PUSH2 0x137 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x157 JUMPI PUSH2 0x4A JUMP JUMPDEST CALLDATASIZE PUSH2 0x4A JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1CAF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0xD1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4469616D6F6E643A2046756E6374696F6E20646F6573206E6F74206578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0xF0 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x103 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP ADDRESS JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x106 PUSH2 0x177 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x143 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF5 PUSH2 0x152 CALLDATASIZE PUSH1 0x4 PUSH2 0x15DE JUMP JUMPDEST PUSH2 0x1AF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x163 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF5 PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0x171C JUMP JUMPDEST PUSH2 0x513 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AA PUSH32 0xC8FCAD8DB84D3CC18B4C41D551EA0EE66DD599CDE068D998E57D5E09332C1320 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B9 PUSH2 0x527 JUMP JUMPDEST DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF PUSH1 0x1 PUSH1 0x40 SHL DUP3 DIV AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x1E1 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x1FE JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x20C JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x22A JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x254 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH32 0xC8FCAD8DB84D3CC18B4C41D551EA0EE66DD599CDE068D998E57D5E09332C131F PUSH1 0x20 MSTORE PUSH32 0x699D9DAA71B280D05A152715774AFA0A81A312594B2D731D6B0B2552B7D6F69F DUP1 SLOAD PUSH1 0x1 PUSH1 0xFF NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH32 0x19068268AAE2A38BD591DE99C33751E9001444CB142E32D03CBFC67512A16FFF DUP1 SLOAD DUP3 AND DUP4 OR SWAP1 SSTORE PUSH32 0x5622121B47B8CD0120C4EFE45DD5483242F54A3D49BD7679BE565D47694918C3 DUP1 SLOAD DUP3 AND DUP4 OR SWAP1 SSTORE PUSH32 0xB0F299ECB5B93181BE17D5E233721498930C5361F367B1D41C5B827D4FE4D380 DUP1 SLOAD DUP3 AND DUP4 OR SWAP1 SSTORE PUSH32 0x806E5513950C43892AA01780F899FE3E3229F9425B66A2610B01231F5799F44E DUP1 SLOAD DUP3 AND DUP4 OR SWAP1 SSTORE PUSH4 0x780E9D63 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH32 0xC564B00DD622489E8872CFAA1FDBE51EE7ADEF071BFA99BC1EFFDC20162FA70A DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x3CC PUSH2 0x38F DUP11 DUP13 PUSH2 0x1762 JUMP JUMPDEST DUP10 DUP10 DUP10 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x552 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x3D5 DUP13 PUSH2 0x763 JUMP JUMPDEST PUSH32 0x3B28ADA7424160F36DBA04E603FF68D11AC4A3EEB1EF7A9911D79D949607B740 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x60 DUP12 ADD MLOAD PUSH1 0x40 DUP1 MLOAD PUSH6 0x1CDE5B589BDB PUSH1 0xD2 SHL DUP2 MSTORE PUSH32 0x3B28ADA7424160F36DBA04E603FF68D11AC4A3EEB1EF7A9911D79D949607B745 PUSH1 0x6 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x26 ADD SWAP1 KECCAK256 SWAP1 PUSH2 0x462 SWAP1 DUP3 PUSH2 0x192E JUMP JUMPDEST POP PUSH1 0x80 DUP12 ADD MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x6E616D65 PUSH1 0xE0 SHL DUP2 MSTORE PUSH32 0x3B28ADA7424160F36DBA04E603FF68D11AC4A3EEB1EF7A9911D79D949607B745 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x24 ADD SWAP1 KECCAK256 SWAP1 PUSH2 0x4B2 SWAP1 DUP3 PUSH2 0x192E JUMP JUMPDEST POP PUSH2 0x4BF PUSH3 0x2A300 PUSH2 0x7E6 JUMP JUMPDEST DUP4 ISZERO PUSH2 0x505 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x51B PUSH2 0x892 JUMP JUMPDEST PUSH2 0x524 DUP2 PUSH2 0x763 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x718 JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x572 JUMPI PUSH2 0x572 PUSH2 0x19EE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x593 JUMPI PUSH2 0x593 PUSH2 0x1A04 JUMP JUMPDEST DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x5A5 JUMPI PUSH2 0x5A5 PUSH2 0x1A04 JUMP JUMPDEST SUB PUSH2 0x5F3 JUMPI PUSH2 0x5EE DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x5BF JUMPI PUSH2 0x5BF PUSH2 0x19EE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x5DD JUMPI PUSH2 0x5DD PUSH2 0x19EE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH2 0x909 JUMP JUMPDEST PUSH2 0x705 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x607 JUMPI PUSH2 0x607 PUSH2 0x1A04 JUMP JUMPDEST SUB PUSH2 0x650 JUMPI PUSH2 0x5EE DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x621 JUMPI PUSH2 0x621 PUSH2 0x19EE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x63F JUMPI PUSH2 0x63F PUSH2 0x19EE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH2 0xA88 JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x664 JUMPI PUSH2 0x664 PUSH2 0x1A04 JUMP JUMPDEST SUB PUSH2 0x6AD JUMPI PUSH2 0x5EE DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x67E JUMPI PUSH2 0x67E PUSH2 0x19EE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x69C JUMPI PUSH2 0x69C PUSH2 0x19EE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH2 0xC18 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C69624469616D6F6E644375743A20496E636F72726563742046616365744375 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x3A20B1BA34B7B7 PUSH1 0xC9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC8 JUMP JUMPDEST POP DUP1 PUSH2 0x710 DUP2 PUSH2 0x1A30 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x555 JUMP JUMPDEST POP PUSH32 0x8FAA70878671CCD212D20771B795C50AF8FD3FF6CF27F4BDE57E5D4DE0AEB673 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x74C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x75E DUP3 DUP3 PUSH2 0xD36 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0xC8FCAD8DB84D3CC18B4C41D551EA0EE66DD599CDE068D998E57D5E09332C1320 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1CAF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP4 SWAP1 SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH32 0xC8FCAD8DB84D3CC18B4C41D551EA0EE66DD599CDE068D998E57D5E09332C1321 SLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1CAF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 ISZERO PUSH2 0x876 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C69624469616D6F6E643A2054696D656C6F636B20616C726561647920696E69 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x1D1A585B1A5E9959 PUSH1 0xC2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC8 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x887 JUMPI PUSH3 0x2A300 PUSH2 0x889 JUMP JUMPDEST DUP2 JUMPDEST PUSH1 0x5 SWAP1 SWAP2 ADD SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1CAF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x907 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C69624469616D6F6E643A204D75737420626520636F6E7472616374206F776E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x32B9 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC8 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x92A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC8 SWAP1 PUSH2 0x1B99 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1CAF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x95F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC8 SWAP1 PUSH2 0x1BE4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP3 AND SWAP1 SUB PUSH2 0x995 JUMPI PUSH2 0x995 DUP3 DUP6 PUSH2 0xF43 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xA81 JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x9B5 JUMPI PUSH2 0x9B5 PUSH2 0x19EE JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 DUP7 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0xA53 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C69624469616D6F6E644375743A2043616E2774206164642066756E6374696F PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x6E207468617420616C726561647920657869737473 PUSH1 0x58 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC8 JUMP JUMPDEST PUSH2 0xA5F DUP6 DUP4 DUP7 DUP11 PUSH2 0xFAD JUMP JUMPDEST DUP4 PUSH2 0xA69 DUP2 PUSH2 0x1C30 JUMP JUMPDEST SWAP5 POP POP POP POP DUP1 DUP1 PUSH2 0xA79 SWAP1 PUSH2 0x1A30 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x998 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT PUSH2 0xAA9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC8 SWAP1 PUSH2 0x1B99 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1CAF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xADE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC8 SWAP1 PUSH2 0x1BE4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP3 AND SWAP1 SUB PUSH2 0xB14 JUMPI PUSH2 0xB14 DUP3 DUP6 PUSH2 0xF43 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xA81 JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xB34 JUMPI PUSH2 0xB34 PUSH2 0x19EE JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 DUP7 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP8 AND DUP2 SUB PUSH2 0xBDF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C69624469616D6F6E644375743A2043616E2774207265706C6163652066756E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6374696F6E20776974682073616D652066756E6374696F6E0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC8 JUMP JUMPDEST PUSH2 0xBEA DUP6 DUP3 DUP5 PUSH2 0x104D JUMP JUMPDEST PUSH2 0xBF6 DUP6 DUP4 DUP7 DUP11 PUSH2 0xFAD JUMP JUMPDEST DUP4 PUSH2 0xC00 DUP2 PUSH2 0x1C30 JUMP JUMPDEST SWAP5 POP POP POP POP DUP1 DUP1 PUSH2 0xC10 SWAP1 PUSH2 0x1A30 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB17 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT PUSH2 0xC39 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC8 SWAP1 PUSH2 0x1B99 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1CAF DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0xCBE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C69624469616D6F6E644375743A2052656D6F76652066616365742061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH22 0x657373206D7573742062652061646472657373283029 PUSH1 0x50 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC8 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xD30 JUMPI PUSH1 0x0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xCDE JUMPI PUSH2 0xCDE PUSH2 0x19EE JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 DUP6 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD1B DUP5 DUP3 DUP5 PUSH2 0x104D JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0xD28 SWAP1 PUSH2 0x1A30 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xCC1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xDBD JUMPI DUP1 MLOAD ISZERO PUSH2 0xDB9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C69624469616D6F6E644375743A205F696E6974206973206164647265737328 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x3029206275745F63616C6C64617461206973206E6F7420656D70747900000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT PUSH2 0xE34 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C69624469616D6F6E644375743A205F63616C6C6461746120697320656D7074 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7920627574205F696E6974206973206E6F742061646472657373283029000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ADDRESS EQ PUSH2 0xE66 JUMPI PUSH2 0xE66 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1CCF PUSH1 0x28 SWAP2 CODECOPY PUSH2 0x1410 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH2 0xE81 SWAP2 SWAP1 PUSH2 0x1C56 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xEBC JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xEC1 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0xD30 JUMPI DUP1 MLOAD ISZERO PUSH2 0xEEC JUMPI DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC8 SWAP2 SWAP1 PUSH2 0x1C72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C69624469616D6F6E644375743A205F696E69742066756E6374696F6E207265 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1D995C9D1959 PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC8 JUMP JUMPDEST PUSH2 0xF65 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1CF7 PUSH1 0x24 SWAP2 CODECOPY PUSH2 0x1410 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 SWAP5 DUP6 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP7 ADD DUP6 SWAP1 SSTORE SWAP5 DUP5 ADD DUP4 SSTORE SWAP2 DUP3 MSTORE SWAP3 SWAP1 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP7 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP8 AND PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP8 DUP9 AND OR DUP2 SSTORE SWAP5 SWAP1 SWAP6 AND DUP1 DUP4 MSTORE PUSH1 0x1 DUP1 DUP10 ADD DUP4 MSTORE SWAP6 DUP4 KECCAK256 DUP1 SLOAD SWAP7 DUP8 ADD DUP2 SSTORE DUP4 MSTORE DUP2 DUP4 KECCAK256 PUSH1 0x8 DUP8 DIV ADD DUP1 SLOAD PUSH1 0xE0 SWAP9 SWAP1 SWAP9 SHR PUSH1 0x4 PUSH1 0x7 SWAP1 SWAP9 AND SWAP8 SWAP1 SWAP8 MUL PUSH2 0x100 EXP SWAP7 DUP8 MUL PUSH4 0xFFFFFFFF SWAP1 SWAP8 MUL NOT SWAP1 SWAP8 AND SWAP6 SWAP1 SWAP6 OR SWAP1 SWAP6 SSTORE MSTORE SWAP3 SWAP1 SWAP2 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x10C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x37 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C69624469616D6F6E644375743A2043616E27742072656D6F76652066756E63 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x74696F6E207468617420646F65736E2774206578697374000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC8 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0x1138 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C69624469616D6F6E644375743A2043616E27742072656D6F766520696D6D75 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x3A30B1363290333AB731BA34B7B7 PUSH1 0x91 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xC8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP5 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE PUSH1 0x1 DUP1 DUP9 ADD SWAP1 SWAP4 MSTORE SWAP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP3 SWAP2 PUSH2 0x1187 SWAP2 PUSH2 0x1C85 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 EQ PUSH2 0x1279 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP7 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0x11BC JUMPI PUSH2 0x11BC PUSH2 0x19EE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x8 DUP4 DIV ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP5 MSTORE PUSH1 0x1 DUP11 ADD SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 DUP1 SLOAD PUSH1 0x7 SWAP1 SWAP3 AND PUSH1 0x4 MUL PUSH2 0x100 EXP SWAP1 SWAP3 DIV PUSH1 0xE0 SHL SWAP3 POP DUP3 SWAP2 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0x120D JUMPI PUSH2 0x120D PUSH2 0x19EE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x8 DUP4 DIV ADD DUP1 SLOAD PUSH4 0xFFFFFFFF PUSH1 0x7 SWAP1 SWAP5 AND PUSH1 0x4 MUL PUSH2 0x100 EXP SWAP4 DUP5 MUL NOT AND PUSH1 0xE0 SWAP6 SWAP1 SWAP6 SHR SWAP3 SWAP1 SWAP3 MUL SWAP4 SWAP1 SWAP4 OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE DUP7 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP6 AND MUL OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP7 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP1 PUSH2 0x12A2 JUMPI PUSH2 0x12A2 PUSH2 0x1C98 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 PUSH1 0x8 PUSH1 0x0 NOT SWAP1 SWAP5 ADD SWAP4 DUP5 DIV ADD DUP1 SLOAD PUSH4 0xFFFFFFFF PUSH1 0x4 PUSH1 0x7 DUP8 AND MUL PUSH2 0x100 EXP MUL NOT AND SWAP1 SSTORE SWAP2 SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP6 AND DUP3 MSTORE DUP7 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 SWAP1 SSTORE DUP2 SWAP1 SUB PUSH2 0xA81 JUMPI PUSH1 0x2 DUP6 ADD SLOAD PUSH1 0x0 SWAP1 PUSH2 0x1305 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1C85 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP1 DUP10 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 SWAP2 POP DUP1 DUP3 EQ PUSH2 0x13B4 JUMPI PUSH1 0x0 DUP8 PUSH1 0x2 ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1344 JUMPI PUSH2 0x1344 PUSH2 0x19EE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x2 DUP10 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 POP DUP3 SWAP2 DUP5 SWAP1 DUP2 LT PUSH2 0x1375 JUMPI PUSH2 0x1375 PUSH2 0x19EE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND OR SWAP1 SSTORE SWAP3 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x1 DUP10 DUP2 ADD SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 KECCAK256 ADD DUP2 SWAP1 SSTORE JUMPDEST DUP7 PUSH1 0x2 ADD DUP1 SLOAD DUP1 PUSH2 0x13C7 JUMPI PUSH2 0x13C7 PUSH2 0x1C98 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 DUP4 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE SWAP1 SWAP3 ADD SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP3 MSTORE PUSH1 0x1 DUP10 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST DUP2 EXTCODESIZE DUP2 DUP2 PUSH2 0xD30 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC8 SWAP2 SWAP1 PUSH2 0x1C72 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1448 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xA0 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1486 JUMPI PUSH2 0x1486 PUSH2 0x144D JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1486 JUMPI PUSH2 0x1486 PUSH2 0x144D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x14D8 JUMPI PUSH2 0x14D8 PUSH2 0x144D JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x14F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x150B JUMPI PUSH2 0x150B PUSH2 0x144D JUMP JUMPDEST PUSH2 0x151E PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x14AF JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x1533 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1562 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x157A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x1595 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x15AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1595 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x15F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1602 DUP9 PUSH2 0x1431 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x161F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP10 ADD SWAP1 PUSH1 0xA0 DUP3 DUP13 SUB SLT ISZERO PUSH2 0x1633 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x163B PUSH2 0x1463 JUMP JUMPDEST PUSH2 0x1644 DUP4 PUSH2 0x1431 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x1652 PUSH1 0x20 DUP5 ADD PUSH2 0x1431 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1663 PUSH1 0x40 DUP5 ADD PUSH2 0x1431 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH2 0x167A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1686 DUP14 DUP3 DUP7 ADD PUSH2 0x14E0 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 DUP4 ADD CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH2 0x169E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16AA DUP14 DUP3 DUP7 ADD PUSH2 0x14E0 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP SWAP8 POP PUSH1 0x40 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x16C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16D2 DUP12 DUP4 DUP13 ADD PUSH2 0x1550 JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP DUP6 SWAP2 POP PUSH2 0x16E6 PUSH1 0x60 DUP12 ADD PUSH2 0x1431 JUMP JUMPDEST SWAP5 POP PUSH1 0x80 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x16FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1709 DUP11 DUP3 DUP12 ADD PUSH2 0x159C JUMP JUMPDEST SWAP9 SWAP12 SWAP8 SWAP11 POP SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP3 SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x172E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1737 DUP3 PUSH2 0x1431 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1758 JUMPI PUSH2 0x1758 PUSH2 0x144D JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1775 PUSH2 0x1770 DUP5 PUSH2 0x173E JUMP JUMPDEST PUSH2 0x14AF JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP2 SWAP1 PUSH1 0x5 DUP7 DUP2 SHL DUP7 ADD CALLDATASIZE DUP2 GT ISZERO PUSH2 0x1793 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1899 JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x17B6 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP2 DUP11 ADD SWAP2 POP PUSH1 0x60 DUP3 CALLDATASIZE SUB SLT ISZERO PUSH2 0x17CC JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x17D4 PUSH2 0x148C JUMP JUMPDEST PUSH2 0x17DD DUP4 PUSH2 0x1431 JUMP JUMPDEST DUP2 MSTORE DUP7 DUP4 ADD CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0x17F1 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP2 DUP9 ADD MSTORE PUSH1 0x40 DUP4 DUP2 ADD CALLDATALOAD DUP4 DUP2 GT ISZERO PUSH2 0x1809 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST SWAP4 SWAP1 SWAP4 ADD SWAP3 CALLDATASIZE PUSH1 0x1F DUP6 ADD SLT PUSH2 0x1820 JUMPI PUSH1 0x0 SWAP3 POP DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH2 0x1830 PUSH2 0x1770 DUP5 PUSH2 0x173E JUMP JUMPDEST DUP4 DUP2 MSTORE SWAP3 DUP8 SHL DUP5 ADD DUP9 ADD SWAP3 DUP9 DUP2 ADD SWAP1 CALLDATASIZE DUP6 GT ISZERO PUSH2 0x184D JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST SWAP5 DUP10 ADD SWAP5 JUMPDEST DUP5 DUP7 LT ISZERO PUSH2 0x1882 JUMPI DUP6 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1873 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP3 MSTORE SWAP5 DUP10 ADD SWAP5 SWAP1 DUP10 ADD SWAP1 PUSH2 0x1852 JUMP JUMPDEST SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP9 MSTORE POP POP SWAP5 DUP4 ADD SWAP5 DUP4 ADD PUSH2 0x1795 JUMP JUMPDEST POP SWAP3 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x18BA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x18DA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x75E JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x1907 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1926 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1913 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1948 JUMPI PUSH2 0x1948 PUSH2 0x144D JUMP JUMPDEST PUSH2 0x195C DUP2 PUSH2 0x1956 DUP5 SLOAD PUSH2 0x18A6 JUMP JUMPDEST DUP5 PUSH2 0x18E0 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1991 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1979 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x1926 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x19C0 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x19A1 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x19DE JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1A42 JUMPI PUSH2 0x1A42 PUSH2 0x1A1A JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A64 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1A4C JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1A85 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1A49 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP8 MLOAD DUP1 DUP4 MSTORE PUSH1 0x80 SWAP3 POP DUP3 DUP7 ADD SWAP2 POP DUP3 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD PUSH1 0x20 DUP1 DUP12 ADD PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1B69 JUMPI DUP10 DUP5 SUB PUSH1 0x7F NOT ADD DUP7 MSTORE DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP4 DUP2 ADD MLOAD DUP10 DUP7 ADD SWAP1 PUSH1 0x3 DUP2 LT PUSH2 0x1B08 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP7 DUP7 ADD MSTORE PUSH1 0x40 SWAP2 DUP3 ADD MLOAD SWAP2 DUP7 ADD DUP11 SWAP1 MSTORE DUP2 MLOAD SWAP1 DUP2 SWAP1 MSTORE SWAP1 DUP5 ADD SWAP1 PUSH1 0x0 SWAP1 DUP10 DUP8 ADD SWAP1 JUMPDEST DUP1 DUP4 LT ISZERO PUSH2 0x1B54 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP3 MSTORE SWAP3 DUP7 ADD SWAP3 PUSH1 0x1 SWAP3 SWAP1 SWAP3 ADD SWAP2 SWAP1 DUP7 ADD SWAP1 PUSH2 0x1B2A JUMP JUMPDEST POP SWAP8 DUP6 ADD SWAP8 SWAP6 POP POP POP SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1AC2 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND SWAP1 DUP9 ADD MSTORE DUP7 DUP2 SUB PUSH1 0x40 DUP9 ADD MSTORE PUSH2 0x1B8B DUP2 DUP10 PUSH2 0x1A6D JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x4C69624469616D6F6E644375743A204E6F2073656C6563746F727320696E2066 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x1858D95D081D1BC818DD5D PUSH1 0xAA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x4C69624469616D6F6E644375743A204164642066616365742063616E27742062 PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x652061646472657373283029 PUSH1 0xA0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP1 DUP4 AND DUP2 DUP2 SUB PUSH2 0x1C4C JUMPI PUSH2 0x1C4C PUSH2 0x1A1A JUMP JUMPDEST PUSH1 0x1 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1C68 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1A49 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1737 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1A6D JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x54C JUMPI PUSH2 0x54C PUSH2 0x1A1A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID 0xC8 0xFC 0xAD DUP14 0xB8 0x4D EXTCODECOPY 0xC1 DUP12 0x4C COINBASE 0xD5 MLOAD 0xEA 0xE 0xE6 PUSH14 0xD599CDE068D998E57D5E09332C13 SHR 0x4C PUSH10 0x624469616D6F6E644375 PUSH21 0x3A205F696E6974206164647265737320686173206E PUSH16 0x20636F64654C69624469616D6F6E6443 PUSH22 0x743A204E657720666163657420686173206E6F20636F PUSH5 0x65A2646970 PUSH7 0x7358221220D3A5 REVERT ISZERO PUSH31 0x44E6573E0ECF26AB8A24B869B4DBE804E485F2916A0CB816A7714164736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"1323:3905:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4037:36;4329:7;;-1:-1:-1;;;;;;4329:7:7;4299:38;;-1:-1:-1;;;;;;;;;;;4299:38:7;;;;;;;;:51;741:45:25;;-1:-1:-1;;;;;4299:51:7;;4360:64;;;;-1:-1:-1;;;4360:64:7;;216:2:28;4360:64:7;;;198:21:28;;;235:18;;;228:30;294:34;274:18;;;267:62;346:18;;4360:64:7;;;;;;;;;4629:14;4626:1;4623;4610:34;4773:1;4770;4754:14;4751:1;4744:5;4737;4724:51;4845:16;4842:1;4839;4824:38;4949:6;4972:74;;;;5103:16;5100:1;5093:27;4972:74;5011:16;5008:1;5001:27;4942:196;;3741:95;;;;;;;;;;-1:-1:-1;3824:4:7;3741:95;;;-1:-1:-1;;;;;648:32:28;;;630:51;;618:2;603:18;3741:95:7;;;;;;;3520:117;;;;;;;;;;;;;:::i;1700:1421::-;;;;;;;;;;-1:-1:-1;1700:1421:7;;;;;:::i;:::-;;:::i;3240:164::-;;;;;;;;;;-1:-1:-1;3240:164:7;;;;;:::i;:::-;;:::i;3520:117::-;3569:14;3604:26;3143:30:25;;-1:-1:-1;;;;;3143:30:25;;3044:136;3604:26:7;3595:35;;3520:117;:::o;1700:1421::-;4158:30:3;4191:26;:24;:26::i;:::-;4302:15;;4158:59;;-1:-1:-1;4302:15:3;-1:-1:-1;;;4302:15:3;;;4301:16;;4348:14;;4279:19;4724:16;;:34;;;;;4744:14;4724:34;4704:54;;4768:17;4788:11;:16;;4803:1;4788:16;:50;;;;-1:-1:-1;4816:4:3;4808:25;:30;4788:50;4768:70;;4854:12;4853:13;:30;;;;;4871:12;4870:13;4853:30;4849:91;;;4906:23;;-1:-1:-1;;;4906:23:3;;;;;;;;;;;4849:91;4949:18;;-1:-1:-1;;4949:18:3;4966:1;4949:18;;;4977:67;;;;5011:22;;-1:-1:-1;;;;5011:22:3;-1:-1:-1;;;5011:22:3;;;4977:67;1959:47:7;:74:::1;::::0;;:81;;2036:4:::1;-1:-1:-1::0;;1959:81:7;;::::1;::::0;::::1;::::0;;;2050:78;:85;;;::::1;::::0;::::1;::::0;;2145:74;:81;;;::::1;::::0;::::1;::::0;;2236:74;:81;;;::::1;::::0;::::1;::::0;;2327:82;:89;;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;2426:84:7;;:91;;;;::::1;::::0;;::::1;::::0;;2562:54:::1;;2584:7:::0;;2562:54:::1;:::i;:::-;2593:11;2606:9;;2562:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;2562:21:7::1;::::0;-1:-1:-1;;;2562:54:7:i:1;:::-;2652:35;2680:6;2652:27;:35::i;:::-;636:64:24::0;2748:67:7;;-1:-1:-1;;;;;2748:67:7;::::1;-1:-1:-1::0;;;;;;2748:67:7;;::::1;;::::0;;2890:13:::1;::::0;::::1;::::0;2825:62:::1;::::0;;-1:-1:-1;;;8178:21:28;;2825:52:7;8224:1:28;8215:11;;2825:62:7;;;;;;;;;;;;:78:::1;::::0;:62;:78:::1;:::i;:::-;-1:-1:-1::0;2976:11:7::1;::::0;::::1;::::0;2913:60:::1;::::0;;-1:-1:-1;;;11028:19:28;;2913:52:7;11072:1:28;11063:11;;2913:60:7;;;;;;;;;;;;:74:::1;::::0;:60;:74:::1;:::i;:::-;;3041:73;3418:6:25;3041:36:7;:73::i;:::-;5068:14:3::0;5064:101;;;5098:23;;-1:-1:-1;;;;5098:23:3;;;5140:14;;-1:-1:-1;11238:50:28;;5140:14:3;;11226:2:28;11211:18;5140:14:3;;;;;;;5064:101;4092:1079;;;;;1700:1421:7;;;;;;;:::o;3240:164::-;3314:35;:33;:35::i;:::-;3359:38;3387:9;3359:27;:38::i;:::-;3240:164;:::o;9071:205:3:-;9129:30;;3147:66;9186:27;9171:42;9071:205;-1:-1:-1;;9071:205:3:o;3478:1067:25:-;3634:18;3629:806;3667:11;:18;3654:10;:31;3629:806;;;3715:33;3751:11;3763:10;3751:23;;;;;;;;:::i;:::-;;;;;;;:30;;;3715:66;;3809:30;3799:40;;;;;;;;:::i;:::-;:6;:40;;;;;;;;:::i;:::-;;3795:630;;3859:93;3872:11;3884:10;3872:23;;;;;;;;:::i;:::-;;;;;;;:36;;;3910:11;3922:10;3910:23;;;;;;;;:::i;:::-;;;;;;;:41;;;3859:12;:93::i;:::-;3795:630;;;3987:34;3977:6;:44;;;;;;;;:::i;:::-;;3973:452;;4041:97;4058:11;4070:10;4058:23;;;;;;;;:::i;:::-;;;;;;;:36;;;4096:11;4108:10;4096:23;;;;;;;;:::i;:::-;;;;;;;:41;;;4041:16;:97::i;3973:452::-;4173:33;4163:6;:43;;;;;;;;:::i;:::-;;4159:266;;4226:96;4242:11;4254:10;4242:23;;;;;;;;:::i;:::-;;;;;;;:36;;;4280:11;4292:10;4280:23;;;;;;;;:::i;:::-;;;;;;;:41;;;4226:15;:96::i;4159:266::-;4361:49;;-1:-1:-1;;;4361:49:25;;11765:2:28;4361:49:25;;;11747:21:28;11804:2;11784:18;;;11777:30;11843:34;11823:18;;;11816:62;-1:-1:-1;;;11894:18:28;;;11887:37;11941:19;;4361:49:25;11563:403:28;4159:266:25;-1:-1:-1;3687:12:25;;;;:::i;:::-;;;;3629:806;;;;4449:41;4460:11;4473:5;4480:9;4449:41;;;;;;;;:::i;:::-;;;;;;;;4500:38;4521:5;4528:9;4500:20;:38::i;:::-;3478:1067;;;:::o;2774:264::-;2916:16;;;-1:-1:-1;;;;;;2942:28:25;;-1:-1:-1;;;;;2942:28:25;;;;;;;;;2985:46;;-1:-1:-1;;;;;;;;;;;741:45:25;2916:16;;;;;;2985:46;;2838:25;;2985:46;2828:210;;2774:264;:::o;11658:293::-;11793:18;;-1:-1:-1;;;;;;;;;;;741:45:25;11793:23;11785:76;;;;-1:-1:-1;;;11785:76:25;;15070:2:28;11785:76:25;;;15052:21:28;15109:2;15089:18;;;15082:30;15148:34;15128:18;;;15121:62;-1:-1:-1;;;15199:18:28;;;15192:38;15247:19;;11785:76:25;14868:404:28;11785:76:25;11904:1;11892:9;:13;:52;;3418:6;11892:52;;;11908:9;11892:52;11871:18;;;;:73;-1:-1:-1;11658:293:25:o;3186:156::-;-1:-1:-1;;;;;;;;;;;3266:30:25;;;-1:-1:-1;;;;;3266:30:25;3252:10;:44;3244:91;;;;-1:-1:-1;;;3244:91:25;;15479:2:28;3244:91:25;;;15461:21:28;15518:2;15498:18;;;15491:30;15557:34;15537:18;;;15530:62;-1:-1:-1;;;15608:18:28;;;15601:32;15650:19;;3244:91:25;15277:398:28;3244:91:25;3186:156::o;4551:1089::-;4687:1;4659:18;:25;:29;4651:85;;;;-1:-1:-1;;;4651:85:25;;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;4816:27:25;;4808:84;;;;-1:-1:-1;;;4808:84:25;;;;;;;:::i;:::-;-1:-1:-1;;;;;4935:40:25;;4902:23;4935:40;;;:25;;;:40;;;;;:65;;-1:-1:-1;;;;;5069:21:25;;;;5065:91;;5106:27;5115:2;5119:13;5106:8;:27::i;:::-;5170:21;5165:469;5209:18;:25;5193:13;:41;5165:469;;;5267:15;5285:18;5304:13;5285:33;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;;5358:39:25;;5332:23;5358:39;;;;;;;;;;;:52;5285:33;;-1:-1:-1;;;;;;5358:52:25;5432:29;;5424:95;;;;-1:-1:-1;;;5424:95:25;;16707:2:28;5424:95:25;;;16689:21:28;16746:2;16726:18;;;16719:30;16785:34;16765:18;;;16758:62;-1:-1:-1;;;16836:18:28;;;16829:51;16897:19;;5424:95:25;16505:417:28;5424:95:25;5533:58;5545:2;5549:8;5559:16;5577:13;5533:11;:58::i;:::-;5605:18;;;;:::i;:::-;;;;5253:381;;5236:15;;;;;:::i;:::-;;;;5165:469;;;;4641:999;;4551:1089;;:::o;5646:1138::-;5786:1;5758:18;:25;:29;5750:85;;;;-1:-1:-1;;;5750:85:25;;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;5907:27:25;;5899:84;;;;-1:-1:-1;;;5899:84:25;;;;;;;:::i;:::-;-1:-1:-1;;;;;6026:40:25;;5993:23;6026:40;;;:25;;;:40;;;;;:65;;-1:-1:-1;;;;;6160:21:25;;;;6156:79;;6197:27;6206:2;6210:13;6197:8;:27::i;:::-;6249:21;6244:534;6288:18;:25;6272:13;:41;6244:534;;;6346:15;6364:18;6383:13;6364:33;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;;6437:39:25;;6411:23;6437:39;;;;;;;;;;;:52;6364:33;;-1:-1:-1;;;;;;6437:52:25;;;;6511:32;;;;6503:101;;;;-1:-1:-1;;;6503:101:25;;17351:2:28;6503:101:25;;;17333:21:28;17390:2;17370:18;;;17363:30;17429:34;17409:18;;;17402:62;17500:26;17480:18;;;17473:54;17544:19;;6503:101:25;17149:420:28;6503:101:25;6618:45;6633:2;6637:15;6654:8;6618:14;:45::i;:::-;6677:58;6689:2;6693:8;6703:16;6721:13;6677:11;:58::i;:::-;6749:18;;;;:::i;:::-;;;;6332:446;;6315:15;;;;;:::i;:::-;;;;6244:534;;6790:742;6929:1;6901:18;:25;:29;6893:85;;;;-1:-1:-1;;;6893:85:25;;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;7115:27:25;;;7107:94;;;;-1:-1:-1;;;7107:94:25;;17776:2:28;7107:94:25;;;17758:21:28;17815:2;17795:18;;;17788:30;17854:34;17834:18;;;17827:62;-1:-1:-1;;;17905:18:28;;;17898:52;17967:19;;7107:94:25;17574:418:28;7107:94:25;7216:21;7211:315;7255:18;:25;7239:13;:41;7211:315;;;7313:15;7331:18;7350:13;7331:33;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;;7404:39:25;;7378:23;7404:39;;;;;;;;;;;:52;7331:33;;-1:-1:-1;;;;;;7404:52:25;7470:45;7404:2;:52;7331:33;7470:14;:45::i;:::-;7299:227;;7282:15;;;;;:::i;:::-;;;;7211:315;;;;6883:649;6790:742;;:::o;10456:871::-;-1:-1:-1;;;;;10548:19:25;;10544:777;;10591:16;;:21;10583:94;;;;-1:-1:-1;;;10583:94:25;;18199:2:28;10583:94:25;;;18181:21:28;18238:2;18218:18;;;18211:30;18277:34;18257:18;;;18250:62;18348:30;18328:18;;;18321:58;18396:19;;10583:94:25;17997:424:28;10583:94:25;10456:871;;:::o;10544:777::-;10735:1;10716:9;:16;:20;10708:94;;;;-1:-1:-1;;;10708:94:25;;18628:2:28;10708:94:25;;;18610:21:28;18667:2;18647:18;;;18640:30;18706:34;18686:18;;;18679:62;18777:31;18757:18;;;18750:59;18826:19;;10708:94:25;18426:425:28;10708:94:25;-1:-1:-1;;;;;10820:22:25;;10837:4;10820:22;10816:134;;10862:73;10885:5;10862:73;;;;;;;;;;;;;;;;;:22;:73::i;:::-;10964:12;10978:18;11000:5;-1:-1:-1;;;;;11000:18:25;11019:9;11000:29;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10963:66;;;;11048:7;11043:268;;11079:12;;:16;11075:222;;11176:5;11162:21;;-1:-1:-1;;;11162:21:25;;;;;;;;:::i;11075:222::-;11230:48;;-1:-1:-1;;;11230:48:25;;19574:2:28;11230:48:25;;;19556:21:28;19613:2;19593:18;;;19586:30;19652:34;19632:18;;;19625:62;-1:-1:-1;;;19703:18:28;;;19696:36;19749:19;;11230:48:25;19372:402:28;7538:316:25;7625:77;7648:13;7625:77;;;;;;;;;;;;;;;;;:22;:77::i;:::-;7776:17;;;:24;;-1:-1:-1;;;;;7712:40:25;;;;;;;:25;;;;:40;;;;;;;:61;;:88;;;7810:37;;;;;;;;;;;;;;-1:-1:-1;;;;;;7810:37:25;;;;;;7538:316::o;7865:389::-;-1:-1:-1;;;;;;7999:40:25;;:29;:40;;;;;;;;;;;:85;;-1:-1:-1;;;;;7999:85:25;;;-1:-1:-1;;;7999:85:25;-1:-1:-1;;;;;7999:85:25;;;;;;8094:40;;;;;;;-1:-1:-1;8094:25:25;;;:40;;;;;:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7999:85;8094:74;;;;;;;;;;;;;;;;;;;8178:40;;;;;:69;;-1:-1:-1;;;;;;8178:69:25;;;;7865:389::o;8260:2190::-;-1:-1:-1;;;;;8387:27:25;;8379:95;;;;-1:-1:-1;;;8379:95:25;;19981:2:28;8379:95:25;;;19963:21:28;20020:2;20000:18;;;19993:30;20059:34;20039:18;;;20032:62;20130:25;20110:18;;;20103:53;20173:19;;8379:95:25;19779:419:28;8379:95:25;8594:4;-1:-1:-1;;;;;8569:30:25;;;8561:89;;;;-1:-1:-1;;;8561:89:25;;20405:2:28;8561:89:25;;;20387:21:28;20444:2;20424:18;;;20417:30;20483:34;20463:18;;;20456:62;-1:-1:-1;;;20534:18:28;;;20527:44;20588:19;;8561:89:25;20203:410:28;8561:89:25;-1:-1:-1;;;;;;8761:40:25;;8734:24;8761:40;;;;;;;;;;;:65;-1:-1:-1;;;;;8867:40:25;;;;8935:1;8867:25;;;:40;;;;;;:65;-1:-1:-1;;;8761:65:25;;;-1:-1:-1;;;;;8761:65:25;;8734:24;8867:69;;;:::i;:::-;8836:100;;9038:20;9018:16;:40;9014:387;;-1:-1:-1;;;;;9096:40:25;;9074:19;9096:40;;;:25;;;:40;;;;;:80;;9155:20;;9096:80;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;9190:40:25;;;;:25;;;:40;;;;;;;:76;;9096:80;;;;;;;;;;;;;;-1:-1:-1;9096:80:25;;9190:40;9249:16;;9190:76;;;;;;:::i;:::-;;;;;;;;;;;;;:91;;;:76;;;;;;:91;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;9295:43:25;;;;;;;;;;;;:95;;-1:-1:-1;;;;;9295:95:25;-1:-1:-1;;;;;;;;9295:95:25;;;;;;9014:387;-1:-1:-1;;;;;9446:40:25;;;;;;:25;;;:40;;;;;:64;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;9446:64:25;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;9527:40:25;;;;;;;;;;9520:47;;;9662:25;;;9658:786;;9829:17;;;:24;9794:32;;9829:28;;9856:1;;9829:28;:::i;:::-;-1:-1:-1;;;;;9902:40:25;;9871:28;9902:40;;;:25;;;;:40;;;;;;:61;;9794:63;;-1:-1:-1;9981:48:25;;;9977:338;;10049:24;10076:2;:17;;10094:24;10076:43;;;;;;;;:::i;:::-;;;;;;;;;;;10137:17;;;:39;;-1:-1:-1;;;;;10076:43:25;;;;-1:-1:-1;10076:43:25;;10155:20;;10137:39;;;;;;:::i;:::-;;;;;;;;;;;;;:58;;-1:-1:-1;;;;;;10137:58:25;-1:-1:-1;;;;;10137:58:25;;;;;;10213:43;;;;;;-1:-1:-1;10213:25:25;;;:43;;;;;;:64;:87;;;9977:338;10328:2;:17;;:23;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;10328:23:25;;;;;-1:-1:-1;;;;;;10328:23:25;;;;;;;;;-1:-1:-1;;;;;10372:40:25;;;;10328:23;10372:25;;;:40;;;;;;:61;10365:68;-1:-1:-1;;8361:2089:25;;8260:2190;;;:::o;11333:261::-;11506:22;;11573:13;11555:16;11547:40;;;;-1:-1:-1;;;11547:40:25;;;;;;;;:::i;692:173:28:-;760:20;;-1:-1:-1;;;;;809:31:28;;799:42;;789:70;;855:1;852;845:12;789:70;692:173;;;:::o;870:127::-;931:10;926:3;922:20;919:1;912:31;962:4;959:1;952:15;986:4;983:1;976:15;1002:252;1074:2;1068:9;1116:3;1104:16;;1150:18;1135:34;;1171:22;;;1132:62;1129:88;;;1197:18;;:::i;:::-;1233:2;1226:22;1002:252;:::o;1259:253::-;1331:2;1325:9;1373:4;1361:17;;1408:18;1393:34;;1429:22;;;1390:62;1387:88;;;1455:18;;:::i;1517:275::-;1588:2;1582:9;1653:2;1634:13;;-1:-1:-1;;1630:27:28;1618:40;;1688:18;1673:34;;1709:22;;;1670:62;1667:88;;;1735:18;;:::i;:::-;1771:2;1764:22;1517:275;;-1:-1:-1;1517:275:28:o;1797:531::-;1840:5;1893:3;1886:4;1878:6;1874:17;1870:27;1860:55;;1911:1;1908;1901:12;1860:55;1947:6;1934:20;1973:18;1969:2;1966:26;1963:52;;;1995:18;;:::i;:::-;2039:55;2082:2;2063:13;;-1:-1:-1;;2059:27:28;2088:4;2055:38;2039:55;:::i;:::-;2119:2;2110:7;2103:19;2165:3;2158:4;2153:2;2145:6;2141:15;2137:26;2134:35;2131:55;;;2182:1;2179;2172:12;2131:55;2247:2;2240:4;2232:6;2228:17;2221:4;2212:7;2208:18;2195:55;2295:1;2270:16;;;2288:4;2266:27;2259:38;;;;2274:7;1797:531;-1:-1:-1;;;1797:531:28:o;2333:384::-;2413:8;2423:6;2477:3;2470:4;2462:6;2458:17;2454:27;2444:55;;2495:1;2492;2485:12;2444:55;-1:-1:-1;2518:20:28;;2561:18;2550:30;;2547:50;;;2593:1;2590;2583:12;2547:50;2630:4;2622:6;2618:17;2606:29;;2690:3;2683:4;2673:6;2670:1;2666:14;2658:6;2654:27;2650:38;2647:47;2644:67;;;2707:1;2704;2697:12;2644:67;2333:384;;;;;:::o;2722:347::-;2773:8;2783:6;2837:3;2830:4;2822:6;2818:17;2814:27;2804:55;;2855:1;2852;2845:12;2804:55;-1:-1:-1;2878:20:28;;2921:18;2910:30;;2907:50;;;2953:1;2950;2943:12;2907:50;2990:4;2982:6;2978:17;2966:29;;3042:3;3035:4;3026:6;3018;3014:19;3010:30;3007:39;3004:59;;;3059:1;3056;3049:12;3074:1780;3268:6;3276;3284;3292;3300;3308;3316;3369:3;3357:9;3348:7;3344:23;3340:33;3337:53;;;3386:1;3383;3376:12;3337:53;3409:29;3428:9;3409:29;:::i;:::-;3399:39;;3489:2;3478:9;3474:18;3461:32;3512:18;3553:2;3545:6;3542:14;3539:34;;;3569:1;3566;3559:12;3539:34;3592:22;;;;3648:3;3630:16;;;3626:26;3623:46;;;3665:1;3662;3655:12;3623:46;3691:22;;:::i;:::-;3736;3755:2;3736:22;:::i;:::-;3729:5;3722:37;3791:31;3818:2;3814;3810:11;3791:31;:::i;:::-;3786:2;3779:5;3775:14;3768:55;3855:31;3882:2;3878;3874:11;3855:31;:::i;:::-;3850:2;3843:5;3839:14;3832:55;3933:2;3929;3925:11;3912:25;3962:2;3952:8;3949:16;3946:36;;;3978:1;3975;3968:12;3946:36;4014:45;4051:7;4040:8;4036:2;4032:17;4014:45;:::i;:::-;4009:2;4002:5;3998:14;3991:69;;4106:3;4102:2;4098:12;4085:26;4136:2;4126:8;4123:16;4120:36;;;4152:1;4149;4142:12;4120:36;4189:45;4226:7;4215:8;4211:2;4207:17;4189:45;:::i;:::-;4183:3;4172:15;;4165:70;-1:-1:-1;4176:5:28;-1:-1:-1;4312:2:28;4297:18;;4284:32;;-1:-1:-1;4328:16:28;;;4325:36;;;4357:1;4354;4347:12;4325:36;4396:89;4477:7;4466:8;4455:9;4451:24;4396:89;:::i;:::-;4504:8;;-1:-1:-1;4370:115:28;-1:-1:-1;4370:115:28;;-1:-1:-1;4558:38:28;4592:2;4577:18;;4558:38;:::i;:::-;4548:48;;4649:3;4638:9;4634:19;4621:33;4605:49;;4679:2;4669:8;4666:16;4663:36;;;4695:1;4692;4685:12;4663:36;;4734:60;4786:7;4775:8;4764:9;4760:24;4734:60;:::i;:::-;3074:1780;;;;-1:-1:-1;3074:1780:28;;-1:-1:-1;3074:1780:28;;;;4708:86;;-1:-1:-1;;;3074:1780:28:o;4859:186::-;4918:6;4971:2;4959:9;4950:7;4946:23;4942:32;4939:52;;;4987:1;4984;4977:12;4939:52;5010:29;5029:9;5010:29;:::i;:::-;5000:39;4859:186;-1:-1:-1;;;4859:186:28:o;5050:191::-;5118:4;5151:18;5143:6;5140:30;5137:56;;;5173:18;;:::i;:::-;-1:-1:-1;5218:1:28;5214:14;5230:4;5210:25;;5050:191::o;5246:2725::-;5416:9;5451:72;5467:55;5515:6;5467:55;:::i;:::-;5451:72;:::i;:::-;5557:19;;;5595:4;5615:12;;;;5545:3;5646:1;5681:15;;;5670:27;;5720:14;5709:26;;5706:46;;;5748:1;5745;5738:12;5706:46;5772:5;5786:2152;5802:6;5797:3;5794:15;5786:2152;;;5888:3;5875:17;5915:18;5965:2;5952:11;5949:19;5946:109;;;6009:1;6038:2;6034;6027:14;5946:109;6089:11;6082:5;6078:23;6068:33;;6146:4;6141:2;6125:14;6121:23;6117:34;6114:124;;;6192:1;6221:2;6217;6210:14;6114:124;6266:22;;:::i;:::-;6317;6336:2;6317:22;:::i;:::-;6308:7;6301:39;6389:2;6385;6381:11;6368:25;6428:1;6419:7;6416:14;6406:112;;6472:1;6501:2;6497;6490:14;6406:112;6538:16;;;6531:33;6587:2;6629:11;;;6616:25;6657:14;;;6654:104;;;6712:1;6741:2;6737;6730:14;6654:104;6782:15;;;;;6840:14;6833:4;6824:14;;6820:35;6810:136;;6898:1;6887:12;;6928:3;6923;6916:16;6810:136;6983:3;6970:17;6959:28;;7013:69;7029:52;7077:3;7029:52;:::i;7013:69::-;7126:18;;;7222:12;;;7213:22;;7209:31;;;7166:14;;;;7269;7256:28;;7253:121;;;7326:1;7356:3;7351;7344:16;7253:121;7400:12;;;;7425:394;7443:8;7436:5;7433:19;7425:394;;;7526:19;;-1:-1:-1;;;;;;7584:34:28;;7572:47;;7562:164;;7670:1;7704:3;7699;7692:16;7562:164;7743:22;;7464:14;;;;7791;;;;7425:394;;;7839:16;;;7832:31;;;;-1:-1:-1;7876:20:28;;-1:-1:-1;;7916:12:28;;;;5819;;5786:2152;;;-1:-1:-1;7960:5:28;;5246:2725;-1:-1:-1;;;;;;;5246:2725:28:o;8237:380::-;8316:1;8312:12;;;;8359;;;8380:61;;8434:4;8426:6;8422:17;8412:27;;8380:61;8487:2;8479:6;8476:14;8456:18;8453:38;8450:161;;8533:10;8528:3;8524:20;8521:1;8514:31;8568:4;8565:1;8558:15;8596:4;8593:1;8586:15;8450:161;;8237:380;;;:::o;8748:545::-;8850:2;8845:3;8842:11;8839:448;;;8886:1;8911:5;8907:2;8900:17;8956:4;8952:2;8942:19;9026:2;9014:10;9010:19;9007:1;9003:27;8997:4;8993:38;9062:4;9050:10;9047:20;9044:47;;;-1:-1:-1;9085:4:28;9044:47;9140:2;9135:3;9131:12;9128:1;9124:20;9118:4;9114:31;9104:41;;9195:82;9213:2;9206:5;9203:13;9195:82;;;9258:17;;;9239:1;9228:13;9195:82;;;9199:3;;;8748:545;;;:::o;9469:1352::-;9595:3;9589:10;9622:18;9614:6;9611:30;9608:56;;;9644:18;;:::i;:::-;9673:97;9763:6;9723:38;9755:4;9749:11;9723:38;:::i;:::-;9717:4;9673:97;:::i;:::-;9825:4;;9889:2;9878:14;;9906:1;9901:663;;;;10608:1;10625:6;10622:89;;;-1:-1:-1;10677:19:28;;;10671:26;10622:89;-1:-1:-1;;9426:1:28;9422:11;;;9418:24;9414:29;9404:40;9450:1;9446:11;;;9401:57;10724:81;;9871:944;;9901:663;8695:1;8688:14;;;8732:4;8719:18;;-1:-1:-1;;9937:20:28;;;10055:236;10069:7;10066:1;10063:14;10055:236;;;10158:19;;;10152:26;10137:42;;10250:27;;;;10218:1;10206:14;;;;10085:19;;10055:236;;;10059:3;10319:6;10310:7;10307:19;10304:201;;;10380:19;;;10374:26;-1:-1:-1;;10463:1:28;10459:14;;;10475:3;10455:24;10451:37;10447:42;10432:58;10417:74;;10304:201;-1:-1:-1;;;;;10551:1:28;10535:14;;;10531:22;10518:36;;-1:-1:-1;9469:1352:28:o;11299:127::-;11360:10;11355:3;11351:20;11348:1;11341:31;11391:4;11388:1;11381:15;11415:4;11412:1;11405:15;11431:127;11492:10;11487:3;11483:20;11480:1;11473:31;11523:4;11520:1;11513:15;11547:4;11544:1;11537:15;11971:127;12032:10;12027:3;12023:20;12020:1;12013:31;12063:4;12060:1;12053:15;12087:4;12084:1;12077:15;12103:135;12142:3;12163:17;;;12160:43;;12183:18;;:::i;:::-;-1:-1:-1;12230:1:28;12219:13;;12103:135::o;12243:250::-;12328:1;12338:113;12352:6;12349:1;12346:13;12338:113;;;12428:11;;;12422:18;12409:11;;;12402:39;12374:2;12367:10;12338:113;;;-1:-1:-1;;12485:1:28;12467:16;;12460:27;12243:250::o;12498:270::-;12539:3;12577:5;12571:12;12604:6;12599:3;12592:19;12620:76;12689:6;12682:4;12677:3;12673:14;12666:4;12659:5;12655:16;12620:76;:::i;:::-;12750:2;12729:15;-1:-1:-1;;12725:29:28;12716:39;;;;12757:4;12712:50;;12498:270;-1:-1:-1;;12498:270:28:o;12773:2090::-;13041:4;13070:2;13110;13099:9;13095:18;13140:2;13129:9;13122:21;13163:6;13198;13192:13;13229:6;13221;13214:22;13255:3;13245:13;;13289:2;13278:9;13274:18;13267:25;;13351:2;13341:6;13338:1;13334:14;13323:9;13319:30;13315:39;13373:4;13412:2;13404:6;13400:15;13433:1;13443:1249;13457:6;13454:1;13451:13;13443:1249;;;13522:22;;;-1:-1:-1;;13518:37:28;13506:50;;13579:13;;13666:9;;-1:-1:-1;;;;;13662:35:28;13647:51;;13737:11;;;13731:18;13619:15;;;;13789:1;13772:19;;13762:170;;13842:10;13837:3;13833:20;13830:1;13823:31;13881:4;13878:1;13871:15;13913:4;13910:1;13903:15;13762:170;13952:15;;;13945:37;14005:4;14050:11;;;14044:18;14082:15;;;14075:27;;;14163:21;;14197:24;;;;14287:23;;;;-1:-1:-1;;14243:15:28;;;;14348:236;14364:8;14359:3;14356:17;14348:236;;;14445:15;;-1:-1:-1;;;;;;14441:42:28;14427:57;;14553:17;;;;14392:1;14383:11;;;;;14510:14;;;;14348:236;;;-1:-1:-1;14670:12:28;;;;14607:5;-1:-1:-1;;;14635:15:28;;;;13479:1;13472:9;13443:1249;;;-1:-1:-1;;;;;;;441:31:28;;14728:18;;;429:44;14785:22;;;14778:4;14763:20;;14756:52;14825:32;14789:6;14842;14825:32;:::i;:::-;14817:40;12773:2090;-1:-1:-1;;;;;;;;;;12773:2090:28:o;15680:407::-;15882:2;15864:21;;;15921:2;15901:18;;;15894:30;15960:34;15955:2;15940:18;;15933:62;-1:-1:-1;;;16026:2:28;16011:18;;16004:41;16077:3;16062:19;;15680:407::o;16092:408::-;16294:2;16276:21;;;16333:2;16313:18;;;16306:30;16372:34;16367:2;16352:18;;16345:62;-1:-1:-1;;;16438:2:28;16423:18;;16416:42;16490:3;16475:19;;16092:408::o;16927:217::-;16965:3;-1:-1:-1;;;;;17054:2:28;17047:5;17043:14;17081:2;17072:7;17069:15;17066:41;;17087:18;;:::i;:::-;17136:1;17123:15;;16927:217;-1:-1:-1;;;16927:217:28:o;18856:287::-;18985:3;19023:6;19017:13;19039:66;19098:6;19093:3;19086:4;19078:6;19074:17;19039:66;:::i;:::-;19121:16;;;;;18856:287;-1:-1:-1;;18856:287:28:o;19148:219::-;19297:2;19286:9;19279:21;19260:4;19317:44;19357:2;19346:9;19342:18;19334:6;19317:44;:::i;20618:128::-;20685:9;;;20706:11;;;20703:37;;;20720:18;;:::i;20751:127::-;20812:10;20807:3;20803:20;20800:1;20793:31;20843:4;20840:1;20833:15;20867:4;20864:1;20857:15"},"gasEstimates":{"creation":{"codeDepositCost":"1500800","executionCost":"1568","totalCost":"1502368"},"external":{"":"infinite","diamondAddress()":"167","initialize(address,(address,address,address,string,string),(address,uint8,bytes4[])[],address,bytes)":"infinite","owner()":"2357","transferOwnership(address)":"infinite"}},"methodIdentifiers":{"diamondAddress()":"6a60c3b7","initialize(address,(address,address,address,string,string),(address,uint8,bytes4[])[],address,bytes)":"cde7b2c1","owner()":"8da5cb5b","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"facetAddress\",\"type\":\"address\"},{\"internalType\":\"enum IDiamondCut.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"functionSelectors\",\"type\":\"bytes4[]\"}],\"indexed\":false,\"internalType\":\"struct IDiamondCut.FacetCut[]\",\"name\":\"_diamondCut\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_init\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_calldata\",\"type\":\"bytes\"}],\"name\":\"DiamondCut\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"diamondAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"svgManager\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"internalType\":\"struct DiamondSettings\",\"name\":\"params\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"facetAddress\",\"type\":\"address\"},{\"internalType\":\"enum IDiamondCut.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"functionSelectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct IDiamondCut.FacetCut[]\",\"name\":\"_facets\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"diamondInit\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_calldata\",\"type\":\"bytes\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Core diamond proxy contract implementing the EIP-2535 Diamond Standard Functionality has been separated into facets: - DiamondCutFacet: Handles diamond cut operations - DiamondLoupeFacet: Provides introspection functions - OwnershipFacet: Handles ownership operations\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"OwnershipTransferred(address,address)\":{\"details\":\"This emits when ownership of a contract changes.\"}},\"kind\":\"dev\",\"methods\":{\"diamondAddress()\":{\"returns\":{\"_0\":\"This contract's address\"}},\"initialize(address,(address,address,address,string,string),(address,uint8,bytes4[])[],address,bytes)\":{\"params\":{\"_calldata\":\"The initialization calldata\",\"_facets\":\"The initial facets to add\",\"_owner\":\"The owner of the contract\",\"diamondInit\":\"The initialization contract\",\"params\":\"Diamond settings including name and symbol\"}},\"owner()\":{\"returns\":{\"owner_\":\"The current owner address\"}},\"transferOwnership(address)\":{\"params\":{\"_newOwner\":\"The new owner address\"}}},\"title\":\"Diamond\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"diamondAddress()\":{\"notice\":\"Get this contract's address\"},\"initialize(address,(address,address,address,string,string),(address,uint8,bytes4[])[],address,bytes)\":{\"notice\":\"Initialize the Diamond contract\"},\"owner()\":{\"notice\":\"Get the current contract owner\"},\"transferOwnership(address)\":{\"notice\":\"Transfer ownership to a new address\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Diamond.sol\":\"Diamond\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\\n\\npragma solidity >=0.4.16;\\n\\nimport {IERC165} from \\\"../utils/introspection/IERC165.sol\\\";\\n\",\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC721.sol)\\n\\npragma solidity >=0.6.2;\\n\\nimport {IERC721} from \\\"../token/ERC721/IERC721.sol\\\";\\n\",\"keccak256\":\"0xca34c490d41c332106d30b657f00dc028532cb6b9fef2b1729670ce476b36bce\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC721Metadata.sol)\\n\\npragma solidity >=0.6.2;\\n\\nimport {IERC721Metadata} from \\\"../token/ERC721/extensions/IERC721Metadata.sol\\\";\\n\",\"keccak256\":\"0x0137cd417d5c172629ab893df685f0143811e9b409c087a7a759a70021ccc679\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reinitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\\n     *\\n     * NOTE: Consider following the ERC-7201 formula to derive storage locations.\\n     */\\n    function _initializableStorageSlot() internal pure virtual returns (bytes32) {\\n        return INITIALIZABLE_STORAGE;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        bytes32 slot = _initializableStorageSlot();\\n        assembly {\\n            $.slot := slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity >=0.6.2;\\n\\nimport {IERC165} from \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC-721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\\n     *   {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity >=0.6.2;\\n\\nimport {IERC721} from \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity >=0.4.16;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\"},\"contracts/Diamond.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/******************************************************************************\\\\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\n* EIP-2535 Diamonds: https://eips.ethereum.org/EIPS/eip-2535\\n*\\n* Implementation of a diamond.\\n/******************************************************************************/\\n\\nimport \\\"@openzeppelin/contracts/proxy/utils/Initializable.sol\\\";\\nimport \\\"@openzeppelin/contracts/interfaces/IERC165.sol\\\";\\nimport \\\"@openzeppelin/contracts/interfaces/IERC721.sol\\\";\\nimport \\\"@openzeppelin/contracts/interfaces/IERC721Metadata.sol\\\";\\n\\nimport \\\"./interfaces/IERC721Enumerable.sol\\\";\\nimport \\\"./libraries/DiamondLib.sol\\\";\\nimport { LibDiamond } from \\\"./libraries/LibDiamond.sol\\\";\\nimport { DiamondLib } from \\\"./libraries/DiamondLib.sol\\\";\\nimport { IDiamondCut } from \\\"./interfaces/IDiamondCut.sol\\\";\\nimport { DiamondSettings } from \\\"./interfaces/IDiamond.sol\\\";\\nimport { IERC173 } from \\\"./interfaces/IERC173.sol\\\";\\n\\n/**\\n * @title Diamond\\n * @dev Core diamond proxy contract implementing the EIP-2535 Diamond Standard\\n * Functionality has been separated into facets:\\n * - DiamondCutFacet: Handles diamond cut operations\\n * - DiamondLoupeFacet: Provides introspection functions\\n * - OwnershipFacet: Handles ownership operations\\n */\\ncontract Diamond is Initializable, IERC173 {\\n    /**\\n     * @notice Initialize the Diamond contract\\n     * @param _owner The owner of the contract\\n     * @param params Diamond settings including name and symbol\\n     * @param _facets The initial facets to add\\n     * @param diamondInit The initialization contract\\n     * @param _calldata The initialization calldata\\n     */\\n    function initialize(\\n        address _owner,\\n        DiamondSettings memory params,\\n        IDiamondCut.FacetCut[] calldata _facets,\\n        address diamondInit,\\n        bytes calldata _calldata\\n    ) public initializer {\\n        // Set up interfaces\\n        LibDiamond.diamondStorage().supportedInterfaces[type(IERC165).interfaceId] = true;\\n        LibDiamond.diamondStorage().supportedInterfaces[type(IDiamondCut).interfaceId] = true;\\n        LibDiamond.diamondStorage().supportedInterfaces[type(IERC173).interfaceId] = true;\\n        LibDiamond.diamondStorage().supportedInterfaces[type(IERC721).interfaceId] = true;\\n        LibDiamond.diamondStorage().supportedInterfaces[type(IERC721Metadata).interfaceId] = true;\\n        LibDiamond.diamondStorage().supportedInterfaces[type(IERC721Enumerable).interfaceId] = true;\\n\\n        // Initialize the diamond\\n        LibDiamond.diamondCut(_facets, diamondInit, _calldata);\\n\\n        // Set the owner\\n        LibDiamond.setContractOwner(_owner);\\n\\n        // Set the symbol and name of the diamond\\n        DiamondLib.diamondStorage().diamondContract.settings.owner = _owner;\\n        DiamondLib.diamondStorage().diamondContract.metadata['symbol'] = params.symbol;\\n        DiamondLib.diamondStorage().diamondContract.metadata['name'] = params.name;\\n\\n        // Initialize the upgrade timelock\\n        LibDiamond.initializeUpgradeTimelock(LibDiamond.DEFAULT_UPGRADE_TIMELOCK);\\n    }\\n\\n    /**\\n     * @notice Transfer ownership to a new address\\n     * @param _newOwner The new owner address\\n     */\\n    function transferOwnership(address _newOwner) external override {\\n        LibDiamond.enforceIsContractOwner();\\n        LibDiamond.setContractOwner(_newOwner);\\n    }\\n\\n    /**\\n     * @notice Get the current contract owner\\n     * @return owner_ The current owner address\\n     */\\n    function owner() external override view returns (address owner_) {\\n        owner_ = LibDiamond.contractOwner();\\n    }\\n\\n    /**\\n     * @notice Get this contract's address\\n     * @return This contract's address\\n     */\\n    function diamondAddress() external view returns (address) {\\n        return address(this);\\n    }\\n\\n    /**\\n     * @dev Diamond Proxy fallback function\\n     * Find facet for function that is called and execute the\\n     * function using delegatecall\\n     */\\n    fallback() external payable {\\n        LibDiamond.DiamondStorage storage ds;\\n        bytes32 position = LibDiamond.DIAMOND_STORAGE_POSITION;\\n        // Get diamond storage\\n        assembly {\\n            ds.slot := position\\n        }\\n        // Get facet from function selector\\n        address facet = ds.selectorToFacetAndPosition[msg.sig].facetAddress;\\n        require(facet != address(0), \\\"Diamond: Function does not exist\\\");\\n        \\n        // Execute external function from facet using delegatecall and return any value\\n        assembly {\\n            // Copy function selector and any arguments\\n            calldatacopy(0, 0, calldatasize())\\n            // Execute function call using the facet\\n            let result := delegatecall(gas(), facet, 0, calldatasize(), 0, 0)\\n            // Get any return value\\n            returndatacopy(0, 0, returndatasize())\\n            // Return any return value or error back to the caller\\n            switch result\\n                case 0 {\\n                    revert(0, returndatasize())\\n                }\\n                default {\\n                    return(0, returndatasize())\\n                }\\n        }\\n    }\\n\\n    // Allow contract to receive ETH\\n    receive() external payable {}\\n}\\n\",\"keccak256\":\"0x18a9a625ae015e97ce11a91ea42e89e0373bab51862197e2a36b2d0503b84c90\",\"license\":\"MIT\"},\"contracts/interfaces/IDiamond.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.6;\\n\\n\\nstruct DiamondSettings {\\n  address owner;\\n  address factory;\\n  address svgManager;\\n  string symbol;\\n  string name;\\n}\\n\\nstruct DiamondContract {\\n  DiamondSettings settings;\\n  mapping(string=>string) metadata;\\n}\\n\\nstruct DiamondStorage {\\n  DiamondContract diamondContract;\\n}\\n\\n\\ninterface IDiamond {\\n  function getDiamondAddress() external view returns (address);\\n}\\n\\n\",\"keccak256\":\"0x157d83f677f5a33a8893fbd9721fa74cb0bcbbaac00eb00af45f19649d46f464\",\"license\":\"MIT\"},\"contracts/interfaces/IDiamondCut.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.6;\\r\\n\\r\\n/******************************************************************************\\\\\\r\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\r\\n* EIP-2535 Diamonds: https://eips.ethereum.org/EIPS/eip-2535\\r\\n/******************************************************************************/\\r\\n\\r\\ninterface IDiamondCut {\\r\\n    enum FacetCutAction {Add, Replace, Remove}\\r\\n    // Add=0, Replace=1, Remove=2\\r\\n\\r\\n    struct FacetCut {\\r\\n        address facetAddress;\\r\\n        FacetCutAction action;\\r\\n        bytes4[] functionSelectors;\\r\\n    }\\r\\n\\r\\n    /// @notice Add/replace/remove any number of functions and optionally execute\\r\\n    ///         a function with delegatecall\\r\\n    /// @param _diamondCut Contains the facet addresses and function selectors\\r\\n    /// @param _init The address of the contract or facet to execute _calldata\\r\\n    /// @param _calldata A function call, including function selector and arguments\\r\\n    ///                  _calldata is executed with delegatecall on _init\\r\\n    function diamondCut(\\r\\n        FacetCut[] calldata _diamondCut,\\r\\n        address _init,\\r\\n        bytes calldata _calldata\\r\\n    ) external;\\r\\n    \\r\\n    /// @notice Propose an upgrade to be executed after the timelock period\\r\\n    /// @param _diamondCut Contains the facet addresses and function selectors\\r\\n    /// @param _init The address of the contract or facet to execute _calldata\\r\\n    /// @param _calldata A function call, including function selector and arguments\\r\\n    function proposeDiamondCut(\\r\\n        FacetCut[] calldata _diamondCut,\\r\\n        address _init,\\r\\n        bytes calldata _calldata\\r\\n    ) external;\\r\\n    \\r\\n    /// @notice Execute a previously proposed upgrade after the timelock period\\r\\n    function executeDiamondCut() external;\\r\\n    \\r\\n    /// @notice Cancel a proposed upgrade\\r\\n    function cancelDiamondCut() external;\\r\\n\\r\\n    event DiamondCut(FacetCut[] _diamondCut, address _init, bytes _calldata);\\r\\n    event DiamondCutProposed(address indexed proposer, uint256 indexed proposalTime, uint256 executionTime);\\r\\n    event DiamondCutCancelled(address indexed canceller);\\r\\n}\\r\\n\",\"keccak256\":\"0x340a039f0dd63cf19bc669551feec28879457d8b741711ef3513168d620f11bc\",\"license\":\"MIT\"},\"contracts/interfaces/IDiamondLoupe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.6;\\r\\n\\r\\n/******************************************************************************\\\\\\r\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\r\\n* EIP-2535 Diamonds: https://eips.ethereum.org/EIPS/eip-2535\\r\\n/******************************************************************************/\\r\\n\\r\\n// A loupe is a small magnifying glass used to look at diamonds.\\r\\n// These functions look at diamonds\\r\\ninterface IDiamondLoupe {\\r\\n    /// These functions are expected to be called frequently\\r\\n    /// by tools.\\r\\n\\r\\n    struct Facet {\\r\\n        address facetAddress;\\r\\n        bytes4[] functionSelectors;\\r\\n    }\\r\\n\\r\\n    /// @notice Gets all facet addresses and their four byte function selectors.\\r\\n    /// @return facets_ Facet\\r\\n    function facets() external view returns (Facet[] memory facets_);\\r\\n\\r\\n    /// @notice Gets all the function selectors supported by a specific facet.\\r\\n    /// @param _facet The facet address.\\r\\n    /// @return facetFunctionSelectors_\\r\\n    function facetFunctionSelectors(address _facet) external view returns (bytes4[] memory facetFunctionSelectors_);\\r\\n\\r\\n    /// @notice Get all the facet addresses used by a diamond.\\r\\n    /// @return facetAddresses_\\r\\n    function facetAddresses() external view returns (address[] memory facetAddresses_);\\r\\n\\r\\n    /// @notice Gets the facet that supports the given selector.\\r\\n    /// @dev If facet is not found return address(0).\\r\\n    /// @param _functionSelector The function selector.\\r\\n    /// @return facetAddress_ The facet address.\\r\\n    function facetAddress(bytes4 _functionSelector) external view returns (address facetAddress_);\\r\\n}\\r\\n\",\"keccak256\":\"0x817840c97d3fb575971952db3d5096b1f843bffe3176d675cacb18e656f9d2a3\",\"license\":\"MIT\"},\"contracts/interfaces/IERC173.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.6;\\n\\n/// @title ERC-173 Contract Ownership Standard\\n///  Note: the ERC-165 identifier for this interface is 0x7f5828d0\\n/* is ERC165 */\\ninterface IERC173 {\\n    /// @dev This emits when ownership of a contract changes.\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /// @notice Get the address of the owner\\n    /// @return owner_ The address of the owner.\\n    function owner() external view returns (address owner_);\\n\\n    /// @notice Set the address of the new owner of the contract\\n    /// @dev Set _newOwner to address(0) to renounce any ownership.\\n    /// @param _newOwner The address of the new owner of the contract\\n    function transferOwnership(address _newOwner) external;\\n}\\n\",\"keccak256\":\"0x84fe28f479bf96f1819514dd8493ae15955eda0dbabcbb5f24c3c935075a31d4\",\"license\":\"MIT\"},\"contracts/interfaces/IERC721Enumerable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC721/extensions/IERC721Enumerable.sol)\\n\\npragma solidity ^0.8.6;\\n\\nimport \\\"@openzeppelin/contracts/interfaces/IERC721.sol\\\";\\n\\nstruct ERC721EnumerableContract {\\n    // Mapping from owner to list of owned token IDs\\n    mapping(address => mapping(uint256 => uint256)) _ownedTokens;\\n\\n    // Mapping from token ID to index of the owner tokens list\\n    mapping(uint256 => uint256) _ownedTokensIndex;\\n\\n    // Array with all token ids, used for enumeration\\n    uint256[] _allTokens;\\n\\n    // Mapping from token id to position in the allTokens array\\n    mapping(uint256 => uint256) _allTokensIndex;\\n}\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Enumerable is IERC721 {\\n    /**\\n     * @dev Returns the total amount of tokens stored by the contract.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\\n     */\\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\\n     * Use along with {totalSupply} to enumerate all tokens.\\n     */\\n    function tokenByIndex(uint256 index) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x7f76086c568a2873d3b092a896af66068f061474955c1442fe1eb3cbe3d649a2\",\"license\":\"MIT\"},\"contracts/libraries/DiamondLib.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.6;\\n\\nimport \\\"@openzeppelin/contracts/interfaces/IERC165.sol\\\";\\nimport \\\"@openzeppelin/contracts/interfaces/IERC721.sol\\\";\\nimport \\\"@openzeppelin/contracts/interfaces/IERC721Metadata.sol\\\";\\n\\nimport { IDiamondCut } from \\\"../interfaces/IDiamondCut.sol\\\";\\nimport { DiamondStorage } from \\\"../interfaces/IDiamond.sol\\\";\\nimport { IDiamondLoupe } from \\\"../interfaces/IDiamondLoupe.sol\\\";\\nimport { IERC173 } from \\\"../interfaces/IERC173.sol\\\";\\n\\nimport \\\"./LibDiamond.sol\\\";\\n\\nimport \\\"../upgradeInitializers/DiamondInit.sol\\\";\\n\\nlibrary DiamondLib {\\n\\n  bytes32 internal constant DIAMOND_STORAGE_POSITION =\\n    keccak256(\\\"diamond.nextblock.bitgem.app.DiamondStorage.storage\\\");\\n\\n  function diamondStorage() internal pure returns (DiamondStorage storage ds) {\\n    bytes32 position = DIAMOND_STORAGE_POSITION;\\n    assembly {\\n      ds.slot := position\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0x86ef18a587f87fd1a4662201837a60ecb2ca30bf9cf9784e556514cb950f1fcf\",\"license\":\"MIT\"},\"contracts/libraries/LibDiamond.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.6;\\n\\n/******************************************************************************\\\\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\n* EIP-2535 Diamonds: https://eips.ethereum.org/EIPS/eip-2535\\n/******************************************************************************/\\nimport { IDiamondCut } from \\\"../interfaces/IDiamondCut.sol\\\";\\nimport \\\"../interfaces/IERC173.sol\\\"; // for IERC173 interface\\nimport \\\"../interfaces/IDiamondCut.sol\\\";\\n\\n// Remember to add the loupe functions from DiamondLoupeFacet to the diamond.\\n// The loupe functions are required by the EIP2535 Diamonds standard\\n\\nlibrary LibDiamond {\\n    bytes32 constant DIAMOND_STORAGE_POSITION = keccak256(\\\"diamond.standard.diamond.storage\\\");\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n    event DiamondCut(IDiamondCut.FacetCut[] _diamondCut, address _init, bytes _calldata);\\n    event DiamondCutProposed(address indexed proposer, uint256 indexed proposalTime, uint256 executionTime);\\n    event DiamondCutCancelled(address indexed canceller);\\n\\n    struct FacetAddressAndPosition {\\n        address facetAddress;\\n        uint96 functionSelectorPosition; // position in facetFunctionSelectors.functionSelectors array\\n    }\\n\\n    struct FacetFunctionSelectors {\\n        bytes4[] functionSelectors;\\n        uint256 facetAddressPosition; // position of facetAddress in facetAddresses array\\n    }\\n\\n    // Upgrade proposal struct for timelock functionality\\n    struct UpgradeProposal {\\n        IDiamondCut.FacetCut[] diamondCut;\\n        address initAddress;\\n        bytes initCalldata;\\n        uint256 proposalTime;\\n        bool exists;\\n    }\\n\\n    struct DiamondStorage {\\n        // maps function selector to the facet address and\\n        // the position of the selector in the facetFunctionSelectors.selectors array\\n        mapping(bytes4 => FacetAddressAndPosition) selectorToFacetAndPosition;\\n        // maps facet addresses to function selectors\\n        mapping(address => FacetFunctionSelectors) facetFunctionSelectors;\\n        // facet addresses\\n        address[] facetAddresses;\\n        // Used to query if a contract implements an interface.\\n        // Used to implement ERC-165.\\n        mapping(bytes4 => bool) supportedInterfaces;\\n        // owner of the contract\\n        address contractOwner;\\n        // Timelock for upgrades (in seconds)\\n        uint256 upgradeTimelock;\\n        // Storage for the current upgrade proposal\\n        UpgradeProposal upgradeProposal;\\n    }\\n\\n    function diamondStorage() internal pure returns (DiamondStorage storage ds) {\\n        bytes32 position = DIAMOND_STORAGE_POSITION;\\n        assembly {\\n            ds.slot := position\\n        }\\n    }\\n\\n    function setContractOwner(address _newOwner) internal {\\n        DiamondStorage storage ds = diamondStorage();\\n        address previousOwner = ds.contractOwner;\\n        ds.contractOwner = _newOwner;\\n        emit OwnershipTransferred(previousOwner, _newOwner);\\n    }\\n\\n    function contractOwner() internal view returns (address contractOwner_) {\\n        contractOwner_ = diamondStorage().contractOwner;\\n    }\\n\\n    function enforceIsContractOwner() internal view {\\n        require(msg.sender == diamondStorage().contractOwner, \\\"LibDiamond: Must be contract owner\\\");\\n    }\\n\\n    // Timelock constants\\n    uint256 constant DEFAULT_UPGRADE_TIMELOCK = 2 days;\\n\\n    // Internal function version of diamondCut\\n    function diamondCut(\\n        IDiamondCut.FacetCut[] memory _diamondCut,\\n        address _init,\\n        bytes memory _calldata\\n    ) internal {\\n        for (uint256 facetIndex; facetIndex < _diamondCut.length; facetIndex++) {\\n            IDiamondCut.FacetCutAction action = _diamondCut[facetIndex].action;\\n            if (action == IDiamondCut.FacetCutAction.Add) {\\n                addFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\\n            } else if (action == IDiamondCut.FacetCutAction.Replace) {\\n                replaceFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\\n            } else if (action == IDiamondCut.FacetCutAction.Remove) {\\n                removeFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\\n            } else {\\n                revert(\\\"LibDiamondCut: Incorrect FacetCutAction\\\");\\n            }\\n        }\\n        emit DiamondCut(_diamondCut, _init, _calldata);\\n        initializeDiamondCut(_init, _calldata);\\n    }\\n\\n    function addFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\\n        require(_functionSelectors.length > 0, \\\"LibDiamondCut: No selectors in facet to cut\\\");\\n        DiamondStorage storage ds = diamondStorage();        \\n        require(_facetAddress != address(0), \\\"LibDiamondCut: Add facet can't be address(0)\\\");\\n        uint96 selectorPosition = uint96(ds.facetFunctionSelectors[_facetAddress].functionSelectors.length);\\n        // add new facet address if it does not exist\\n        if (selectorPosition == 0) {\\n            addFacet(ds, _facetAddress);            \\n        }\\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\\n            bytes4 selector = _functionSelectors[selectorIndex];\\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\\n            require(oldFacetAddress == address(0), \\\"LibDiamondCut: Can't add function that already exists\\\");\\n            addFunction(ds, selector, selectorPosition, _facetAddress);\\n            selectorPosition++;\\n        }\\n    }\\n\\n    function replaceFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\\n        require(_functionSelectors.length > 0, \\\"LibDiamondCut: No selectors in facet to cut\\\");\\n        DiamondStorage storage ds = diamondStorage();\\n        require(_facetAddress != address(0), \\\"LibDiamondCut: Add facet can't be address(0)\\\");\\n        uint96 selectorPosition = uint96(ds.facetFunctionSelectors[_facetAddress].functionSelectors.length);\\n        // add new facet address if it does not exist\\n        if (selectorPosition == 0) {\\n            addFacet(ds, _facetAddress);\\n        }\\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\\n            bytes4 selector = _functionSelectors[selectorIndex];\\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\\n            require(oldFacetAddress != _facetAddress, \\\"LibDiamondCut: Can't replace function with same function\\\");\\n            removeFunction(ds, oldFacetAddress, selector);\\n            addFunction(ds, selector, selectorPosition, _facetAddress);\\n            selectorPosition++;\\n        }\\n    }\\n\\n    function removeFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\\n        require(_functionSelectors.length > 0, \\\"LibDiamondCut: No selectors in facet to cut\\\");\\n        DiamondStorage storage ds = diamondStorage();\\n        // if function does not exist then do nothing and return\\n        require(_facetAddress == address(0), \\\"LibDiamondCut: Remove facet address must be address(0)\\\");\\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\\n            bytes4 selector = _functionSelectors[selectorIndex];\\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\\n            removeFunction(ds, oldFacetAddress, selector);\\n        }\\n    }\\n\\n    function addFacet(DiamondStorage storage ds, address _facetAddress) internal {\\n        enforceHasContractCode(_facetAddress, \\\"LibDiamondCut: New facet has no code\\\");\\n        ds.facetFunctionSelectors[_facetAddress].facetAddressPosition = ds.facetAddresses.length;\\n        ds.facetAddresses.push(_facetAddress);\\n    }    \\n\\n\\n    function addFunction(DiamondStorage storage ds, bytes4 _selector, uint96 _selectorPosition, address _facetAddress) internal {\\n        ds.selectorToFacetAndPosition[_selector].functionSelectorPosition = _selectorPosition;\\n        ds.facetFunctionSelectors[_facetAddress].functionSelectors.push(_selector);\\n        ds.selectorToFacetAndPosition[_selector].facetAddress = _facetAddress;\\n    }\\n\\n    function removeFunction(DiamondStorage storage ds, address _facetAddress, bytes4 _selector) internal {        \\n        require(_facetAddress != address(0), \\\"LibDiamondCut: Can't remove function that doesn't exist\\\");\\n        // an immutable function is a function defined directly in a diamond\\n        require(_facetAddress != address(this), \\\"LibDiamondCut: Can't remove immutable function\\\");\\n        // replace selector with last selector, then delete last selector\\n        uint256 selectorPosition = ds.selectorToFacetAndPosition[_selector].functionSelectorPosition;\\n        uint256 lastSelectorPosition = ds.facetFunctionSelectors[_facetAddress].functionSelectors.length - 1;\\n        // if not the same then replace _selector with lastSelector\\n        if (selectorPosition != lastSelectorPosition) {\\n            bytes4 lastSelector = ds.facetFunctionSelectors[_facetAddress].functionSelectors[lastSelectorPosition];\\n            ds.facetFunctionSelectors[_facetAddress].functionSelectors[selectorPosition] = lastSelector;\\n            ds.selectorToFacetAndPosition[lastSelector].functionSelectorPosition = uint96(selectorPosition);\\n        }\\n        // delete the last selector\\n        ds.facetFunctionSelectors[_facetAddress].functionSelectors.pop();\\n        delete ds.selectorToFacetAndPosition[_selector];\\n\\n        // if no more selectors for facet address then delete the facet address\\n        if (lastSelectorPosition == 0) {\\n            // replace facet address with last facet address and delete last facet address\\n            uint256 lastFacetAddressPosition = ds.facetAddresses.length - 1;\\n            uint256 facetAddressPosition = ds.facetFunctionSelectors[_facetAddress].facetAddressPosition;\\n            if (facetAddressPosition != lastFacetAddressPosition) {\\n                address lastFacetAddress = ds.facetAddresses[lastFacetAddressPosition];\\n                ds.facetAddresses[facetAddressPosition] = lastFacetAddress;\\n                ds.facetFunctionSelectors[lastFacetAddress].facetAddressPosition = facetAddressPosition;\\n            }\\n            ds.facetAddresses.pop();\\n            delete ds.facetFunctionSelectors[_facetAddress].facetAddressPosition;\\n        }\\n    }\\n\\n    function initializeDiamondCut(address _init, bytes memory _calldata) internal {\\n        if (_init == address(0)) {\\n            require(_calldata.length == 0, \\\"LibDiamondCut: _init is address(0) but_calldata is not empty\\\");\\n        } else {\\n            require(_calldata.length > 0, \\\"LibDiamondCut: _calldata is empty but _init is not address(0)\\\");\\n            if (_init != address(this)) {\\n                enforceHasContractCode(_init, \\\"LibDiamondCut: _init address has no code\\\");\\n            }\\n            (bool success, bytes memory error) = _init.delegatecall(_calldata);\\n            if (!success) {\\n                if (error.length > 0) {\\n                    // bubble up the error\\n                    revert(string(error));\\n                } else {\\n                    revert(\\\"LibDiamondCut: _init function reverted\\\");\\n                }\\n            }\\n        }\\n    }\\n\\n    function enforceHasContractCode(address _contract, string memory _errorMessage) internal view {\\n        uint256 contractSize;\\n        assembly {\\n            contractSize := extcodesize(_contract)\\n        }\\n        require(contractSize > 0, _errorMessage);\\n    }\\n\\n    // Initialize timelock settings for upgrade proposals\\n    function initializeUpgradeTimelock(uint256 _timelock) internal {\\n        DiamondStorage storage ds = diamondStorage();\\n        require(ds.upgradeTimelock == 0, \\\"LibDiamond: Timelock already initialized\\\");\\n        ds.upgradeTimelock = _timelock > 0 ? _timelock : DEFAULT_UPGRADE_TIMELOCK;\\n    }\\n\\n    // Propose a diamond cut to be executed after the timelock\\n    function proposeDiamondCut(\\n        IDiamondCut.FacetCut[] memory _diamondCut,\\n        address _init,\\n        bytes memory _calldata\\n    ) internal {\\n        DiamondStorage storage ds = diamondStorage();\\n        require(!ds.upgradeProposal.exists, \\\"LibDiamond: Upgrade already proposed\\\");\\n        require(ds.upgradeTimelock > 0, \\\"LibDiamond: Timelock not initialized\\\");\\n        \\n        // Create a deep copy of the diamond cut to store in the proposal\\n        IDiamondCut.FacetCut[] memory diamondCutCopy = new IDiamondCut.FacetCut[](_diamondCut.length);\\n        for (uint256 i = 0; i < _diamondCut.length; i++) {\\n            diamondCutCopy[i] = _diamondCut[i];\\n            \\n            // Deep copy the function selectors array\\n            bytes4[] memory selectors = new bytes4[](_diamondCut[i].functionSelectors.length);\\n            for (uint256 j = 0; j < _diamondCut[i].functionSelectors.length; j++) {\\n                selectors[j] = _diamondCut[i].functionSelectors[j];\\n            }\\n            diamondCutCopy[i].functionSelectors = selectors;\\n        }\\n        \\n        // Store the proposal\\n        // Create empty array in storage first\\n        delete ds.upgradeProposal.diamondCut;\\n        \\n        // Manually copy each element and its nested arrays to storage\\n        for (uint256 i = 0; i < _diamondCut.length; i++) {\\n            // Create a new struct in storage by pushing an empty element first\\n            ds.upgradeProposal.diamondCut.push();\\n            \\n            // Now set the values for this element's fields\\n            ds.upgradeProposal.diamondCut[i].facetAddress = _diamondCut[i].facetAddress;\\n            ds.upgradeProposal.diamondCut[i].action = _diamondCut[i].action;\\n            \\n            // For the selectors array, we need to handle it separately\\n            // Clear any existing selectors to ensure clean state\\n            delete ds.upgradeProposal.diamondCut[i].functionSelectors;\\n            \\n            // Copy each selector individually\\n            for (uint256 j = 0; j < _diamondCut[i].functionSelectors.length; j++) {\\n                ds.upgradeProposal.diamondCut[i].functionSelectors.push(_diamondCut[i].functionSelectors[j]);\\n            }\\n        }\\n        ds.upgradeProposal.initAddress = _init;\\n        ds.upgradeProposal.initCalldata = _calldata;\\n        ds.upgradeProposal.proposalTime = block.timestamp;\\n        ds.upgradeProposal.exists = true;\\n        \\n        emit DiamondCutProposed(msg.sender, block.timestamp, block.timestamp + ds.upgradeTimelock);\\n    }\\n    \\n    // Execute a proposed diamond cut after the timelock period\\n    function executeDiamondCut() internal {\\n        DiamondStorage storage ds = diamondStorage();\\n        require(ds.upgradeProposal.exists, \\\"LibDiamond: No upgrade proposal exists\\\");\\n        require(\\n            block.timestamp >= ds.upgradeProposal.proposalTime + ds.upgradeTimelock,\\n            \\\"LibDiamond: Timelock period not elapsed\\\"\\n        );\\n        \\n        // Execute the diamond cut\\n        diamondCut(\\n            ds.upgradeProposal.diamondCut,\\n            ds.upgradeProposal.initAddress,\\n            ds.upgradeProposal.initCalldata\\n        );\\n        \\n        // Reset the proposal\\n        delete ds.upgradeProposal;\\n    }\\n    \\n    // Cancel a proposed diamond cut\\n    function cancelDiamondCut() internal {\\n        DiamondStorage storage ds = diamondStorage();\\n        require(ds.upgradeProposal.exists, \\\"LibDiamond: No upgrade proposal exists\\\");\\n        \\n        // Reset the proposal\\n        delete ds.upgradeProposal;\\n        \\n        emit DiamondCutCancelled(msg.sender);\\n    }\\n}\\n\",\"keccak256\":\"0x3d3bb1df2d228d2738f7ce7b9f634653edda3f638a335b92565e9b42e941b1bb\",\"license\":\"MIT\"},\"contracts/upgradeInitializers/DiamondInit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.6;\\n\\n/******************************************************************************\\\\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\n* EIP-2535 Diamonds: https://eips.ethereum.org/EIPS/eip-2535\\n*\\n* Implementation of a diamond.\\n/******************************************************************************/\\n\\nimport \\\"@openzeppelin/contracts/interfaces/IERC165.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\nimport \\\"@openzeppelin/contracts/interfaces/IERC721Metadata.sol\\\";\\n\\nimport { LibDiamond } from \\\"../libraries/LibDiamond.sol\\\";\\nimport { IDiamondLoupe } from \\\"../interfaces/IDiamondLoupe.sol\\\";\\nimport { IDiamondCut } from \\\"../interfaces/IDiamondCut.sol\\\";\\nimport { IERC173 } from \\\"../interfaces/IERC173.sol\\\";\\n\\n// It is expected that this contract is customized if you want to deploy your diamond\\n// with data from a deployment script. Use the init function to initialize state variables\\n// of your diamond. Add parameters to the init funciton if you need to.\\n\\ncontract DiamondInit {    \\n\\n    // You can add parameters to this function in order to pass in \\n    // data to set your own state variables\\n    function init() external {        \\n\\n    }\\n\\n}\\n\",\"keccak256\":\"0x61c5408d03a8b99ec18b53efcde99f77b6488e76b625aa6c77fbf8539beed20b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"diamondAddress()":{"notice":"Get this contract's address"},"initialize(address,(address,address,address,string,string),(address,uint8,bytes4[])[],address,bytes)":{"notice":"Initialize the Diamond contract"},"owner()":{"notice":"Get the current contract owner"},"transferOwnership(address)":{"notice":"Transfer ownership to a new address"}},"version":1}}},"contracts/Marketplace.sol":{"Marketplace":{"abi":[{"inputs":[{"internalType":"uint256","name":"_marketplaceFee","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"seller","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"EarningsWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"oldFee","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newFee","type":"uint256"}],"name":"FeeUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"itemId","type":"uint256"},{"indexed":false,"internalType":"string","name":"name","type":"string"},{"indexed":false,"internalType":"uint256","name":"price","type":"uint256"},{"indexed":true,"internalType":"address","name":"seller","type":"address"}],"name":"ItemListed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"itemId","type":"uint256"},{"indexed":true,"internalType":"address","name":"seller","type":"address"}],"name":"ItemRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"itemId","type":"uint256"},{"indexed":false,"internalType":"string","name":"name","type":"string"},{"indexed":false,"internalType":"uint256","name":"price","type":"uint256"},{"indexed":true,"internalType":"address","name":"seller","type":"address"},{"indexed":true,"internalType":"address","name":"buyer","type":"address"}],"name":"ItemSold","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"paused","type":"bool"}],"name":"MarketplacePaused","type":"event"},{"inputs":[{"internalType":"uint256","name":"_itemId","type":"uint256"}],"name":"buyItem","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"_seller","type":"address"}],"name":"emergencyWithdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getItemCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_seller","type":"address"}],"name":"getSellerItems","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"items","outputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"address payable","name":"seller","type":"address"},{"internalType":"bool","name":"sold","type":"bool"},{"internalType":"uint256","name":"listedAt","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_name","type":"string"},{"internalType":"string","name":"_description","type":"string"},{"internalType":"uint256","name":"_price","type":"uint256"}],"name":"listItem","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"marketplaceFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"nextItemId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_itemId","type":"uint256"}],"name":"removeItem","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"sellerEarnings","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"sellerItems","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_newFee","type":"uint256"}],"name":"setMarketplaceFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"_paused","type":"bool"}],"name":"setPaused","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdrawEarnings","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdrawFees","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"A simple marketplace for buying and selling items","kind":"dev","methods":{},"title":"Marketplace","version":1},"evm":{"bytecode":{"functionDebugData":{"@_837":{"entryPoint":null,"id":837,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":78,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:200:28","statements":[{"nodeType":"YulBlock","src":"6:3:28","statements":[]},{"body":{"nodeType":"YulBlock","src":"95:103:28","statements":[{"body":{"nodeType":"YulBlock","src":"141:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"153:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"143:6:28"},"nodeType":"YulFunctionCall","src":"143:12:28"},"nodeType":"YulExpressionStatement","src":"143:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"116:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"125:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"112:3:28"},"nodeType":"YulFunctionCall","src":"112:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"137:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"108:3:28"},"nodeType":"YulFunctionCall","src":"108:32:28"},"nodeType":"YulIf","src":"105:52:28"},{"nodeType":"YulAssignment","src":"166:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"182:9:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"176:5:28"},"nodeType":"YulFunctionCall","src":"176:16:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"166:6:28"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"61:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"72:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"84:6:28","type":""}],"src":"14:184:28"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n}","id":28,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x15EA CODESIZE SUB DUP1 PUSH2 0x15EA DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x4E JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0x1 SWAP1 DUP2 SSTORE PUSH1 0x0 SSTORE PUSH2 0x67 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1574 DUP1 PUSH2 0x76 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x71329171 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0x9407EA98 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x9407EA98 EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0xB73C6CE9 EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0xBFB231D2 EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0xD3CBB62B EQ PUSH2 0x30C JUMPI DUP1 PUSH4 0xE7FB74C7 EQ PUSH2 0x339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x71329171 EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0x7749CF23 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x8B012358 EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5C975ABB GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x6A166964 EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0x6A868974 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x6FF1C9BC EQ PUSH2 0x1EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x562021C EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x16C38B3C EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x2C02338F EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x476343EE EQ PUSH2 0x178 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x11E CALLDATASIZE PUSH1 0x4 PUSH2 0x1075 JUMP JUMPDEST PUSH2 0x34C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x142 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x156 PUSH2 0x151 CALLDATASIZE PUSH1 0x4 PUSH2 0x10E2 JUMP JUMPDEST PUSH2 0x586 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x164 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x173 CALLDATASIZE PUSH1 0x4 PUSH2 0x1127 JUMP JUMPDEST PUSH2 0x608 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x184 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x156 PUSH2 0x639 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x199 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x1AE SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x156 PUSH2 0x205 CALLDATASIZE PUSH1 0x4 PUSH2 0x1151 JUMP JUMPDEST PUSH2 0x6E5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x216 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x156 PUSH2 0x225 CALLDATASIZE PUSH1 0x4 PUSH2 0x116C JUMP JUMPDEST PUSH2 0x801 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x236 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x990 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x25A CALLDATASIZE PUSH1 0x4 PUSH2 0x1151 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x278 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x28C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x156 PUSH2 0x2BF CALLDATASIZE PUSH1 0x4 PUSH2 0x116C JUMP JUMPDEST PUSH2 0x9A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x156 PUSH2 0xA5F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F9 PUSH2 0x2F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x116C JUMP JUMPDEST PUSH2 0xB30 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12D SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11CB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x318 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32C PUSH2 0x327 CALLDATASIZE PUSH1 0x4 PUSH2 0x1151 JUMP JUMPDEST PUSH2 0xC8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12D SWAP2 SWAP1 PUSH2 0x1226 JUMP JUMPDEST PUSH2 0x156 PUSH2 0x347 CALLDATASIZE PUSH1 0x4 PUSH2 0x116C JUMP JUMPDEST PUSH2 0xCF8 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x3A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x13585C9AD95D1C1B1858D9481A5CC81C185D5CD959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 MLOAD GT PUSH2 0x3F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4974656D206E616D652063616E6E6F7420626520656D70747900000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39D JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x447 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5072696365206D7573742062652067726561746572207468616E203000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39D JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 DUP2 SWAP1 DUP1 PUSH2 0x458 DUP4 PUSH2 0x1280 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 DUP2 ADD DUP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP9 DUP2 MSTORE DUP3 DUP5 ADD DUP9 SWAP1 MSTORE PUSH1 0x60 DUP4 ADD DUP8 SWAP1 MSTORE CALLER PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x0 PUSH1 0xA0 DUP5 ADD DUP2 SWAP1 MSTORE TIMESTAMP PUSH1 0xC0 DUP6 ADD MSTORE DUP6 DUP2 MSTORE PUSH1 0x3 SWAP1 SWAP3 MSTORE SWAP3 SWAP1 KECCAK256 DUP2 MLOAD DUP2 SSTORE SWAP2 MLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x1 DUP3 ADD SWAP1 PUSH2 0x4B7 SWAP1 DUP3 PUSH2 0x1322 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD SWAP1 PUSH2 0x4CC SWAP1 DUP3 PUSH2 0x1322 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x4 DUP1 DUP4 ADD DUP1 SLOAD PUSH1 0xA0 DUP7 ADD MLOAD ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0xC0 SWAP1 SWAP3 ADD MLOAD PUSH1 0x5 SWAP1 SWAP2 ADD SSTORE CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP4 MSTORE SWAP4 SWAP1 SWAP2 KECCAK256 SWAP1 SWAP3 ADD DUP4 SWAP1 SSTORE SWAP1 MLOAD DUP3 SWAP1 PUSH32 0x16244E47AF8A7D2C923FAA2CAB44315C0514C7AA830682BBB9CC8F0D37AD7548 SWAP1 PUSH2 0x576 SWAP1 DUP10 SWAP1 DUP9 SWAP1 PUSH2 0x13E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39D SWAP1 PUSH2 0x1404 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD DUP3 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0xFF PUSH1 0xA0 SHL NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x2D8CB32B79CED32C38FB4A61D8482C40627602FEB2CC34B50D9B55EEA376D88C SWAP1 PUSH2 0x5FD SWAP1 DUP4 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x624 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x663 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39D SWAP1 PUSH2 0x1404 JUMP JUMPDEST SELFBALANCE DUP1 PUSH2 0x6A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4E6F206665657320746F207769746864726177 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39D JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x6E1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x70F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39D SWAP1 PUSH2 0x1404 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 PUSH2 0x775 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F206561726E696E677320666F7220746869732073656C6C65720000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP3 SWAP1 SSTORE MLOAD DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 DUP5 SWAP2 SWAP1 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x7B9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x48DC35AF7B45E2A81FFFAD55F6E2FAFACDB1D3D0D50D24EBDC16324F5BA757F1 DUP3 PUSH1 0x40 MLOAD PUSH2 0x7F5 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST DUP1 PUSH1 0x0 SLOAD DUP2 LT PUSH2 0x849 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x125D195B48191BD95CC81B9BDD08195E1A5CDD PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39D JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792073656C6C65722063616E2072656D6F7665206974656D0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39D JUMP JUMPDEST PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x90F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742072656D6F766520736F6C64206974656D000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39D JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 DUP2 SSTORE SWAP1 PUSH2 0x92E PUSH1 0x1 DUP4 ADD DUP3 PUSH2 0xF7C JUMP JUMPDEST PUSH2 0x93C PUSH1 0x2 DUP4 ADD PUSH1 0x0 PUSH2 0xF7C JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x3 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x5 SWAP1 SWAP2 ADD DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD CALLER SWAP2 DUP6 SWAP2 PUSH32 0x48694456128327A59523D36340D5E5B0157DFEFECDECEB0B56E1FA3337FD0D45 SWAP2 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SLOAD PUSH2 0x9A1 SWAP2 SWAP1 PUSH2 0x1445 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39D SWAP1 PUSH2 0x1404 JUMP JUMPDEST PUSH2 0x3E8 DUP2 GT ISZERO PUSH2 0xA1A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4665652063616E6E6F742065786365656420313025 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39D JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD SWAP1 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x528D9479E9F9889A87A3C30C7F7BA537E5E59C4C85A37733B16E57C62DF61302 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 PUSH2 0xABC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F206561726E696E677320746F207769746864726177000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39D JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP3 SWAP1 SSTORE MLOAD DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 DUP5 SWAP2 SWAP1 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xAF7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x48DC35AF7B45E2A81FFFAD55F6E2FAFACDB1D3D0D50D24EBDC16324F5BA757F1 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD SWAP2 SWAP3 SWAP2 PUSH2 0xB52 SWAP1 PUSH2 0x1299 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB7E SWAP1 PUSH2 0x1299 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBCB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBA0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBCB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBAE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0xBE0 SWAP1 PUSH2 0x1299 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC0C SWAP1 PUSH2 0x1299 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC59 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC2E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC59 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC3C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x5 SWAP1 SWAP5 ADD SLOAD SWAP3 SWAP4 SWAP1 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP3 POP PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV PUSH1 0xFF AND SWAP1 DUP8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xCEC JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xCD8 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xD4A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x13585C9AD95D1C1B1858D9481A5CC81C185D5CD959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39D JUMP JUMPDEST DUP1 PUSH1 0x0 SLOAD DUP2 LT PUSH2 0xD92 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x125D195B48191BD95CC81B9BDD08195E1A5CDD PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39D JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xDF0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x125D195B48185B1C9958591E481CDBDB19 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39D JUMP JUMPDEST PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xE4C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742062757920796F7572206F776E206974656D0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39D JUMP JUMPDEST DUP1 PUSH1 0x3 ADD SLOAD CALLVALUE EQ PUSH2 0xE9F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E636F7272656374207061796D656E7420616D6F756E740000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39D JUMP JUMPDEST PUSH1 0x4 DUP2 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH1 0x1 SLOAD PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x0 SWAP2 PUSH2 0x2710 SWAP2 PUSH2 0xECD SWAP2 SWAP1 PUSH2 0x145E JUMP JUMPDEST PUSH2 0xED7 SWAP2 SWAP1 PUSH2 0x1475 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP4 PUSH1 0x3 ADD SLOAD PUSH2 0xEEB SWAP2 SWAP1 PUSH2 0x1445 JUMP JUMPDEST PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP DUP4 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0xF1C SWAP1 DUP5 SWAP1 PUSH2 0x1497 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x40 MLOAD CALLER SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP9 SWAP2 PUSH32 0x965F5F1CABD4450617EF4E4FB57AFED8A8B87544C5549305429C15706FC892CF SWAP2 PUSH2 0xF6D SWAP2 PUSH1 0x1 DUP11 ADD SWAP2 SWAP1 PUSH2 0x14AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0xF88 SWAP1 PUSH2 0x1299 JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0xF98 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0xFB6 SWAP2 SWAP1 PUSH2 0xFB9 JUMP JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xFCE JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xFBA JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xFF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1014 JUMPI PUSH2 0x1014 PUSH2 0xFD2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x103C JUMPI PUSH2 0x103C PUSH2 0xFD2 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x1055 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x108A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x10A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10AE DUP8 DUP4 DUP9 ADD PUSH2 0xFE8 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x10C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10D1 DUP7 DUP3 DUP8 ADD PUSH2 0xFE8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1122 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x113A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1143 DUP4 PUSH2 0x110B JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1163 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1104 DUP3 PUSH2 0x110B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x117E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x11AB JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x118F JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP8 DUP2 MSTORE PUSH1 0xE0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x11E4 PUSH1 0xE0 DUP4 ADD DUP10 PUSH2 0x1185 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x11F6 DUP2 DUP10 PUSH2 0x1185 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD SWAP8 SWAP1 SWAP8 MSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND PUSH1 0x80 DUP5 ADD MSTORE SWAP1 ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 SWAP1 SWAP2 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x125E JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1242 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1292 JUMPI PUSH2 0x1292 PUSH2 0x126A JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x12AD JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x12CD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x131D JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x12FA JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1319 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1306 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x133C JUMPI PUSH2 0x133C PUSH2 0xFD2 JUMP JUMPDEST PUSH2 0x1350 DUP2 PUSH2 0x134A DUP5 SLOAD PUSH2 0x1299 JUMP JUMPDEST DUP5 PUSH2 0x12D3 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1385 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x136D JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x1319 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x13B4 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x1395 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x13D2 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x13F5 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1185 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206F776E65722063616E2063616C6C20746869732066756E6374696F PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x37 PUSH1 0xF9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1458 JUMPI PUSH2 0x1458 PUSH2 0x126A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x1458 JUMPI PUSH2 0x1458 PUSH2 0x126A JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1492 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1458 JUMPI PUSH2 0x1458 PUSH2 0x126A JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 DUP1 DUP5 SLOAD PUSH2 0x14BC DUP2 PUSH2 0x1299 JUMP JUMPDEST DUP1 PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x60 PUSH1 0x1 DUP1 DUP5 AND PUSH1 0x0 DUP2 EQ PUSH2 0x14DE JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x14F8 JUMPI PUSH2 0x1529 JUMP JUMPDEST PUSH1 0xFF NOT DUP6 AND DUP9 DUP5 ADD MSTORE DUP4 ISZERO ISZERO PUSH1 0x5 SHL DUP9 ADD DUP4 ADD SWAP6 POP PUSH2 0x1529 JUMP JUMPDEST DUP10 PUSH1 0x0 MSTORE PUSH1 0x20 DUP1 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x1520 JUMPI DUP2 SLOAD DUP12 DUP3 ADD DUP8 ADD MSTORE SWAP1 DUP5 ADD SWAP1 DUP3 ADD PUSH2 0x1505 JUMP JUMPDEST DUP11 ADD DUP6 ADD SWAP8 POP POP POP JUMPDEST POP POP POP POP POP PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 REVERT DUP14 0x5D 0xB7 SWAP8 ADDRESS RETURNDATASIZE 0x4E DUP6 0xCD 0xE0 PUSH6 0x920126D8ED0A 0xD6 SIGNEXTEND 0xC9 0xEB MSTORE 0xED 0xA9 CALL SWAP15 SWAP14 DUP4 PUSH19 0xA264736F6C6343000814003300000000000000 ","sourceMap":"146:4951:8:-:0;;;1586:158;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1633:5;:18;;-1:-1:-1;;;;;;1633:18:8;1641:10;1633:18;;;;1661:32;;;1633:5;1703:14;146:4951;;14:184:28;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;-1:-1:-1;176:16:28;;14:184;-1:-1:-1;14:184:28:o;:::-;146:4951:8;;;;;;"},"deployedBytecode":{"functionDebugData":{"@buyItem_998":{"entryPoint":3320,"id":998,"parameterSlots":1,"returnSlots":0},"@emergencyWithdraw_1217":{"entryPoint":1765,"id":1217,"parameterSlots":1,"returnSlots":0},"@getItemCount_1104":{"entryPoint":2448,"id":1104,"parameterSlots":0,"returnSlots":1},"@getSellerItems_1094":{"entryPoint":3212,"id":1094,"parameterSlots":1,"returnSlots":1},"@items_730":{"entryPoint":2864,"id":730,"parameterSlots":0,"returnSlots":0},"@listItem_913":{"entryPoint":844,"id":913,"parameterSlots":3,"returnSlots":1},"@marketplaceFee_721":{"entryPoint":null,"id":721,"parameterSlots":0,"returnSlots":0},"@nextItemId_719":{"entryPoint":null,"id":719,"parameterSlots":0,"returnSlots":0},"@owner_723":{"entryPoint":null,"id":723,"parameterSlots":0,"returnSlots":0},"@paused_725":{"entryPoint":null,"id":725,"parameterSlots":0,"returnSlots":0},"@removeItem_1041":{"entryPoint":2049,"id":1041,"parameterSlots":1,"returnSlots":0},"@sellerEarnings_739":{"entryPoint":null,"id":739,"parameterSlots":0,"returnSlots":0},"@sellerItems_735":{"entryPoint":1544,"id":735,"parameterSlots":0,"returnSlots":0},"@setMarketplaceFee_1132":{"entryPoint":2470,"id":1132,"parameterSlots":1,"returnSlots":0},"@setPaused_1148":{"entryPoint":1414,"id":1148,"parameterSlots":1,"returnSlots":0},"@withdrawEarnings_1081":{"entryPoint":2655,"id":1081,"parameterSlots":0,"returnSlots":0},"@withdrawFees_1177":{"entryPoint":1593,"id":1177,"parameterSlots":0,"returnSlots":0},"abi_decode_address":{"entryPoint":4363,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_string":{"entryPoint":4072,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":4433,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":4391,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool":{"entryPoint":4322,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256":{"entryPoint":4213,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256":{"entryPoint":4460,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":4485,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":4646,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":5090,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_string_storage_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":5290,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5124,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_35376dbc8c18478611197b64504df0dcfe4a345cbf3db48477b7c4b0492d91ae__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_36a9abf49bfa7633f09db808bae8ebe2a2277f7d99a58c00264cedbe4abcde1f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_524becf2bd3d6f3c74c4c55f46993b5de22a6261a1a6108cc85fed135e73299c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_697e1050e49c2a32d802845ecac75df93b62d147a0a67808d6dec2b44ce5e80f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8b7370d40c27723f4db0975059c334d407b3f7019c911c906aea1d76bba123c6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_92b6a01d7099634b778cb9907b4eb2ad983a23bc76b4433f60f1fb7a7b57ec5a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b50e07eb60958e727fe1a91dc3b40a6c689ba04e85f6a3516d329471b8e19835__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baf95424eee75020d0531466e88a19330eb5d53baf30242b769338c4e01f5ddf__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ce0a686b3a77d89aa203ef1917c5a461c03ae6389a02bb3c3b9a97959d623907__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d97385136630b09429aa46486568fc56c245d310236690696fbd4ad949ae190a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f2aba8e3fa98fef30df3b07bf1481d5fabaef66c067d55613846d937a0ee9c3f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_payable_t_bool_t_uint256__to_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_payable_t_bool_t_uint256__fromStack_reversed":{"entryPoint":4555,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":5271,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":5237,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":5214,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":5189,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":4819,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":4898,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":4761,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"increment_t_uint256":{"entryPoint":4736,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":4714,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":4050,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:15113:28","statements":[{"nodeType":"YulBlock","src":"6:3:28","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:28","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:28","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:28","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:28"},"nodeType":"YulFunctionCall","src":"66:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:28"},"nodeType":"YulFunctionCall","src":"56:31:28"},"nodeType":"YulExpressionStatement","src":"56:31:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:28","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:28"},"nodeType":"YulFunctionCall","src":"96:15:28"},"nodeType":"YulExpressionStatement","src":"96:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:28"},"nodeType":"YulFunctionCall","src":"120:15:28"},"nodeType":"YulExpressionStatement","src":"120:15:28"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:28"},{"body":{"nodeType":"YulBlock","src":"199:666:28","statements":[{"body":{"nodeType":"YulBlock","src":"248:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"257:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"260:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"250:6:28"},"nodeType":"YulFunctionCall","src":"250:12:28"},"nodeType":"YulExpressionStatement","src":"250:12:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"227:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"235:4:28","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"223:3:28"},"nodeType":"YulFunctionCall","src":"223:17:28"},{"name":"end","nodeType":"YulIdentifier","src":"242:3:28"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"219:3:28"},"nodeType":"YulFunctionCall","src":"219:27:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"212:6:28"},"nodeType":"YulFunctionCall","src":"212:35:28"},"nodeType":"YulIf","src":"209:55:28"},{"nodeType":"YulVariableDeclaration","src":"273:30:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"296:6:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"283:12:28"},"nodeType":"YulFunctionCall","src":"283:20:28"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"277:2:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"312:28:28","value":{"kind":"number","nodeType":"YulLiteral","src":"322:18:28","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"316:2:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"363:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"365:16:28"},"nodeType":"YulFunctionCall","src":"365:18:28"},"nodeType":"YulExpressionStatement","src":"365:18:28"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"355:2:28"},{"name":"_2","nodeType":"YulIdentifier","src":"359:2:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"352:2:28"},"nodeType":"YulFunctionCall","src":"352:10:28"},"nodeType":"YulIf","src":"349:36:28"},{"nodeType":"YulVariableDeclaration","src":"394:17:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"408:2:28","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"404:3:28"},"nodeType":"YulFunctionCall","src":"404:7:28"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"398:2:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"420:23:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:2:28","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"434:5:28"},"nodeType":"YulFunctionCall","src":"434:9:28"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"424:6:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"452:71:28","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"474:6:28"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"498:2:28"},{"kind":"number","nodeType":"YulLiteral","src":"502:4:28","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"494:3:28"},"nodeType":"YulFunctionCall","src":"494:13:28"},{"name":"_3","nodeType":"YulIdentifier","src":"509:2:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"490:3:28"},"nodeType":"YulFunctionCall","src":"490:22:28"},{"kind":"number","nodeType":"YulLiteral","src":"514:2:28","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"486:3:28"},"nodeType":"YulFunctionCall","src":"486:31:28"},{"name":"_3","nodeType":"YulIdentifier","src":"519:2:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"482:3:28"},"nodeType":"YulFunctionCall","src":"482:40:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"470:3:28"},"nodeType":"YulFunctionCall","src":"470:53:28"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"456:10:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"582:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"584:16:28"},"nodeType":"YulFunctionCall","src":"584:18:28"},"nodeType":"YulExpressionStatement","src":"584:18:28"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"541:10:28"},{"name":"_2","nodeType":"YulIdentifier","src":"553:2:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"538:2:28"},"nodeType":"YulFunctionCall","src":"538:18:28"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"561:10:28"},{"name":"memPtr","nodeType":"YulIdentifier","src":"573:6:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"558:2:28"},"nodeType":"YulFunctionCall","src":"558:22:28"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"535:2:28"},"nodeType":"YulFunctionCall","src":"535:46:28"},"nodeType":"YulIf","src":"532:72:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"620:2:28","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"624:10:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"613:6:28"},"nodeType":"YulFunctionCall","src":"613:22:28"},"nodeType":"YulExpressionStatement","src":"613:22:28"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"651:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"659:2:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"644:6:28"},"nodeType":"YulFunctionCall","src":"644:18:28"},"nodeType":"YulExpressionStatement","src":"644:18:28"},{"body":{"nodeType":"YulBlock","src":"710:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"719:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"722:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"712:6:28"},"nodeType":"YulFunctionCall","src":"712:12:28"},"nodeType":"YulExpressionStatement","src":"712:12:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"685:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"693:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"681:3:28"},"nodeType":"YulFunctionCall","src":"681:15:28"},{"kind":"number","nodeType":"YulLiteral","src":"698:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"677:3:28"},"nodeType":"YulFunctionCall","src":"677:26:28"},{"name":"end","nodeType":"YulIdentifier","src":"705:3:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"674:2:28"},"nodeType":"YulFunctionCall","src":"674:35:28"},"nodeType":"YulIf","src":"671:55:28"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"752:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"760:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"748:3:28"},"nodeType":"YulFunctionCall","src":"748:17:28"},{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"771:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"779:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"767:3:28"},"nodeType":"YulFunctionCall","src":"767:17:28"},{"name":"_1","nodeType":"YulIdentifier","src":"786:2:28"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"735:12:28"},"nodeType":"YulFunctionCall","src":"735:54:28"},"nodeType":"YulExpressionStatement","src":"735:54:28"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"813:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"821:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"809:3:28"},"nodeType":"YulFunctionCall","src":"809:15:28"},{"kind":"number","nodeType":"YulLiteral","src":"826:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"805:3:28"},"nodeType":"YulFunctionCall","src":"805:26:28"},{"kind":"number","nodeType":"YulLiteral","src":"833:1:28","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"798:6:28"},"nodeType":"YulFunctionCall","src":"798:37:28"},"nodeType":"YulExpressionStatement","src":"798:37:28"},{"nodeType":"YulAssignment","src":"844:15:28","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"853:6:28"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"844:5:28"}]}]},"name":"abi_decode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"173:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"181:3:28","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"189:5:28","type":""}],"src":"146:719:28"},{"body":{"nodeType":"YulBlock","src":"994:487:28","statements":[{"body":{"nodeType":"YulBlock","src":"1040:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1049:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1052:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1042:6:28"},"nodeType":"YulFunctionCall","src":"1042:12:28"},"nodeType":"YulExpressionStatement","src":"1042:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1015:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"1024:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1011:3:28"},"nodeType":"YulFunctionCall","src":"1011:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"1036:2:28","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1007:3:28"},"nodeType":"YulFunctionCall","src":"1007:32:28"},"nodeType":"YulIf","src":"1004:52:28"},{"nodeType":"YulVariableDeclaration","src":"1065:37:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1092:9:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1079:12:28"},"nodeType":"YulFunctionCall","src":"1079:23:28"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1069:6:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1111:28:28","value":{"kind":"number","nodeType":"YulLiteral","src":"1121:18:28","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1115:2:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"1166:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1175:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1178:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1168:6:28"},"nodeType":"YulFunctionCall","src":"1168:12:28"},"nodeType":"YulExpressionStatement","src":"1168:12:28"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1154:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"1162:2:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1151:2:28"},"nodeType":"YulFunctionCall","src":"1151:14:28"},"nodeType":"YulIf","src":"1148:34:28"},{"nodeType":"YulAssignment","src":"1191:60:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1223:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"1234:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1219:3:28"},"nodeType":"YulFunctionCall","src":"1219:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1243:7:28"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"1201:17:28"},"nodeType":"YulFunctionCall","src":"1201:50:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1191:6:28"}]},{"nodeType":"YulVariableDeclaration","src":"1260:48:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1293:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1304:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1289:3:28"},"nodeType":"YulFunctionCall","src":"1289:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1276:12:28"},"nodeType":"YulFunctionCall","src":"1276:32:28"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1264:8:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"1337:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1346:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1349:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1339:6:28"},"nodeType":"YulFunctionCall","src":"1339:12:28"},"nodeType":"YulExpressionStatement","src":"1339:12:28"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1323:8:28"},{"name":"_1","nodeType":"YulIdentifier","src":"1333:2:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1320:2:28"},"nodeType":"YulFunctionCall","src":"1320:16:28"},"nodeType":"YulIf","src":"1317:36:28"},{"nodeType":"YulAssignment","src":"1362:62:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1394:9:28"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1405:8:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1390:3:28"},"nodeType":"YulFunctionCall","src":"1390:24:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1416:7:28"}],"functionName":{"name":"abi_decode_string","nodeType":"YulIdentifier","src":"1372:17:28"},"nodeType":"YulFunctionCall","src":"1372:52:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1362:6:28"}]},{"nodeType":"YulAssignment","src":"1433:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1460:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1471:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1456:3:28"},"nodeType":"YulFunctionCall","src":"1456:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1443:12:28"},"nodeType":"YulFunctionCall","src":"1443:32:28"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1433:6:28"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"944:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"955:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"967:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"975:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"983:6:28","type":""}],"src":"870:611:28"},{"body":{"nodeType":"YulBlock","src":"1587:76:28","statements":[{"nodeType":"YulAssignment","src":"1597:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1609:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1620:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1605:3:28"},"nodeType":"YulFunctionCall","src":"1605:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1597:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1639:9:28"},{"name":"value0","nodeType":"YulIdentifier","src":"1650:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1632:6:28"},"nodeType":"YulFunctionCall","src":"1632:25:28"},"nodeType":"YulExpressionStatement","src":"1632:25:28"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1556:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1567:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1578:4:28","type":""}],"src":"1486:177:28"},{"body":{"nodeType":"YulBlock","src":"1735:206:28","statements":[{"body":{"nodeType":"YulBlock","src":"1781:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1790:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1793:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1783:6:28"},"nodeType":"YulFunctionCall","src":"1783:12:28"},"nodeType":"YulExpressionStatement","src":"1783:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1756:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"1765:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1752:3:28"},"nodeType":"YulFunctionCall","src":"1752:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"1777:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1748:3:28"},"nodeType":"YulFunctionCall","src":"1748:32:28"},"nodeType":"YulIf","src":"1745:52:28"},{"nodeType":"YulVariableDeclaration","src":"1806:36:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1832:9:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1819:12:28"},"nodeType":"YulFunctionCall","src":"1819:23:28"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1810:5:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"1895:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1904:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1907:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1897:6:28"},"nodeType":"YulFunctionCall","src":"1897:12:28"},"nodeType":"YulExpressionStatement","src":"1897:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1864:5:28"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1885:5:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1878:6:28"},"nodeType":"YulFunctionCall","src":"1878:13:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1871:6:28"},"nodeType":"YulFunctionCall","src":"1871:21:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1861:2:28"},"nodeType":"YulFunctionCall","src":"1861:32:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1854:6:28"},"nodeType":"YulFunctionCall","src":"1854:40:28"},"nodeType":"YulIf","src":"1851:60:28"},{"nodeType":"YulAssignment","src":"1920:15:28","value":{"name":"value","nodeType":"YulIdentifier","src":"1930:5:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1920:6:28"}]}]},"name":"abi_decode_tuple_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1701:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1712:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1724:6:28","type":""}],"src":"1668:273:28"},{"body":{"nodeType":"YulBlock","src":"1995:124:28","statements":[{"nodeType":"YulAssignment","src":"2005:29:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2027:6:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2014:12:28"},"nodeType":"YulFunctionCall","src":"2014:20:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2005:5:28"}]},{"body":{"nodeType":"YulBlock","src":"2097:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2106:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2109:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2099:6:28"},"nodeType":"YulFunctionCall","src":"2099:12:28"},"nodeType":"YulExpressionStatement","src":"2099:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2056:5:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2067:5:28"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2082:3:28","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2087:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2078:3:28"},"nodeType":"YulFunctionCall","src":"2078:11:28"},{"kind":"number","nodeType":"YulLiteral","src":"2091:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2074:3:28"},"nodeType":"YulFunctionCall","src":"2074:19:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2063:3:28"},"nodeType":"YulFunctionCall","src":"2063:31:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2053:2:28"},"nodeType":"YulFunctionCall","src":"2053:42:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2046:6:28"},"nodeType":"YulFunctionCall","src":"2046:50:28"},"nodeType":"YulIf","src":"2043:70:28"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1974:6:28","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1985:5:28","type":""}],"src":"1946:173:28"},{"body":{"nodeType":"YulBlock","src":"2211:167:28","statements":[{"body":{"nodeType":"YulBlock","src":"2257:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2266:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2269:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2259:6:28"},"nodeType":"YulFunctionCall","src":"2259:12:28"},"nodeType":"YulExpressionStatement","src":"2259:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2232:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"2241:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2228:3:28"},"nodeType":"YulFunctionCall","src":"2228:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"2253:2:28","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2224:3:28"},"nodeType":"YulFunctionCall","src":"2224:32:28"},"nodeType":"YulIf","src":"2221:52:28"},{"nodeType":"YulAssignment","src":"2282:39:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2311:9:28"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2292:18:28"},"nodeType":"YulFunctionCall","src":"2292:29:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2282:6:28"}]},{"nodeType":"YulAssignment","src":"2330:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2357:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"2368:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2353:3:28"},"nodeType":"YulFunctionCall","src":"2353:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2340:12:28"},"nodeType":"YulFunctionCall","src":"2340:32:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2330:6:28"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2169:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2180:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2192:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2200:6:28","type":""}],"src":"2124:254:28"},{"body":{"nodeType":"YulBlock","src":"2478:92:28","statements":[{"nodeType":"YulAssignment","src":"2488:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2500:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"2511:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2496:3:28"},"nodeType":"YulFunctionCall","src":"2496:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2488:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2530:9:28"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2555:6:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2548:6:28"},"nodeType":"YulFunctionCall","src":"2548:14:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2541:6:28"},"nodeType":"YulFunctionCall","src":"2541:22:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2523:6:28"},"nodeType":"YulFunctionCall","src":"2523:41:28"},"nodeType":"YulExpressionStatement","src":"2523:41:28"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2447:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2458:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2469:4:28","type":""}],"src":"2383:187:28"},{"body":{"nodeType":"YulBlock","src":"2645:116:28","statements":[{"body":{"nodeType":"YulBlock","src":"2691:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2700:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2703:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2693:6:28"},"nodeType":"YulFunctionCall","src":"2693:12:28"},"nodeType":"YulExpressionStatement","src":"2693:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2666:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"2675:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2662:3:28"},"nodeType":"YulFunctionCall","src":"2662:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"2687:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2658:3:28"},"nodeType":"YulFunctionCall","src":"2658:32:28"},"nodeType":"YulIf","src":"2655:52:28"},{"nodeType":"YulAssignment","src":"2716:39:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2745:9:28"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2726:18:28"},"nodeType":"YulFunctionCall","src":"2726:29:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2716:6:28"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2611:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2622:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2634:6:28","type":""}],"src":"2575:186:28"},{"body":{"nodeType":"YulBlock","src":"2836:110:28","statements":[{"body":{"nodeType":"YulBlock","src":"2882:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2891:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2894:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2884:6:28"},"nodeType":"YulFunctionCall","src":"2884:12:28"},"nodeType":"YulExpressionStatement","src":"2884:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2857:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"2866:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2853:3:28"},"nodeType":"YulFunctionCall","src":"2853:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"2878:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2849:3:28"},"nodeType":"YulFunctionCall","src":"2849:32:28"},"nodeType":"YulIf","src":"2846:52:28"},{"nodeType":"YulAssignment","src":"2907:33:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2930:9:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2917:12:28"},"nodeType":"YulFunctionCall","src":"2917:23:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2907:6:28"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2802:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2813:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2825:6:28","type":""}],"src":"2766:180:28"},{"body":{"nodeType":"YulBlock","src":"3052:102:28","statements":[{"nodeType":"YulAssignment","src":"3062:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3074:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"3085:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3070:3:28"},"nodeType":"YulFunctionCall","src":"3070:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3062:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3104:9:28"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3119:6:28"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3135:3:28","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3140:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3131:3:28"},"nodeType":"YulFunctionCall","src":"3131:11:28"},{"kind":"number","nodeType":"YulLiteral","src":"3144:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3127:3:28"},"nodeType":"YulFunctionCall","src":"3127:19:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3115:3:28"},"nodeType":"YulFunctionCall","src":"3115:32:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3097:6:28"},"nodeType":"YulFunctionCall","src":"3097:51:28"},"nodeType":"YulExpressionStatement","src":"3097:51:28"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3021:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3032:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3043:4:28","type":""}],"src":"2951:203:28"},{"body":{"nodeType":"YulBlock","src":"3209:373:28","statements":[{"nodeType":"YulVariableDeclaration","src":"3219:26:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3239:5:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3233:5:28"},"nodeType":"YulFunctionCall","src":"3233:12:28"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3223:6:28","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3261:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"3266:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3254:6:28"},"nodeType":"YulFunctionCall","src":"3254:19:28"},"nodeType":"YulExpressionStatement","src":"3254:19:28"},{"nodeType":"YulVariableDeclaration","src":"3282:10:28","value":{"kind":"number","nodeType":"YulLiteral","src":"3291:1:28","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3286:1:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"3353:110:28","statements":[{"nodeType":"YulVariableDeclaration","src":"3367:14:28","value":{"kind":"number","nodeType":"YulLiteral","src":"3377:4:28","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3371:2:28","type":""}]},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3409:3:28"},{"name":"i","nodeType":"YulIdentifier","src":"3414:1:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3405:3:28"},"nodeType":"YulFunctionCall","src":"3405:11:28"},{"name":"_1","nodeType":"YulIdentifier","src":"3418:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3401:3:28"},"nodeType":"YulFunctionCall","src":"3401:20:28"},{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3437:5:28"},{"name":"i","nodeType":"YulIdentifier","src":"3444:1:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3433:3:28"},"nodeType":"YulFunctionCall","src":"3433:13:28"},{"name":"_1","nodeType":"YulIdentifier","src":"3448:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3429:3:28"},"nodeType":"YulFunctionCall","src":"3429:22:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3423:5:28"},"nodeType":"YulFunctionCall","src":"3423:29:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3394:6:28"},"nodeType":"YulFunctionCall","src":"3394:59:28"},"nodeType":"YulExpressionStatement","src":"3394:59:28"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3312:1:28"},{"name":"length","nodeType":"YulIdentifier","src":"3315:6:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3309:2:28"},"nodeType":"YulFunctionCall","src":"3309:13:28"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3323:21:28","statements":[{"nodeType":"YulAssignment","src":"3325:17:28","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3334:1:28"},{"kind":"number","nodeType":"YulLiteral","src":"3337:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3330:3:28"},"nodeType":"YulFunctionCall","src":"3330:12:28"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3325:1:28"}]}]},"pre":{"nodeType":"YulBlock","src":"3305:3:28","statements":[]},"src":"3301:162:28"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3487:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"3492:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3483:3:28"},"nodeType":"YulFunctionCall","src":"3483:16:28"},{"kind":"number","nodeType":"YulLiteral","src":"3501:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3479:3:28"},"nodeType":"YulFunctionCall","src":"3479:27:28"},{"kind":"number","nodeType":"YulLiteral","src":"3508:1:28","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3472:6:28"},"nodeType":"YulFunctionCall","src":"3472:38:28"},"nodeType":"YulExpressionStatement","src":"3472:38:28"},{"nodeType":"YulAssignment","src":"3519:57:28","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3534:3:28"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3547:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"3555:2:28","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3543:3:28"},"nodeType":"YulFunctionCall","src":"3543:15:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3564:2:28","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3560:3:28"},"nodeType":"YulFunctionCall","src":"3560:7:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3539:3:28"},"nodeType":"YulFunctionCall","src":"3539:29:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3530:3:28"},"nodeType":"YulFunctionCall","src":"3530:39:28"},{"kind":"number","nodeType":"YulLiteral","src":"3571:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3526:3:28"},"nodeType":"YulFunctionCall","src":"3526:50:28"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3519:3:28"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3186:5:28","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3193:3:28","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3201:3:28","type":""}],"src":"3159:423:28"},{"body":{"nodeType":"YulBlock","src":"3906:476:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3923:9:28"},{"name":"value0","nodeType":"YulIdentifier","src":"3934:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3916:6:28"},"nodeType":"YulFunctionCall","src":"3916:25:28"},"nodeType":"YulExpressionStatement","src":"3916:25:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3961:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"3972:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3957:3:28"},"nodeType":"YulFunctionCall","src":"3957:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"3977:3:28","type":"","value":"224"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3950:6:28"},"nodeType":"YulFunctionCall","src":"3950:31:28"},"nodeType":"YulExpressionStatement","src":"3950:31:28"},{"nodeType":"YulVariableDeclaration","src":"3990:60:28","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4022:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4034:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4045:3:28","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4030:3:28"},"nodeType":"YulFunctionCall","src":"4030:19:28"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"4004:17:28"},"nodeType":"YulFunctionCall","src":"4004:46:28"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"3994:6:28","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4070:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4081:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4066:3:28"},"nodeType":"YulFunctionCall","src":"4066:18:28"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"4090:6:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"4098:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4086:3:28"},"nodeType":"YulFunctionCall","src":"4086:22:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4059:6:28"},"nodeType":"YulFunctionCall","src":"4059:50:28"},"nodeType":"YulExpressionStatement","src":"4059:50:28"},{"nodeType":"YulAssignment","src":"4118:41:28","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"4144:6:28"},{"name":"tail_1","nodeType":"YulIdentifier","src":"4152:6:28"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"4126:17:28"},"nodeType":"YulFunctionCall","src":"4126:33:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4118:4:28"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4179:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4190:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4175:3:28"},"nodeType":"YulFunctionCall","src":"4175:18:28"},{"name":"value3","nodeType":"YulIdentifier","src":"4195:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4168:6:28"},"nodeType":"YulFunctionCall","src":"4168:34:28"},"nodeType":"YulExpressionStatement","src":"4168:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4222:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4233:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4218:3:28"},"nodeType":"YulFunctionCall","src":"4218:19:28"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"4243:6:28"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4259:3:28","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4264:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4255:3:28"},"nodeType":"YulFunctionCall","src":"4255:11:28"},{"kind":"number","nodeType":"YulLiteral","src":"4268:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4251:3:28"},"nodeType":"YulFunctionCall","src":"4251:19:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4239:3:28"},"nodeType":"YulFunctionCall","src":"4239:32:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4211:6:28"},"nodeType":"YulFunctionCall","src":"4211:61:28"},"nodeType":"YulExpressionStatement","src":"4211:61:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4292:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4303:3:28","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4288:3:28"},"nodeType":"YulFunctionCall","src":"4288:19:28"},{"arguments":[{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"4323:6:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4316:6:28"},"nodeType":"YulFunctionCall","src":"4316:14:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4309:6:28"},"nodeType":"YulFunctionCall","src":"4309:22:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4281:6:28"},"nodeType":"YulFunctionCall","src":"4281:51:28"},"nodeType":"YulExpressionStatement","src":"4281:51:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4352:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4363:3:28","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4348:3:28"},"nodeType":"YulFunctionCall","src":"4348:19:28"},{"name":"value6","nodeType":"YulIdentifier","src":"4369:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4341:6:28"},"nodeType":"YulFunctionCall","src":"4341:35:28"},"nodeType":"YulExpressionStatement","src":"4341:35:28"}]},"name":"abi_encode_tuple_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_payable_t_bool_t_uint256__to_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_payable_t_bool_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3827:9:28","type":""},{"name":"value6","nodeType":"YulTypedName","src":"3838:6:28","type":""},{"name":"value5","nodeType":"YulTypedName","src":"3846:6:28","type":""},{"name":"value4","nodeType":"YulTypedName","src":"3854:6:28","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3862:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3870:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3878:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3886:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3897:4:28","type":""}],"src":"3587:795:28"},{"body":{"nodeType":"YulBlock","src":"4538:481:28","statements":[{"nodeType":"YulVariableDeclaration","src":"4548:12:28","value":{"kind":"number","nodeType":"YulLiteral","src":"4558:2:28","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4552:2:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4569:32:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4587:9:28"},{"name":"_1","nodeType":"YulIdentifier","src":"4598:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4583:3:28"},"nodeType":"YulFunctionCall","src":"4583:18:28"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"4573:6:28","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4617:9:28"},{"name":"_1","nodeType":"YulIdentifier","src":"4628:2:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4610:6:28"},"nodeType":"YulFunctionCall","src":"4610:21:28"},"nodeType":"YulExpressionStatement","src":"4610:21:28"},{"nodeType":"YulVariableDeclaration","src":"4640:17:28","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"4651:6:28"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"4644:3:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4666:27:28","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4686:6:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4680:5:28"},"nodeType":"YulFunctionCall","src":"4680:13:28"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4670:6:28","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"4709:6:28"},{"name":"length","nodeType":"YulIdentifier","src":"4717:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4702:6:28"},"nodeType":"YulFunctionCall","src":"4702:22:28"},"nodeType":"YulExpressionStatement","src":"4702:22:28"},{"nodeType":"YulAssignment","src":"4733:25:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4744:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4755:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4740:3:28"},"nodeType":"YulFunctionCall","src":"4740:18:28"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4733:3:28"}]},{"nodeType":"YulVariableDeclaration","src":"4767:29:28","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4785:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"4793:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4781:3:28"},"nodeType":"YulFunctionCall","src":"4781:15:28"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"4771:6:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4805:10:28","value":{"kind":"number","nodeType":"YulLiteral","src":"4814:1:28","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4809:1:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"4873:120:28","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4894:3:28"},{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"4905:6:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4899:5:28"},"nodeType":"YulFunctionCall","src":"4899:13:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4887:6:28"},"nodeType":"YulFunctionCall","src":"4887:26:28"},"nodeType":"YulExpressionStatement","src":"4887:26:28"},{"nodeType":"YulAssignment","src":"4926:19:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4937:3:28"},{"name":"_1","nodeType":"YulIdentifier","src":"4942:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4933:3:28"},"nodeType":"YulFunctionCall","src":"4933:12:28"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4926:3:28"}]},{"nodeType":"YulAssignment","src":"4958:25:28","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"4972:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"4980:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4968:3:28"},"nodeType":"YulFunctionCall","src":"4968:15:28"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"4958:6:28"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4835:1:28"},{"name":"length","nodeType":"YulIdentifier","src":"4838:6:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4832:2:28"},"nodeType":"YulFunctionCall","src":"4832:13:28"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4846:18:28","statements":[{"nodeType":"YulAssignment","src":"4848:14:28","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4857:1:28"},{"kind":"number","nodeType":"YulLiteral","src":"4860:1:28","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4853:3:28"},"nodeType":"YulFunctionCall","src":"4853:9:28"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4848:1:28"}]}]},"pre":{"nodeType":"YulBlock","src":"4828:3:28","statements":[]},"src":"4824:169:28"},{"nodeType":"YulAssignment","src":"5002:11:28","value":{"name":"pos","nodeType":"YulIdentifier","src":"5010:3:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5002:4:28"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4507:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4518:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4529:4:28","type":""}],"src":"4387:632:28"},{"body":{"nodeType":"YulBlock","src":"5198:171:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5215:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"5226:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5208:6:28"},"nodeType":"YulFunctionCall","src":"5208:21:28"},"nodeType":"YulExpressionStatement","src":"5208:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5249:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"5260:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5245:3:28"},"nodeType":"YulFunctionCall","src":"5245:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"5265:2:28","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5238:6:28"},"nodeType":"YulFunctionCall","src":"5238:30:28"},"nodeType":"YulExpressionStatement","src":"5238:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5288:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"5299:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5284:3:28"},"nodeType":"YulFunctionCall","src":"5284:18:28"},{"hexValue":"4d61726b6574706c61636520697320706175736564","kind":"string","nodeType":"YulLiteral","src":"5304:23:28","type":"","value":"Marketplace is paused"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5277:6:28"},"nodeType":"YulFunctionCall","src":"5277:51:28"},"nodeType":"YulExpressionStatement","src":"5277:51:28"},{"nodeType":"YulAssignment","src":"5337:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5349:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"5360:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5345:3:28"},"nodeType":"YulFunctionCall","src":"5345:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5337:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_36a9abf49bfa7633f09db808bae8ebe2a2277f7d99a58c00264cedbe4abcde1f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5175:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5189:4:28","type":""}],"src":"5024:345:28"},{"body":{"nodeType":"YulBlock","src":"5548:175:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5565:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"5576:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5558:6:28"},"nodeType":"YulFunctionCall","src":"5558:21:28"},"nodeType":"YulExpressionStatement","src":"5558:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5599:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"5610:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5595:3:28"},"nodeType":"YulFunctionCall","src":"5595:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"5615:2:28","type":"","value":"25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5588:6:28"},"nodeType":"YulFunctionCall","src":"5588:30:28"},"nodeType":"YulExpressionStatement","src":"5588:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5638:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"5649:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5634:3:28"},"nodeType":"YulFunctionCall","src":"5634:18:28"},{"hexValue":"4974656d206e616d652063616e6e6f7420626520656d707479","kind":"string","nodeType":"YulLiteral","src":"5654:27:28","type":"","value":"Item name cannot be empty"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5627:6:28"},"nodeType":"YulFunctionCall","src":"5627:55:28"},"nodeType":"YulExpressionStatement","src":"5627:55:28"},{"nodeType":"YulAssignment","src":"5691:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5703:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"5714:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5699:3:28"},"nodeType":"YulFunctionCall","src":"5699:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5691:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_baf95424eee75020d0531466e88a19330eb5d53baf30242b769338c4e01f5ddf__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5525:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5539:4:28","type":""}],"src":"5374:349:28"},{"body":{"nodeType":"YulBlock","src":"5902:178:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5919:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"5930:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5912:6:28"},"nodeType":"YulFunctionCall","src":"5912:21:28"},"nodeType":"YulExpressionStatement","src":"5912:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5953:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"5964:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5949:3:28"},"nodeType":"YulFunctionCall","src":"5949:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"5969:2:28","type":"","value":"28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5942:6:28"},"nodeType":"YulFunctionCall","src":"5942:30:28"},"nodeType":"YulExpressionStatement","src":"5942:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5992:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"6003:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5988:3:28"},"nodeType":"YulFunctionCall","src":"5988:18:28"},{"hexValue":"5072696365206d7573742062652067726561746572207468616e2030","kind":"string","nodeType":"YulLiteral","src":"6008:30:28","type":"","value":"Price must be greater than 0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5981:6:28"},"nodeType":"YulFunctionCall","src":"5981:58:28"},"nodeType":"YulExpressionStatement","src":"5981:58:28"},{"nodeType":"YulAssignment","src":"6048:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6060:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"6071:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6056:3:28"},"nodeType":"YulFunctionCall","src":"6056:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6048:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5879:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5893:4:28","type":""}],"src":"5728:352:28"},{"body":{"nodeType":"YulBlock","src":"6117:95:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6134:1:28","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6141:3:28","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"6146:10:28","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6137:3:28"},"nodeType":"YulFunctionCall","src":"6137:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6127:6:28"},"nodeType":"YulFunctionCall","src":"6127:31:28"},"nodeType":"YulExpressionStatement","src":"6127:31:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6174:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6177:4:28","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6167:6:28"},"nodeType":"YulFunctionCall","src":"6167:15:28"},"nodeType":"YulExpressionStatement","src":"6167:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6198:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6201:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6191:6:28"},"nodeType":"YulFunctionCall","src":"6191:15:28"},"nodeType":"YulExpressionStatement","src":"6191:15:28"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"6085:127:28"},{"body":{"nodeType":"YulBlock","src":"6264:88:28","statements":[{"body":{"nodeType":"YulBlock","src":"6295:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6297:16:28"},"nodeType":"YulFunctionCall","src":"6297:18:28"},"nodeType":"YulExpressionStatement","src":"6297:18:28"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6280:5:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6291:1:28","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6287:3:28"},"nodeType":"YulFunctionCall","src":"6287:6:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6277:2:28"},"nodeType":"YulFunctionCall","src":"6277:17:28"},"nodeType":"YulIf","src":"6274:43:28"},{"nodeType":"YulAssignment","src":"6326:20:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6337:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"6344:1:28","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6333:3:28"},"nodeType":"YulFunctionCall","src":"6333:13:28"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"6326:3:28"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6246:5:28","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"6256:3:28","type":""}],"src":"6217:135:28"},{"body":{"nodeType":"YulBlock","src":"6412:325:28","statements":[{"nodeType":"YulAssignment","src":"6422:22:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6436:1:28","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"6439:4:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6432:3:28"},"nodeType":"YulFunctionCall","src":"6432:12:28"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6422:6:28"}]},{"nodeType":"YulVariableDeclaration","src":"6453:38:28","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6483:4:28"},{"kind":"number","nodeType":"YulLiteral","src":"6489:1:28","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6479:3:28"},"nodeType":"YulFunctionCall","src":"6479:12:28"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"6457:18:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"6530:31:28","statements":[{"nodeType":"YulAssignment","src":"6532:27:28","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6546:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"6554:4:28","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6542:3:28"},"nodeType":"YulFunctionCall","src":"6542:17:28"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6532:6:28"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6510:18:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6503:6:28"},"nodeType":"YulFunctionCall","src":"6503:26:28"},"nodeType":"YulIf","src":"6500:61:28"},{"body":{"nodeType":"YulBlock","src":"6620:111:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6641:1:28","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6648:3:28","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"6653:10:28","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6644:3:28"},"nodeType":"YulFunctionCall","src":"6644:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6634:6:28"},"nodeType":"YulFunctionCall","src":"6634:31:28"},"nodeType":"YulExpressionStatement","src":"6634:31:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6685:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6688:4:28","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6678:6:28"},"nodeType":"YulFunctionCall","src":"6678:15:28"},"nodeType":"YulExpressionStatement","src":"6678:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6713:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6716:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6706:6:28"},"nodeType":"YulFunctionCall","src":"6706:15:28"},"nodeType":"YulExpressionStatement","src":"6706:15:28"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6576:18:28"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6599:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"6607:2:28","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6596:2:28"},"nodeType":"YulFunctionCall","src":"6596:14:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6573:2:28"},"nodeType":"YulFunctionCall","src":"6573:38:28"},"nodeType":"YulIf","src":"6570:161:28"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6392:4:28","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"6401:6:28","type":""}],"src":"6357:380:28"},{"body":{"nodeType":"YulBlock","src":"6798:65:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6815:1:28","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"6818:3:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6808:6:28"},"nodeType":"YulFunctionCall","src":"6808:14:28"},"nodeType":"YulExpressionStatement","src":"6808:14:28"},{"nodeType":"YulAssignment","src":"6831:26:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6849:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6852:4:28","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"6839:9:28"},"nodeType":"YulFunctionCall","src":"6839:18:28"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"6831:4:28"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"6781:3:28","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"6789:4:28","type":""}],"src":"6742:121:28"},{"body":{"nodeType":"YulBlock","src":"6949:464:28","statements":[{"body":{"nodeType":"YulBlock","src":"6982:425:28","statements":[{"nodeType":"YulVariableDeclaration","src":"6996:11:28","value":{"kind":"number","nodeType":"YulLiteral","src":"7006:1:28","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"7000:2:28","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"7027:2:28"},{"name":"array","nodeType":"YulIdentifier","src":"7031:5:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7020:6:28"},"nodeType":"YulFunctionCall","src":"7020:17:28"},"nodeType":"YulExpressionStatement","src":"7020:17:28"},{"nodeType":"YulVariableDeclaration","src":"7050:31:28","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"7072:2:28"},{"kind":"number","nodeType":"YulLiteral","src":"7076:4:28","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"7062:9:28"},"nodeType":"YulFunctionCall","src":"7062:19:28"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"7054:4:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7094:57:28","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7117:4:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7127:1:28","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"7134:10:28"},{"kind":"number","nodeType":"YulLiteral","src":"7146:2:28","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7130:3:28"},"nodeType":"YulFunctionCall","src":"7130:19:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7123:3:28"},"nodeType":"YulFunctionCall","src":"7123:27:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7113:3:28"},"nodeType":"YulFunctionCall","src":"7113:38:28"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"7098:11:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"7188:23:28","statements":[{"nodeType":"YulAssignment","src":"7190:19:28","value":{"name":"data","nodeType":"YulIdentifier","src":"7205:4:28"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"7190:11:28"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"7170:10:28"},{"kind":"number","nodeType":"YulLiteral","src":"7182:4:28","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7167:2:28"},"nodeType":"YulFunctionCall","src":"7167:20:28"},"nodeType":"YulIf","src":"7164:47:28"},{"nodeType":"YulVariableDeclaration","src":"7224:41:28","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7238:4:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7248:1:28","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"7255:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"7260:2:28","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7251:3:28"},"nodeType":"YulFunctionCall","src":"7251:12:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7244:3:28"},"nodeType":"YulFunctionCall","src":"7244:20:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7234:3:28"},"nodeType":"YulFunctionCall","src":"7234:31:28"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"7228:2:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7278:24:28","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"7291:11:28"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"7282:5:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"7376:21:28","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"7385:5:28"},{"name":"_1","nodeType":"YulIdentifier","src":"7392:2:28"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7378:6:28"},"nodeType":"YulFunctionCall","src":"7378:17:28"},"nodeType":"YulExpressionStatement","src":"7378:17:28"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"7326:5:28"},{"name":"_2","nodeType":"YulIdentifier","src":"7333:2:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7323:2:28"},"nodeType":"YulFunctionCall","src":"7323:13:28"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7337:26:28","statements":[{"nodeType":"YulAssignment","src":"7339:22:28","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"7352:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"7359:1:28","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7348:3:28"},"nodeType":"YulFunctionCall","src":"7348:13:28"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"7339:5:28"}]}]},"pre":{"nodeType":"YulBlock","src":"7319:3:28","statements":[]},"src":"7315:82:28"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6965:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"6970:2:28","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6962:2:28"},"nodeType":"YulFunctionCall","src":"6962:11:28"},"nodeType":"YulIf","src":"6959:448:28"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"6921:5:28","type":""},{"name":"len","nodeType":"YulTypedName","src":"6928:3:28","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"6933:10:28","type":""}],"src":"6868:545:28"},{"body":{"nodeType":"YulBlock","src":"7503:81:28","statements":[{"nodeType":"YulAssignment","src":"7513:65:28","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7528:4:28"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7546:1:28","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"7549:3:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7542:3:28"},"nodeType":"YulFunctionCall","src":"7542:11:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7559:1:28","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7555:3:28"},"nodeType":"YulFunctionCall","src":"7555:6:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7538:3:28"},"nodeType":"YulFunctionCall","src":"7538:24:28"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7534:3:28"},"nodeType":"YulFunctionCall","src":"7534:29:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7524:3:28"},"nodeType":"YulFunctionCall","src":"7524:40:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7570:1:28","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"7573:3:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7566:3:28"},"nodeType":"YulFunctionCall","src":"7566:11:28"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7521:2:28"},"nodeType":"YulFunctionCall","src":"7521:57:28"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"7513:4:28"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"7480:4:28","type":""},{"name":"len","nodeType":"YulTypedName","src":"7486:3:28","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"7494:4:28","type":""}],"src":"7418:166:28"},{"body":{"nodeType":"YulBlock","src":"7685:1256:28","statements":[{"nodeType":"YulVariableDeclaration","src":"7695:24:28","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7715:3:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7709:5:28"},"nodeType":"YulFunctionCall","src":"7709:10:28"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"7699:6:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"7762:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7764:16:28"},"nodeType":"YulFunctionCall","src":"7764:18:28"},"nodeType":"YulExpressionStatement","src":"7764:18:28"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7734:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"7742:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7731:2:28"},"nodeType":"YulFunctionCall","src":"7731:30:28"},"nodeType":"YulIf","src":"7728:56:28"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7837:4:28"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7875:4:28"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"7869:5:28"},"nodeType":"YulFunctionCall","src":"7869:11:28"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"7843:25:28"},"nodeType":"YulFunctionCall","src":"7843:38:28"},{"name":"newLen","nodeType":"YulIdentifier","src":"7883:6:28"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"7793:43:28"},"nodeType":"YulFunctionCall","src":"7793:97:28"},"nodeType":"YulExpressionStatement","src":"7793:97:28"},{"nodeType":"YulVariableDeclaration","src":"7899:18:28","value":{"kind":"number","nodeType":"YulLiteral","src":"7916:1:28","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"7903:9:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7926:23:28","value":{"kind":"number","nodeType":"YulLiteral","src":"7945:4:28","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"7930:11:28","type":""}]},{"nodeType":"YulAssignment","src":"7958:24:28","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"7971:11:28"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"7958:9:28"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"8028:656:28","statements":[{"nodeType":"YulVariableDeclaration","src":"8042:35:28","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8061:6:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8073:2:28","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"8069:3:28"},"nodeType":"YulFunctionCall","src":"8069:7:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8057:3:28"},"nodeType":"YulFunctionCall","src":"8057:20:28"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"8046:7:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8090:49:28","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8134:4:28"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"8104:29:28"},"nodeType":"YulFunctionCall","src":"8104:35:28"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"8094:6:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8152:10:28","value":{"kind":"number","nodeType":"YulLiteral","src":"8161:1:28","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"8156:1:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"8239:172:28","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8264:6:28"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8282:3:28"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8287:9:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8278:3:28"},"nodeType":"YulFunctionCall","src":"8278:19:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8272:5:28"},"nodeType":"YulFunctionCall","src":"8272:26:28"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8257:6:28"},"nodeType":"YulFunctionCall","src":"8257:42:28"},"nodeType":"YulExpressionStatement","src":"8257:42:28"},{"nodeType":"YulAssignment","src":"8316:24:28","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8330:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"8338:1:28","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8326:3:28"},"nodeType":"YulFunctionCall","src":"8326:14:28"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8316:6:28"}]},{"nodeType":"YulAssignment","src":"8357:40:28","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8374:9:28"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"8385:11:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8370:3:28"},"nodeType":"YulFunctionCall","src":"8370:27:28"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8357:9:28"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8186:1:28"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"8189:7:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8183:2:28"},"nodeType":"YulFunctionCall","src":"8183:14:28"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8198:28:28","statements":[{"nodeType":"YulAssignment","src":"8200:24:28","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8209:1:28"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"8212:11:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8205:3:28"},"nodeType":"YulFunctionCall","src":"8205:19:28"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"8200:1:28"}]}]},"pre":{"nodeType":"YulBlock","src":"8179:3:28","statements":[]},"src":"8175:236:28"},{"body":{"nodeType":"YulBlock","src":"8459:166:28","statements":[{"nodeType":"YulVariableDeclaration","src":"8477:43:28","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8504:3:28"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8509:9:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8500:3:28"},"nodeType":"YulFunctionCall","src":"8500:19:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8494:5:28"},"nodeType":"YulFunctionCall","src":"8494:26:28"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"8481:9:28","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8544:6:28"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"8556:9:28"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8583:1:28","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"8586:6:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8579:3:28"},"nodeType":"YulFunctionCall","src":"8579:14:28"},{"kind":"number","nodeType":"YulLiteral","src":"8595:3:28","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8575:3:28"},"nodeType":"YulFunctionCall","src":"8575:24:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8605:1:28","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"8601:3:28"},"nodeType":"YulFunctionCall","src":"8601:6:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"8571:3:28"},"nodeType":"YulFunctionCall","src":"8571:37:28"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"8567:3:28"},"nodeType":"YulFunctionCall","src":"8567:42:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8552:3:28"},"nodeType":"YulFunctionCall","src":"8552:58:28"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8537:6:28"},"nodeType":"YulFunctionCall","src":"8537:74:28"},"nodeType":"YulExpressionStatement","src":"8537:74:28"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"8430:7:28"},{"name":"newLen","nodeType":"YulIdentifier","src":"8439:6:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8427:2:28"},"nodeType":"YulFunctionCall","src":"8427:19:28"},"nodeType":"YulIf","src":"8424:201:28"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8645:4:28"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8659:1:28","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"8662:6:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8655:3:28"},"nodeType":"YulFunctionCall","src":"8655:14:28"},{"kind":"number","nodeType":"YulLiteral","src":"8671:1:28","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8651:3:28"},"nodeType":"YulFunctionCall","src":"8651:22:28"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8638:6:28"},"nodeType":"YulFunctionCall","src":"8638:36:28"},"nodeType":"YulExpressionStatement","src":"8638:36:28"}]},"nodeType":"YulCase","src":"8021:663:28","value":{"kind":"number","nodeType":"YulLiteral","src":"8026:1:28","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"8701:234:28","statements":[{"nodeType":"YulVariableDeclaration","src":"8715:14:28","value":{"kind":"number","nodeType":"YulLiteral","src":"8728:1:28","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8719:5:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"8764:67:28","statements":[{"nodeType":"YulAssignment","src":"8782:35:28","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8801:3:28"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8806:9:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8797:3:28"},"nodeType":"YulFunctionCall","src":"8797:19:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8791:5:28"},"nodeType":"YulFunctionCall","src":"8791:26:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8782:5:28"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"8745:6:28"},"nodeType":"YulIf","src":"8742:89:28"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8851:4:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8910:5:28"},{"name":"newLen","nodeType":"YulIdentifier","src":"8917:6:28"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"8857:52:28"},"nodeType":"YulFunctionCall","src":"8857:67:28"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8844:6:28"},"nodeType":"YulFunctionCall","src":"8844:81:28"},"nodeType":"YulExpressionStatement","src":"8844:81:28"}]},"nodeType":"YulCase","src":"8693:242:28","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8001:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"8009:2:28","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7998:2:28"},"nodeType":"YulFunctionCall","src":"7998:14:28"},"nodeType":"YulSwitch","src":"7991:944:28"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"7670:4:28","type":""},{"name":"src","nodeType":"YulTypedName","src":"7676:3:28","type":""}],"src":"7589:1352:28"},{"body":{"nodeType":"YulBlock","src":"9095:142:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9112:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"9123:2:28","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9105:6:28"},"nodeType":"YulFunctionCall","src":"9105:21:28"},"nodeType":"YulExpressionStatement","src":"9105:21:28"},{"nodeType":"YulAssignment","src":"9135:53:28","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9161:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9173:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"9184:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9169:3:28"},"nodeType":"YulFunctionCall","src":"9169:18:28"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"9143:17:28"},"nodeType":"YulFunctionCall","src":"9143:45:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9135:4:28"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9208:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"9219:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9204:3:28"},"nodeType":"YulFunctionCall","src":"9204:18:28"},{"name":"value1","nodeType":"YulIdentifier","src":"9224:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9197:6:28"},"nodeType":"YulFunctionCall","src":"9197:34:28"},"nodeType":"YulExpressionStatement","src":"9197:34:28"}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9056:9:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9067:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9075:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9086:4:28","type":""}],"src":"8946:291:28"},{"body":{"nodeType":"YulBlock","src":"9416:223:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9433:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"9444:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9426:6:28"},"nodeType":"YulFunctionCall","src":"9426:21:28"},"nodeType":"YulExpressionStatement","src":"9426:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9467:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"9478:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9463:3:28"},"nodeType":"YulFunctionCall","src":"9463:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"9483:2:28","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9456:6:28"},"nodeType":"YulFunctionCall","src":"9456:30:28"},"nodeType":"YulExpressionStatement","src":"9456:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9506:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"9517:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9502:3:28"},"nodeType":"YulFunctionCall","src":"9502:18:28"},{"hexValue":"4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f","kind":"string","nodeType":"YulLiteral","src":"9522:34:28","type":"","value":"Only owner can call this functio"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9495:6:28"},"nodeType":"YulFunctionCall","src":"9495:62:28"},"nodeType":"YulExpressionStatement","src":"9495:62:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9577:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"9588:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9573:3:28"},"nodeType":"YulFunctionCall","src":"9573:18:28"},{"hexValue":"6e","kind":"string","nodeType":"YulLiteral","src":"9593:3:28","type":"","value":"n"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9566:6:28"},"nodeType":"YulFunctionCall","src":"9566:31:28"},"nodeType":"YulExpressionStatement","src":"9566:31:28"},{"nodeType":"YulAssignment","src":"9606:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9618:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"9629:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9614:3:28"},"nodeType":"YulFunctionCall","src":"9614:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9606:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9393:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9407:4:28","type":""}],"src":"9242:397:28"},{"body":{"nodeType":"YulBlock","src":"9818:169:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9835:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"9846:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9828:6:28"},"nodeType":"YulFunctionCall","src":"9828:21:28"},"nodeType":"YulExpressionStatement","src":"9828:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9869:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"9880:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9865:3:28"},"nodeType":"YulFunctionCall","src":"9865:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"9885:2:28","type":"","value":"19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9858:6:28"},"nodeType":"YulFunctionCall","src":"9858:30:28"},"nodeType":"YulExpressionStatement","src":"9858:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9908:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"9919:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9904:3:28"},"nodeType":"YulFunctionCall","src":"9904:18:28"},{"hexValue":"4e6f206665657320746f207769746864726177","kind":"string","nodeType":"YulLiteral","src":"9924:21:28","type":"","value":"No fees to withdraw"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9897:6:28"},"nodeType":"YulFunctionCall","src":"9897:49:28"},"nodeType":"YulExpressionStatement","src":"9897:49:28"},{"nodeType":"YulAssignment","src":"9955:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9967:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"9978:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9963:3:28"},"nodeType":"YulFunctionCall","src":"9963:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9955:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_524becf2bd3d6f3c74c4c55f46993b5de22a6261a1a6108cc85fed135e73299c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9795:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9809:4:28","type":""}],"src":"9644:343:28"},{"body":{"nodeType":"YulBlock","src":"10166:177:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10183:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"10194:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10176:6:28"},"nodeType":"YulFunctionCall","src":"10176:21:28"},"nodeType":"YulExpressionStatement","src":"10176:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10217:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"10228:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10213:3:28"},"nodeType":"YulFunctionCall","src":"10213:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"10233:2:28","type":"","value":"27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10206:6:28"},"nodeType":"YulFunctionCall","src":"10206:30:28"},"nodeType":"YulExpressionStatement","src":"10206:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10256:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"10267:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10252:3:28"},"nodeType":"YulFunctionCall","src":"10252:18:28"},{"hexValue":"4e6f206561726e696e677320666f7220746869732073656c6c6572","kind":"string","nodeType":"YulLiteral","src":"10272:29:28","type":"","value":"No earnings for this seller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10245:6:28"},"nodeType":"YulFunctionCall","src":"10245:57:28"},"nodeType":"YulExpressionStatement","src":"10245:57:28"},{"nodeType":"YulAssignment","src":"10311:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10323:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"10334:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10319:3:28"},"nodeType":"YulFunctionCall","src":"10319:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10311:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_b50e07eb60958e727fe1a91dc3b40a6c689ba04e85f6a3516d329471b8e19835__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10143:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10157:4:28","type":""}],"src":"9992:351:28"},{"body":{"nodeType":"YulBlock","src":"10522:169:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10539:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"10550:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10532:6:28"},"nodeType":"YulFunctionCall","src":"10532:21:28"},"nodeType":"YulExpressionStatement","src":"10532:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10573:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"10584:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10569:3:28"},"nodeType":"YulFunctionCall","src":"10569:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"10589:2:28","type":"","value":"19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10562:6:28"},"nodeType":"YulFunctionCall","src":"10562:30:28"},"nodeType":"YulExpressionStatement","src":"10562:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10612:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"10623:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10608:3:28"},"nodeType":"YulFunctionCall","src":"10608:18:28"},{"hexValue":"4974656d20646f6573206e6f74206578697374","kind":"string","nodeType":"YulLiteral","src":"10628:21:28","type":"","value":"Item does not exist"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10601:6:28"},"nodeType":"YulFunctionCall","src":"10601:49:28"},"nodeType":"YulExpressionStatement","src":"10601:49:28"},{"nodeType":"YulAssignment","src":"10659:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10671:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"10682:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10667:3:28"},"nodeType":"YulFunctionCall","src":"10667:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10659:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_ce0a686b3a77d89aa203ef1917c5a461c03ae6389a02bb3c3b9a97959d623907__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10499:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10513:4:28","type":""}],"src":"10348:343:28"},{"body":{"nodeType":"YulBlock","src":"10870:177:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10887:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"10898:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10880:6:28"},"nodeType":"YulFunctionCall","src":"10880:21:28"},"nodeType":"YulExpressionStatement","src":"10880:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10921:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"10932:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10917:3:28"},"nodeType":"YulFunctionCall","src":"10917:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"10937:2:28","type":"","value":"27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10910:6:28"},"nodeType":"YulFunctionCall","src":"10910:30:28"},"nodeType":"YulExpressionStatement","src":"10910:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10960:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"10971:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10956:3:28"},"nodeType":"YulFunctionCall","src":"10956:18:28"},{"hexValue":"4f6e6c792073656c6c65722063616e2072656d6f7665206974656d","kind":"string","nodeType":"YulLiteral","src":"10976:29:28","type":"","value":"Only seller can remove item"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10949:6:28"},"nodeType":"YulFunctionCall","src":"10949:57:28"},"nodeType":"YulExpressionStatement","src":"10949:57:28"},{"nodeType":"YulAssignment","src":"11015:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11027:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"11038:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11023:3:28"},"nodeType":"YulFunctionCall","src":"11023:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11015:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_35376dbc8c18478611197b64504df0dcfe4a345cbf3db48477b7c4b0492d91ae__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10847:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10861:4:28","type":""}],"src":"10696:351:28"},{"body":{"nodeType":"YulBlock","src":"11226:173:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11243:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"11254:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11236:6:28"},"nodeType":"YulFunctionCall","src":"11236:21:28"},"nodeType":"YulExpressionStatement","src":"11236:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11277:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"11288:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11273:3:28"},"nodeType":"YulFunctionCall","src":"11273:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"11293:2:28","type":"","value":"23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11266:6:28"},"nodeType":"YulFunctionCall","src":"11266:30:28"},"nodeType":"YulExpressionStatement","src":"11266:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11316:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"11327:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11312:3:28"},"nodeType":"YulFunctionCall","src":"11312:18:28"},{"hexValue":"43616e6e6f742072656d6f766520736f6c64206974656d","kind":"string","nodeType":"YulLiteral","src":"11332:25:28","type":"","value":"Cannot remove sold item"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11305:6:28"},"nodeType":"YulFunctionCall","src":"11305:53:28"},"nodeType":"YulExpressionStatement","src":"11305:53:28"},{"nodeType":"YulAssignment","src":"11367:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11379:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"11390:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11375:3:28"},"nodeType":"YulFunctionCall","src":"11375:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11367:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_92b6a01d7099634b778cb9907b4eb2ad983a23bc76b4433f60f1fb7a7b57ec5a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11203:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11217:4:28","type":""}],"src":"11052:347:28"},{"body":{"nodeType":"YulBlock","src":"11453:79:28","statements":[{"nodeType":"YulAssignment","src":"11463:17:28","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11475:1:28"},{"name":"y","nodeType":"YulIdentifier","src":"11478:1:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11471:3:28"},"nodeType":"YulFunctionCall","src":"11471:9:28"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"11463:4:28"}]},{"body":{"nodeType":"YulBlock","src":"11504:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"11506:16:28"},"nodeType":"YulFunctionCall","src":"11506:18:28"},"nodeType":"YulExpressionStatement","src":"11506:18:28"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"11495:4:28"},{"name":"x","nodeType":"YulIdentifier","src":"11501:1:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11492:2:28"},"nodeType":"YulFunctionCall","src":"11492:11:28"},"nodeType":"YulIf","src":"11489:37:28"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"11435:1:28","type":""},{"name":"y","nodeType":"YulTypedName","src":"11438:1:28","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"11444:4:28","type":""}],"src":"11404:128:28"},{"body":{"nodeType":"YulBlock","src":"11711:171:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11728:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"11739:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11721:6:28"},"nodeType":"YulFunctionCall","src":"11721:21:28"},"nodeType":"YulExpressionStatement","src":"11721:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11762:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"11773:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11758:3:28"},"nodeType":"YulFunctionCall","src":"11758:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"11778:2:28","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11751:6:28"},"nodeType":"YulFunctionCall","src":"11751:30:28"},"nodeType":"YulExpressionStatement","src":"11751:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11801:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"11812:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11797:3:28"},"nodeType":"YulFunctionCall","src":"11797:18:28"},{"hexValue":"4665652063616e6e6f742065786365656420313025","kind":"string","nodeType":"YulLiteral","src":"11817:23:28","type":"","value":"Fee cannot exceed 10%"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11790:6:28"},"nodeType":"YulFunctionCall","src":"11790:51:28"},"nodeType":"YulExpressionStatement","src":"11790:51:28"},{"nodeType":"YulAssignment","src":"11850:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11862:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"11873:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11858:3:28"},"nodeType":"YulFunctionCall","src":"11858:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11850:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_697e1050e49c2a32d802845ecac75df93b62d147a0a67808d6dec2b44ce5e80f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11688:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11702:4:28","type":""}],"src":"11537:345:28"},{"body":{"nodeType":"YulBlock","src":"12016:119:28","statements":[{"nodeType":"YulAssignment","src":"12026:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12038:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"12049:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12034:3:28"},"nodeType":"YulFunctionCall","src":"12034:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12026:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12068:9:28"},{"name":"value0","nodeType":"YulIdentifier","src":"12079:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12061:6:28"},"nodeType":"YulFunctionCall","src":"12061:25:28"},"nodeType":"YulExpressionStatement","src":"12061:25:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12106:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"12117:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12102:3:28"},"nodeType":"YulFunctionCall","src":"12102:18:28"},{"name":"value1","nodeType":"YulIdentifier","src":"12122:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12095:6:28"},"nodeType":"YulFunctionCall","src":"12095:34:28"},"nodeType":"YulExpressionStatement","src":"12095:34:28"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11977:9:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11988:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11996:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12007:4:28","type":""}],"src":"11887:248:28"},{"body":{"nodeType":"YulBlock","src":"12314:173:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12331:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"12342:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12324:6:28"},"nodeType":"YulFunctionCall","src":"12324:21:28"},"nodeType":"YulExpressionStatement","src":"12324:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12365:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"12376:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12361:3:28"},"nodeType":"YulFunctionCall","src":"12361:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"12381:2:28","type":"","value":"23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12354:6:28"},"nodeType":"YulFunctionCall","src":"12354:30:28"},"nodeType":"YulExpressionStatement","src":"12354:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12404:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"12415:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12400:3:28"},"nodeType":"YulFunctionCall","src":"12400:18:28"},{"hexValue":"4e6f206561726e696e677320746f207769746864726177","kind":"string","nodeType":"YulLiteral","src":"12420:25:28","type":"","value":"No earnings to withdraw"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12393:6:28"},"nodeType":"YulFunctionCall","src":"12393:53:28"},"nodeType":"YulExpressionStatement","src":"12393:53:28"},{"nodeType":"YulAssignment","src":"12455:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12467:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"12478:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12463:3:28"},"nodeType":"YulFunctionCall","src":"12463:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12455:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_d97385136630b09429aa46486568fc56c245d310236690696fbd4ad949ae190a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12291:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12305:4:28","type":""}],"src":"12140:347:28"},{"body":{"nodeType":"YulBlock","src":"12666:167:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12683:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"12694:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12676:6:28"},"nodeType":"YulFunctionCall","src":"12676:21:28"},"nodeType":"YulExpressionStatement","src":"12676:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12717:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"12728:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12713:3:28"},"nodeType":"YulFunctionCall","src":"12713:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"12733:2:28","type":"","value":"17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12706:6:28"},"nodeType":"YulFunctionCall","src":"12706:30:28"},"nodeType":"YulExpressionStatement","src":"12706:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12756:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"12767:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12752:3:28"},"nodeType":"YulFunctionCall","src":"12752:18:28"},{"hexValue":"4974656d20616c726561647920736f6c64","kind":"string","nodeType":"YulLiteral","src":"12772:19:28","type":"","value":"Item already sold"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12745:6:28"},"nodeType":"YulFunctionCall","src":"12745:47:28"},"nodeType":"YulExpressionStatement","src":"12745:47:28"},{"nodeType":"YulAssignment","src":"12801:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12813:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"12824:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12809:3:28"},"nodeType":"YulFunctionCall","src":"12809:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12801:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_f2aba8e3fa98fef30df3b07bf1481d5fabaef66c067d55613846d937a0ee9c3f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12643:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12657:4:28","type":""}],"src":"12492:341:28"},{"body":{"nodeType":"YulBlock","src":"13012:174:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13029:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"13040:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13022:6:28"},"nodeType":"YulFunctionCall","src":"13022:21:28"},"nodeType":"YulExpressionStatement","src":"13022:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13063:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"13074:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13059:3:28"},"nodeType":"YulFunctionCall","src":"13059:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"13079:2:28","type":"","value":"24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13052:6:28"},"nodeType":"YulFunctionCall","src":"13052:30:28"},"nodeType":"YulExpressionStatement","src":"13052:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13102:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"13113:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13098:3:28"},"nodeType":"YulFunctionCall","src":"13098:18:28"},{"hexValue":"43616e6e6f742062757920796f7572206f776e206974656d","kind":"string","nodeType":"YulLiteral","src":"13118:26:28","type":"","value":"Cannot buy your own item"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13091:6:28"},"nodeType":"YulFunctionCall","src":"13091:54:28"},"nodeType":"YulExpressionStatement","src":"13091:54:28"},{"nodeType":"YulAssignment","src":"13154:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13166:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"13177:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13162:3:28"},"nodeType":"YulFunctionCall","src":"13162:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13154:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_8b7370d40c27723f4db0975059c334d407b3f7019c911c906aea1d76bba123c6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12989:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13003:4:28","type":""}],"src":"12838:348:28"},{"body":{"nodeType":"YulBlock","src":"13365:174:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13382:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"13393:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13375:6:28"},"nodeType":"YulFunctionCall","src":"13375:21:28"},"nodeType":"YulExpressionStatement","src":"13375:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13416:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"13427:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13412:3:28"},"nodeType":"YulFunctionCall","src":"13412:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"13432:2:28","type":"","value":"24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13405:6:28"},"nodeType":"YulFunctionCall","src":"13405:30:28"},"nodeType":"YulExpressionStatement","src":"13405:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13455:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"13466:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13451:3:28"},"nodeType":"YulFunctionCall","src":"13451:18:28"},{"hexValue":"496e636f7272656374207061796d656e7420616d6f756e74","kind":"string","nodeType":"YulLiteral","src":"13471:26:28","type":"","value":"Incorrect payment amount"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13444:6:28"},"nodeType":"YulFunctionCall","src":"13444:54:28"},"nodeType":"YulExpressionStatement","src":"13444:54:28"},{"nodeType":"YulAssignment","src":"13507:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13519:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"13530:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13515:3:28"},"nodeType":"YulFunctionCall","src":"13515:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13507:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13342:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13356:4:28","type":""}],"src":"13191:348:28"},{"body":{"nodeType":"YulBlock","src":"13596:116:28","statements":[{"nodeType":"YulAssignment","src":"13606:20:28","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"13621:1:28"},{"name":"y","nodeType":"YulIdentifier","src":"13624:1:28"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"13617:3:28"},"nodeType":"YulFunctionCall","src":"13617:9:28"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"13606:7:28"}]},{"body":{"nodeType":"YulBlock","src":"13684:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"13686:16:28"},"nodeType":"YulFunctionCall","src":"13686:18:28"},"nodeType":"YulExpressionStatement","src":"13686:18:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"13655:1:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13648:6:28"},"nodeType":"YulFunctionCall","src":"13648:9:28"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"13662:1:28"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"13669:7:28"},{"name":"x","nodeType":"YulIdentifier","src":"13678:1:28"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"13665:3:28"},"nodeType":"YulFunctionCall","src":"13665:15:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"13659:2:28"},"nodeType":"YulFunctionCall","src":"13659:22:28"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"13645:2:28"},"nodeType":"YulFunctionCall","src":"13645:37:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13638:6:28"},"nodeType":"YulFunctionCall","src":"13638:45:28"},"nodeType":"YulIf","src":"13635:71:28"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"13575:1:28","type":""},{"name":"y","nodeType":"YulTypedName","src":"13578:1:28","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"13584:7:28","type":""}],"src":"13544:168:28"},{"body":{"nodeType":"YulBlock","src":"13763:171:28","statements":[{"body":{"nodeType":"YulBlock","src":"13794:111:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13815:1:28","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13822:3:28","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"13827:10:28","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"13818:3:28"},"nodeType":"YulFunctionCall","src":"13818:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13808:6:28"},"nodeType":"YulFunctionCall","src":"13808:31:28"},"nodeType":"YulExpressionStatement","src":"13808:31:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13859:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"13862:4:28","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13852:6:28"},"nodeType":"YulFunctionCall","src":"13852:15:28"},"nodeType":"YulExpressionStatement","src":"13852:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13887:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13890:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13880:6:28"},"nodeType":"YulFunctionCall","src":"13880:15:28"},"nodeType":"YulExpressionStatement","src":"13880:15:28"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"13783:1:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13776:6:28"},"nodeType":"YulFunctionCall","src":"13776:9:28"},"nodeType":"YulIf","src":"13773:132:28"},{"nodeType":"YulAssignment","src":"13914:14:28","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"13923:1:28"},{"name":"y","nodeType":"YulIdentifier","src":"13926:1:28"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"13919:3:28"},"nodeType":"YulFunctionCall","src":"13919:9:28"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"13914:1:28"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"13748:1:28","type":""},{"name":"y","nodeType":"YulTypedName","src":"13751:1:28","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"13757:1:28","type":""}],"src":"13717:217:28"},{"body":{"nodeType":"YulBlock","src":"13987:77:28","statements":[{"nodeType":"YulAssignment","src":"13997:16:28","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14008:1:28"},{"name":"y","nodeType":"YulIdentifier","src":"14011:1:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14004:3:28"},"nodeType":"YulFunctionCall","src":"14004:9:28"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"13997:3:28"}]},{"body":{"nodeType":"YulBlock","src":"14036:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"14038:16:28"},"nodeType":"YulFunctionCall","src":"14038:18:28"},"nodeType":"YulExpressionStatement","src":"14038:18:28"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14028:1:28"},{"name":"sum","nodeType":"YulIdentifier","src":"14031:3:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14025:2:28"},"nodeType":"YulFunctionCall","src":"14025:10:28"},"nodeType":"YulIf","src":"14022:36:28"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"13970:1:28","type":""},{"name":"y","nodeType":"YulTypedName","src":"13973:1:28","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"13979:3:28","type":""}],"src":"13939:125:28"},{"body":{"nodeType":"YulBlock","src":"14215:896:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14232:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"14243:2:28","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14225:6:28"},"nodeType":"YulFunctionCall","src":"14225:21:28"},"nodeType":"YulExpressionStatement","src":"14225:21:28"},{"nodeType":"YulVariableDeclaration","src":"14255:12:28","value":{"kind":"number","nodeType":"YulLiteral","src":"14266:1:28","type":"","value":"0"},"variables":[{"name":"ret","nodeType":"YulTypedName","src":"14259:3:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14276:30:28","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14299:6:28"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"14293:5:28"},"nodeType":"YulFunctionCall","src":"14293:13:28"},"variables":[{"name":"slotValue","nodeType":"YulTypedName","src":"14280:9:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14315:50:28","value":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"14355:9:28"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"14329:25:28"},"nodeType":"YulFunctionCall","src":"14329:36:28"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"14319:6:28","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14385:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"14396:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14381:3:28"},"nodeType":"YulFunctionCall","src":"14381:18:28"},{"name":"length","nodeType":"YulIdentifier","src":"14401:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14374:6:28"},"nodeType":"YulFunctionCall","src":"14374:34:28"},"nodeType":"YulExpressionStatement","src":"14374:34:28"},{"nodeType":"YulVariableDeclaration","src":"14417:12:28","value":{"kind":"number","nodeType":"YulLiteral","src":"14427:2:28","type":"","value":"96"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"14421:2:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14438:11:28","value":{"kind":"number","nodeType":"YulLiteral","src":"14448:1:28","type":"","value":"1"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"14442:2:28","type":""}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"14499:151:28","statements":[{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14524:9:28"},{"name":"_1","nodeType":"YulIdentifier","src":"14535:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14520:3:28"},"nodeType":"YulFunctionCall","src":"14520:18:28"},{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"14544:9:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14559:3:28","type":"","value":"255"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"14555:3:28"},"nodeType":"YulFunctionCall","src":"14555:8:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14540:3:28"},"nodeType":"YulFunctionCall","src":"14540:24:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14513:6:28"},"nodeType":"YulFunctionCall","src":"14513:52:28"},"nodeType":"YulExpressionStatement","src":"14513:52:28"},{"nodeType":"YulAssignment","src":"14578:62:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14593:9:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14608:1:28","type":"","value":"5"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14625:6:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14618:6:28"},"nodeType":"YulFunctionCall","src":"14618:14:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14611:6:28"},"nodeType":"YulFunctionCall","src":"14611:22:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"14604:3:28"},"nodeType":"YulFunctionCall","src":"14604:30:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14589:3:28"},"nodeType":"YulFunctionCall","src":"14589:46:28"},{"name":"_1","nodeType":"YulIdentifier","src":"14637:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14585:3:28"},"nodeType":"YulFunctionCall","src":"14585:55:28"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"14578:3:28"}]}]},"nodeType":"YulCase","src":"14492:158:28","value":{"kind":"number","nodeType":"YulLiteral","src":"14497:1:28","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"14666:374:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14687:1:28","type":"","value":"0"},{"name":"value0","nodeType":"YulIdentifier","src":"14690:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14680:6:28"},"nodeType":"YulFunctionCall","src":"14680:17:28"},"nodeType":"YulExpressionStatement","src":"14680:17:28"},{"nodeType":"YulVariableDeclaration","src":"14710:14:28","value":{"kind":"number","nodeType":"YulLiteral","src":"14720:4:28","type":"","value":"0x20"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"14714:2:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14737:31:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14762:1:28","type":"","value":"0"},{"name":"_3","nodeType":"YulIdentifier","src":"14765:2:28"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"14752:9:28"},"nodeType":"YulFunctionCall","src":"14752:16:28"},"variables":[{"name":"dataPos","nodeType":"YulTypedName","src":"14741:7:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14781:10:28","value":{"kind":"number","nodeType":"YulLiteral","src":"14790:1:28","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"14785:1:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"14858:126:28","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14891:9:28"},{"name":"i","nodeType":"YulIdentifier","src":"14902:1:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14887:3:28"},"nodeType":"YulFunctionCall","src":"14887:17:28"},{"name":"_1","nodeType":"YulIdentifier","src":"14906:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14883:3:28"},"nodeType":"YulFunctionCall","src":"14883:26:28"},{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"14917:7:28"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"14911:5:28"},"nodeType":"YulFunctionCall","src":"14911:14:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14876:6:28"},"nodeType":"YulFunctionCall","src":"14876:50:28"},"nodeType":"YulExpressionStatement","src":"14876:50:28"},{"nodeType":"YulAssignment","src":"14943:27:28","value":{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"14958:7:28"},{"name":"_2","nodeType":"YulIdentifier","src":"14967:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14954:3:28"},"nodeType":"YulFunctionCall","src":"14954:16:28"},"variableNames":[{"name":"dataPos","nodeType":"YulIdentifier","src":"14943:7:28"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"14815:1:28"},{"name":"length","nodeType":"YulIdentifier","src":"14818:6:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"14812:2:28"},"nodeType":"YulFunctionCall","src":"14812:13:28"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"14826:19:28","statements":[{"nodeType":"YulAssignment","src":"14828:15:28","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"14837:1:28"},{"name":"_3","nodeType":"YulIdentifier","src":"14840:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14833:3:28"},"nodeType":"YulFunctionCall","src":"14833:10:28"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"14828:1:28"}]}]},"pre":{"nodeType":"YulBlock","src":"14808:3:28","statements":[]},"src":"14804:180:28"},{"nodeType":"YulAssignment","src":"14997:33:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15012:9:28"},{"name":"i","nodeType":"YulIdentifier","src":"15023:1:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15008:3:28"},"nodeType":"YulFunctionCall","src":"15008:17:28"},{"name":"_1","nodeType":"YulIdentifier","src":"15027:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15004:3:28"},"nodeType":"YulFunctionCall","src":"15004:26:28"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"14997:3:28"}]}]},"nodeType":"YulCase","src":"14659:381:28","value":{"kind":"number","nodeType":"YulLiteral","src":"14664:1:28","type":"","value":"1"}}],"expression":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"14469:9:28"},{"name":"_2","nodeType":"YulIdentifier","src":"14480:2:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14465:3:28"},"nodeType":"YulFunctionCall","src":"14465:18:28"},"nodeType":"YulSwitch","src":"14458:582:28"},{"nodeType":"YulAssignment","src":"15049:11:28","value":{"name":"ret","nodeType":"YulIdentifier","src":"15057:3:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15049:4:28"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15080:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"15091:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15076:3:28"},"nodeType":"YulFunctionCall","src":"15076:20:28"},{"name":"value1","nodeType":"YulIdentifier","src":"15098:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15069:6:28"},"nodeType":"YulFunctionCall","src":"15069:36:28"},"nodeType":"YulExpressionStatement","src":"15069:36:28"}]},"name":"abi_encode_tuple_t_string_storage_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14176:9:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14187:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14195:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14206:4:28","type":""}],"src":"14069:1042:28"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset_1), dataEnd)\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_payable_t_bool_t_uint256__to_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_payable_t_bool_t_uint256__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 224)\n        let tail_1 := abi_encode_string(value1, add(headStart, 224))\n        mstore(add(headStart, 64), sub(tail_1, headStart))\n        tail := abi_encode_string(value2, tail_1)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 160), iszero(iszero(value5)))\n        mstore(add(headStart, 192), value6)\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_stringliteral_36a9abf49bfa7633f09db808bae8ebe2a2277f7d99a58c00264cedbe4abcde1f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Marketplace is paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baf95424eee75020d0531466e88a19330eb5d53baf30242b769338c4e01f5ddf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Item name cannot be empty\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Price must be greater than 0\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        tail := abi_encode_string(value0, add(headStart, 64))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Only owner can call this functio\")\n        mstore(add(headStart, 96), \"n\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_524becf2bd3d6f3c74c4c55f46993b5de22a6261a1a6108cc85fed135e73299c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"No fees to withdraw\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b50e07eb60958e727fe1a91dc3b40a6c689ba04e85f6a3516d329471b8e19835__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"No earnings for this seller\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ce0a686b3a77d89aa203ef1917c5a461c03ae6389a02bb3c3b9a97959d623907__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Item does not exist\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_35376dbc8c18478611197b64504df0dcfe4a345cbf3db48477b7c4b0492d91ae__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Only seller can remove item\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_92b6a01d7099634b778cb9907b4eb2ad983a23bc76b4433f60f1fb7a7b57ec5a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Cannot remove sold item\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_697e1050e49c2a32d802845ecac75df93b62d147a0a67808d6dec2b44ce5e80f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Fee cannot exceed 10%\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_d97385136630b09429aa46486568fc56c245d310236690696fbd4ad949ae190a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"No earnings to withdraw\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f2aba8e3fa98fef30df3b07bf1481d5fabaef66c067d55613846d937a0ee9c3f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Item already sold\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8b7370d40c27723f4db0975059c334d407b3f7019c911c906aea1d76bba123c6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Cannot buy your own item\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Incorrect payment amount\")\n        tail := add(headStart, 96)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_string_storage_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let ret := 0\n        let slotValue := sload(value0)\n        let length := extract_byte_array_length(slotValue)\n        mstore(add(headStart, 64), length)\n        let _1 := 96\n        let _2 := 1\n        switch and(slotValue, _2)\n        case 0 {\n            mstore(add(headStart, _1), and(slotValue, not(255)))\n            ret := add(add(headStart, shl(5, iszero(iszero(length)))), _1)\n        }\n        case 1 {\n            mstore(0, value0)\n            let _3 := 0x20\n            let dataPos := keccak256(0, _3)\n            let i := 0\n            for { } lt(i, length) { i := add(i, _3) }\n            {\n                mstore(add(add(headStart, i), _1), sload(dataPos))\n                dataPos := add(dataPos, _2)\n            }\n            ret := add(add(headStart, i), _1)\n        }\n        tail := ret\n        mstore(add(headStart, 0x20), value1)\n    }\n}","id":28,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x71329171 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0x9407EA98 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x9407EA98 EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0xB73C6CE9 EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0xBFB231D2 EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0xD3CBB62B EQ PUSH2 0x30C JUMPI DUP1 PUSH4 0xE7FB74C7 EQ PUSH2 0x339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x71329171 EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0x7749CF23 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x8B012358 EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5C975ABB GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x6A166964 EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0x6A868974 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x6FF1C9BC EQ PUSH2 0x1EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x562021C EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x16C38B3C EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x2C02338F EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x476343EE EQ PUSH2 0x178 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x11E CALLDATASIZE PUSH1 0x4 PUSH2 0x1075 JUMP JUMPDEST PUSH2 0x34C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x142 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x156 PUSH2 0x151 CALLDATASIZE PUSH1 0x4 PUSH2 0x10E2 JUMP JUMPDEST PUSH2 0x586 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x164 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x173 CALLDATASIZE PUSH1 0x4 PUSH2 0x1127 JUMP JUMPDEST PUSH2 0x608 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x184 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x156 PUSH2 0x639 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x199 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x1AE SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x156 PUSH2 0x205 CALLDATASIZE PUSH1 0x4 PUSH2 0x1151 JUMP JUMPDEST PUSH2 0x6E5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x216 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x156 PUSH2 0x225 CALLDATASIZE PUSH1 0x4 PUSH2 0x116C JUMP JUMPDEST PUSH2 0x801 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x236 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x990 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x25A CALLDATASIZE PUSH1 0x4 PUSH2 0x1151 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x278 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x28C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x156 PUSH2 0x2BF CALLDATASIZE PUSH1 0x4 PUSH2 0x116C JUMP JUMPDEST PUSH2 0x9A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x156 PUSH2 0xA5F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F9 PUSH2 0x2F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x116C JUMP JUMPDEST PUSH2 0xB30 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12D SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11CB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x318 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32C PUSH2 0x327 CALLDATASIZE PUSH1 0x4 PUSH2 0x1151 JUMP JUMPDEST PUSH2 0xC8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12D SWAP2 SWAP1 PUSH2 0x1226 JUMP JUMPDEST PUSH2 0x156 PUSH2 0x347 CALLDATASIZE PUSH1 0x4 PUSH2 0x116C JUMP JUMPDEST PUSH2 0xCF8 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x3A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x13585C9AD95D1C1B1858D9481A5CC81C185D5CD959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 MLOAD GT PUSH2 0x3F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4974656D206E616D652063616E6E6F7420626520656D70747900000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39D JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x447 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5072696365206D7573742062652067726561746572207468616E203000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39D JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 DUP2 SWAP1 DUP1 PUSH2 0x458 DUP4 PUSH2 0x1280 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 DUP2 ADD DUP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP9 DUP2 MSTORE DUP3 DUP5 ADD DUP9 SWAP1 MSTORE PUSH1 0x60 DUP4 ADD DUP8 SWAP1 MSTORE CALLER PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x0 PUSH1 0xA0 DUP5 ADD DUP2 SWAP1 MSTORE TIMESTAMP PUSH1 0xC0 DUP6 ADD MSTORE DUP6 DUP2 MSTORE PUSH1 0x3 SWAP1 SWAP3 MSTORE SWAP3 SWAP1 KECCAK256 DUP2 MLOAD DUP2 SSTORE SWAP2 MLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x1 DUP3 ADD SWAP1 PUSH2 0x4B7 SWAP1 DUP3 PUSH2 0x1322 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD SWAP1 PUSH2 0x4CC SWAP1 DUP3 PUSH2 0x1322 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x4 DUP1 DUP4 ADD DUP1 SLOAD PUSH1 0xA0 DUP7 ADD MLOAD ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0xC0 SWAP1 SWAP3 ADD MLOAD PUSH1 0x5 SWAP1 SWAP2 ADD SSTORE CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP4 MSTORE SWAP4 SWAP1 SWAP2 KECCAK256 SWAP1 SWAP3 ADD DUP4 SWAP1 SSTORE SWAP1 MLOAD DUP3 SWAP1 PUSH32 0x16244E47AF8A7D2C923FAA2CAB44315C0514C7AA830682BBB9CC8F0D37AD7548 SWAP1 PUSH2 0x576 SWAP1 DUP10 SWAP1 DUP9 SWAP1 PUSH2 0x13E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39D SWAP1 PUSH2 0x1404 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD DUP3 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0xFF PUSH1 0xA0 SHL NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x2D8CB32B79CED32C38FB4A61D8482C40627602FEB2CC34B50D9B55EEA376D88C SWAP1 PUSH2 0x5FD SWAP1 DUP4 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x624 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x663 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39D SWAP1 PUSH2 0x1404 JUMP JUMPDEST SELFBALANCE DUP1 PUSH2 0x6A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4E6F206665657320746F207769746864726177 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39D JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x6E1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x70F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39D SWAP1 PUSH2 0x1404 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 PUSH2 0x775 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F206561726E696E677320666F7220746869732073656C6C65720000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP3 SWAP1 SSTORE MLOAD DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 DUP5 SWAP2 SWAP1 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x7B9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x48DC35AF7B45E2A81FFFAD55F6E2FAFACDB1D3D0D50D24EBDC16324F5BA757F1 DUP3 PUSH1 0x40 MLOAD PUSH2 0x7F5 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST DUP1 PUSH1 0x0 SLOAD DUP2 LT PUSH2 0x849 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x125D195B48191BD95CC81B9BDD08195E1A5CDD PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39D JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792073656C6C65722063616E2072656D6F7665206974656D0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39D JUMP JUMPDEST PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x90F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742072656D6F766520736F6C64206974656D000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39D JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 DUP2 SSTORE SWAP1 PUSH2 0x92E PUSH1 0x1 DUP4 ADD DUP3 PUSH2 0xF7C JUMP JUMPDEST PUSH2 0x93C PUSH1 0x2 DUP4 ADD PUSH1 0x0 PUSH2 0xF7C JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x3 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x5 SWAP1 SWAP2 ADD DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD CALLER SWAP2 DUP6 SWAP2 PUSH32 0x48694456128327A59523D36340D5E5B0157DFEFECDECEB0B56E1FA3337FD0D45 SWAP2 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SLOAD PUSH2 0x9A1 SWAP2 SWAP1 PUSH2 0x1445 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39D SWAP1 PUSH2 0x1404 JUMP JUMPDEST PUSH2 0x3E8 DUP2 GT ISZERO PUSH2 0xA1A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4665652063616E6E6F742065786365656420313025 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39D JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD SWAP1 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x528D9479E9F9889A87A3C30C7F7BA537E5E59C4C85A37733B16E57C62DF61302 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 PUSH2 0xABC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F206561726E696E677320746F207769746864726177000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39D JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP3 SWAP1 SSTORE MLOAD DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 DUP5 SWAP2 SWAP1 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xAF7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x48DC35AF7B45E2A81FFFAD55F6E2FAFACDB1D3D0D50D24EBDC16324F5BA757F1 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD SWAP2 SWAP3 SWAP2 PUSH2 0xB52 SWAP1 PUSH2 0x1299 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB7E SWAP1 PUSH2 0x1299 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBCB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBA0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBCB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBAE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0xBE0 SWAP1 PUSH2 0x1299 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC0C SWAP1 PUSH2 0x1299 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC59 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC2E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC59 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC3C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x5 SWAP1 SWAP5 ADD SLOAD SWAP3 SWAP4 SWAP1 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP3 POP PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV PUSH1 0xFF AND SWAP1 DUP8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xCEC JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xCD8 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xD4A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x13585C9AD95D1C1B1858D9481A5CC81C185D5CD959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39D JUMP JUMPDEST DUP1 PUSH1 0x0 SLOAD DUP2 LT PUSH2 0xD92 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x125D195B48191BD95CC81B9BDD08195E1A5CDD PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39D JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xDF0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x125D195B48185B1C9958591E481CDBDB19 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39D JUMP JUMPDEST PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xE4C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742062757920796F7572206F776E206974656D0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39D JUMP JUMPDEST DUP1 PUSH1 0x3 ADD SLOAD CALLVALUE EQ PUSH2 0xE9F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E636F7272656374207061796D656E7420616D6F756E740000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39D JUMP JUMPDEST PUSH1 0x4 DUP2 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH1 0x1 SLOAD PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x0 SWAP2 PUSH2 0x2710 SWAP2 PUSH2 0xECD SWAP2 SWAP1 PUSH2 0x145E JUMP JUMPDEST PUSH2 0xED7 SWAP2 SWAP1 PUSH2 0x1475 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP4 PUSH1 0x3 ADD SLOAD PUSH2 0xEEB SWAP2 SWAP1 PUSH2 0x1445 JUMP JUMPDEST PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP DUP4 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0xF1C SWAP1 DUP5 SWAP1 PUSH2 0x1497 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x40 MLOAD CALLER SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP9 SWAP2 PUSH32 0x965F5F1CABD4450617EF4E4FB57AFED8A8B87544C5549305429C15706FC892CF SWAP2 PUSH2 0xF6D SWAP2 PUSH1 0x1 DUP11 ADD SWAP2 SWAP1 PUSH2 0x14AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0xF88 SWAP1 PUSH2 0x1299 JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0xF98 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0xFB6 SWAP2 SWAP1 PUSH2 0xFB9 JUMP JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xFCE JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xFBA JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xFF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1014 JUMPI PUSH2 0x1014 PUSH2 0xFD2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x103C JUMPI PUSH2 0x103C PUSH2 0xFD2 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x1055 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x108A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x10A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10AE DUP8 DUP4 DUP9 ADD PUSH2 0xFE8 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x10C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10D1 DUP7 DUP3 DUP8 ADD PUSH2 0xFE8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1122 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x113A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1143 DUP4 PUSH2 0x110B JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1163 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1104 DUP3 PUSH2 0x110B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x117E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x11AB JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x118F JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP8 DUP2 MSTORE PUSH1 0xE0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x11E4 PUSH1 0xE0 DUP4 ADD DUP10 PUSH2 0x1185 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x11F6 DUP2 DUP10 PUSH2 0x1185 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD SWAP8 SWAP1 SWAP8 MSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND PUSH1 0x80 DUP5 ADD MSTORE SWAP1 ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 SWAP1 SWAP2 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x125E JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1242 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1292 JUMPI PUSH2 0x1292 PUSH2 0x126A JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x12AD JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x12CD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x131D JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x12FA JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1319 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1306 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x133C JUMPI PUSH2 0x133C PUSH2 0xFD2 JUMP JUMPDEST PUSH2 0x1350 DUP2 PUSH2 0x134A DUP5 SLOAD PUSH2 0x1299 JUMP JUMPDEST DUP5 PUSH2 0x12D3 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1385 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x136D JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x1319 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x13B4 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x1395 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x13D2 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x13F5 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1185 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206F776E65722063616E2063616C6C20746869732066756E6374696F PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x37 PUSH1 0xF9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1458 JUMPI PUSH2 0x1458 PUSH2 0x126A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x1458 JUMPI PUSH2 0x1458 PUSH2 0x126A JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1492 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1458 JUMPI PUSH2 0x1458 PUSH2 0x126A JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 DUP1 DUP5 SLOAD PUSH2 0x14BC DUP2 PUSH2 0x1299 JUMP JUMPDEST DUP1 PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x60 PUSH1 0x1 DUP1 DUP5 AND PUSH1 0x0 DUP2 EQ PUSH2 0x14DE JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x14F8 JUMPI PUSH2 0x1529 JUMP JUMPDEST PUSH1 0xFF NOT DUP6 AND DUP9 DUP5 ADD MSTORE DUP4 ISZERO ISZERO PUSH1 0x5 SHL DUP9 ADD DUP4 ADD SWAP6 POP PUSH2 0x1529 JUMP JUMPDEST DUP10 PUSH1 0x0 MSTORE PUSH1 0x20 DUP1 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x1520 JUMPI DUP2 SLOAD DUP12 DUP3 ADD DUP8 ADD MSTORE SWAP1 DUP5 ADD SWAP1 DUP3 ADD PUSH2 0x1505 JUMP JUMPDEST DUP11 ADD DUP6 ADD SWAP8 POP POP POP JUMPDEST POP POP POP POP POP PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 REVERT DUP14 0x5D 0xB7 SWAP8 ADDRESS RETURNDATASIZE 0x4E DUP6 0xCD 0xE0 PUSH6 0x920126D8ED0A 0xD6 SIGNEXTEND 0xC9 0xEB MSTORE 0xED 0xA9 CALL SWAP15 SWAP14 DUP4 PUSH19 0xA264736F6C6343000814003300000000000000 ","sourceMap":"146:4951:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1754:773;;;;;;;;;;-1:-1:-1;1754:773:8;;;;;:::i;:::-;;:::i;:::-;;;1632:25:28;;;1620:2;1605:18;1754:773:8;;;;;;;;4366:124;;;;;;;;;;-1:-1:-1;4366:124:8;;;;;:::i;:::-;;:::i;:::-;;569:48;;;;;;;;;;-1:-1:-1;569:48:8;;;;;:::i;:::-;;:::i;4500:192::-;;;;;;;;;;;;;:::i;497:18::-;;;;;;;;;;-1:-1:-1;497:18:8;;;;-1:-1:-1;;;497:18:8;;;;;;;;;2548:14:28;;2541:22;2523:41;;2511:2;2496:18;497::8;2383:187:28;402:29:8;;;;;;;;;;;;;;;;371:25;;;;;;;;;;;;;;;;4771:324;;;;;;;;;;-1:-1:-1;4771:324:8;;;;;:::i;:::-;;:::i;3174:333::-;;;;;;;;;;-1:-1:-1;3174:333:8;;;;;:::i;:::-;;:::i;3976:92::-;;;;;;;;;;;;;:::i;623:49::-;;;;;;;;;;-1:-1:-1;623:49:8;;;;;:::i;:::-;;;;;;;;;;;;;;471:20;;;;;;;;;;-1:-1:-1;471:20:8;;;;-1:-1:-1;;;;;471:20:8;;;;;;-1:-1:-1;;;;;3115:32:28;;;3097:51;;3085:2;3070:18;471:20:8;2951:203:28;4101:255:8;;;;;;;;;;-1:-1:-1;4101:255:8;;;;;:::i;:::-;;:::i;3517:315::-;;;;;;;;;;;;;:::i;526:37::-;;;;;;;;;;-1:-1:-1;526:37:8;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;:::i;3842:124::-;;;;;;;;;;-1:-1:-1;3842:124:8;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2537:627::-;;;;;;:::i;:::-;;:::i;1754:773::-;1399:6;;1893:7;;-1:-1:-1;;;1399:6:8;;;;1398:7;1390:41;;;;-1:-1:-1;;;1390:41:8;;5226:2:28;1390:41:8;;;5208:21:28;5265:2;5245:18;;;5238:30;-1:-1:-1;;;5284:18:28;;;5277:51;5345:18;;1390:41:8;;;;;;;;;1942:1:::1;1926:5;1920:19;:23;1912:61;;;::::0;-1:-1:-1;;;1912:61:8;;5576:2:28;1912:61:8::1;::::0;::::1;5558:21:28::0;5615:2;5595:18;;;5588:30;5654:27;5634:18;;;5627:55;5699:18;;1912:61:8::1;5374:349:28::0;1912:61:8::1;2000:1;1991:6;:10;1983:51;;;::::0;-1:-1:-1;;;1983:51:8;;5930:2:28;1983:51:8::1;::::0;::::1;5912:21:28::0;5969:2;5949:18;;;5942:30;6008;5988:18;;;5981:58;6056:18;;1983:51:8::1;5728:352:28::0;1983:51:8::1;2053:14;2070:10:::0;;;;;2053:14;2090:12:::1;2070:10:::0;2090:12:::1;:::i;:::-;::::0;;;-1:-1:-1;;2137:236:8::1;::::0;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;;::::1;::::0;;;;;;;;;;;;;;;2287:10:::1;2137:236:::0;;;;-1:-1:-1;2137:236:8;;;;;;2347:15:::1;2137:236:::0;;;;2121:13;;;:5:::1;:13:::0;;;;;;:252;;;;;;2137:236;;2121:13;2137:236;2121:252;::::1;::::0;::::1;::::0;;::::1;:::i;:::-;-1:-1:-1::0;2121:252:8::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;:::i;:::-;-1:-1:-1::0;2121:252:8::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;;::::1;::::0;::::1;::::0;::::1;;-1:-1:-1::0;;;2121:252:8::1;-1:-1:-1::0;;;;;;2121:252:8;;;-1:-1:-1;;;;;2121:252:8;;::::1;::::0;;;;;;;::::1;::::0;;;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;2404:10:::1;2121:252;2392:23:::0;;;::::1;::::0;;;;;;;:36;;2121:252;2392:36;::::1;::::0;;;;;;;;;;;::::1;::::0;;;2452:45;;2421:6;;2452:45:::1;::::0;::::1;::::0;2471:5;;2478:6;;2452:45:::1;:::i;:::-;;;;;;;;2514:6:::0;1754:773;-1:-1:-1;;;;1754:773:8:o;4366:124::-;1288:5;;-1:-1:-1;;;;;1288:5:8;1274:10;:19;1266:65;;;;-1:-1:-1;;;1266:65:8;;;;;;;:::i;:::-;4426:6:::1;:16:::0;;;::::1;;-1:-1:-1::0;;;4426:16:8::1;-1:-1:-1::0;;;;4426:16:8;;::::1;;::::0;;4457:26:::1;::::0;::::1;::::0;::::1;::::0;4435:7;2548:14:28;2541:22;2523:41;;2511:2;2496:18;;2383:187;4457:26:8::1;;;;;;;;4366:124:::0;:::o;569:48::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4500:192::-;1288:5;;-1:-1:-1;;;;;1288:5:8;1274:10;:19;1266:65;;;;-1:-1:-1;;;1266:65:8;;;;;;;:::i;:::-;4569:21:::1;4608:11:::0;4600:43:::1;;;::::0;-1:-1:-1;;;4600:43:8;;9846:2:28;4600:43:8::1;::::0;::::1;9828:21:28::0;9885:2;9865:18;;;9858:30;-1:-1:-1;;;9904:18:28;;;9897:49;9963:18;;4600:43:8::1;9644:343:28::0;4600:43:8::1;4661:5;::::0;4653:32:::1;::::0;-1:-1:-1;;;;;4661:5:8;;::::1;::::0;4653:32;::::1;;;::::0;4677:7;;4661:5:::1;4653:32:::0;4661:5;4653:32;4677:7;4661:5;4653:32;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;4541:151;4500:192::o:0;4771:324::-;1288:5;;-1:-1:-1;;;;;1288:5:8;1274:10;:19;1266:65;;;;-1:-1:-1;;;1266:65:8;;;;;;;:::i;:::-;-1:-1:-1;;;;;4861:23:8;::::1;4842:16;4861:23:::0;;;:14:::1;:23;::::0;;;;;4902:12;4894:52:::1;;;::::0;-1:-1:-1;;;4894:52:8;;10194:2:28;4894:52:8::1;::::0;::::1;10176:21:28::0;10233:2;10213:18;;;10206:30;10272:29;10252:18;;;10245:57;10319:18;;4894:52:8::1;9992:351:28::0;4894:52:8::1;-1:-1:-1::0;;;;;4965:23:8;::::1;4991:1;4965:23:::0;;;:14:::1;:23;::::0;;;;;:27;;;5002:35;;::::1;;;::::0;5028:8;;5002:35;;4991:1;5002:35;5028:8;4965:23;5002:35;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;5070:7;-1:-1:-1::0;;;;;5052:36:8::1;;5079:8;5052:36;;;;1632:25:28::0;;1620:2;1605:18;;1486:177;5052:36:8::1;;;;;;;;4832:263;4771:324:::0;:::o;3174:333::-;3229:7;1524:10;;1514:7;:20;1506:52;;;;-1:-1:-1;;;1506:52:8;;10550:2:28;1506:52:8;;;10532:21:28;10589:2;10569:18;;;10562:30;-1:-1:-1;;;10608:18:28;;;10601:49;10667:18;;1506:52:8;10348:343:28;1506:52:8;3248:17:::1;3268:14:::0;;;:5:::1;:14;::::0;;;;3314:11:::1;::::0;::::1;::::0;-1:-1:-1;;;;;3314:11:8::1;3300:10;:25;3292:65;;;::::0;-1:-1:-1;;;3292:65:8;;10898:2:28;3292:65:8::1;::::0;::::1;10880:21:28::0;10937:2;10917:18;;;10910:30;10976:29;10956:18;;;10949:57;11023:18;;3292:65:8::1;10696:351:28::0;3292:65:8::1;3376:9;::::0;::::1;::::0;-1:-1:-1;;;3376:9:8;::::1;;;3375:10;3367:46;;;::::0;-1:-1:-1;;;3367:46:8;;11254:2:28;3367:46:8::1;::::0;::::1;11236:21:28::0;11293:2;11273:18;;;11266:30;11332:25;11312:18;;;11305:53;11375:18;;3367:46:8::1;11052:347:28::0;3367:46:8::1;3439:14;::::0;;;:5:::1;:14;::::0;;;;3432:21;;;3439:14;3432:21:::1;;::::0;::::1;3439:14:::0;3432:21:::1;:::i;:::-;;;::::0;::::1;;;:::i;:::-;-1:-1:-1::0;3432:21:8::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;;3432:21:8;;;::::1;::::0;;::::1;::::0;;;3468:32:::1;::::0;3489:10:::1;::::0;3480:7;;3468:32:::1;::::0;3432:21;3468:32:::1;3238:269;3174:333:::0;;:::o;3976:92::-;4021:7;4060:1;4047:10;;:14;;;;:::i;:::-;4040:21;;3976:92;:::o;4101:255::-;1288:5;;-1:-1:-1;;;;;1288:5:8;1274:10;:19;1266:65;;;;-1:-1:-1;;;1266:65:8;;;;;;;:::i;:::-;4191:4:::1;4180:7;:15;;4172:49;;;::::0;-1:-1:-1;;;4172:49:8;;11739:2:28;4172:49:8::1;::::0;::::1;11721:21:28::0;11778:2;11758:18;;;11751:30;-1:-1:-1;;;11797:18:28;;;11790:51;11858:18;;4172:49:8::1;11537:345:28::0;4172:49:8::1;4259:14;::::0;;4283:24;;;;4322:27:::1;::::0;;12061:25:28;;;12117:2;12102:18;;12095:34;;;4322:27:8::1;::::0;12034:18:28;4322:27:8::1;;;;;;;4162:194;4101:255:::0;:::o;3517:315::-;3596:10;3562:16;3581:26;;;:14;:26;;;;;;3625:12;3617:48;;;;-1:-1:-1;;;3617:48:8;;12342:2:28;3617:48:8;;;12324:21:28;12381:2;12361:18;;;12354:30;12420:25;12400:18;;;12393:53;12463:18;;3617:48:8;12140:347:28;3617:48:8;3699:10;3713:1;3684:26;;;:14;:26;;;;;;:30;;;3724:38;;;;;;3753:8;;3724:38;;3713:1;3724:38;3753:8;3699:10;3724:38;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3786:39:8;;1632:25:28;;;3804:10:8;;3786:39;;1620:2:28;1605:18;3786:39:8;;;;;;;3552:280;3517:315::o;526:37::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;526:37:8;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;526:37:8;;;-1:-1:-1;;;;526:37:8;;;;;;;:::o;3842:124::-;-1:-1:-1;;;;;3939:20:8;;;;;;:11;:20;;;;;;;;;3932:27;;;;;;;;;;;;;;;;;3904:16;;3932:27;;;3939:20;3932:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3842:124;;;:::o;2537:627::-;1399:6;;-1:-1:-1;;;1399:6:8;;;;1398:7;1390:41;;;;-1:-1:-1;;;1390:41:8;;5226:2:28;1390:41:8;;;5208:21:28;5265:2;5245:18;;;5238:30;-1:-1:-1;;;5284:18:28;;;5277:51;5345:18;;1390:41:8;5024:345:28;1390:41:8;2607:7:::1;1524:10;;1514:7;:20;1506:52;;;::::0;-1:-1:-1;;;1506:52:8;;10550:2:28;1506:52:8::1;::::0;::::1;10532:21:28::0;10589:2;10569:18;;;10562:30;-1:-1:-1;;;10608:18:28;;;10601:49;10667:18;;1506:52:8::1;10348:343:28::0;1506:52:8::1;2626:17:::2;2646:14:::0;;;:5:::2;:14;::::0;;;;2679:9:::2;::::0;::::2;::::0;-1:-1:-1;;;2679:9:8;::::2;;;2678:10;2670:40;;;::::0;-1:-1:-1;;;2670:40:8;;12694:2:28;2670:40:8::2;::::0;::::2;12676:21:28::0;12733:2;12713:18;;;12706:30;-1:-1:-1;;;12752:18:28;;;12745:47;12809:18;;2670:40:8::2;12492:341:28::0;2670:40:8::2;2742:11;::::0;::::2;::::0;-1:-1:-1;;;;;2742:11:8::2;2728:10;:25:::0;2720:62:::2;;;::::0;-1:-1:-1;;;2720:62:8;;13040:2:28;2720:62:8::2;::::0;::::2;13022:21:28::0;13079:2;13059:18;;;13052:30;13118:26;13098:18;;;13091:54;13162:18;;2720:62:8::2;12838:348:28::0;2720:62:8::2;2813:4;:10;;;2800:9;:23;2792:60;;;::::0;-1:-1:-1;;;2792:60:8;;13393:2:28;2792:60:8::2;::::0;::::2;13375:21:28::0;13432:2;13412:18;;;13405:30;13471:26;13451:18;;;13444:54;13515:18;;2792:60:8::2;13191:348:28::0;2792:60:8::2;2871:9;::::0;::::2;:16:::0;;-1:-1:-1;;;;2871:16:8::2;-1:-1:-1::0;;;2871:16:8::2;::::0;;2883:4:::2;2934:14:::0;2921:10:::2;::::0;::::2;::::0;2871:16;;2952:5:::2;::::0;2921:27:::2;::::0;2934:14;2921:27:::2;:::i;:::-;2920:37;;;;:::i;:::-;2906:51;;2967:20;3003:3;2990:4;:10;;;:16;;;;:::i;:::-;3040:11;::::0;::::2;::::0;-1:-1:-1;;;;;3040:11:8::2;3025:27;::::0;;;:14:::2;:27;::::0;;;;:43;;2967:39;;-1:-1:-1;2967:39:8;;3025:27;;;:43:::2;::::0;2967:39;;3025:43:::2;:::i;:::-;::::0;;;-1:-1:-1;;3133:11:8::2;::::0;::::2;::::0;3121:10:::2;::::0;::::2;::::0;3092:65:::2;::::0;3146:10:::2;::::0;-1:-1:-1;;;;;3133:11:8::2;::::0;3101:7;;3092:65:::2;::::0;::::2;::::0;3133:11;3110:9;::::2;::::0;3121:10;3092:65:::2;:::i;:::-;;;;;;;;2616:548;;;1441:1:::1;2537:627:::0;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;14:127:28:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:719;189:5;242:3;235:4;227:6;223:17;219:27;209:55;;260:1;257;250:12;209:55;296:6;283:20;322:18;359:2;355;352:10;349:36;;;365:18;;:::i;:::-;440:2;434:9;408:2;494:13;;-1:-1:-1;;490:22:28;;;514:2;486:31;482:40;470:53;;;538:18;;;558:22;;;535:46;532:72;;;584:18;;:::i;:::-;624:10;620:2;613:22;659:2;651:6;644:18;705:3;698:4;693:2;685:6;681:15;677:26;674:35;671:55;;;722:1;719;712:12;671:55;786:2;779:4;771:6;767:17;760:4;752:6;748:17;735:54;833:1;826:4;821:2;813:6;809:15;805:26;798:37;853:6;844:15;;;;;;146:719;;;;:::o;870:611::-;967:6;975;983;1036:2;1024:9;1015:7;1011:23;1007:32;1004:52;;;1052:1;1049;1042:12;1004:52;1092:9;1079:23;1121:18;1162:2;1154:6;1151:14;1148:34;;;1178:1;1175;1168:12;1148:34;1201:50;1243:7;1234:6;1223:9;1219:22;1201:50;:::i;:::-;1191:60;;1304:2;1293:9;1289:18;1276:32;1260:48;;1333:2;1323:8;1320:16;1317:36;;;1349:1;1346;1339:12;1317:36;;1372:52;1416:7;1405:8;1394:9;1390:24;1372:52;:::i;:::-;1362:62;;;1471:2;1460:9;1456:18;1443:32;1433:42;;870:611;;;;;:::o;1668:273::-;1724:6;1777:2;1765:9;1756:7;1752:23;1748:32;1745:52;;;1793:1;1790;1783:12;1745:52;1832:9;1819:23;1885:5;1878:13;1871:21;1864:5;1861:32;1851:60;;1907:1;1904;1897:12;1851:60;1930:5;1668:273;-1:-1:-1;;;1668:273:28:o;1946:173::-;2014:20;;-1:-1:-1;;;;;2063:31:28;;2053:42;;2043:70;;2109:1;2106;2099:12;2043:70;1946:173;;;:::o;2124:254::-;2192:6;2200;2253:2;2241:9;2232:7;2228:23;2224:32;2221:52;;;2269:1;2266;2259:12;2221:52;2292:29;2311:9;2292:29;:::i;:::-;2282:39;2368:2;2353:18;;;;2340:32;;-1:-1:-1;;;2124:254:28:o;2575:186::-;2634:6;2687:2;2675:9;2666:7;2662:23;2658:32;2655:52;;;2703:1;2700;2693:12;2655:52;2726:29;2745:9;2726:29;:::i;2766:180::-;2825:6;2878:2;2866:9;2857:7;2853:23;2849:32;2846:52;;;2894:1;2891;2884:12;2846:52;-1:-1:-1;2917:23:28;;2766:180;-1:-1:-1;2766:180:28:o;3159:423::-;3201:3;3239:5;3233:12;3266:6;3261:3;3254:19;3291:1;3301:162;3315:6;3312:1;3309:13;3301:162;;;3377:4;3433:13;;;3429:22;;3423:29;3405:11;;;3401:20;;3394:59;3330:12;3301:162;;;3305:3;3508:1;3501:4;3492:6;3487:3;3483:16;3479:27;3472:38;3571:4;3564:2;3560:7;3555:2;3547:6;3543:15;3539:29;3534:3;3530:39;3526:50;3519:57;;;3159:423;;;;:::o;3587:795::-;3934:6;3923:9;3916:25;3977:3;3972:2;3961:9;3957:18;3950:31;3897:4;4004:46;4045:3;4034:9;4030:19;4022:6;4004:46;:::i;:::-;4098:9;4090:6;4086:22;4081:2;4070:9;4066:18;4059:50;4126:33;4152:6;4144;4126:33;:::i;:::-;4190:2;4175:18;;4168:34;;;;-1:-1:-1;;;;;;;4239:32:28;;;;4233:3;4218:19;;4211:61;4316:14;;4309:22;4259:3;4288:19;;4281:51;4363:3;4348:19;;;4341:35;4118:41;3587:795;-1:-1:-1;;;3587:795:28:o;4387:632::-;4558:2;4610:21;;;4680:13;;4583:18;;;4702:22;;;4529:4;;4558:2;4781:15;;;;4755:2;4740:18;;;4529:4;4824:169;4838:6;4835:1;4832:13;4824:169;;;4899:13;;4887:26;;4968:15;;;;4933:12;;;;4860:1;4853:9;4824:169;;;-1:-1:-1;5010:3:28;;4387:632;-1:-1:-1;;;;;;4387:632:28:o;6085:127::-;6146:10;6141:3;6137:20;6134:1;6127:31;6177:4;6174:1;6167:15;6201:4;6198:1;6191:15;6217:135;6256:3;6277:17;;;6274:43;;6297:18;;:::i;:::-;-1:-1:-1;6344:1:28;6333:13;;6217:135::o;6357:380::-;6436:1;6432:12;;;;6479;;;6500:61;;6554:4;6546:6;6542:17;6532:27;;6500:61;6607:2;6599:6;6596:14;6576:18;6573:38;6570:161;;6653:10;6648:3;6644:20;6641:1;6634:31;6688:4;6685:1;6678:15;6716:4;6713:1;6706:15;6570:161;;6357:380;;;:::o;6868:545::-;6970:2;6965:3;6962:11;6959:448;;;7006:1;7031:5;7027:2;7020:17;7076:4;7072:2;7062:19;7146:2;7134:10;7130:19;7127:1;7123:27;7117:4;7113:38;7182:4;7170:10;7167:20;7164:47;;;-1:-1:-1;7205:4:28;7164:47;7260:2;7255:3;7251:12;7248:1;7244:20;7238:4;7234:31;7224:41;;7315:82;7333:2;7326:5;7323:13;7315:82;;;7378:17;;;7359:1;7348:13;7315:82;;;7319:3;;;6959:448;6868:545;;;:::o;7589:1352::-;7715:3;7709:10;7742:18;7734:6;7731:30;7728:56;;;7764:18;;:::i;:::-;7793:97;7883:6;7843:38;7875:4;7869:11;7843:38;:::i;:::-;7837:4;7793:97;:::i;:::-;7945:4;;8009:2;7998:14;;8026:1;8021:663;;;;8728:1;8745:6;8742:89;;;-1:-1:-1;8797:19:28;;;8791:26;8742:89;-1:-1:-1;;7546:1:28;7542:11;;;7538:24;7534:29;7524:40;7570:1;7566:11;;;7521:57;8844:81;;7991:944;;8021:663;6815:1;6808:14;;;6852:4;6839:18;;-1:-1:-1;;8057:20:28;;;8175:236;8189:7;8186:1;8183:14;8175:236;;;8278:19;;;8272:26;8257:42;;8370:27;;;;8338:1;8326:14;;;;8205:19;;8175:236;;;8179:3;8439:6;8430:7;8427:19;8424:201;;;8500:19;;;8494:26;-1:-1:-1;;8583:1:28;8579:14;;;8595:3;8575:24;8571:37;8567:42;8552:58;8537:74;;8424:201;-1:-1:-1;;;;;8671:1:28;8655:14;;;8651:22;8638:36;;-1:-1:-1;7589:1352:28:o;8946:291::-;9123:2;9112:9;9105:21;9086:4;9143:45;9184:2;9173:9;9169:18;9161:6;9143:45;:::i;:::-;9135:53;;9224:6;9219:2;9208:9;9204:18;9197:34;8946:291;;;;;:::o;9242:397::-;9444:2;9426:21;;;9483:2;9463:18;;;9456:30;9522:34;9517:2;9502:18;;9495:62;-1:-1:-1;;;9588:2:28;9573:18;;9566:31;9629:3;9614:19;;9242:397::o;11404:128::-;11471:9;;;11492:11;;;11489:37;;;11506:18;;:::i;:::-;11404:128;;;;:::o;13544:168::-;13617:9;;;13648;;13665:15;;;13659:22;;13645:37;13635:71;;13686:18;;:::i;13717:217::-;13757:1;13783;13773:132;;13827:10;13822:3;13818:20;13815:1;13808:31;13862:4;13859:1;13852:15;13890:4;13887:1;13880:15;13773:132;-1:-1:-1;13919:9:28;;13717:217::o;13939:125::-;14004:9;;;14025:10;;;14022:36;;;14038:18;;:::i;14069:1042::-;14243:2;14232:9;14225:21;14206:4;14266:1;14299:6;14293:13;14329:36;14355:9;14329:36;:::i;:::-;14401:6;14396:2;14385:9;14381:18;14374:34;14427:2;14448:1;14480:2;14469:9;14465:18;14497:1;14492:158;;;;14664:1;14659:381;;;;14458:582;;14492:158;-1:-1:-1;;14540:24:28;;14520:18;;;14513:52;14618:14;;14611:22;14608:1;14604:30;14589:46;;14585:55;;;-1:-1:-1;14492:158:28;;14659:381;14690:6;14687:1;14680:17;14720:4;14765:2;14762:1;14752:16;14790:1;14804:180;14818:6;14815:1;14812:13;14804:180;;;14911:14;;14887:17;;;14883:26;;14876:50;14954:16;;;;14833:10;;14804:180;;;15008:17;;15004:26;;;-1:-1:-1;;;14458:582:28;-1:-1:-1;;;;;15091:4:28;15076:20;;;;15069:36;;;;15057:3;14069:1042;-1:-1:-1;;14069:1042:28:o"},"gasEstimates":{"creation":{"codeDepositCost":"1098400","executionCost":"infinite","totalCost":"infinite"},"external":{"buyItem(uint256)":"infinite","emergencyWithdraw(address)":"infinite","getItemCount()":"2427","getSellerItems(address)":"infinite","items(uint256)":"infinite","listItem(string,string,uint256)":"infinite","marketplaceFee()":"2329","nextItemId()":"2351","owner()":"2426","paused()":"2350","removeItem(uint256)":"infinite","sellerEarnings(address)":"2575","sellerItems(address,uint256)":"4801","setMarketplaceFee(uint256)":"27962","setPaused(bool)":"27780","withdrawEarnings()":"infinite","withdrawFees()":"infinite"}},"methodIdentifiers":{"buyItem(uint256)":"e7fb74c7","emergencyWithdraw(address)":"6ff1c9bc","getItemCount()":"7749cf23","getSellerItems(address)":"d3cbb62b","items(uint256)":"bfb231d2","listItem(string,string,uint256)":"0562021c","marketplaceFee()":"6a166964","nextItemId()":"6a868974","owner()":"8da5cb5b","paused()":"5c975abb","removeItem(uint256)":"71329171","sellerEarnings(address)":"8b012358","sellerItems(address,uint256)":"2c02338f","setMarketplaceFee(uint256)":"9407ea98","setPaused(bool)":"16c38b3c","withdrawEarnings()":"b73c6ce9","withdrawFees()":"476343ee"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_marketplaceFee\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EarningsWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"FeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"name\":\"ItemListed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"name\":\"ItemRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"name\":\"ItemSold\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"MarketplacePaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_itemId\",\"type\":\"uint256\"}],\"name\":\"buyItem\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_seller\",\"type\":\"address\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getItemCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_seller\",\"type\":\"address\"}],\"name\":\"getSellerItems\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"items\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"sold\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"listedAt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"listItem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketplaceFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextItemId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_itemId\",\"type\":\"uint256\"}],\"name\":\"removeItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"sellerEarnings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"sellerItems\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newFee\",\"type\":\"uint256\"}],\"name\":\"setMarketplaceFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_paused\",\"type\":\"bool\"}],\"name\":\"setPaused\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawEarnings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"A simple marketplace for buying and selling items\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Marketplace\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Marketplace.sol\":\"Marketplace\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Marketplace.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\n/**\\n * @title Marketplace\\n * @dev A simple marketplace for buying and selling items\\n */\\ncontract Marketplace {\\n    struct Item {\\n        uint256 id;\\n        string name;\\n        string description;\\n        uint256 price;\\n        address payable seller;\\n        bool sold;\\n        uint256 listedAt;\\n    }\\n    \\n    uint256 public nextItemId;\\n    uint256 public marketplaceFee; // Fee in basis points (100 = 1%)\\n    address public owner;\\n    bool public paused;\\n    \\n    mapping(uint256 => Item) public items;\\n    mapping(address => uint256[]) public sellerItems;\\n    mapping(address => uint256) public sellerEarnings;\\n    \\n    event ItemListed(\\n        uint256 indexed itemId,\\n        string name,\\n        uint256 price,\\n        address indexed seller\\n    );\\n    \\n    event ItemSold(\\n        uint256 indexed itemId,\\n        string name,\\n        uint256 price,\\n        address indexed seller,\\n        address indexed buyer\\n    );\\n    \\n    event ItemRemoved(uint256 indexed itemId, address indexed seller);\\n    event EarningsWithdrawn(address indexed seller, uint256 amount);\\n    event FeeUpdated(uint256 oldFee, uint256 newFee);\\n    event MarketplacePaused(bool paused);\\n    \\n    modifier onlyOwner() {\\n        require(msg.sender == owner, \\\"Only owner can call this function\\\");\\n        _;\\n    }\\n    \\n    modifier notPaused() {\\n        require(!paused, \\\"Marketplace is paused\\\");\\n        _;\\n    }\\n    \\n    modifier itemExists(uint256 _itemId) {\\n        require(_itemId < nextItemId, \\\"Item does not exist\\\");\\n        _;\\n    }\\n    \\n    constructor(uint256 _marketplaceFee) {\\n        owner = msg.sender;\\n        marketplaceFee = _marketplaceFee;\\n        nextItemId = 1; // Start IDs from 1\\n    }\\n    \\n    function listItem(\\n        string memory _name,\\n        string memory _description,\\n        uint256 _price\\n    ) public notPaused returns (uint256) {\\n        require(bytes(_name).length > 0, \\\"Item name cannot be empty\\\");\\n        require(_price > 0, \\\"Price must be greater than 0\\\");\\n        \\n        uint256 itemId = nextItemId;\\n        nextItemId++;\\n        \\n        items[itemId] = Item({\\n            id: itemId,\\n            name: _name,\\n            description: _description,\\n            price: _price,\\n            seller: payable(msg.sender),\\n            sold: false,\\n            listedAt: block.timestamp\\n        });\\n        \\n        sellerItems[msg.sender].push(itemId);\\n        \\n        emit ItemListed(itemId, _name, _price, msg.sender);\\n        return itemId;\\n    }\\n    \\n    function buyItem(uint256 _itemId) public payable notPaused itemExists(_itemId) {\\n        Item storage item = items[_itemId];\\n        require(!item.sold, \\\"Item already sold\\\");\\n        require(msg.sender != item.seller, \\\"Cannot buy your own item\\\");\\n        require(msg.value == item.price, \\\"Incorrect payment amount\\\");\\n        \\n        item.sold = true;\\n        \\n        uint256 fee = (item.price * marketplaceFee) / 10000;\\n        uint256 sellerAmount = item.price - fee;\\n        \\n        sellerEarnings[item.seller] += sellerAmount;\\n        \\n        emit ItemSold(_itemId, item.name, item.price, item.seller, msg.sender);\\n    }\\n    \\n    function removeItem(uint256 _itemId) public itemExists(_itemId) {\\n        Item storage item = items[_itemId];\\n        require(msg.sender == item.seller, \\\"Only seller can remove item\\\");\\n        require(!item.sold, \\\"Cannot remove sold item\\\");\\n        \\n        delete items[_itemId];\\n        emit ItemRemoved(_itemId, msg.sender);\\n    }\\n    \\n    function withdrawEarnings() public {\\n        uint256 earnings = sellerEarnings[msg.sender];\\n        require(earnings > 0, \\\"No earnings to withdraw\\\");\\n        \\n        sellerEarnings[msg.sender] = 0;\\n        payable(msg.sender).transfer(earnings);\\n        \\n        emit EarningsWithdrawn(msg.sender, earnings);\\n    }\\n    \\n    function getSellerItems(address _seller) public view returns (uint256[] memory) {\\n        return sellerItems[_seller];\\n    }\\n    \\n    function getItemCount() public view returns (uint256) {\\n        return nextItemId - 1;\\n    }\\n    \\n    // Owner functions\\n    function setMarketplaceFee(uint256 _newFee) public onlyOwner {\\n        require(_newFee <= 1000, \\\"Fee cannot exceed 10%\\\"); // Max 10%\\n        uint256 oldFee = marketplaceFee;\\n        marketplaceFee = _newFee;\\n        emit FeeUpdated(oldFee, _newFee);\\n    }\\n    \\n    function setPaused(bool _paused) public onlyOwner {\\n        paused = _paused;\\n        emit MarketplacePaused(_paused);\\n    }\\n    \\n    function withdrawFees() public onlyOwner {\\n        uint256 balance = address(this).balance;\\n        require(balance > 0, \\\"No fees to withdraw\\\");\\n        payable(owner).transfer(balance);\\n    }\\n    \\n    // Emergency function to withdraw specific earnings (owner only)\\n    function emergencyWithdraw(address _seller) public onlyOwner {\\n        uint256 earnings = sellerEarnings[_seller];\\n        require(earnings > 0, \\\"No earnings for this seller\\\");\\n        \\n        sellerEarnings[_seller] = 0;\\n        payable(_seller).transfer(earnings);\\n        emit EarningsWithdrawn(_seller, earnings);\\n    }\\n}\",\"keccak256\":\"0x20248b8b0f10525a508a7fbb8c899abb58d0e28548f9ffb4a30d112b3b833a37\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":719,"contract":"contracts/Marketplace.sol:Marketplace","label":"nextItemId","offset":0,"slot":"0","type":"t_uint256"},{"astId":721,"contract":"contracts/Marketplace.sol:Marketplace","label":"marketplaceFee","offset":0,"slot":"1","type":"t_uint256"},{"astId":723,"contract":"contracts/Marketplace.sol:Marketplace","label":"owner","offset":0,"slot":"2","type":"t_address"},{"astId":725,"contract":"contracts/Marketplace.sol:Marketplace","label":"paused","offset":20,"slot":"2","type":"t_bool"},{"astId":730,"contract":"contracts/Marketplace.sol:Marketplace","label":"items","offset":0,"slot":"3","type":"t_mapping(t_uint256,t_struct(Item)717_storage)"},{"astId":735,"contract":"contracts/Marketplace.sol:Marketplace","label":"sellerItems","offset":0,"slot":"4","type":"t_mapping(t_address,t_array(t_uint256)dyn_storage)"},{"astId":739,"contract":"contracts/Marketplace.sol:Marketplace","label":"sellerEarnings","offset":0,"slot":"5","type":"t_mapping(t_address,t_uint256)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_address_payable":{"encoding":"inplace","label":"address payable","numberOfBytes":"20"},"t_array(t_uint256)dyn_storage":{"base":"t_uint256","encoding":"dynamic_array","label":"uint256[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_array(t_uint256)dyn_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256[])","numberOfBytes":"32","value":"t_array(t_uint256)dyn_storage"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_struct(Item)717_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct Marketplace.Item)","numberOfBytes":"32","value":"t_struct(Item)717_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Item)717_storage":{"encoding":"inplace","label":"struct Marketplace.Item","members":[{"astId":704,"contract":"contracts/Marketplace.sol:Marketplace","label":"id","offset":0,"slot":"0","type":"t_uint256"},{"astId":706,"contract":"contracts/Marketplace.sol:Marketplace","label":"name","offset":0,"slot":"1","type":"t_string_storage"},{"astId":708,"contract":"contracts/Marketplace.sol:Marketplace","label":"description","offset":0,"slot":"2","type":"t_string_storage"},{"astId":710,"contract":"contracts/Marketplace.sol:Marketplace","label":"price","offset":0,"slot":"3","type":"t_uint256"},{"astId":712,"contract":"contracts/Marketplace.sol:Marketplace","label":"seller","offset":0,"slot":"4","type":"t_address_payable"},{"astId":714,"contract":"contracts/Marketplace.sol:Marketplace","label":"sold","offset":20,"slot":"4","type":"t_bool"},{"astId":716,"contract":"contracts/Marketplace.sol:Marketplace","label":"listedAt","offset":0,"slot":"5","type":"t_uint256"}],"numberOfBytes":"192"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/SimpleStorage.sol":{"SimpleStorage":{"abi":[{"inputs":[{"internalType":"uint256","name":"_initialValue","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"oldValue","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newValue","type":"uint256"},{"indexed":false,"internalType":"address","name":"changedBy","type":"address"}],"name":"ValueChanged","type":"event"},{"inputs":[],"name":"getValue","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"increment","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"reset","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"setValue","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"storedValue","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Store & retrieve value in a variable","kind":"dev","methods":{"getValue()":{"details":"Return value ","returns":{"_0":"value of 'storedValue'"}},"increment()":{"details":"Increment the stored value by 1"},"reset()":{"details":"Reset value to zero (only owner)"},"setValue(uint256)":{"details":"Store value in variable","params":{"_value":"value to store"}}},"title":"SimpleStorage","version":1},"evm":{"bytecode":{"functionDebugData":{"@_1255":{"entryPoint":null,"id":1255,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":141,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_rational_0_by_1_t_uint256_t_address__to_t_uint256_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:558:28","statements":[{"nodeType":"YulBlock","src":"6:3:28","statements":[]},{"body":{"nodeType":"YulBlock","src":"95:103:28","statements":[{"body":{"nodeType":"YulBlock","src":"141:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"153:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"143:6:28"},"nodeType":"YulFunctionCall","src":"143:12:28"},"nodeType":"YulExpressionStatement","src":"143:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"116:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"125:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"112:3:28"},"nodeType":"YulFunctionCall","src":"112:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"137:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"108:3:28"},"nodeType":"YulFunctionCall","src":"108:32:28"},"nodeType":"YulIf","src":"105:52:28"},{"nodeType":"YulAssignment","src":"166:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"182:9:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"176:5:28"},"nodeType":"YulFunctionCall","src":"176:16:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"166:6:28"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"61:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"72:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"84:6:28","type":""}],"src":"14:184:28"},{"body":{"nodeType":"YulBlock","src":"368:188:28","statements":[{"nodeType":"YulAssignment","src":"378:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"390:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"401:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"386:3:28"},"nodeType":"YulFunctionCall","src":"386:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"378:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"420:9:28"},{"name":"value0","nodeType":"YulIdentifier","src":"431:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"413:6:28"},"nodeType":"YulFunctionCall","src":"413:25:28"},"nodeType":"YulExpressionStatement","src":"413:25:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"458:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"469:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"454:3:28"},"nodeType":"YulFunctionCall","src":"454:18:28"},{"name":"value1","nodeType":"YulIdentifier","src":"474:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"447:6:28"},"nodeType":"YulFunctionCall","src":"447:34:28"},"nodeType":"YulExpressionStatement","src":"447:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"501:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"512:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"497:3:28"},"nodeType":"YulFunctionCall","src":"497:18:28"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"521:6:28"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"537:3:28","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"542:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"533:3:28"},"nodeType":"YulFunctionCall","src":"533:11:28"},{"kind":"number","nodeType":"YulLiteral","src":"546:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"529:3:28"},"nodeType":"YulFunctionCall","src":"529:19:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"517:3:28"},"nodeType":"YulFunctionCall","src":"517:32:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"490:6:28"},"nodeType":"YulFunctionCall","src":"490:60:28"},"nodeType":"YulExpressionStatement","src":"490:60:28"}]},"name":"abi_encode_tuple_t_rational_0_by_1_t_uint256_t_address__to_t_uint256_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"321:9:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"332:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"340:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"348:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"359:4:28","type":""}],"src":"203:353:28"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_rational_0_by_1_t_uint256_t_address__to_t_uint256_t_uint256_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n    }\n}","id":28,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b506040516102c03803806102c083398101604081905261002f9161008d565b6000818155600180546001600160a01b0319163390811790915560408051928352602083018490528201527f681683094c99fb1b55d9c72829a0516f885774946ee037b112798941433c137b9060600160405180910390a1506100a6565b60006020828403121561009f57600080fd5b5051919050565b61020b806100b56000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80632096525514610067578063552410771461007e5780636d619daa146100935780638da5cb5b1461009c578063d09de08a146100c7578063d826f88f146100cf575b600080fd5b6000545b6040519081526020015b60405180910390f35b61009161008c366004610195565b6100d7565b005b61006b60005481565b6001546100af906001600160a01b031681565b6040516001600160a01b039091168152602001610075565b610091610122565b610091610136565b60008054908290556040805182815260208101849052338183015290517f681683094c99fb1b55d9c72829a0516f885774946ee037b112798941433c137b9181900360600190a15050565b610134600054600161008c91906101ae565b565b6001546001600160a01b0316331461018b5760405162461bcd60e51b815260206004820152601460248201527313db9b1e481bdddb995c8818d85b881c995cd95d60621b604482015260640160405180910390fd5b61013460006100d7565b6000602082840312156101a757600080fd5b5035919050565b808201808211156101cf57634e487b7160e01b600052601160045260246000fd5b9291505056fea2646970667358221220d9a1b5c51a30f87918220397cfce1f9bfb051f594dcc96965d3ca5337e47f49364736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2C0 CODESIZE SUB DUP1 PUSH2 0x2C0 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x8D JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 SSTORE PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD DUP5 SWAP1 MSTORE DUP3 ADD MSTORE PUSH32 0x681683094C99FB1B55D9C72829A0516F885774946EE037B112798941433C137B SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH2 0xA6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20B DUP1 PUSH2 0xB5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x20965255 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x55241077 EQ PUSH2 0x7E JUMPI DUP1 PUSH4 0x6D619DAA EQ PUSH2 0x93 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x9C JUMPI DUP1 PUSH4 0xD09DE08A EQ PUSH2 0xC7 JUMPI DUP1 PUSH4 0xD826F88F EQ PUSH2 0xCF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x91 PUSH2 0x8C CALLDATASIZE PUSH1 0x4 PUSH2 0x195 JUMP JUMPDEST PUSH2 0xD7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6B PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xAF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x75 JUMP JUMPDEST PUSH2 0x91 PUSH2 0x122 JUMP JUMPDEST PUSH2 0x91 PUSH2 0x136 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE CALLER DUP2 DUP4 ADD MSTORE SWAP1 MLOAD PUSH32 0x681683094C99FB1B55D9C72829A0516F885774946EE037B112798941433C137B SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x134 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH2 0x8C SWAP2 SWAP1 PUSH2 0x1AE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x18B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x13DB9B1E481BDDDB995C8818D85B881C995CD95D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x134 PUSH1 0x0 PUSH2 0xD7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1CF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 LOG1 0xB5 0xC5 BYTE ADDRESS 0xF8 PUSH26 0x18220397CFCE1F9BFB051F594DCC96965D3CA5337E47F4936473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"135:1115:9:-:0;;;311:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;356:11;:27;;;393:5;:18;;-1:-1:-1;;;;;;393:18:9;401:10;393:18;;;;;;426:42;;;413:25:28;;;469:2;454:18;;447:34;;;497:18;;490:60;426:42:9;;401:2:28;386:18;426:42:9;;;;;;;311:164;135:1115;;14:184:28;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;-1:-1:-1;176:16:28;;14:184;-1:-1:-1;14:184:28:o;203:353::-;135:1115:9;;;;;;"},"deployedBytecode":{"functionDebugData":{"@getValue_1286":{"entryPoint":null,"id":1286,"parameterSlots":0,"returnSlots":1},"@increment_1297":{"entryPoint":290,"id":1297,"parameterSlots":0,"returnSlots":0},"@owner_1225":{"entryPoint":null,"id":1225,"parameterSlots":0,"returnSlots":0},"@reset_1314":{"entryPoint":310,"id":1314,"parameterSlots":0,"returnSlots":0},"@setValue_1277":{"entryPoint":215,"id":1277,"parameterSlots":1,"returnSlots":0},"@storedValue_1223":{"entryPoint":null,"id":1223,"parameterSlots":0,"returnSlots":0},"abi_decode_tuple_t_uint256":{"entryPoint":405,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_15aef648d4a76cd1dbab670e06110449532faa2987fa00fa100a131ac172cd83__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":430,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1512:28","statements":[{"nodeType":"YulBlock","src":"6:3:28","statements":[]},{"body":{"nodeType":"YulBlock","src":"115:76:28","statements":[{"nodeType":"YulAssignment","src":"125:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"137:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"148:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"133:3:28"},"nodeType":"YulFunctionCall","src":"133:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"125:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"167:9:28"},{"name":"value0","nodeType":"YulIdentifier","src":"178:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"160:6:28"},"nodeType":"YulFunctionCall","src":"160:25:28"},"nodeType":"YulExpressionStatement","src":"160:25:28"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"84:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"95:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"106:4:28","type":""}],"src":"14:177:28"},{"body":{"nodeType":"YulBlock","src":"266:110:28","statements":[{"body":{"nodeType":"YulBlock","src":"312:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"321:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"324:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"314:6:28"},"nodeType":"YulFunctionCall","src":"314:12:28"},"nodeType":"YulExpressionStatement","src":"314:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"287:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"296:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"283:3:28"},"nodeType":"YulFunctionCall","src":"283:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"308:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"279:3:28"},"nodeType":"YulFunctionCall","src":"279:32:28"},"nodeType":"YulIf","src":"276:52:28"},{"nodeType":"YulAssignment","src":"337:33:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"360:9:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"347:12:28"},"nodeType":"YulFunctionCall","src":"347:23:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"337:6:28"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"232:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"243:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"255:6:28","type":""}],"src":"196:180:28"},{"body":{"nodeType":"YulBlock","src":"482:102:28","statements":[{"nodeType":"YulAssignment","src":"492:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"504:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"515:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"500:3:28"},"nodeType":"YulFunctionCall","src":"500:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"492:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"534:9:28"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"549:6:28"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"565:3:28","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"570:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"561:3:28"},"nodeType":"YulFunctionCall","src":"561:11:28"},{"kind":"number","nodeType":"YulLiteral","src":"574:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"557:3:28"},"nodeType":"YulFunctionCall","src":"557:19:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"545:3:28"},"nodeType":"YulFunctionCall","src":"545:32:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"527:6:28"},"nodeType":"YulFunctionCall","src":"527:51:28"},"nodeType":"YulExpressionStatement","src":"527:51:28"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"451:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"462:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"473:4:28","type":""}],"src":"381:203:28"},{"body":{"nodeType":"YulBlock","src":"746:188:28","statements":[{"nodeType":"YulAssignment","src":"756:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"768:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"779:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"764:3:28"},"nodeType":"YulFunctionCall","src":"764:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"756:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"798:9:28"},{"name":"value0","nodeType":"YulIdentifier","src":"809:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"791:6:28"},"nodeType":"YulFunctionCall","src":"791:25:28"},"nodeType":"YulExpressionStatement","src":"791:25:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"836:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"847:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"832:3:28"},"nodeType":"YulFunctionCall","src":"832:18:28"},{"name":"value1","nodeType":"YulIdentifier","src":"852:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"825:6:28"},"nodeType":"YulFunctionCall","src":"825:34:28"},"nodeType":"YulExpressionStatement","src":"825:34:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"879:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"890:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"875:3:28"},"nodeType":"YulFunctionCall","src":"875:18:28"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"899:6:28"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"915:3:28","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"920:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"911:3:28"},"nodeType":"YulFunctionCall","src":"911:11:28"},{"kind":"number","nodeType":"YulLiteral","src":"924:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"907:3:28"},"nodeType":"YulFunctionCall","src":"907:19:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"895:3:28"},"nodeType":"YulFunctionCall","src":"895:32:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"868:6:28"},"nodeType":"YulFunctionCall","src":"868:60:28"},"nodeType":"YulExpressionStatement","src":"868:60:28"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"699:9:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"710:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"718:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"726:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"737:4:28","type":""}],"src":"589:345:28"},{"body":{"nodeType":"YulBlock","src":"987:174:28","statements":[{"nodeType":"YulAssignment","src":"997:16:28","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"1008:1:28"},{"name":"y","nodeType":"YulIdentifier","src":"1011:1:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1004:3:28"},"nodeType":"YulFunctionCall","src":"1004:9:28"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"997:3:28"}]},{"body":{"nodeType":"YulBlock","src":"1044:111:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1065:1:28","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1072:3:28","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1077:10:28","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1068:3:28"},"nodeType":"YulFunctionCall","src":"1068:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1058:6:28"},"nodeType":"YulFunctionCall","src":"1058:31:28"},"nodeType":"YulExpressionStatement","src":"1058:31:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1109:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1112:4:28","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1102:6:28"},"nodeType":"YulFunctionCall","src":"1102:15:28"},"nodeType":"YulExpressionStatement","src":"1102:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1137:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1140:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1130:6:28"},"nodeType":"YulFunctionCall","src":"1130:15:28"},"nodeType":"YulExpressionStatement","src":"1130:15:28"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"1028:1:28"},{"name":"sum","nodeType":"YulIdentifier","src":"1031:3:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1025:2:28"},"nodeType":"YulFunctionCall","src":"1025:10:28"},"nodeType":"YulIf","src":"1022:133:28"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"970:1:28","type":""},{"name":"y","nodeType":"YulTypedName","src":"973:1:28","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"979:3:28","type":""}],"src":"939:222:28"},{"body":{"nodeType":"YulBlock","src":"1340:170:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1357:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1368:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1350:6:28"},"nodeType":"YulFunctionCall","src":"1350:21:28"},"nodeType":"YulExpressionStatement","src":"1350:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1391:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1402:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1387:3:28"},"nodeType":"YulFunctionCall","src":"1387:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"1407:2:28","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1380:6:28"},"nodeType":"YulFunctionCall","src":"1380:30:28"},"nodeType":"YulExpressionStatement","src":"1380:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1430:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1441:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1426:3:28"},"nodeType":"YulFunctionCall","src":"1426:18:28"},{"hexValue":"4f6e6c79206f776e65722063616e207265736574","kind":"string","nodeType":"YulLiteral","src":"1446:22:28","type":"","value":"Only owner can reset"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1419:6:28"},"nodeType":"YulFunctionCall","src":"1419:50:28"},"nodeType":"YulExpressionStatement","src":"1419:50:28"},{"nodeType":"YulAssignment","src":"1478:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1490:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1501:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1486:3:28"},"nodeType":"YulFunctionCall","src":"1486:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1478:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_15aef648d4a76cd1dbab670e06110449532faa2987fa00fa100a131ac172cd83__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1317:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1331:4:28","type":""}],"src":"1166:344:28"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_15aef648d4a76cd1dbab670e06110449532faa2987fa00fa100a131ac172cd83__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Only owner can reset\")\n        tail := add(headStart, 96)\n    }\n}","id":28,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100625760003560e01c80632096525514610067578063552410771461007e5780636d619daa146100935780638da5cb5b1461009c578063d09de08a146100c7578063d826f88f146100cf575b600080fd5b6000545b6040519081526020015b60405180910390f35b61009161008c366004610195565b6100d7565b005b61006b60005481565b6001546100af906001600160a01b031681565b6040516001600160a01b039091168152602001610075565b610091610122565b610091610136565b60008054908290556040805182815260208101849052338183015290517f681683094c99fb1b55d9c72829a0516f885774946ee037b112798941433c137b9181900360600190a15050565b610134600054600161008c91906101ae565b565b6001546001600160a01b0316331461018b5760405162461bcd60e51b815260206004820152601460248201527313db9b1e481bdddb995c8818d85b881c995cd95d60621b604482015260640160405180910390fd5b61013460006100d7565b6000602082840312156101a757600080fd5b5035919050565b808201808211156101cf57634e487b7160e01b600052601160045260246000fd5b9291505056fea2646970667358221220d9a1b5c51a30f87918220397cfce1f9bfb051f594dcc96965d3ca5337e47f49364736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x20965255 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x55241077 EQ PUSH2 0x7E JUMPI DUP1 PUSH4 0x6D619DAA EQ PUSH2 0x93 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x9C JUMPI DUP1 PUSH4 0xD09DE08A EQ PUSH2 0xC7 JUMPI DUP1 PUSH4 0xD826F88F EQ PUSH2 0xCF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x91 PUSH2 0x8C CALLDATASIZE PUSH1 0x4 PUSH2 0x195 JUMP JUMPDEST PUSH2 0xD7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6B PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xAF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x75 JUMP JUMPDEST PUSH2 0x91 PUSH2 0x122 JUMP JUMPDEST PUSH2 0x91 PUSH2 0x136 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE CALLER DUP2 DUP4 ADD MSTORE SWAP1 MLOAD PUSH32 0x681683094C99FB1B55D9C72829A0516F885774946EE037B112798941433C137B SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x134 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH2 0x8C SWAP2 SWAP1 PUSH2 0x1AE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x18B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x13DB9B1E481BDDDB995C8818D85B881C995CD95D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x134 PUSH1 0x0 PUSH2 0xD7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1CF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 LOG1 0xB5 0xC5 BYTE ADDRESS 0xF8 PUSH26 0x18220397CFCE1F9BFB051F594DCC96965D3CA5337E47F4936473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"135:1115:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;838:85;879:7;905:11;838:85;;;160:25:28;;;148:2;133:18;838:85:9;;;;;;;;573:175;;;;;;:::i;:::-;;:::i;:::-;;164:26;;;;;;196:20;;;;;-1:-1:-1;;;;;196:20:9;;;;;;-1:-1:-1;;;;;545:32:28;;;527:51;;515:2;500:18;196:20:9;381:203:28;993:70:9;;;:::i;1134:114::-;;;:::i;573:175::-;624:16;643:11;;664:20;;;;699:42;;;791:25:28;;;847:2;832:18;;825:34;;;730:10:9;875:18:28;;;868:60;699:42:9;;;;;;;779:2:28;699:42:9;;;614:134;573:175;:::o;993:70::-;1031:25;1040:11;;1054:1;1040:15;;;;:::i;1031:25::-;993:70::o;1134:114::-;1190:5;;-1:-1:-1;;;;;1190:5:9;1176:10;:19;1168:52;;;;-1:-1:-1;;;1168:52:9;;1368:2:28;1168:52:9;;;1350:21:28;1407:2;1387:18;;;1380:30;-1:-1:-1;;;1426:18:28;;;1419:50;1486:18;;1168:52:9;;;;;;;;1230:11;1239:1;1230:8;:11::i;196:180:28:-;255:6;308:2;296:9;287:7;283:23;279:32;276:52;;;324:1;321;314:12;276:52;-1:-1:-1;347:23:28;;196:180;-1:-1:-1;196:180:28:o;939:222::-;1004:9;;;1025:10;;;1022:133;;;1077:10;1072:3;1068:20;1065:1;1058:31;1112:4;1109:1;1102:15;1140:4;1137:1;1130:15;1022:133;939:222;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"104600","executionCost":"infinite","totalCost":"infinite"},"external":{"getValue()":"2248","increment()":"28244","owner()":"2381","reset()":"11128","setValue(uint256)":"26050","storedValue()":"2306"}},"methodIdentifiers":{"getValue()":"20965255","increment()":"d09de08a","owner()":"8da5cb5b","reset()":"d826f88f","setValue(uint256)":"55241077","storedValue()":"6d619daa"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_initialValue\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"changedBy\",\"type\":\"address\"}],\"name\":\"ValueChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"increment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"storedValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Store & retrieve value in a variable\",\"kind\":\"dev\",\"methods\":{\"getValue()\":{\"details\":\"Return value \",\"returns\":{\"_0\":\"value of 'storedValue'\"}},\"increment()\":{\"details\":\"Increment the stored value by 1\"},\"reset()\":{\"details\":\"Reset value to zero (only owner)\"},\"setValue(uint256)\":{\"details\":\"Store value in variable\",\"params\":{\"_value\":\"value to store\"}}},\"title\":\"SimpleStorage\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SimpleStorage.sol\":\"SimpleStorage\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SimpleStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\n/**\\n * @title SimpleStorage\\n * @dev Store & retrieve value in a variable\\n */\\ncontract SimpleStorage {\\n    uint256 public storedValue;\\n    address public owner;\\n    \\n    event ValueChanged(uint256 oldValue, uint256 newValue, address changedBy);\\n    \\n    constructor(uint256 _initialValue) {\\n        storedValue = _initialValue;\\n        owner = msg.sender;\\n        emit ValueChanged(0, _initialValue, msg.sender);\\n    }\\n    \\n    /**\\n     * @dev Store value in variable\\n     * @param _value value to store\\n     */\\n    function setValue(uint256 _value) public {\\n        uint256 oldValue = storedValue;\\n        storedValue = _value;\\n        emit ValueChanged(oldValue, _value, msg.sender);\\n    }\\n    \\n    /**\\n     * @dev Return value \\n     * @return value of 'storedValue'\\n     */\\n    function getValue() public view returns (uint256) {\\n        return storedValue;\\n    }\\n    \\n    /**\\n     * @dev Increment the stored value by 1\\n     */\\n    function increment() public {\\n        setValue(storedValue + 1);\\n    }\\n    \\n    /**\\n     * @dev Reset value to zero (only owner)\\n     */\\n    function reset() public {\\n        require(msg.sender == owner, \\\"Only owner can reset\\\");\\n        setValue(0);\\n    }\\n}\",\"keccak256\":\"0x1c9e60f654743e052a66db32e302eeae6bb41d44a6858b0a114e2872da5bc002\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1223,"contract":"contracts/SimpleStorage.sol:SimpleStorage","label":"storedValue","offset":0,"slot":"0","type":"t_uint256"},{"astId":1225,"contract":"contracts/SimpleStorage.sol:SimpleStorage","label":"owner","offset":0,"slot":"1","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/SimpleToken.sol":{"SimpleToken":{"abi":[{"inputs":[{"internalType":"string","name":"_name","type":"string"},{"internalType":"string","name":"_symbol","type":"string"},{"internalType":"uint8","name":"_decimals","type":"uint8"},{"internalType":"uint256","name":"_initialSupply","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Burn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Mint","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_spender","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Basic ERC20-like token implementation","kind":"dev","methods":{},"title":"SimpleToken","version":1},"evm":{"bytecode":{"functionDebugData":{"@_1420":{"entryPoint":null,"id":1420,"parameterSlots":4,"returnSlots":0},"abi_decode_string_fromMemory":{"entryPoint":259,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8t_uint256_fromMemory":{"entryPoint":434,"id":null,"parameterSlots":2,"returnSlots":4},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_exp_helper":{"entryPoint":942,"id":null,"parameterSlots":2,"returnSlots":2},"checked_exp_t_uint256_t_uint8":{"entryPoint":1197,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":1015,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":1221,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":633,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":716,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":573,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":920,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":237,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:6226:28","statements":[{"nodeType":"YulBlock","src":"6:3:28","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:28","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:28","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:28","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:28"},"nodeType":"YulFunctionCall","src":"66:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:28"},"nodeType":"YulFunctionCall","src":"56:31:28"},"nodeType":"YulExpressionStatement","src":"56:31:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:28","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:28"},"nodeType":"YulFunctionCall","src":"96:15:28"},"nodeType":"YulExpressionStatement","src":"96:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:28"},"nodeType":"YulFunctionCall","src":"120:15:28"},"nodeType":"YulExpressionStatement","src":"120:15:28"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:28"},{"body":{"nodeType":"YulBlock","src":"210:776:28","statements":[{"body":{"nodeType":"YulBlock","src":"259:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"268:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"271:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"261:6:28"},"nodeType":"YulFunctionCall","src":"261:12:28"},"nodeType":"YulExpressionStatement","src":"261:12:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"238:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"246:4:28","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"234:3:28"},"nodeType":"YulFunctionCall","src":"234:17:28"},{"name":"end","nodeType":"YulIdentifier","src":"253:3:28"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"230:3:28"},"nodeType":"YulFunctionCall","src":"230:27:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"223:6:28"},"nodeType":"YulFunctionCall","src":"223:35:28"},"nodeType":"YulIf","src":"220:55:28"},{"nodeType":"YulVariableDeclaration","src":"284:23:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"300:6:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"294:5:28"},"nodeType":"YulFunctionCall","src":"294:13:28"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"288:2:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"316:28:28","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"334:2:28","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"338:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"330:3:28"},"nodeType":"YulFunctionCall","src":"330:10:28"},{"kind":"number","nodeType":"YulLiteral","src":"342:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"326:3:28"},"nodeType":"YulFunctionCall","src":"326:18:28"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"320:2:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"367:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"369:16:28"},"nodeType":"YulFunctionCall","src":"369:18:28"},"nodeType":"YulExpressionStatement","src":"369:18:28"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"359:2:28"},{"name":"_2","nodeType":"YulIdentifier","src":"363:2:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"356:2:28"},"nodeType":"YulFunctionCall","src":"356:10:28"},"nodeType":"YulIf","src":"353:36:28"},{"nodeType":"YulVariableDeclaration","src":"398:17:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"412:2:28","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"408:3:28"},"nodeType":"YulFunctionCall","src":"408:7:28"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"402:2:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"424:23:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"444:2:28","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"438:5:28"},"nodeType":"YulFunctionCall","src":"438:9:28"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"428:6:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"456:71:28","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"478:6:28"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"502:2:28"},{"kind":"number","nodeType":"YulLiteral","src":"506:4:28","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"498:3:28"},"nodeType":"YulFunctionCall","src":"498:13:28"},{"name":"_3","nodeType":"YulIdentifier","src":"513:2:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"494:3:28"},"nodeType":"YulFunctionCall","src":"494:22:28"},{"kind":"number","nodeType":"YulLiteral","src":"518:2:28","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"490:3:28"},"nodeType":"YulFunctionCall","src":"490:31:28"},{"name":"_3","nodeType":"YulIdentifier","src":"523:2:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"486:3:28"},"nodeType":"YulFunctionCall","src":"486:40:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"474:3:28"},"nodeType":"YulFunctionCall","src":"474:53:28"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"460:10:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"586:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"588:16:28"},"nodeType":"YulFunctionCall","src":"588:18:28"},"nodeType":"YulExpressionStatement","src":"588:18:28"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"545:10:28"},{"name":"_2","nodeType":"YulIdentifier","src":"557:2:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"542:2:28"},"nodeType":"YulFunctionCall","src":"542:18:28"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"565:10:28"},{"name":"memPtr","nodeType":"YulIdentifier","src":"577:6:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"562:2:28"},"nodeType":"YulFunctionCall","src":"562:22:28"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"539:2:28"},"nodeType":"YulFunctionCall","src":"539:46:28"},"nodeType":"YulIf","src":"536:72:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"624:2:28","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"628:10:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"617:6:28"},"nodeType":"YulFunctionCall","src":"617:22:28"},"nodeType":"YulExpressionStatement","src":"617:22:28"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"655:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"663:2:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"648:6:28"},"nodeType":"YulFunctionCall","src":"648:18:28"},"nodeType":"YulExpressionStatement","src":"648:18:28"},{"nodeType":"YulVariableDeclaration","src":"675:14:28","value":{"kind":"number","nodeType":"YulLiteral","src":"685:4:28","type":"","value":"0x20"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"679:2:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"735:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"744:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"747:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"737:6:28"},"nodeType":"YulFunctionCall","src":"737:12:28"},"nodeType":"YulExpressionStatement","src":"737:12:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"712:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"720:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"708:3:28"},"nodeType":"YulFunctionCall","src":"708:15:28"},{"name":"_4","nodeType":"YulIdentifier","src":"725:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"704:3:28"},"nodeType":"YulFunctionCall","src":"704:24:28"},{"name":"end","nodeType":"YulIdentifier","src":"730:3:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"701:2:28"},"nodeType":"YulFunctionCall","src":"701:33:28"},"nodeType":"YulIf","src":"698:53:28"},{"nodeType":"YulVariableDeclaration","src":"760:10:28","value":{"kind":"number","nodeType":"YulLiteral","src":"769:1:28","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"764:1:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"825:87:28","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"854:6:28"},{"name":"i","nodeType":"YulIdentifier","src":"862:1:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"850:3:28"},"nodeType":"YulFunctionCall","src":"850:14:28"},{"name":"_4","nodeType":"YulIdentifier","src":"866:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"846:3:28"},"nodeType":"YulFunctionCall","src":"846:23:28"},{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"885:6:28"},{"name":"i","nodeType":"YulIdentifier","src":"893:1:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"881:3:28"},"nodeType":"YulFunctionCall","src":"881:14:28"},{"name":"_4","nodeType":"YulIdentifier","src":"897:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"877:3:28"},"nodeType":"YulFunctionCall","src":"877:23:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"871:5:28"},"nodeType":"YulFunctionCall","src":"871:30:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"839:6:28"},"nodeType":"YulFunctionCall","src":"839:63:28"},"nodeType":"YulExpressionStatement","src":"839:63:28"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"790:1:28"},{"name":"_1","nodeType":"YulIdentifier","src":"793:2:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"787:2:28"},"nodeType":"YulFunctionCall","src":"787:9:28"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"797:19:28","statements":[{"nodeType":"YulAssignment","src":"799:15:28","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"808:1:28"},{"name":"_4","nodeType":"YulIdentifier","src":"811:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"804:3:28"},"nodeType":"YulFunctionCall","src":"804:10:28"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"799:1:28"}]}]},"pre":{"nodeType":"YulBlock","src":"783:3:28","statements":[]},"src":"779:133:28"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"936:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"944:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"932:3:28"},"nodeType":"YulFunctionCall","src":"932:15:28"},{"name":"_4","nodeType":"YulIdentifier","src":"949:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"928:3:28"},"nodeType":"YulFunctionCall","src":"928:24:28"},{"kind":"number","nodeType":"YulLiteral","src":"954:1:28","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"921:6:28"},"nodeType":"YulFunctionCall","src":"921:35:28"},"nodeType":"YulExpressionStatement","src":"921:35:28"},{"nodeType":"YulAssignment","src":"965:15:28","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"974:6:28"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"965:5:28"}]}]},"name":"abi_decode_string_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"184:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"192:3:28","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"200:5:28","type":""}],"src":"146:840:28"},{"body":{"nodeType":"YulBlock","src":"1141:624:28","statements":[{"body":{"nodeType":"YulBlock","src":"1188:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1197:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1200:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1190:6:28"},"nodeType":"YulFunctionCall","src":"1190:12:28"},"nodeType":"YulExpressionStatement","src":"1190:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1162:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"1171:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1158:3:28"},"nodeType":"YulFunctionCall","src":"1158:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"1183:3:28","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1154:3:28"},"nodeType":"YulFunctionCall","src":"1154:33:28"},"nodeType":"YulIf","src":"1151:53:28"},{"nodeType":"YulVariableDeclaration","src":"1213:30:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1233:9:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1227:5:28"},"nodeType":"YulFunctionCall","src":"1227:16:28"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1217:6:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1252:28:28","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1270:2:28","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1274:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1266:3:28"},"nodeType":"YulFunctionCall","src":"1266:10:28"},{"kind":"number","nodeType":"YulLiteral","src":"1278:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1262:3:28"},"nodeType":"YulFunctionCall","src":"1262:18:28"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1256:2:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"1307:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1316:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1319:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1309:6:28"},"nodeType":"YulFunctionCall","src":"1309:12:28"},"nodeType":"YulExpressionStatement","src":"1309:12:28"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1295:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"1303:2:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1292:2:28"},"nodeType":"YulFunctionCall","src":"1292:14:28"},"nodeType":"YulIf","src":"1289:34:28"},{"nodeType":"YulAssignment","src":"1332:71:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1375:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"1386:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1371:3:28"},"nodeType":"YulFunctionCall","src":"1371:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1395:7:28"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1342:28:28"},"nodeType":"YulFunctionCall","src":"1342:61:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1332:6:28"}]},{"nodeType":"YulVariableDeclaration","src":"1412:41:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1438:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1449:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1434:3:28"},"nodeType":"YulFunctionCall","src":"1434:18:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1428:5:28"},"nodeType":"YulFunctionCall","src":"1428:25:28"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1416:8:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"1482:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1491:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1494:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1484:6:28"},"nodeType":"YulFunctionCall","src":"1484:12:28"},"nodeType":"YulExpressionStatement","src":"1484:12:28"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1468:8:28"},{"name":"_1","nodeType":"YulIdentifier","src":"1478:2:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1465:2:28"},"nodeType":"YulFunctionCall","src":"1465:16:28"},"nodeType":"YulIf","src":"1462:36:28"},{"nodeType":"YulAssignment","src":"1507:73:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1550:9:28"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1561:8:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1546:3:28"},"nodeType":"YulFunctionCall","src":"1546:24:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1572:7:28"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1517:28:28"},"nodeType":"YulFunctionCall","src":"1517:63:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1507:6:28"}]},{"nodeType":"YulVariableDeclaration","src":"1589:38:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1612:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1623:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1608:3:28"},"nodeType":"YulFunctionCall","src":"1608:18:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1602:5:28"},"nodeType":"YulFunctionCall","src":"1602:25:28"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1593:5:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"1675:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1684:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1687:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1677:6:28"},"nodeType":"YulFunctionCall","src":"1677:12:28"},"nodeType":"YulExpressionStatement","src":"1677:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1649:5:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1660:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"1667:4:28","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1656:3:28"},"nodeType":"YulFunctionCall","src":"1656:16:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1646:2:28"},"nodeType":"YulFunctionCall","src":"1646:27:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1639:6:28"},"nodeType":"YulFunctionCall","src":"1639:35:28"},"nodeType":"YulIf","src":"1636:55:28"},{"nodeType":"YulAssignment","src":"1700:15:28","value":{"name":"value","nodeType":"YulIdentifier","src":"1710:5:28"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1700:6:28"}]},{"nodeType":"YulAssignment","src":"1724:35:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1744:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1755:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1740:3:28"},"nodeType":"YulFunctionCall","src":"1740:18:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1734:5:28"},"nodeType":"YulFunctionCall","src":"1734:25:28"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1724:6:28"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1083:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1094:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1106:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1114:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1122:6:28","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1130:6:28","type":""}],"src":"991:774:28"},{"body":{"nodeType":"YulBlock","src":"1825:325:28","statements":[{"nodeType":"YulAssignment","src":"1835:22:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1849:1:28","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"1852:4:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1845:3:28"},"nodeType":"YulFunctionCall","src":"1845:12:28"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1835:6:28"}]},{"nodeType":"YulVariableDeclaration","src":"1866:38:28","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1896:4:28"},{"kind":"number","nodeType":"YulLiteral","src":"1902:1:28","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1892:3:28"},"nodeType":"YulFunctionCall","src":"1892:12:28"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"1870:18:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"1943:31:28","statements":[{"nodeType":"YulAssignment","src":"1945:27:28","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1959:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"1967:4:28","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1955:3:28"},"nodeType":"YulFunctionCall","src":"1955:17:28"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1945:6:28"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1923:18:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1916:6:28"},"nodeType":"YulFunctionCall","src":"1916:26:28"},"nodeType":"YulIf","src":"1913:61:28"},{"body":{"nodeType":"YulBlock","src":"2033:111:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2054:1:28","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2061:3:28","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2066:10:28","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2057:3:28"},"nodeType":"YulFunctionCall","src":"2057:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2047:6:28"},"nodeType":"YulFunctionCall","src":"2047:31:28"},"nodeType":"YulExpressionStatement","src":"2047:31:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2098:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2101:4:28","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2091:6:28"},"nodeType":"YulFunctionCall","src":"2091:15:28"},"nodeType":"YulExpressionStatement","src":"2091:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2126:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2129:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2119:6:28"},"nodeType":"YulFunctionCall","src":"2119:15:28"},"nodeType":"YulExpressionStatement","src":"2119:15:28"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1989:18:28"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2012:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"2020:2:28","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2009:2:28"},"nodeType":"YulFunctionCall","src":"2009:14:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1986:2:28"},"nodeType":"YulFunctionCall","src":"1986:38:28"},"nodeType":"YulIf","src":"1983:161:28"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1805:4:28","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1814:6:28","type":""}],"src":"1770:380:28"},{"body":{"nodeType":"YulBlock","src":"2211:65:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2228:1:28","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"2231:3:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2221:6:28"},"nodeType":"YulFunctionCall","src":"2221:14:28"},"nodeType":"YulExpressionStatement","src":"2221:14:28"},{"nodeType":"YulAssignment","src":"2244:26:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2262:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2265:4:28","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2252:9:28"},"nodeType":"YulFunctionCall","src":"2252:18:28"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2244:4:28"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"2194:3:28","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"2202:4:28","type":""}],"src":"2155:121:28"},{"body":{"nodeType":"YulBlock","src":"2362:464:28","statements":[{"body":{"nodeType":"YulBlock","src":"2395:425:28","statements":[{"nodeType":"YulVariableDeclaration","src":"2409:11:28","value":{"kind":"number","nodeType":"YulLiteral","src":"2419:1:28","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2413:2:28","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2440:2:28"},{"name":"array","nodeType":"YulIdentifier","src":"2444:5:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2433:6:28"},"nodeType":"YulFunctionCall","src":"2433:17:28"},"nodeType":"YulExpressionStatement","src":"2433:17:28"},{"nodeType":"YulVariableDeclaration","src":"2463:31:28","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2485:2:28"},{"kind":"number","nodeType":"YulLiteral","src":"2489:4:28","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2475:9:28"},"nodeType":"YulFunctionCall","src":"2475:19:28"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"2467:4:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2507:57:28","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2530:4:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2540:1:28","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2547:10:28"},{"kind":"number","nodeType":"YulLiteral","src":"2559:2:28","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2543:3:28"},"nodeType":"YulFunctionCall","src":"2543:19:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2536:3:28"},"nodeType":"YulFunctionCall","src":"2536:27:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2526:3:28"},"nodeType":"YulFunctionCall","src":"2526:38:28"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"2511:11:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"2601:23:28","statements":[{"nodeType":"YulAssignment","src":"2603:19:28","value":{"name":"data","nodeType":"YulIdentifier","src":"2618:4:28"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"2603:11:28"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2583:10:28"},{"kind":"number","nodeType":"YulLiteral","src":"2595:4:28","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2580:2:28"},"nodeType":"YulFunctionCall","src":"2580:20:28"},"nodeType":"YulIf","src":"2577:47:28"},{"nodeType":"YulVariableDeclaration","src":"2637:41:28","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2651:4:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2661:1:28","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2668:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"2673:2:28","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2664:3:28"},"nodeType":"YulFunctionCall","src":"2664:12:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2657:3:28"},"nodeType":"YulFunctionCall","src":"2657:20:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2647:3:28"},"nodeType":"YulFunctionCall","src":"2647:31:28"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2641:2:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2691:24:28","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"2704:11:28"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"2695:5:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"2789:21:28","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2798:5:28"},{"name":"_1","nodeType":"YulIdentifier","src":"2805:2:28"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2791:6:28"},"nodeType":"YulFunctionCall","src":"2791:17:28"},"nodeType":"YulExpressionStatement","src":"2791:17:28"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2739:5:28"},{"name":"_2","nodeType":"YulIdentifier","src":"2746:2:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2736:2:28"},"nodeType":"YulFunctionCall","src":"2736:13:28"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2750:26:28","statements":[{"nodeType":"YulAssignment","src":"2752:22:28","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2765:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"2772:1:28","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2761:3:28"},"nodeType":"YulFunctionCall","src":"2761:13:28"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"2752:5:28"}]}]},"pre":{"nodeType":"YulBlock","src":"2732:3:28","statements":[]},"src":"2728:82:28"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2378:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"2383:2:28","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2375:2:28"},"nodeType":"YulFunctionCall","src":"2375:11:28"},"nodeType":"YulIf","src":"2372:448:28"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"2334:5:28","type":""},{"name":"len","nodeType":"YulTypedName","src":"2341:3:28","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"2346:10:28","type":""}],"src":"2281:545:28"},{"body":{"nodeType":"YulBlock","src":"2916:81:28","statements":[{"nodeType":"YulAssignment","src":"2926:65:28","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2941:4:28"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2959:1:28","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"2962:3:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2955:3:28"},"nodeType":"YulFunctionCall","src":"2955:11:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2972:1:28","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2968:3:28"},"nodeType":"YulFunctionCall","src":"2968:6:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2951:3:28"},"nodeType":"YulFunctionCall","src":"2951:24:28"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2947:3:28"},"nodeType":"YulFunctionCall","src":"2947:29:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2937:3:28"},"nodeType":"YulFunctionCall","src":"2937:40:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2983:1:28","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"2986:3:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2979:3:28"},"nodeType":"YulFunctionCall","src":"2979:11:28"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2934:2:28"},"nodeType":"YulFunctionCall","src":"2934:57:28"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"2926:4:28"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2893:4:28","type":""},{"name":"len","nodeType":"YulTypedName","src":"2899:3:28","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"2907:4:28","type":""}],"src":"2831:166:28"},{"body":{"nodeType":"YulBlock","src":"3098:1256:28","statements":[{"nodeType":"YulVariableDeclaration","src":"3108:24:28","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3128:3:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3122:5:28"},"nodeType":"YulFunctionCall","src":"3122:10:28"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"3112:6:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"3175:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3177:16:28"},"nodeType":"YulFunctionCall","src":"3177:18:28"},"nodeType":"YulExpressionStatement","src":"3177:18:28"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3147:6:28"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3163:2:28","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"3167:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3159:3:28"},"nodeType":"YulFunctionCall","src":"3159:10:28"},{"kind":"number","nodeType":"YulLiteral","src":"3171:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3155:3:28"},"nodeType":"YulFunctionCall","src":"3155:18:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3144:2:28"},"nodeType":"YulFunctionCall","src":"3144:30:28"},"nodeType":"YulIf","src":"3141:56:28"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3250:4:28"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3288:4:28"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"3282:5:28"},"nodeType":"YulFunctionCall","src":"3282:11:28"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"3256:25:28"},"nodeType":"YulFunctionCall","src":"3256:38:28"},{"name":"newLen","nodeType":"YulIdentifier","src":"3296:6:28"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"3206:43:28"},"nodeType":"YulFunctionCall","src":"3206:97:28"},"nodeType":"YulExpressionStatement","src":"3206:97:28"},{"nodeType":"YulVariableDeclaration","src":"3312:18:28","value":{"kind":"number","nodeType":"YulLiteral","src":"3329:1:28","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"3316:9:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3339:23:28","value":{"kind":"number","nodeType":"YulLiteral","src":"3358:4:28","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"3343:11:28","type":""}]},{"nodeType":"YulAssignment","src":"3371:24:28","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3384:11:28"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3371:9:28"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"3441:656:28","statements":[{"nodeType":"YulVariableDeclaration","src":"3455:35:28","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3474:6:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3486:2:28","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3482:3:28"},"nodeType":"YulFunctionCall","src":"3482:7:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3470:3:28"},"nodeType":"YulFunctionCall","src":"3470:20:28"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"3459:7:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3503:49:28","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3547:4:28"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"3517:29:28"},"nodeType":"YulFunctionCall","src":"3517:35:28"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"3507:6:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3565:10:28","value":{"kind":"number","nodeType":"YulLiteral","src":"3574:1:28","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3569:1:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"3652:172:28","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3677:6:28"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3695:3:28"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3700:9:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3691:3:28"},"nodeType":"YulFunctionCall","src":"3691:19:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3685:5:28"},"nodeType":"YulFunctionCall","src":"3685:26:28"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3670:6:28"},"nodeType":"YulFunctionCall","src":"3670:42:28"},"nodeType":"YulExpressionStatement","src":"3670:42:28"},{"nodeType":"YulAssignment","src":"3729:24:28","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3743:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"3751:1:28","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3739:3:28"},"nodeType":"YulFunctionCall","src":"3739:14:28"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3729:6:28"}]},{"nodeType":"YulAssignment","src":"3770:40:28","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3787:9:28"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3798:11:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3783:3:28"},"nodeType":"YulFunctionCall","src":"3783:27:28"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3770:9:28"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3599:1:28"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"3602:7:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3596:2:28"},"nodeType":"YulFunctionCall","src":"3596:14:28"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3611:28:28","statements":[{"nodeType":"YulAssignment","src":"3613:24:28","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3622:1:28"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3625:11:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3618:3:28"},"nodeType":"YulFunctionCall","src":"3618:19:28"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3613:1:28"}]}]},"pre":{"nodeType":"YulBlock","src":"3592:3:28","statements":[]},"src":"3588:236:28"},{"body":{"nodeType":"YulBlock","src":"3872:166:28","statements":[{"nodeType":"YulVariableDeclaration","src":"3890:43:28","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3917:3:28"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3922:9:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3913:3:28"},"nodeType":"YulFunctionCall","src":"3913:19:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3907:5:28"},"nodeType":"YulFunctionCall","src":"3907:26:28"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"3894:9:28","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3957:6:28"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"3969:9:28"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3996:1:28","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"3999:6:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3992:3:28"},"nodeType":"YulFunctionCall","src":"3992:14:28"},{"kind":"number","nodeType":"YulLiteral","src":"4008:3:28","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3988:3:28"},"nodeType":"YulFunctionCall","src":"3988:24:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4018:1:28","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4014:3:28"},"nodeType":"YulFunctionCall","src":"4014:6:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3984:3:28"},"nodeType":"YulFunctionCall","src":"3984:37:28"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3980:3:28"},"nodeType":"YulFunctionCall","src":"3980:42:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3965:3:28"},"nodeType":"YulFunctionCall","src":"3965:58:28"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3950:6:28"},"nodeType":"YulFunctionCall","src":"3950:74:28"},"nodeType":"YulExpressionStatement","src":"3950:74:28"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"3843:7:28"},{"name":"newLen","nodeType":"YulIdentifier","src":"3852:6:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3840:2:28"},"nodeType":"YulFunctionCall","src":"3840:19:28"},"nodeType":"YulIf","src":"3837:201:28"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4058:4:28"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4072:1:28","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"4075:6:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4068:3:28"},"nodeType":"YulFunctionCall","src":"4068:14:28"},{"kind":"number","nodeType":"YulLiteral","src":"4084:1:28","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4064:3:28"},"nodeType":"YulFunctionCall","src":"4064:22:28"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4051:6:28"},"nodeType":"YulFunctionCall","src":"4051:36:28"},"nodeType":"YulExpressionStatement","src":"4051:36:28"}]},"nodeType":"YulCase","src":"3434:663:28","value":{"kind":"number","nodeType":"YulLiteral","src":"3439:1:28","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"4114:234:28","statements":[{"nodeType":"YulVariableDeclaration","src":"4128:14:28","value":{"kind":"number","nodeType":"YulLiteral","src":"4141:1:28","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4132:5:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"4177:67:28","statements":[{"nodeType":"YulAssignment","src":"4195:35:28","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4214:3:28"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4219:9:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4210:3:28"},"nodeType":"YulFunctionCall","src":"4210:19:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4204:5:28"},"nodeType":"YulFunctionCall","src":"4204:26:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4195:5:28"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"4158:6:28"},"nodeType":"YulIf","src":"4155:89:28"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4264:4:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4323:5:28"},{"name":"newLen","nodeType":"YulIdentifier","src":"4330:6:28"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"4270:52:28"},"nodeType":"YulFunctionCall","src":"4270:67:28"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4257:6:28"},"nodeType":"YulFunctionCall","src":"4257:81:28"},"nodeType":"YulExpressionStatement","src":"4257:81:28"}]},"nodeType":"YulCase","src":"4106:242:28","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3414:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"3422:2:28","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3411:2:28"},"nodeType":"YulFunctionCall","src":"3411:14:28"},"nodeType":"YulSwitch","src":"3404:944:28"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3083:4:28","type":""},{"name":"src","nodeType":"YulTypedName","src":"3089:3:28","type":""}],"src":"3002:1352:28"},{"body":{"nodeType":"YulBlock","src":"4391:95:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4408:1:28","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4415:3:28","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"4420:10:28","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4411:3:28"},"nodeType":"YulFunctionCall","src":"4411:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4401:6:28"},"nodeType":"YulFunctionCall","src":"4401:31:28"},"nodeType":"YulExpressionStatement","src":"4401:31:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4448:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4451:4:28","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4441:6:28"},"nodeType":"YulFunctionCall","src":"4441:15:28"},"nodeType":"YulExpressionStatement","src":"4441:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4472:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4475:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4465:6:28"},"nodeType":"YulFunctionCall","src":"4465:15:28"},"nodeType":"YulExpressionStatement","src":"4465:15:28"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"4359:127:28"},{"body":{"nodeType":"YulBlock","src":"4555:358:28","statements":[{"nodeType":"YulVariableDeclaration","src":"4565:16:28","value":{"kind":"number","nodeType":"YulLiteral","src":"4580:1:28","type":"","value":"1"},"variables":[{"name":"power_1","nodeType":"YulTypedName","src":"4569:7:28","type":""}]},{"nodeType":"YulAssignment","src":"4590:16:28","value":{"name":"power_1","nodeType":"YulIdentifier","src":"4599:7:28"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"4590:5:28"}]},{"nodeType":"YulAssignment","src":"4615:13:28","value":{"name":"_base","nodeType":"YulIdentifier","src":"4623:5:28"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"4615:4:28"}]},{"body":{"nodeType":"YulBlock","src":"4679:228:28","statements":[{"body":{"nodeType":"YulBlock","src":"4724:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"4726:16:28"},"nodeType":"YulFunctionCall","src":"4726:18:28"},"nodeType":"YulExpressionStatement","src":"4726:18:28"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"4699:4:28"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4713:1:28","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4709:3:28"},"nodeType":"YulFunctionCall","src":"4709:6:28"},{"name":"base","nodeType":"YulIdentifier","src":"4717:4:28"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4705:3:28"},"nodeType":"YulFunctionCall","src":"4705:17:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4696:2:28"},"nodeType":"YulFunctionCall","src":"4696:27:28"},"nodeType":"YulIf","src":"4693:53:28"},{"body":{"nodeType":"YulBlock","src":"4785:29:28","statements":[{"nodeType":"YulAssignment","src":"4787:25:28","value":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"4800:5:28"},{"name":"base","nodeType":"YulIdentifier","src":"4807:4:28"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4796:3:28"},"nodeType":"YulFunctionCall","src":"4796:16:28"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"4787:5:28"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"4766:8:28"},{"name":"power_1","nodeType":"YulIdentifier","src":"4776:7:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4762:3:28"},"nodeType":"YulFunctionCall","src":"4762:22:28"},"nodeType":"YulIf","src":"4759:55:28"},{"nodeType":"YulAssignment","src":"4827:23:28","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"4839:4:28"},{"name":"base","nodeType":"YulIdentifier","src":"4845:4:28"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4835:3:28"},"nodeType":"YulFunctionCall","src":"4835:15:28"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"4827:4:28"}]},{"nodeType":"YulAssignment","src":"4863:34:28","value":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"4879:7:28"},{"name":"exponent","nodeType":"YulIdentifier","src":"4888:8:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4875:3:28"},"nodeType":"YulFunctionCall","src":"4875:22:28"},"variableNames":[{"name":"exponent","nodeType":"YulIdentifier","src":"4863:8:28"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"4648:8:28"},{"name":"power_1","nodeType":"YulIdentifier","src":"4658:7:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4645:2:28"},"nodeType":"YulFunctionCall","src":"4645:21:28"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4667:3:28","statements":[]},"pre":{"nodeType":"YulBlock","src":"4641:3:28","statements":[]},"src":"4637:270:28"}]},"name":"checked_exp_helper","nodeType":"YulFunctionDefinition","parameters":[{"name":"_base","nodeType":"YulTypedName","src":"4519:5:28","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"4526:8:28","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"4539:5:28","type":""},{"name":"base","nodeType":"YulTypedName","src":"4546:4:28","type":""}],"src":"4491:422:28"},{"body":{"nodeType":"YulBlock","src":"4977:747:28","statements":[{"body":{"nodeType":"YulBlock","src":"5015:52:28","statements":[{"nodeType":"YulAssignment","src":"5029:10:28","value":{"kind":"number","nodeType":"YulLiteral","src":"5038:1:28","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"5029:5:28"}]},{"nodeType":"YulLeave","src":"5052:5:28"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"4997:8:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4990:6:28"},"nodeType":"YulFunctionCall","src":"4990:16:28"},"nodeType":"YulIf","src":"4987:80:28"},{"body":{"nodeType":"YulBlock","src":"5100:52:28","statements":[{"nodeType":"YulAssignment","src":"5114:10:28","value":{"kind":"number","nodeType":"YulLiteral","src":"5123:1:28","type":"","value":"0"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"5114:5:28"}]},{"nodeType":"YulLeave","src":"5137:5:28"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"5086:4:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5079:6:28"},"nodeType":"YulFunctionCall","src":"5079:12:28"},"nodeType":"YulIf","src":"5076:76:28"},{"cases":[{"body":{"nodeType":"YulBlock","src":"5188:52:28","statements":[{"nodeType":"YulAssignment","src":"5202:10:28","value":{"kind":"number","nodeType":"YulLiteral","src":"5211:1:28","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"5202:5:28"}]},{"nodeType":"YulLeave","src":"5225:5:28"}]},"nodeType":"YulCase","src":"5181:59:28","value":{"kind":"number","nodeType":"YulLiteral","src":"5186:1:28","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"5256:123:28","statements":[{"body":{"nodeType":"YulBlock","src":"5291:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"5293:16:28"},"nodeType":"YulFunctionCall","src":"5293:18:28"},"nodeType":"YulExpressionStatement","src":"5293:18:28"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"5276:8:28"},{"kind":"number","nodeType":"YulLiteral","src":"5286:3:28","type":"","value":"255"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5273:2:28"},"nodeType":"YulFunctionCall","src":"5273:17:28"},"nodeType":"YulIf","src":"5270:43:28"},{"nodeType":"YulAssignment","src":"5326:25:28","value":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"5339:8:28"},{"kind":"number","nodeType":"YulLiteral","src":"5349:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5335:3:28"},"nodeType":"YulFunctionCall","src":"5335:16:28"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"5326:5:28"}]},{"nodeType":"YulLeave","src":"5364:5:28"}]},"nodeType":"YulCase","src":"5249:130:28","value":{"kind":"number","nodeType":"YulLiteral","src":"5254:1:28","type":"","value":"2"}}],"expression":{"name":"base","nodeType":"YulIdentifier","src":"5168:4:28"},"nodeType":"YulSwitch","src":"5161:218:28"},{"body":{"nodeType":"YulBlock","src":"5477:70:28","statements":[{"nodeType":"YulAssignment","src":"5491:28:28","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"5504:4:28"},{"name":"exponent","nodeType":"YulIdentifier","src":"5510:8:28"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"5500:3:28"},"nodeType":"YulFunctionCall","src":"5500:19:28"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"5491:5:28"}]},{"nodeType":"YulLeave","src":"5532:5:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"5401:4:28"},{"kind":"number","nodeType":"YulLiteral","src":"5407:2:28","type":"","value":"11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5398:2:28"},"nodeType":"YulFunctionCall","src":"5398:12:28"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"5415:8:28"},{"kind":"number","nodeType":"YulLiteral","src":"5425:2:28","type":"","value":"78"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5412:2:28"},"nodeType":"YulFunctionCall","src":"5412:16:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5394:3:28"},"nodeType":"YulFunctionCall","src":"5394:35:28"},{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"5438:4:28"},{"kind":"number","nodeType":"YulLiteral","src":"5444:3:28","type":"","value":"307"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5435:2:28"},"nodeType":"YulFunctionCall","src":"5435:13:28"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"5453:8:28"},{"kind":"number","nodeType":"YulLiteral","src":"5463:2:28","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5450:2:28"},"nodeType":"YulFunctionCall","src":"5450:16:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5431:3:28"},"nodeType":"YulFunctionCall","src":"5431:36:28"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5391:2:28"},"nodeType":"YulFunctionCall","src":"5391:77:28"},"nodeType":"YulIf","src":"5388:159:28"},{"nodeType":"YulVariableDeclaration","src":"5556:57:28","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"5598:4:28"},{"name":"exponent","nodeType":"YulIdentifier","src":"5604:8:28"}],"functionName":{"name":"checked_exp_helper","nodeType":"YulIdentifier","src":"5579:18:28"},"nodeType":"YulFunctionCall","src":"5579:34:28"},"variables":[{"name":"power_1","nodeType":"YulTypedName","src":"5560:7:28","type":""},{"name":"base_1","nodeType":"YulTypedName","src":"5569:6:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"5658:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"5660:16:28"},"nodeType":"YulFunctionCall","src":"5660:18:28"},"nodeType":"YulExpressionStatement","src":"5660:18:28"}]},"condition":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"5628:7:28"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5645:1:28","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5641:3:28"},"nodeType":"YulFunctionCall","src":"5641:6:28"},{"name":"base_1","nodeType":"YulIdentifier","src":"5649:6:28"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5637:3:28"},"nodeType":"YulFunctionCall","src":"5637:19:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5625:2:28"},"nodeType":"YulFunctionCall","src":"5625:32:28"},"nodeType":"YulIf","src":"5622:58:28"},{"nodeType":"YulAssignment","src":"5689:29:28","value":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"5702:7:28"},{"name":"base_1","nodeType":"YulIdentifier","src":"5711:6:28"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5698:3:28"},"nodeType":"YulFunctionCall","src":"5698:20:28"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"5689:5:28"}]}]},"name":"checked_exp_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"4948:4:28","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"4954:8:28","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"4967:5:28","type":""}],"src":"4918:806:28"},{"body":{"nodeType":"YulBlock","src":"5797:72:28","statements":[{"nodeType":"YulAssignment","src":"5807:56:28","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"5837:4:28"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"5847:8:28"},{"kind":"number","nodeType":"YulLiteral","src":"5857:4:28","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5843:3:28"},"nodeType":"YulFunctionCall","src":"5843:19:28"}],"functionName":{"name":"checked_exp_unsigned","nodeType":"YulIdentifier","src":"5816:20:28"},"nodeType":"YulFunctionCall","src":"5816:47:28"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"5807:5:28"}]}]},"name":"checked_exp_t_uint256_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"5768:4:28","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"5774:8:28","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"5787:5:28","type":""}],"src":"5729:140:28"},{"body":{"nodeType":"YulBlock","src":"5926:116:28","statements":[{"nodeType":"YulAssignment","src":"5936:20:28","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5951:1:28"},{"name":"y","nodeType":"YulIdentifier","src":"5954:1:28"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5947:3:28"},"nodeType":"YulFunctionCall","src":"5947:9:28"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"5936:7:28"}]},{"body":{"nodeType":"YulBlock","src":"6014:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6016:16:28"},"nodeType":"YulFunctionCall","src":"6016:18:28"},"nodeType":"YulExpressionStatement","src":"6016:18:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5985:1:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5978:6:28"},"nodeType":"YulFunctionCall","src":"5978:9:28"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"5992:1:28"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"5999:7:28"},{"name":"x","nodeType":"YulIdentifier","src":"6008:1:28"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5995:3:28"},"nodeType":"YulFunctionCall","src":"5995:15:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5989:2:28"},"nodeType":"YulFunctionCall","src":"5989:22:28"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5975:2:28"},"nodeType":"YulFunctionCall","src":"5975:37:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5968:6:28"},"nodeType":"YulFunctionCall","src":"5968:45:28"},"nodeType":"YulIf","src":"5965:71:28"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"5905:1:28","type":""},{"name":"y","nodeType":"YulTypedName","src":"5908:1:28","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"5914:7:28","type":""}],"src":"5874:168:28"},{"body":{"nodeType":"YulBlock","src":"6148:76:28","statements":[{"nodeType":"YulAssignment","src":"6158:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6170:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"6181:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6166:3:28"},"nodeType":"YulFunctionCall","src":"6166:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6158:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6200:9:28"},{"name":"value0","nodeType":"YulIdentifier","src":"6211:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6193:6:28"},"nodeType":"YulFunctionCall","src":"6193:25:28"},"nodeType":"YulExpressionStatement","src":"6193:25:28"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6117:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6128:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6139:4:28","type":""}],"src":"6047:177:28"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), _4), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n        let value := mload(add(headStart, 64))\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value2 := value\n        value3 := mload(add(headStart, 96))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}","id":28,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162000f7d38038062000f7d8339810160408190526200003491620001b2565b6000620000428582620002cc565b506001620000518482620002cc565b506002805460ff191660ff84161790556200006e82600a620004ad565b6200007a9082620004c5565b6003819055600480546001600160a01b0319163390811790915560008181526005602052604080822084905551919290917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91620000db9190815260200190565b60405180910390a350505050620004df565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200011557600080fd5b81516001600160401b0380821115620001325762000132620000ed565b604051601f8301601f19908116603f011681019082821181831017156200015d576200015d620000ed565b816040528381526020925086838588010111156200017a57600080fd5b600091505b838210156200019e57858201830151818301840152908201906200017f565b600093810190920192909252949350505050565b60008060008060808587031215620001c957600080fd5b84516001600160401b0380821115620001e157600080fd5b620001ef8883890162000103565b955060208701519150808211156200020657600080fd5b50620002158782880162000103565b935050604085015160ff811681146200022d57600080fd5b6060959095015193969295505050565b600181811c908216806200025257607f821691505b6020821081036200027357634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002c757600081815260208120601f850160051c81016020861015620002a25750805b601f850160051c820191505b81811015620002c357828155600101620002ae565b5050505b505050565b81516001600160401b03811115620002e857620002e8620000ed565b6200030081620002f984546200023d565b8462000279565b602080601f8311600181146200033857600084156200031f5750858301515b600019600386901b1c1916600185901b178555620002c3565b600085815260208120601f198616915b82811015620003695788860151825594840194600190910190840162000348565b5085821015620003885787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620003ef578160001904821115620003d357620003d362000398565b80851615620003e157918102915b93841c9390800290620003b3565b509250929050565b6000826200040857506001620004a7565b816200041757506000620004a7565b81600181146200043057600281146200043b576200045b565b6001915050620004a7565b60ff8411156200044f576200044f62000398565b50506001821b620004a7565b5060208310610133831016604e8410600b841016171562000480575081810a620004a7565b6200048c8383620003ae565b8060001904821115620004a357620004a362000398565b0290505b92915050565b6000620004be60ff841683620003f7565b9392505050565b8082028115828204841417620004a757620004a762000398565b610a8e80620004ef6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806342966c681161007157806342966c681461015857806370a082311461016b5780638da5cb5b1461018b57806395d89b41146101b6578063a9059cbb146101be578063dd62ed3e146101d157600080fd5b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100fa57806323b872dd14610111578063313ce5671461012457806340c10f1914610143575b600080fd5b6100c16101fc565b6040516100ce9190610884565b60405180910390f35b6100ea6100e53660046108ee565b61028a565b60405190151581526020016100ce565b61010360035481565b6040519081526020016100ce565b6100ea61011f366004610918565b6102f7565b6002546101319060ff1681565b60405160ff90911681526020016100ce565b6101566101513660046108ee565b6104f8565b005b610156610166366004610954565b610653565b61010361017936600461096d565b60056020526000908152604090205481565b60045461019e906001600160a01b031681565b6040516001600160a01b0390911681526020016100ce565b6100c161074d565b6100ea6101cc3660046108ee565b61075a565b6101036101df36600461098f565b600660209081526000928352604080842090915290825290205481565b60008054610209906109c2565b80601f0160208091040260200160405190810160405280929190818152602001828054610235906109c2565b80156102825780601f1061025757610100808354040283529160200191610282565b820191906000526020600020905b81548152906001019060200180831161026557829003601f168201915b505050505081565b3360008181526006602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906102e59086815260200190565b60405180910390a35060015b92915050565b60006001600160a01b0383166103545760405162461bcd60e51b815260206004820152601f60248201527f43616e6e6f74207472616e7366657220746f207a65726f20616464726573730060448201526064015b60405180910390fd5b6001600160a01b0384166000908152600560205260409020548211156103b35760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b604482015260640161034b565b6001600160a01b038416600090815260066020908152604080832033845290915290205482111561041f5760405162461bcd60e51b8152602060048201526016602482015275496e73756666696369656e7420616c6c6f77616e636560501b604482015260640161034b565b6001600160a01b03841660009081526005602052604081208054849290610447908490610a12565b90915550506001600160a01b03831660009081526005602052604081208054849290610474908490610a25565b90915550506001600160a01b0384166000908152600660209081526040808320338452909152812080548492906104ac908490610a12565b92505081905550826001600160a01b0316846001600160a01b0316600080516020610a39833981519152846040516104e691815260200190565b60405180910390a35060019392505050565b6004546001600160a01b031633146105485760405162461bcd60e51b815260206004820152601360248201527213db9b1e481bdddb995c8818d85b881b5a5b9d606a1b604482015260640161034b565b6001600160a01b03821661059e5760405162461bcd60e51b815260206004820152601b60248201527f43616e6e6f74206d696e7420746f207a65726f20616464726573730000000000604482015260640161034b565b80600360008282546105b09190610a25565b90915550506001600160a01b038216600090815260056020526040812080548392906105dd908490610a25565b90915550506040518181526001600160a01b038316907f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d41213968859060200160405180910390a26040518181526001600160a01b03831690600090600080516020610a398339815191529060200160405180910390a35050565b336000908152600560205260409020548111156106b25760405162461bcd60e51b815260206004820152601c60248201527f496e73756666696369656e742062616c616e636520746f206275726e00000000604482015260640161034b565b33600090815260056020526040812080548392906106d1908490610a12565b9250508190555080600360008282546106ea9190610a12565b909155505060405181815233907fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca59060200160405180910390a26040518181526000903390600080516020610a398339815191529060200160405180910390a350565b60018054610209906109c2565b60006001600160a01b0383166107b25760405162461bcd60e51b815260206004820152601f60248201527f43616e6e6f74207472616e7366657220746f207a65726f206164647265737300604482015260640161034b565b336000908152600560205260409020548211156108085760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b604482015260640161034b565b3360009081526005602052604081208054849290610827908490610a12565b90915550506001600160a01b03831660009081526005602052604081208054849290610854908490610a25565b90915550506040518281526001600160a01b038416903390600080516020610a39833981519152906020016102e5565b600060208083528351808285015260005b818110156108b157858101830151858201604001528201610895565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146108e957600080fd5b919050565b6000806040838503121561090157600080fd5b61090a836108d2565b946020939093013593505050565b60008060006060848603121561092d57600080fd5b610936846108d2565b9250610944602085016108d2565b9150604084013590509250925092565b60006020828403121561096657600080fd5b5035919050565b60006020828403121561097f57600080fd5b610988826108d2565b9392505050565b600080604083850312156109a257600080fd5b6109ab836108d2565b91506109b9602084016108d2565b90509250929050565b600181811c908216806109d657607f821691505b6020821081036109f657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b818103818111156102f1576102f16109fc565b808201808211156102f1576102f16109fc56feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa264697066735822122023e164a2adb537e9bf59fd89882f73f707fdc13e56c56ddba06ae6c46137f91064736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xF7D CODESIZE SUB DUP1 PUSH3 0xF7D DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1B2 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x42 DUP6 DUP3 PUSH3 0x2CC JUMP JUMPDEST POP PUSH1 0x1 PUSH3 0x51 DUP5 DUP3 PUSH3 0x2CC JUMP JUMPDEST POP PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF DUP5 AND OR SWAP1 SSTORE PUSH3 0x6E DUP3 PUSH1 0xA PUSH3 0x4AD JUMP JUMPDEST PUSH3 0x7A SWAP1 DUP3 PUSH3 0x4C5 JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP5 SWAP1 SSTORE MLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 PUSH3 0xDB SWAP2 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP PUSH3 0x4DF JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x132 JUMPI PUSH3 0x132 PUSH3 0xED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x15D JUMPI PUSH3 0x15D PUSH3 0xED JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x17A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x19E JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x17F JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x1C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x1E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1EF DUP9 DUP4 DUP10 ADD PUSH3 0x103 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x206 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x215 DUP8 DUP3 DUP9 ADD PUSH3 0x103 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH3 0x22D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x60 SWAP6 SWAP1 SWAP6 ADD MLOAD SWAP4 SWAP7 SWAP3 SWAP6 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x252 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x273 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x2C7 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x2A2 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x2C3 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x2AE JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x2E8 JUMPI PUSH3 0x2E8 PUSH3 0xED JUMP JUMPDEST PUSH3 0x300 DUP2 PUSH3 0x2F9 DUP5 SLOAD PUSH3 0x23D JUMP JUMPDEST DUP5 PUSH3 0x279 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x338 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x31F JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x2C3 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x369 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x348 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x388 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH3 0x3EF JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH3 0x3D3 JUMPI PUSH3 0x3D3 PUSH3 0x398 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH3 0x3E1 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH3 0x3B3 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x408 JUMPI POP PUSH1 0x1 PUSH3 0x4A7 JUMP JUMPDEST DUP2 PUSH3 0x417 JUMPI POP PUSH1 0x0 PUSH3 0x4A7 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x430 JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x43B JUMPI PUSH3 0x45B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0x4A7 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x44F JUMPI PUSH3 0x44F PUSH3 0x398 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH3 0x4A7 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x480 JUMPI POP DUP2 DUP2 EXP PUSH3 0x4A7 JUMP JUMPDEST PUSH3 0x48C DUP4 DUP4 PUSH3 0x3AE JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH3 0x4A3 JUMPI PUSH3 0x4A3 PUSH3 0x398 JUMP JUMPDEST MUL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4BE PUSH1 0xFF DUP5 AND DUP4 PUSH3 0x3F7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH3 0x4A7 JUMPI PUSH3 0x4A7 PUSH3 0x398 JUMP JUMPDEST PUSH2 0xA8E DUP1 PUSH3 0x4EF PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x42966C68 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x124 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x143 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0x1FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x884 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEA PUSH2 0xE5 CALLDATASIZE PUSH1 0x4 PUSH2 0x8EE JUMP JUMPDEST PUSH2 0x28A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCE JUMP JUMPDEST PUSH2 0x103 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCE JUMP JUMPDEST PUSH2 0xEA PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0x918 JUMP JUMPDEST PUSH2 0x2F7 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x131 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCE JUMP JUMPDEST PUSH2 0x156 PUSH2 0x151 CALLDATASIZE PUSH1 0x4 PUSH2 0x8EE JUMP JUMPDEST PUSH2 0x4F8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x156 PUSH2 0x166 CALLDATASIZE PUSH1 0x4 PUSH2 0x954 JUMP JUMPDEST PUSH2 0x653 JUMP JUMPDEST PUSH2 0x103 PUSH2 0x179 CALLDATASIZE PUSH1 0x4 PUSH2 0x96D JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x19E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCE JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x74D JUMP JUMPDEST PUSH2 0xEA PUSH2 0x1CC CALLDATASIZE PUSH1 0x4 PUSH2 0x8EE JUMP JUMPDEST PUSH2 0x75A JUMP JUMPDEST PUSH2 0x103 PUSH2 0x1DF CALLDATASIZE PUSH1 0x4 PUSH2 0x98F JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x209 SWAP1 PUSH2 0x9C2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x235 SWAP1 PUSH2 0x9C2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x282 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x257 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x282 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x265 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE MLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x2E5 SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x354 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x3B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x34B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x41F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E73756666696369656E7420616C6C6F77616E6365 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x34B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x447 SWAP1 DUP5 SWAP1 PUSH2 0xA12 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x474 SWAP1 DUP5 SWAP1 PUSH2 0xA25 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x4AC SWAP1 DUP5 SWAP1 PUSH2 0xA12 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xA39 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH1 0x40 MLOAD PUSH2 0x4E6 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x548 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x13DB9B1E481BDDDB995C8818D85B881B5A5B9D PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x34B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x59E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74206D696E7420746F207A65726F20616464726573730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x34B JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x5B0 SWAP2 SWAP1 PUSH2 0xA25 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x5DD SWAP1 DUP5 SWAP1 PUSH2 0xA25 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xF6798A560793A54C3BCFE86A93CDE1E73087D944C0EA20544137D4121396885 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xA39 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x6B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742062616C616E636520746F206275726E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x34B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x6D1 SWAP1 DUP5 SWAP1 PUSH2 0xA12 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x6EA SWAP2 SWAP1 PUSH2 0xA12 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x0 SWAP1 CALLER SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xA39 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x209 SWAP1 PUSH2 0x9C2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x7B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x34B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x808 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x34B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x827 SWAP1 DUP5 SWAP1 PUSH2 0xA12 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x854 SWAP1 DUP5 SWAP1 PUSH2 0xA25 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 CALLER SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xA39 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH2 0x2E5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x8B1 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x895 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x8E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x901 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x90A DUP4 PUSH2 0x8D2 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x92D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x936 DUP5 PUSH2 0x8D2 JUMP JUMPDEST SWAP3 POP PUSH2 0x944 PUSH1 0x20 DUP6 ADD PUSH2 0x8D2 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x966 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x97F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x988 DUP3 PUSH2 0x8D2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9AB DUP4 PUSH2 0x8D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x9B9 PUSH1 0x20 DUP5 ADD PUSH2 0x8D2 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x9D6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x9F6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x2F1 JUMPI PUSH2 0x2F1 PUSH2 0x9FC JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2F1 JUMPI PUSH2 0x2F1 PUSH2 0x9FC JUMP INVALID 0xDD CALLCODE MSTORE 0xAD SHL 0xE2 0xC8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x23 0xE1 PUSH5 0xA2ADB537E9 0xBF MSIZE REVERT DUP10 DUP9 0x2F PUSH20 0xF707FDC13E56C56DDBA06AE6C46137F91064736F PUSH13 0x63430008140033000000000000 ","sourceMap":"134:2747:10:-:0;;;695:407;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;840:4;:12;847:5;840:4;:12;:::i;:::-;-1:-1:-1;862:6:10;:16;871:7;862:6;:16;:::i;:::-;-1:-1:-1;888:8:10;:20;;-1:-1:-1;;888:20:10;;;;;;;949:13;888:20;949:2;:13;:::i;:::-;932:30;;:14;:30;:::i;:::-;918:11;:44;;;972:5;:18;;-1:-1:-1;;;;;;972:18:10;980:10;972:18;;;;;;:5;1000:21;;;:9;:21;;;;;;:35;;;1050:45;980:10;;972:5;;1050:45;;;;6193:25:28;;;6181:2;6166:18;;6047:177;1050:45:10;;;;;;;;695:407;;;;134:2747;;14:127:28;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:28;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:28;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:28:o;991:774::-;1106:6;1114;1122;1130;1183:3;1171:9;1162:7;1158:23;1154:33;1151:53;;;1200:1;1197;1190:12;1151:53;1227:16;;-1:-1:-1;;;;;1292:14:28;;;1289:34;;;1319:1;1316;1309:12;1289:34;1342:61;1395:7;1386:6;1375:9;1371:22;1342:61;:::i;:::-;1332:71;;1449:2;1438:9;1434:18;1428:25;1412:41;;1478:2;1468:8;1465:16;1462:36;;;1494:1;1491;1484:12;1462:36;;1517:63;1572:7;1561:8;1550:9;1546:24;1517:63;:::i;:::-;1507:73;;;1623:2;1612:9;1608:18;1602:25;1667:4;1660:5;1656:16;1649:5;1646:27;1636:55;;1687:1;1684;1677:12;1636:55;1755:2;1740:18;;;;1734:25;991:774;;;;-1:-1:-1;;;991:774:28:o;1770:380::-;1849:1;1845:12;;;;1892;;;1913:61;;1967:4;1959:6;1955:17;1945:27;;1913:61;2020:2;2012:6;2009:14;1989:18;1986:38;1983:161;;2066:10;2061:3;2057:20;2054:1;2047:31;2101:4;2098:1;2091:15;2129:4;2126:1;2119:15;1983:161;;1770:380;;;:::o;2281:545::-;2383:2;2378:3;2375:11;2372:448;;;2419:1;2444:5;2440:2;2433:17;2489:4;2485:2;2475:19;2559:2;2547:10;2543:19;2540:1;2536:27;2530:4;2526:38;2595:4;2583:10;2580:20;2577:47;;;-1:-1:-1;2618:4:28;2577:47;2673:2;2668:3;2664:12;2661:1;2657:20;2651:4;2647:31;2637:41;;2728:82;2746:2;2739:5;2736:13;2728:82;;;2791:17;;;2772:1;2761:13;2728:82;;;2732:3;;;2372:448;2281:545;;;:::o;3002:1352::-;3122:10;;-1:-1:-1;;;;;3144:30:28;;3141:56;;;3177:18;;:::i;:::-;3206:97;3296:6;3256:38;3288:4;3282:11;3256:38;:::i;:::-;3250:4;3206:97;:::i;:::-;3358:4;;3422:2;3411:14;;3439:1;3434:663;;;;4141:1;4158:6;4155:89;;;-1:-1:-1;4210:19:28;;;4204:26;4155:89;-1:-1:-1;;2959:1:28;2955:11;;;2951:24;2947:29;2937:40;2983:1;2979:11;;;2934:57;4257:81;;3404:944;;3434:663;2228:1;2221:14;;;2265:4;2252:18;;-1:-1:-1;;3470:20:28;;;3588:236;3602:7;3599:1;3596:14;3588:236;;;3691:19;;;3685:26;3670:42;;3783:27;;;;3751:1;3739:14;;;;3618:19;;3588:236;;;3592:3;3852:6;3843:7;3840:19;3837:201;;;3913:19;;;3907:26;-1:-1:-1;;3996:1:28;3992:14;;;4008:3;3988:24;3984:37;3980:42;3965:58;3950:74;;3837:201;-1:-1:-1;;;;;4084:1:28;4068:14;;;4064:22;4051:36;;-1:-1:-1;3002:1352:28:o;4359:127::-;4420:10;4415:3;4411:20;4408:1;4401:31;4451:4;4448:1;4441:15;4475:4;4472:1;4465:15;4491:422;4580:1;4623:5;4580:1;4637:270;4658:7;4648:8;4645:21;4637:270;;;4717:4;4713:1;4709:6;4705:17;4699:4;4696:27;4693:53;;;4726:18;;:::i;:::-;4776:7;4766:8;4762:22;4759:55;;;4796:16;;;;4759:55;4875:22;;;;4835:15;;;;4637:270;;;4641:3;4491:422;;;;;:::o;4918:806::-;4967:5;4997:8;4987:80;;-1:-1:-1;5038:1:28;5052:5;;4987:80;5086:4;5076:76;;-1:-1:-1;5123:1:28;5137:5;;5076:76;5168:4;5186:1;5181:59;;;;5254:1;5249:130;;;;5161:218;;5181:59;5211:1;5202:10;;5225:5;;;5249:130;5286:3;5276:8;5273:17;5270:43;;;5293:18;;:::i;:::-;-1:-1:-1;;5349:1:28;5335:16;;5364:5;;5161:218;;5463:2;5453:8;5450:16;5444:3;5438:4;5435:13;5431:36;5425:2;5415:8;5412:16;5407:2;5401:4;5398:12;5394:35;5391:77;5388:159;;;-1:-1:-1;5500:19:28;;;5532:5;;5388:159;5579:34;5604:8;5598:4;5579:34;:::i;:::-;5649:6;5645:1;5641:6;5637:19;5628:7;5625:32;5622:58;;;5660:18;;:::i;:::-;5698:20;;-1:-1:-1;4918:806:28;;;;;:::o;5729:140::-;5787:5;5816:47;5857:4;5847:8;5843:19;5837:4;5816:47;:::i;:::-;5807:56;5729:140;-1:-1:-1;;;5729:140:28:o;5874:168::-;5947:9;;;5978;;5995:15;;;5989:22;;5975:37;5965:71;;6016:18;;:::i;6047:177::-;134:2747:10;;;;;;"},"deployedBytecode":{"functionDebugData":{"@allowance_1338":{"entryPoint":null,"id":1338,"parameterSlots":0,"returnSlots":0},"@approve_1500":{"entryPoint":650,"id":1500,"parameterSlots":2,"returnSlots":1},"@balanceOf_1332":{"entryPoint":null,"id":1332,"parameterSlots":0,"returnSlots":0},"@burn_1665":{"entryPoint":1619,"id":1665,"parameterSlots":1,"returnSlots":0},"@decimals_1324":{"entryPoint":null,"id":1324,"parameterSlots":0,"returnSlots":0},"@mint_1622":{"entryPoint":1272,"id":1622,"parameterSlots":2,"returnSlots":0},"@name_1320":{"entryPoint":508,"id":1320,"parameterSlots":0,"returnSlots":0},"@owner_1328":{"entryPoint":null,"id":1328,"parameterSlots":0,"returnSlots":0},"@symbol_1322":{"entryPoint":1869,"id":1322,"parameterSlots":0,"returnSlots":0},"@totalSupply_1326":{"entryPoint":null,"id":1326,"parameterSlots":0,"returnSlots":0},"@transferFrom_1572":{"entryPoint":759,"id":1572,"parameterSlots":3,"returnSlots":1},"@transfer_1472":{"entryPoint":1882,"id":1472,"parameterSlots":2,"returnSlots":1},"abi_decode_address":{"entryPoint":2258,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":2413,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":2447,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":2328,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":2286,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":2388,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2180,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2ee0416c341986fdecc3cbd81cd5d77b44e6537a4f9aa8afff73aa35a7384cb9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_793ac6e41458d545a7714760682dd797072b4fe898c48602bd8c2b836d34baac__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_bb6ef8259868f621162cf2269ec456fd6e3660c295ef634f53db3982172a569f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_eac0e9db12cd14c1c0291906654a3fa6bfacc1c08081fda717334bc66586bac5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2597,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":2578,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":2498,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":2556,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5647:28","statements":[{"nodeType":"YulBlock","src":"6:3:28","statements":[]},{"body":{"nodeType":"YulBlock","src":"135:427:28","statements":[{"nodeType":"YulVariableDeclaration","src":"145:12:28","value":{"kind":"number","nodeType":"YulLiteral","src":"155:2:28","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"149:2:28","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"173:9:28"},{"name":"_1","nodeType":"YulIdentifier","src":"184:2:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"166:6:28"},"nodeType":"YulFunctionCall","src":"166:21:28"},"nodeType":"YulExpressionStatement","src":"166:21:28"},{"nodeType":"YulVariableDeclaration","src":"196:27:28","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"216:6:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"210:5:28"},"nodeType":"YulFunctionCall","src":"210:13:28"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"200:6:28","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"243:9:28"},{"name":"_1","nodeType":"YulIdentifier","src":"254:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"239:3:28"},"nodeType":"YulFunctionCall","src":"239:18:28"},{"name":"length","nodeType":"YulIdentifier","src":"259:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"232:6:28"},"nodeType":"YulFunctionCall","src":"232:34:28"},"nodeType":"YulExpressionStatement","src":"232:34:28"},{"nodeType":"YulVariableDeclaration","src":"275:10:28","value":{"kind":"number","nodeType":"YulLiteral","src":"284:1:28","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"279:1:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"344:90:28","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"373:9:28"},{"name":"i","nodeType":"YulIdentifier","src":"384:1:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"369:3:28"},"nodeType":"YulFunctionCall","src":"369:17:28"},{"kind":"number","nodeType":"YulLiteral","src":"388:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"365:3:28"},"nodeType":"YulFunctionCall","src":"365:26:28"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"407:6:28"},{"name":"i","nodeType":"YulIdentifier","src":"415:1:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"403:3:28"},"nodeType":"YulFunctionCall","src":"403:14:28"},{"name":"_1","nodeType":"YulIdentifier","src":"419:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"399:3:28"},"nodeType":"YulFunctionCall","src":"399:23:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"393:5:28"},"nodeType":"YulFunctionCall","src":"393:30:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"358:6:28"},"nodeType":"YulFunctionCall","src":"358:66:28"},"nodeType":"YulExpressionStatement","src":"358:66:28"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"305:1:28"},{"name":"length","nodeType":"YulIdentifier","src":"308:6:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"302:2:28"},"nodeType":"YulFunctionCall","src":"302:13:28"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"316:19:28","statements":[{"nodeType":"YulAssignment","src":"318:15:28","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"327:1:28"},{"name":"_1","nodeType":"YulIdentifier","src":"330:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"323:3:28"},"nodeType":"YulFunctionCall","src":"323:10:28"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"318:1:28"}]}]},"pre":{"nodeType":"YulBlock","src":"298:3:28","statements":[]},"src":"294:140:28"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"458:9:28"},{"name":"length","nodeType":"YulIdentifier","src":"469:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"454:3:28"},"nodeType":"YulFunctionCall","src":"454:22:28"},{"kind":"number","nodeType":"YulLiteral","src":"478:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"450:3:28"},"nodeType":"YulFunctionCall","src":"450:31:28"},{"kind":"number","nodeType":"YulLiteral","src":"483:1:28","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"443:6:28"},"nodeType":"YulFunctionCall","src":"443:42:28"},"nodeType":"YulExpressionStatement","src":"443:42:28"},{"nodeType":"YulAssignment","src":"494:62:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"510:9:28"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"529:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"537:2:28","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"525:3:28"},"nodeType":"YulFunctionCall","src":"525:15:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"546:2:28","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"542:3:28"},"nodeType":"YulFunctionCall","src":"542:7:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"521:3:28"},"nodeType":"YulFunctionCall","src":"521:29:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"506:3:28"},"nodeType":"YulFunctionCall","src":"506:45:28"},{"kind":"number","nodeType":"YulLiteral","src":"553:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"502:3:28"},"nodeType":"YulFunctionCall","src":"502:54:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"494:4:28"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"104:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"115:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"126:4:28","type":""}],"src":"14:548:28"},{"body":{"nodeType":"YulBlock","src":"616:124:28","statements":[{"nodeType":"YulAssignment","src":"626:29:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"648:6:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"635:12:28"},"nodeType":"YulFunctionCall","src":"635:20:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"626:5:28"}]},{"body":{"nodeType":"YulBlock","src":"718:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"727:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"730:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"720:6:28"},"nodeType":"YulFunctionCall","src":"720:12:28"},"nodeType":"YulExpressionStatement","src":"720:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"677:5:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"688:5:28"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"703:3:28","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"708:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"699:3:28"},"nodeType":"YulFunctionCall","src":"699:11:28"},{"kind":"number","nodeType":"YulLiteral","src":"712:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"695:3:28"},"nodeType":"YulFunctionCall","src":"695:19:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"684:3:28"},"nodeType":"YulFunctionCall","src":"684:31:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"674:2:28"},"nodeType":"YulFunctionCall","src":"674:42:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"667:6:28"},"nodeType":"YulFunctionCall","src":"667:50:28"},"nodeType":"YulIf","src":"664:70:28"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"595:6:28","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"606:5:28","type":""}],"src":"567:173:28"},{"body":{"nodeType":"YulBlock","src":"832:167:28","statements":[{"body":{"nodeType":"YulBlock","src":"878:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"887:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"890:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"880:6:28"},"nodeType":"YulFunctionCall","src":"880:12:28"},"nodeType":"YulExpressionStatement","src":"880:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"853:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"862:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"849:3:28"},"nodeType":"YulFunctionCall","src":"849:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"874:2:28","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"845:3:28"},"nodeType":"YulFunctionCall","src":"845:32:28"},"nodeType":"YulIf","src":"842:52:28"},{"nodeType":"YulAssignment","src":"903:39:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"932:9:28"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"913:18:28"},"nodeType":"YulFunctionCall","src":"913:29:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"903:6:28"}]},{"nodeType":"YulAssignment","src":"951:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"978:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"989:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"974:3:28"},"nodeType":"YulFunctionCall","src":"974:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"961:12:28"},"nodeType":"YulFunctionCall","src":"961:32:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"951:6:28"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"790:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"801:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"813:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"821:6:28","type":""}],"src":"745:254:28"},{"body":{"nodeType":"YulBlock","src":"1099:92:28","statements":[{"nodeType":"YulAssignment","src":"1109:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1121:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1132:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1117:3:28"},"nodeType":"YulFunctionCall","src":"1117:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1109:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1151:9:28"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1176:6:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1169:6:28"},"nodeType":"YulFunctionCall","src":"1169:14:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1162:6:28"},"nodeType":"YulFunctionCall","src":"1162:22:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1144:6:28"},"nodeType":"YulFunctionCall","src":"1144:41:28"},"nodeType":"YulExpressionStatement","src":"1144:41:28"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1068:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1079:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1090:4:28","type":""}],"src":"1004:187:28"},{"body":{"nodeType":"YulBlock","src":"1297:76:28","statements":[{"nodeType":"YulAssignment","src":"1307:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1319:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1330:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1315:3:28"},"nodeType":"YulFunctionCall","src":"1315:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1307:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1349:9:28"},{"name":"value0","nodeType":"YulIdentifier","src":"1360:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1342:6:28"},"nodeType":"YulFunctionCall","src":"1342:25:28"},"nodeType":"YulExpressionStatement","src":"1342:25:28"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1266:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1277:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1288:4:28","type":""}],"src":"1196:177:28"},{"body":{"nodeType":"YulBlock","src":"1482:224:28","statements":[{"body":{"nodeType":"YulBlock","src":"1528:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1537:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1540:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1530:6:28"},"nodeType":"YulFunctionCall","src":"1530:12:28"},"nodeType":"YulExpressionStatement","src":"1530:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1503:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"1512:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1499:3:28"},"nodeType":"YulFunctionCall","src":"1499:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"1524:2:28","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1495:3:28"},"nodeType":"YulFunctionCall","src":"1495:32:28"},"nodeType":"YulIf","src":"1492:52:28"},{"nodeType":"YulAssignment","src":"1553:39:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1582:9:28"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1563:18:28"},"nodeType":"YulFunctionCall","src":"1563:29:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1553:6:28"}]},{"nodeType":"YulAssignment","src":"1601:48:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1634:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1645:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1630:3:28"},"nodeType":"YulFunctionCall","src":"1630:18:28"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1611:18:28"},"nodeType":"YulFunctionCall","src":"1611:38:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1601:6:28"}]},{"nodeType":"YulAssignment","src":"1658:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1685:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1696:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1681:3:28"},"nodeType":"YulFunctionCall","src":"1681:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1668:12:28"},"nodeType":"YulFunctionCall","src":"1668:32:28"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1658:6:28"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1432:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1443:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1455:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1463:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1471:6:28","type":""}],"src":"1378:328:28"},{"body":{"nodeType":"YulBlock","src":"1808:87:28","statements":[{"nodeType":"YulAssignment","src":"1818:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1830:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1841:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1826:3:28"},"nodeType":"YulFunctionCall","src":"1826:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1818:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1860:9:28"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1875:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"1883:4:28","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1871:3:28"},"nodeType":"YulFunctionCall","src":"1871:17:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1853:6:28"},"nodeType":"YulFunctionCall","src":"1853:36:28"},"nodeType":"YulExpressionStatement","src":"1853:36:28"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1777:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1788:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1799:4:28","type":""}],"src":"1711:184:28"},{"body":{"nodeType":"YulBlock","src":"1970:110:28","statements":[{"body":{"nodeType":"YulBlock","src":"2016:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2025:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2028:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2018:6:28"},"nodeType":"YulFunctionCall","src":"2018:12:28"},"nodeType":"YulExpressionStatement","src":"2018:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1991:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"2000:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1987:3:28"},"nodeType":"YulFunctionCall","src":"1987:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"2012:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1983:3:28"},"nodeType":"YulFunctionCall","src":"1983:32:28"},"nodeType":"YulIf","src":"1980:52:28"},{"nodeType":"YulAssignment","src":"2041:33:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2064:9:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2051:12:28"},"nodeType":"YulFunctionCall","src":"2051:23:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2041:6:28"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1936:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1947:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1959:6:28","type":""}],"src":"1900:180:28"},{"body":{"nodeType":"YulBlock","src":"2155:116:28","statements":[{"body":{"nodeType":"YulBlock","src":"2201:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2210:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2213:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2203:6:28"},"nodeType":"YulFunctionCall","src":"2203:12:28"},"nodeType":"YulExpressionStatement","src":"2203:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2176:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"2185:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2172:3:28"},"nodeType":"YulFunctionCall","src":"2172:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"2197:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2168:3:28"},"nodeType":"YulFunctionCall","src":"2168:32:28"},"nodeType":"YulIf","src":"2165:52:28"},{"nodeType":"YulAssignment","src":"2226:39:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2255:9:28"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2236:18:28"},"nodeType":"YulFunctionCall","src":"2236:29:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2226:6:28"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2121:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2132:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2144:6:28","type":""}],"src":"2085:186:28"},{"body":{"nodeType":"YulBlock","src":"2377:102:28","statements":[{"nodeType":"YulAssignment","src":"2387:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2399:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"2410:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2395:3:28"},"nodeType":"YulFunctionCall","src":"2395:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2387:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2429:9:28"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2444:6:28"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2460:3:28","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2465:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2456:3:28"},"nodeType":"YulFunctionCall","src":"2456:11:28"},{"kind":"number","nodeType":"YulLiteral","src":"2469:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2452:3:28"},"nodeType":"YulFunctionCall","src":"2452:19:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2440:3:28"},"nodeType":"YulFunctionCall","src":"2440:32:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2422:6:28"},"nodeType":"YulFunctionCall","src":"2422:51:28"},"nodeType":"YulExpressionStatement","src":"2422:51:28"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2346:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2357:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2368:4:28","type":""}],"src":"2276:203:28"},{"body":{"nodeType":"YulBlock","src":"2571:173:28","statements":[{"body":{"nodeType":"YulBlock","src":"2617:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2626:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2629:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2619:6:28"},"nodeType":"YulFunctionCall","src":"2619:12:28"},"nodeType":"YulExpressionStatement","src":"2619:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2592:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"2601:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2588:3:28"},"nodeType":"YulFunctionCall","src":"2588:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"2613:2:28","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2584:3:28"},"nodeType":"YulFunctionCall","src":"2584:32:28"},"nodeType":"YulIf","src":"2581:52:28"},{"nodeType":"YulAssignment","src":"2642:39:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2671:9:28"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2652:18:28"},"nodeType":"YulFunctionCall","src":"2652:29:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2642:6:28"}]},{"nodeType":"YulAssignment","src":"2690:48:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2723:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"2734:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2719:3:28"},"nodeType":"YulFunctionCall","src":"2719:18:28"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2700:18:28"},"nodeType":"YulFunctionCall","src":"2700:38:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2690:6:28"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2529:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2540:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2552:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2560:6:28","type":""}],"src":"2484:260:28"},{"body":{"nodeType":"YulBlock","src":"2804:325:28","statements":[{"nodeType":"YulAssignment","src":"2814:22:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2828:1:28","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"2831:4:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2824:3:28"},"nodeType":"YulFunctionCall","src":"2824:12:28"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2814:6:28"}]},{"nodeType":"YulVariableDeclaration","src":"2845:38:28","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2875:4:28"},{"kind":"number","nodeType":"YulLiteral","src":"2881:1:28","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2871:3:28"},"nodeType":"YulFunctionCall","src":"2871:12:28"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"2849:18:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"2922:31:28","statements":[{"nodeType":"YulAssignment","src":"2924:27:28","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2938:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"2946:4:28","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2934:3:28"},"nodeType":"YulFunctionCall","src":"2934:17:28"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2924:6:28"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2902:18:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2895:6:28"},"nodeType":"YulFunctionCall","src":"2895:26:28"},"nodeType":"YulIf","src":"2892:61:28"},{"body":{"nodeType":"YulBlock","src":"3012:111:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3033:1:28","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3040:3:28","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3045:10:28","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3036:3:28"},"nodeType":"YulFunctionCall","src":"3036:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3026:6:28"},"nodeType":"YulFunctionCall","src":"3026:31:28"},"nodeType":"YulExpressionStatement","src":"3026:31:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3077:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3080:4:28","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3070:6:28"},"nodeType":"YulFunctionCall","src":"3070:15:28"},"nodeType":"YulExpressionStatement","src":"3070:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3105:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3108:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3098:6:28"},"nodeType":"YulFunctionCall","src":"3098:15:28"},"nodeType":"YulExpressionStatement","src":"3098:15:28"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2968:18:28"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2991:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"2999:2:28","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2988:2:28"},"nodeType":"YulFunctionCall","src":"2988:14:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2965:2:28"},"nodeType":"YulFunctionCall","src":"2965:38:28"},"nodeType":"YulIf","src":"2962:161:28"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2784:4:28","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2793:6:28","type":""}],"src":"2749:380:28"},{"body":{"nodeType":"YulBlock","src":"3308:181:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3325:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"3336:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3318:6:28"},"nodeType":"YulFunctionCall","src":"3318:21:28"},"nodeType":"YulExpressionStatement","src":"3318:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3359:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"3370:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3355:3:28"},"nodeType":"YulFunctionCall","src":"3355:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"3375:2:28","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3348:6:28"},"nodeType":"YulFunctionCall","src":"3348:30:28"},"nodeType":"YulExpressionStatement","src":"3348:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3398:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"3409:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3394:3:28"},"nodeType":"YulFunctionCall","src":"3394:18:28"},{"hexValue":"43616e6e6f74207472616e7366657220746f207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"3414:33:28","type":"","value":"Cannot transfer to zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3387:6:28"},"nodeType":"YulFunctionCall","src":"3387:61:28"},"nodeType":"YulExpressionStatement","src":"3387:61:28"},{"nodeType":"YulAssignment","src":"3457:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3469:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"3480:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3465:3:28"},"nodeType":"YulFunctionCall","src":"3465:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3457:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_bb6ef8259868f621162cf2269ec456fd6e3660c295ef634f53db3982172a569f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3285:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3299:4:28","type":""}],"src":"3134:355:28"},{"body":{"nodeType":"YulBlock","src":"3668:170:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3685:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"3696:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3678:6:28"},"nodeType":"YulFunctionCall","src":"3678:21:28"},"nodeType":"YulExpressionStatement","src":"3678:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3719:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"3730:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3715:3:28"},"nodeType":"YulFunctionCall","src":"3715:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"3735:2:28","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3708:6:28"},"nodeType":"YulFunctionCall","src":"3708:30:28"},"nodeType":"YulExpressionStatement","src":"3708:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3758:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"3769:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3754:3:28"},"nodeType":"YulFunctionCall","src":"3754:18:28"},{"hexValue":"496e73756666696369656e742062616c616e6365","kind":"string","nodeType":"YulLiteral","src":"3774:22:28","type":"","value":"Insufficient balance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3747:6:28"},"nodeType":"YulFunctionCall","src":"3747:50:28"},"nodeType":"YulExpressionStatement","src":"3747:50:28"},{"nodeType":"YulAssignment","src":"3806:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3818:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"3829:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3814:3:28"},"nodeType":"YulFunctionCall","src":"3814:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3806:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3645:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3659:4:28","type":""}],"src":"3494:344:28"},{"body":{"nodeType":"YulBlock","src":"4017:172:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4034:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4045:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4027:6:28"},"nodeType":"YulFunctionCall","src":"4027:21:28"},"nodeType":"YulExpressionStatement","src":"4027:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4068:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4079:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4064:3:28"},"nodeType":"YulFunctionCall","src":"4064:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"4084:2:28","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4057:6:28"},"nodeType":"YulFunctionCall","src":"4057:30:28"},"nodeType":"YulExpressionStatement","src":"4057:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4107:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4118:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4103:3:28"},"nodeType":"YulFunctionCall","src":"4103:18:28"},{"hexValue":"496e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"4123:24:28","type":"","value":"Insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4096:6:28"},"nodeType":"YulFunctionCall","src":"4096:52:28"},"nodeType":"YulExpressionStatement","src":"4096:52:28"},{"nodeType":"YulAssignment","src":"4157:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4169:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4180:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4165:3:28"},"nodeType":"YulFunctionCall","src":"4165:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4157:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3994:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4008:4:28","type":""}],"src":"3843:346:28"},{"body":{"nodeType":"YulBlock","src":"4226:95:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4243:1:28","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4250:3:28","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"4255:10:28","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4246:3:28"},"nodeType":"YulFunctionCall","src":"4246:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4236:6:28"},"nodeType":"YulFunctionCall","src":"4236:31:28"},"nodeType":"YulExpressionStatement","src":"4236:31:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4283:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4286:4:28","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4276:6:28"},"nodeType":"YulFunctionCall","src":"4276:15:28"},"nodeType":"YulExpressionStatement","src":"4276:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4307:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4310:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4300:6:28"},"nodeType":"YulFunctionCall","src":"4300:15:28"},"nodeType":"YulExpressionStatement","src":"4300:15:28"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"4194:127:28"},{"body":{"nodeType":"YulBlock","src":"4375:79:28","statements":[{"nodeType":"YulAssignment","src":"4385:17:28","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4397:1:28"},{"name":"y","nodeType":"YulIdentifier","src":"4400:1:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4393:3:28"},"nodeType":"YulFunctionCall","src":"4393:9:28"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"4385:4:28"}]},{"body":{"nodeType":"YulBlock","src":"4426:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"4428:16:28"},"nodeType":"YulFunctionCall","src":"4428:18:28"},"nodeType":"YulExpressionStatement","src":"4428:18:28"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"4417:4:28"},{"name":"x","nodeType":"YulIdentifier","src":"4423:1:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4414:2:28"},"nodeType":"YulFunctionCall","src":"4414:11:28"},"nodeType":"YulIf","src":"4411:37:28"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"4357:1:28","type":""},{"name":"y","nodeType":"YulTypedName","src":"4360:1:28","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"4366:4:28","type":""}],"src":"4326:128:28"},{"body":{"nodeType":"YulBlock","src":"4507:77:28","statements":[{"nodeType":"YulAssignment","src":"4517:16:28","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4528:1:28"},{"name":"y","nodeType":"YulIdentifier","src":"4531:1:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4524:3:28"},"nodeType":"YulFunctionCall","src":"4524:9:28"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"4517:3:28"}]},{"body":{"nodeType":"YulBlock","src":"4556:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"4558:16:28"},"nodeType":"YulFunctionCall","src":"4558:18:28"},"nodeType":"YulExpressionStatement","src":"4558:18:28"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4548:1:28"},{"name":"sum","nodeType":"YulIdentifier","src":"4551:3:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4545:2:28"},"nodeType":"YulFunctionCall","src":"4545:10:28"},"nodeType":"YulIf","src":"4542:36:28"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"4490:1:28","type":""},{"name":"y","nodeType":"YulTypedName","src":"4493:1:28","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"4499:3:28","type":""}],"src":"4459:125:28"},{"body":{"nodeType":"YulBlock","src":"4763:169:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4780:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4791:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4773:6:28"},"nodeType":"YulFunctionCall","src":"4773:21:28"},"nodeType":"YulExpressionStatement","src":"4773:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4814:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4825:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4810:3:28"},"nodeType":"YulFunctionCall","src":"4810:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"4830:2:28","type":"","value":"19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4803:6:28"},"nodeType":"YulFunctionCall","src":"4803:30:28"},"nodeType":"YulExpressionStatement","src":"4803:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4853:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4864:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4849:3:28"},"nodeType":"YulFunctionCall","src":"4849:18:28"},{"hexValue":"4f6e6c79206f776e65722063616e206d696e74","kind":"string","nodeType":"YulLiteral","src":"4869:21:28","type":"","value":"Only owner can mint"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4842:6:28"},"nodeType":"YulFunctionCall","src":"4842:49:28"},"nodeType":"YulExpressionStatement","src":"4842:49:28"},{"nodeType":"YulAssignment","src":"4900:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4912:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4923:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4908:3:28"},"nodeType":"YulFunctionCall","src":"4908:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4900:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_793ac6e41458d545a7714760682dd797072b4fe898c48602bd8c2b836d34baac__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4740:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4754:4:28","type":""}],"src":"4589:343:28"},{"body":{"nodeType":"YulBlock","src":"5111:177:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5128:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"5139:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5121:6:28"},"nodeType":"YulFunctionCall","src":"5121:21:28"},"nodeType":"YulExpressionStatement","src":"5121:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5162:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"5173:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5158:3:28"},"nodeType":"YulFunctionCall","src":"5158:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"5178:2:28","type":"","value":"27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5151:6:28"},"nodeType":"YulFunctionCall","src":"5151:30:28"},"nodeType":"YulExpressionStatement","src":"5151:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5201:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"5212:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5197:3:28"},"nodeType":"YulFunctionCall","src":"5197:18:28"},{"hexValue":"43616e6e6f74206d696e7420746f207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"5217:29:28","type":"","value":"Cannot mint to zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5190:6:28"},"nodeType":"YulFunctionCall","src":"5190:57:28"},"nodeType":"YulExpressionStatement","src":"5190:57:28"},{"nodeType":"YulAssignment","src":"5256:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5268:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"5279:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5264:3:28"},"nodeType":"YulFunctionCall","src":"5264:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5256:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_2ee0416c341986fdecc3cbd81cd5d77b44e6537a4f9aa8afff73aa35a7384cb9__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5088:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5102:4:28","type":""}],"src":"4937:351:28"},{"body":{"nodeType":"YulBlock","src":"5467:178:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5484:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"5495:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5477:6:28"},"nodeType":"YulFunctionCall","src":"5477:21:28"},"nodeType":"YulExpressionStatement","src":"5477:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5518:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"5529:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5514:3:28"},"nodeType":"YulFunctionCall","src":"5514:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"5534:2:28","type":"","value":"28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5507:6:28"},"nodeType":"YulFunctionCall","src":"5507:30:28"},"nodeType":"YulExpressionStatement","src":"5507:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5557:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"5568:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5553:3:28"},"nodeType":"YulFunctionCall","src":"5553:18:28"},{"hexValue":"496e73756666696369656e742062616c616e636520746f206275726e","kind":"string","nodeType":"YulLiteral","src":"5573:30:28","type":"","value":"Insufficient balance to burn"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5546:6:28"},"nodeType":"YulFunctionCall","src":"5546:58:28"},"nodeType":"YulExpressionStatement","src":"5546:58:28"},{"nodeType":"YulAssignment","src":"5613:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5625:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"5636:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5621:3:28"},"nodeType":"YulFunctionCall","src":"5621:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5613:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_eac0e9db12cd14c1c0291906654a3fa6bfacc1c08081fda717334bc66586bac5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5444:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5458:4:28","type":""}],"src":"5293:352:28"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_bb6ef8259868f621162cf2269ec456fd6e3660c295ef634f53db3982172a569f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Cannot transfer to zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Insufficient balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_793ac6e41458d545a7714760682dd797072b4fe898c48602bd8c2b836d34baac__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Only owner can mint\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2ee0416c341986fdecc3cbd81cd5d77b44e6537a4f9aa8afff73aa35a7384cb9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Cannot mint to zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_eac0e9db12cd14c1c0291906654a3fa6bfacc1c08081fda717334bc66586bac5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Insufficient balance to burn\")\n        tail := add(headStart, 96)\n    }\n}","id":28,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100b45760003560e01c806342966c681161007157806342966c681461015857806370a082311461016b5780638da5cb5b1461018b57806395d89b41146101b6578063a9059cbb146101be578063dd62ed3e146101d157600080fd5b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100fa57806323b872dd14610111578063313ce5671461012457806340c10f1914610143575b600080fd5b6100c16101fc565b6040516100ce9190610884565b60405180910390f35b6100ea6100e53660046108ee565b61028a565b60405190151581526020016100ce565b61010360035481565b6040519081526020016100ce565b6100ea61011f366004610918565b6102f7565b6002546101319060ff1681565b60405160ff90911681526020016100ce565b6101566101513660046108ee565b6104f8565b005b610156610166366004610954565b610653565b61010361017936600461096d565b60056020526000908152604090205481565b60045461019e906001600160a01b031681565b6040516001600160a01b0390911681526020016100ce565b6100c161074d565b6100ea6101cc3660046108ee565b61075a565b6101036101df36600461098f565b600660209081526000928352604080842090915290825290205481565b60008054610209906109c2565b80601f0160208091040260200160405190810160405280929190818152602001828054610235906109c2565b80156102825780601f1061025757610100808354040283529160200191610282565b820191906000526020600020905b81548152906001019060200180831161026557829003601f168201915b505050505081565b3360008181526006602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906102e59086815260200190565b60405180910390a35060015b92915050565b60006001600160a01b0383166103545760405162461bcd60e51b815260206004820152601f60248201527f43616e6e6f74207472616e7366657220746f207a65726f20616464726573730060448201526064015b60405180910390fd5b6001600160a01b0384166000908152600560205260409020548211156103b35760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b604482015260640161034b565b6001600160a01b038416600090815260066020908152604080832033845290915290205482111561041f5760405162461bcd60e51b8152602060048201526016602482015275496e73756666696369656e7420616c6c6f77616e636560501b604482015260640161034b565b6001600160a01b03841660009081526005602052604081208054849290610447908490610a12565b90915550506001600160a01b03831660009081526005602052604081208054849290610474908490610a25565b90915550506001600160a01b0384166000908152600660209081526040808320338452909152812080548492906104ac908490610a12565b92505081905550826001600160a01b0316846001600160a01b0316600080516020610a39833981519152846040516104e691815260200190565b60405180910390a35060019392505050565b6004546001600160a01b031633146105485760405162461bcd60e51b815260206004820152601360248201527213db9b1e481bdddb995c8818d85b881b5a5b9d606a1b604482015260640161034b565b6001600160a01b03821661059e5760405162461bcd60e51b815260206004820152601b60248201527f43616e6e6f74206d696e7420746f207a65726f20616464726573730000000000604482015260640161034b565b80600360008282546105b09190610a25565b90915550506001600160a01b038216600090815260056020526040812080548392906105dd908490610a25565b90915550506040518181526001600160a01b038316907f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d41213968859060200160405180910390a26040518181526001600160a01b03831690600090600080516020610a398339815191529060200160405180910390a35050565b336000908152600560205260409020548111156106b25760405162461bcd60e51b815260206004820152601c60248201527f496e73756666696369656e742062616c616e636520746f206275726e00000000604482015260640161034b565b33600090815260056020526040812080548392906106d1908490610a12565b9250508190555080600360008282546106ea9190610a12565b909155505060405181815233907fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca59060200160405180910390a26040518181526000903390600080516020610a398339815191529060200160405180910390a350565b60018054610209906109c2565b60006001600160a01b0383166107b25760405162461bcd60e51b815260206004820152601f60248201527f43616e6e6f74207472616e7366657220746f207a65726f206164647265737300604482015260640161034b565b336000908152600560205260409020548211156108085760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b604482015260640161034b565b3360009081526005602052604081208054849290610827908490610a12565b90915550506001600160a01b03831660009081526005602052604081208054849290610854908490610a25565b90915550506040518281526001600160a01b038416903390600080516020610a39833981519152906020016102e5565b600060208083528351808285015260005b818110156108b157858101830151858201604001528201610895565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146108e957600080fd5b919050565b6000806040838503121561090157600080fd5b61090a836108d2565b946020939093013593505050565b60008060006060848603121561092d57600080fd5b610936846108d2565b9250610944602085016108d2565b9150604084013590509250925092565b60006020828403121561096657600080fd5b5035919050565b60006020828403121561097f57600080fd5b610988826108d2565b9392505050565b600080604083850312156109a257600080fd5b6109ab836108d2565b91506109b9602084016108d2565b90509250929050565b600181811c908216806109d657607f821691505b6020821081036109f657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b818103818111156102f1576102f16109fc565b808201808211156102f1576102f16109fc56feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa264697066735822122023e164a2adb537e9bf59fd89882f73f707fdc13e56c56ddba06ae6c46137f91064736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x42966C68 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x124 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x143 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0x1FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x884 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEA PUSH2 0xE5 CALLDATASIZE PUSH1 0x4 PUSH2 0x8EE JUMP JUMPDEST PUSH2 0x28A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCE JUMP JUMPDEST PUSH2 0x103 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCE JUMP JUMPDEST PUSH2 0xEA PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0x918 JUMP JUMPDEST PUSH2 0x2F7 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x131 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCE JUMP JUMPDEST PUSH2 0x156 PUSH2 0x151 CALLDATASIZE PUSH1 0x4 PUSH2 0x8EE JUMP JUMPDEST PUSH2 0x4F8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x156 PUSH2 0x166 CALLDATASIZE PUSH1 0x4 PUSH2 0x954 JUMP JUMPDEST PUSH2 0x653 JUMP JUMPDEST PUSH2 0x103 PUSH2 0x179 CALLDATASIZE PUSH1 0x4 PUSH2 0x96D JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x19E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCE JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x74D JUMP JUMPDEST PUSH2 0xEA PUSH2 0x1CC CALLDATASIZE PUSH1 0x4 PUSH2 0x8EE JUMP JUMPDEST PUSH2 0x75A JUMP JUMPDEST PUSH2 0x103 PUSH2 0x1DF CALLDATASIZE PUSH1 0x4 PUSH2 0x98F JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x209 SWAP1 PUSH2 0x9C2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x235 SWAP1 PUSH2 0x9C2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x282 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x257 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x282 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x265 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE MLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x2E5 SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x354 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x3B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x34B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x41F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E73756666696369656E7420616C6C6F77616E6365 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x34B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x447 SWAP1 DUP5 SWAP1 PUSH2 0xA12 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x474 SWAP1 DUP5 SWAP1 PUSH2 0xA25 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x4AC SWAP1 DUP5 SWAP1 PUSH2 0xA12 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xA39 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH1 0x40 MLOAD PUSH2 0x4E6 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x548 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x13DB9B1E481BDDDB995C8818D85B881B5A5B9D PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x34B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x59E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74206D696E7420746F207A65726F20616464726573730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x34B JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x5B0 SWAP2 SWAP1 PUSH2 0xA25 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x5DD SWAP1 DUP5 SWAP1 PUSH2 0xA25 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xF6798A560793A54C3BCFE86A93CDE1E73087D944C0EA20544137D4121396885 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xA39 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x6B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742062616C616E636520746F206275726E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x34B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x6D1 SWAP1 DUP5 SWAP1 PUSH2 0xA12 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x6EA SWAP2 SWAP1 PUSH2 0xA12 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x0 SWAP1 CALLER SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xA39 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x209 SWAP1 PUSH2 0x9C2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x7B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E7366657220746F207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x34B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x808 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x34B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x827 SWAP1 DUP5 SWAP1 PUSH2 0xA12 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x854 SWAP1 DUP5 SWAP1 PUSH2 0xA25 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 CALLER SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xA39 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH2 0x2E5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x8B1 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x895 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x8E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x901 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x90A DUP4 PUSH2 0x8D2 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x92D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x936 DUP5 PUSH2 0x8D2 JUMP JUMPDEST SWAP3 POP PUSH2 0x944 PUSH1 0x20 DUP6 ADD PUSH2 0x8D2 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x966 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x97F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x988 DUP3 PUSH2 0x8D2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9AB DUP4 PUSH2 0x8D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x9B9 PUSH1 0x20 DUP5 ADD PUSH2 0x8D2 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x9D6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x9F6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x2F1 JUMPI PUSH2 0x2F1 PUSH2 0x9FC JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2F1 JUMPI PUSH2 0x2F1 PUSH2 0x9FC JUMP INVALID 0xDD CALLCODE MSTORE 0xAD SHL 0xE2 0xC8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x23 0xE1 PUSH5 0xA2ADB537E9 0xBF MSIZE REVERT DUP10 DUP9 0x2F PUSH20 0xF707FDC13E56C56DDBA06AE6C46137F91064736F PUSH13 0x63430008140033000000000000 ","sourceMap":"134:2747:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;161:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1496:204;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:28;;1162:22;1144:41;;1132:2;1117:18;1496:204:10;1004:187:28;238:26:10;;;;;;;;;1342:25:28;;;1330:2;1315:18;238:26:10;1196:177:28;1710:509:10;;;;;;:::i;:::-;;:::i;211:21::-;;;;;;;;;;;;1883:4:28;1871:17;;;1853:36;;1841:2;1826:18;211:21:10;1711:184:28;2229:339:10;;;;;;:::i;:::-;;:::i;:::-;;2578:301;;;;;;:::i;:::-;;:::i;301:44::-;;;;;;:::i;:::-;;;;;;;;;;;;;;270:20;;;;;-1:-1:-1;;;;;270:20:10;;;;;;-1:-1:-1;;;;;2440:32:28;;;2422:51;;2410:2;2395:18;270:20:10;2276:203:28;185:20:10;;;:::i;1112:374::-;;;;;;:::i;:::-;;:::i;351:64::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;161:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1496:204::-;1589:10;1563:4;1579:21;;;:9;:21;;;;;;;;-1:-1:-1;;;;;1579:31:10;;;;;;;;;;:40;;;1634:38;1563:4;;1579:31;;1634:38;;;;1613:6;1342:25:28;;1330:2;1315:18;;1196:177;1634:38:10;;;;;;;;-1:-1:-1;1689:4:10;1496:204;;;;;:::o;1710:509::-;1792:4;-1:-1:-1;;;;;1816:17:10;;1808:61;;;;-1:-1:-1;;;1808:61:10;;3336:2:28;1808:61:10;;;3318:21:28;3375:2;3355:18;;;3348:30;3414:33;3394:18;;;3387:61;3465:18;;1808:61:10;;;;;;;;;-1:-1:-1;;;;;1887:16:10;;;;;;:9;:16;;;;;;:26;-1:-1:-1;1887:26:10;1879:59;;;;-1:-1:-1;;;1879:59:10;;3696:2:28;1879:59:10;;;3678:21:28;3735:2;3715:18;;;3708:30;-1:-1:-1;;;3754:18:28;;;3747:50;3814:18;;1879:59:10;3494:344:28;1879:59:10;-1:-1:-1;;;;;1956:16:10;;;;;;:9;:16;;;;;;;;1973:10;1956:28;;;;;;;;:38;-1:-1:-1;1956:38:10;1948:73;;;;-1:-1:-1;;;1948:73:10;;4045:2:28;1948:73:10;;;4027:21:28;4084:2;4064:18;;;4057:30;-1:-1:-1;;;4103:18:28;;;4096:52;4165:18;;1948:73:10;3843:346:28;1948:73:10;-1:-1:-1;;;;;2040:16:10;;;;;;:9;:16;;;;;:26;;2060:6;;2040:16;:26;;2060:6;;2040:26;:::i;:::-;;;;-1:-1:-1;;;;;;;2076:14:10;;;;;;:9;:14;;;;;:24;;2094:6;;2076:14;:24;;2094:6;;2076:24;:::i;:::-;;;;-1:-1:-1;;;;;;;2110:16:10;;;;;;:9;:16;;;;;;;;2127:10;2110:28;;;;;;;:38;;2142:6;;2110:16;:38;;2142:6;;2110:38;:::i;:::-;;;;;;;;2179:3;-1:-1:-1;;;;;2163:28:10;2172:5;-1:-1:-1;;;;;2163:28:10;-1:-1:-1;;;;;;;;;;;2184:6:10;2163:28;;;;1342:25:28;;1330:2;1315:18;;1196:177;2163:28:10;;;;;;;;-1:-1:-1;2208:4:10;1710:509;;;;;:::o;2229:339::-;2311:5;;-1:-1:-1;;;;;2311:5:10;2297:10;:19;2289:51;;;;-1:-1:-1;;;2289:51:10;;4791:2:28;2289:51:10;;;4773:21:28;4830:2;4810:18;;;4803:30;-1:-1:-1;;;4849:18:28;;;4842:49;4908:18;;2289:51:10;4589:343:28;2289:51:10;-1:-1:-1;;;;;2358:17:10;;2350:57;;;;-1:-1:-1;;;2350:57:10;;5139:2:28;2350:57:10;;;5121:21:28;5178:2;5158:18;;;5151:30;5217:29;5197:18;;;5190:57;5264:18;;2350:57:10;4937:351:28;2350:57:10;2441:6;2426:11;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;2457:14:10;;;;;;:9;:14;;;;;:24;;2475:6;;2457:14;:24;;2475:6;;2457:24;:::i;:::-;;;;-1:-1:-1;;2496:17:10;;1342:25:28;;;-1:-1:-1;;;;;2496:17:10;;;;;1330:2:28;1315:18;2496:17:10;;;;;;;2528:33;;1342:25:28;;;-1:-1:-1;;;;;2528:33:10;;;2545:1;;-1:-1:-1;;;;;;;;;;;2528:33:10;1330:2:28;1315:18;2528:33:10;;;;;;;2229:339;;:::o;2578:301::-;2643:10;2633:21;;;;:9;:21;;;;;;:31;-1:-1:-1;2633:31:10;2625:72;;;;-1:-1:-1;;;2625:72:10;;5495:2:28;2625:72:10;;;5477:21:28;5534:2;5514:18;;;5507:30;5573;5553:18;;;5546:58;5621:18;;2625:72:10;5293:352:28;2625:72:10;2726:10;2716:21;;;;:9;:21;;;;;:31;;2741:6;;2716:21;:31;;2741:6;;2716:31;:::i;:::-;;;;;;;;2772:6;2757:11;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;;2793:24:10;;1342:25:28;;;2798:10:10;;2793:24;;1330:2:28;1315:18;2793:24:10;;;;;;;2832:40;;1342:25:28;;;2861:1:10;;2841:10;;-1:-1:-1;;;;;;;;;;;2832:40:10;1330:2:28;1315:18;2832:40:10;;;;;;;2578:301;:::o;185:20::-;;;;;;;:::i;1112:374::-;1175:4;-1:-1:-1;;;;;1199:17:10;;1191:61;;;;-1:-1:-1;;;1191:61:10;;3336:2:28;1191:61:10;;;3318:21:28;3375:2;3355:18;;;3348:30;3414:33;3394:18;;;3387:61;3465:18;;1191:61:10;3134:355:28;1191:61:10;1280:10;1270:21;;;;:9;:21;;;;;;:31;-1:-1:-1;1270:31:10;1262:64;;;;-1:-1:-1;;;1262:64:10;;3696:2:28;1262:64:10;;;3678:21:28;3735:2;3715:18;;;3708:30;-1:-1:-1;;;3754:18:28;;;3747:50;3814:18;;1262:64:10;3494:344:28;1262:64:10;1355:10;1345:21;;;;:9;:21;;;;;:31;;1370:6;;1345:21;:31;;1370:6;;1345:31;:::i;:::-;;;;-1:-1:-1;;;;;;;1386:14:10;;;;;;:9;:14;;;;;:24;;1404:6;;1386:14;:24;;1404:6;;1386:24;:::i;:::-;;;;-1:-1:-1;;1425:33:10;;1342:25:28;;;-1:-1:-1;;;;;1425:33:10;;;1434:10;;-1:-1:-1;;;;;;;;;;;1425:33:10;1330:2:28;1315:18;1425:33:10;1196:177:28;14:548;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:28;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:28:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:180::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;-1:-1:-1;2051:23:28;;1900:180;-1:-1:-1;1900:180:28:o;2085:186::-;2144:6;2197:2;2185:9;2176:7;2172:23;2168:32;2165:52;;;2213:1;2210;2203:12;2165:52;2236:29;2255:9;2236:29;:::i;:::-;2226:39;2085:186;-1:-1:-1;;;2085:186:28:o;2484:260::-;2552:6;2560;2613:2;2601:9;2592:7;2588:23;2584:32;2581:52;;;2629:1;2626;2619:12;2581:52;2652:29;2671:9;2652:29;:::i;:::-;2642:39;;2700:38;2734:2;2723:9;2719:18;2700:38;:::i;:::-;2690:48;;2484:260;;;;;:::o;2749:380::-;2828:1;2824:12;;;;2871;;;2892:61;;2946:4;2938:6;2934:17;2924:27;;2892:61;2999:2;2991:6;2988:14;2968:18;2965:38;2962:161;;3045:10;3040:3;3036:20;3033:1;3026:31;3080:4;3077:1;3070:15;3108:4;3105:1;3098:15;2962:161;;2749:380;;;:::o;4194:127::-;4255:10;4250:3;4246:20;4243:1;4236:31;4286:4;4283:1;4276:15;4310:4;4307:1;4300:15;4326:128;4393:9;;;4414:11;;;4411:37;;;4428:18;;:::i;4459:125::-;4524:9;;;4545:10;;;4542:36;;;4558:18;;:::i"},"gasEstimates":{"creation":{"codeDepositCost":"540400","executionCost":"infinite","totalCost":"infinite"},"external":{"allowance(address,address)":"infinite","approve(address,uint256)":"24523","balanceOf(address)":"2541","burn(uint256)":"infinite","decimals()":"2402","mint(address,uint256)":"infinite","name()":"infinite","owner()":"2381","symbol()":"infinite","totalSupply()":"2340","transfer(address,uint256)":"infinite","transferFrom(address,address,uint256)":"infinite"}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","decimals()":"313ce567","mint(address,uint256)":"40c10f19","name()":"06fdde03","owner()":"8da5cb5b","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Basic ERC20-like token implementation\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SimpleToken\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SimpleToken.sol\":\"SimpleToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SimpleToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\n/**\\n * @title SimpleToken\\n * @dev Basic ERC20-like token implementation\\n */\\ncontract SimpleToken {\\n    string public name;\\n    string public symbol;\\n    uint8 public decimals;\\n    uint256 public totalSupply;\\n    address public owner;\\n    \\n    mapping(address => uint256) public balanceOf;\\n    mapping(address => mapping(address => uint256)) public allowance;\\n    \\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n    event Mint(address indexed to, uint256 value);\\n    event Burn(address indexed from, uint256 value);\\n    \\n    constructor(\\n        string memory _name,\\n        string memory _symbol,\\n        uint8 _decimals,\\n        uint256 _initialSupply\\n    ) {\\n        name = _name;\\n        symbol = _symbol;\\n        decimals = _decimals;\\n        totalSupply = _initialSupply * 10**_decimals;\\n        owner = msg.sender;\\n        balanceOf[msg.sender] = totalSupply;\\n        emit Transfer(address(0), msg.sender, totalSupply);\\n    }\\n    \\n    function transfer(address _to, uint256 _value) public returns (bool) {\\n        require(_to != address(0), \\\"Cannot transfer to zero address\\\");\\n        require(balanceOf[msg.sender] >= _value, \\\"Insufficient balance\\\");\\n        \\n        balanceOf[msg.sender] -= _value;\\n        balanceOf[_to] += _value;\\n        emit Transfer(msg.sender, _to, _value);\\n        return true;\\n    }\\n    \\n    function approve(address _spender, uint256 _value) public returns (bool) {\\n        allowance[msg.sender][_spender] = _value;\\n        emit Approval(msg.sender, _spender, _value);\\n        return true;\\n    }\\n    \\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\\n        require(_to != address(0), \\\"Cannot transfer to zero address\\\");\\n        require(balanceOf[_from] >= _value, \\\"Insufficient balance\\\");\\n        require(allowance[_from][msg.sender] >= _value, \\\"Insufficient allowance\\\");\\n        \\n        balanceOf[_from] -= _value;\\n        balanceOf[_to] += _value;\\n        allowance[_from][msg.sender] -= _value;\\n        emit Transfer(_from, _to, _value);\\n        return true;\\n    }\\n    \\n    function mint(address _to, uint256 _value) public {\\n        require(msg.sender == owner, \\\"Only owner can mint\\\");\\n        require(_to != address(0), \\\"Cannot mint to zero address\\\");\\n        \\n        totalSupply += _value;\\n        balanceOf[_to] += _value;\\n        emit Mint(_to, _value);\\n        emit Transfer(address(0), _to, _value);\\n    }\\n    \\n    function burn(uint256 _value) public {\\n        require(balanceOf[msg.sender] >= _value, \\\"Insufficient balance to burn\\\");\\n        \\n        balanceOf[msg.sender] -= _value;\\n        totalSupply -= _value;\\n        emit Burn(msg.sender, _value);\\n        emit Transfer(msg.sender, address(0), _value);\\n    }\\n}\",\"keccak256\":\"0x1a9b6394c299de752fa85713b517b5b7e7453593f8ad3be3f4bc3167b8ef5801\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1320,"contract":"contracts/SimpleToken.sol:SimpleToken","label":"name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":1322,"contract":"contracts/SimpleToken.sol:SimpleToken","label":"symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":1324,"contract":"contracts/SimpleToken.sol:SimpleToken","label":"decimals","offset":0,"slot":"2","type":"t_uint8"},{"astId":1326,"contract":"contracts/SimpleToken.sol:SimpleToken","label":"totalSupply","offset":0,"slot":"3","type":"t_uint256"},{"astId":1328,"contract":"contracts/SimpleToken.sol:SimpleToken","label":"owner","offset":0,"slot":"4","type":"t_address"},{"astId":1332,"contract":"contracts/SimpleToken.sol:SimpleToken","label":"balanceOf","offset":0,"slot":"5","type":"t_mapping(t_address,t_uint256)"},{"astId":1338,"contract":"contracts/SimpleToken.sol:SimpleToken","label":"allowance","offset":0,"slot":"6","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/facets/CounterFacet.sol":{"CounterFacet":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"newValue","type":"uint256"}],"name":"CounterDecremented","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"newValue","type":"uint256"}],"name":"CounterIncremented","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousValue","type":"uint256"}],"name":"CounterReset","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"newValue","type":"uint256"}],"name":"UserCounterUpdated","type":"event"},{"inputs":[],"name":"decrement","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getCounter","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCounterMetadata","outputs":[{"internalType":"address","name":"lastUpdater","type":"address"},{"internalType":"uint256","name":"lastUpdateTimestamp","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getUserCounter","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"increment","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"incrementUserCounter","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"resetCounter","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"setUserCounter","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"setUserCounterAsOwner","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"A sample facet that demonstrates basic diamond functionality with a simple counter      This facet provides increment, decrement, and view operations for a counter value      stored in diamond storage. It serves as an example of how to implement business      logic in a diamond facet while using the diamond storage pattern.","kind":"dev","methods":{"decrement()":{"details":"Decreases the global counter and updates metadata      Reverts if counter would go below zero"},"getCounter()":{"returns":{"_0":"The current counter value"}},"getCounterMetadata()":{"returns":{"lastUpdateTimestamp":"Timestamp of the last update","lastUpdater":"Address of the last user to update the counter"}},"getUserCounter(address)":{"params":{"user":"The address of the user"},"returns":{"_0":"The user's counter value"}},"increment()":{"details":"Increases the global counter and updates metadata"},"incrementUserCounter()":{"details":"Each user has their own counter independent of the global one"},"resetCounter()":{"details":"Only the diamond owner can reset the counter"},"setUserCounter(uint256)":{"details":"Only the user themselves or the diamond owner can set their counter","params":{"value":"The new counter value"}},"setUserCounterAsOwner(address,uint256)":{"details":"Only the diamond owner can set other users' counters","params":{"user":"The user whose counter to set","value":"The new counter value"}}},"title":"CounterFacet","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b506106dd806100206000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80638ada066e116100665780638ada066e14610106578063aaa089141461011b578063d09de08a1461012e578063dbdf7fce14610136578063e1aad65b1461013e57600080fd5b806316cb1bc7146100985780632baeceb7146100e157806338c6a5c4146100eb5780638806a32f146100fe575b600080fd5b6100ce6100a63660046105c0565b6001600160a01b03166000908152600080516020610688833981519152602052604090205490565b6040519081526020015b60405180910390f35b6100e96101b2565b005b6100e96100f93660046105e2565b610297565b6100e9610300565b600080516020610668833981519152546100ce565b6100e96101293660046105fb565b610385565b6100e96103ff565b6100e9610477565b6101937fb7b015d605ece0e8fe533fe842b448ce2b6465e6d573f424dd3872fbf1824257547fb7b015d605ece0e8fe533fe842b448ce2b6465e6d573f424dd3872fbf1824258546001600160a01b0390911691565b604080516001600160a01b0390931683526020830191909152016100d8565b60008051602061066883398151915280546102275760405162461bcd60e51b815260206004820152602a60248201527f436f756e74657246616365743a20436f756e7465722063616e6e6f7420676f2060448201526962656c6f77207a65726f60b01b60648201526084015b60405180910390fd5b600181600001600082825461023c919061063b565b90915550506001810180546001600160a01b0319163390811790915542600283015581546040519081527f9cdaca08b82c2d66f0eb8c0ca62ab7a1e1da2238c2edd03b19e1accc9e806d6a906020015b60405180910390a250565b3360008181526000805160206106888339815191526020908152604091829020849055905183815260008051602061066883398151915292917feb7bf040c0984f14f21d0089c5ef66e5b6f076260cb92ab3195cc4bb1c1cd8f791015b60405180910390a25050565b336000908152600080516020610688833981519152602052604081208054600080516020610668833981519152926001929161033d908490610654565b90915550503360008181526003830160209081526040918290205491519182527feb7bf040c0984f14f21d0089c5ef66e5b6f076260cb92ab3195cc4bb1c1cd8f7910161028c565b61038d61051b565b6001600160a01b03821660008181526000805160206106888339815191526020908152604091829020849055905183815260008051602061066883398151915292917feb7bf040c0984f14f21d0089c5ef66e5b6f076260cb92ab3195cc4bb1c1cd8f7910160405180910390a2505050565b60008051602061066883398151915280546001908290600090610423908490610654565b90915550506001810180546001600160a01b0319163390811790915542600283015581546040519081527f59950fb23669ee30425f6d79758e75fae698a6c88b2982f2980638d8bcd9397d9060200161028c565b61047f61051b565b6000805160206106688339815191528054600082557fb7b015d605ece0e8fe533fe842b448ce2b6465e6d573f424dd3872fbf182425780546001600160a01b03191633908117909155427fb7b015d605ece0e8fe533fe842b448ce2b6465e6d573f424dd3872fbf1824258556040518281527f0c4f92d0724fb3d16c74d6fd66f78fe790dbfb5849f7691e9931db60bb64aad4906020016102f4565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c600401546001600160a01b031633146105a25760405162461bcd60e51b815260206004820152602260248201527f4c69624469616d6f6e643a204d75737420626520636f6e7472616374206f776e60448201526132b960f11b606482015260840161021e565b565b80356001600160a01b03811681146105bb57600080fd5b919050565b6000602082840312156105d257600080fd5b6105db826105a4565b9392505050565b6000602082840312156105f457600080fd5b5035919050565b6000806040838503121561060e57600080fd5b610617836105a4565b946020939093013593505050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561064e5761064e610625565b92915050565b8082018082111561064e5761064e61062556feb7b015d605ece0e8fe533fe842b448ce2b6465e6d573f424dd3872fbf1824256b7b015d605ece0e8fe533fe842b448ce2b6465e6d573f424dd3872fbf1824259a26469706673582212209ceef76383b7a0da42240da3ea0b699487c28288f3d3bab802619cc4e79239e564736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6DD DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8ADA066E GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x8ADA066E EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0xAAA08914 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0xD09DE08A EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0xDBDF7FCE EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0xE1AAD65B EQ PUSH2 0x13E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x16CB1BC7 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x2BAECEB7 EQ PUSH2 0xE1 JUMPI DUP1 PUSH4 0x38C6A5C4 EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x8806A32F EQ PUSH2 0xFE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCE PUSH2 0xA6 CALLDATASIZE PUSH1 0x4 PUSH2 0x5C0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x688 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE9 PUSH2 0x1B2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE9 PUSH2 0xF9 CALLDATASIZE PUSH1 0x4 PUSH2 0x5E2 JUMP JUMPDEST PUSH2 0x297 JUMP JUMPDEST PUSH2 0xE9 PUSH2 0x300 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x668 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH2 0xCE JUMP JUMPDEST PUSH2 0xE9 PUSH2 0x129 CALLDATASIZE PUSH1 0x4 PUSH2 0x5FB JUMP JUMPDEST PUSH2 0x385 JUMP JUMPDEST PUSH2 0xE9 PUSH2 0x3FF JUMP JUMPDEST PUSH2 0xE9 PUSH2 0x477 JUMP JUMPDEST PUSH2 0x193 PUSH32 0xB7B015D605ECE0E8FE533FE842B448CE2B6465E6D573F424DD3872FBF1824257 SLOAD PUSH32 0xB7B015D605ECE0E8FE533FE842B448CE2B6465E6D573F424DD3872FBF1824258 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0xD8 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x668 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH2 0x227 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F756E74657246616365743A20436F756E7465722063616E6E6F7420676F20 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x62656C6F77207A65726F PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x23C SWAP2 SWAP1 PUSH2 0x63B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE TIMESTAMP PUSH1 0x2 DUP4 ADD SSTORE DUP2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x9CDACA08B82C2D66F0EB8C0CA62AB7A1E1DA2238C2EDD03B19E1ACCC9E806D6A SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x688 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE SWAP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x668 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 SWAP2 PUSH32 0xEB7BF040C0984F14F21D0089C5EF66E5B6F076260CB92AB3195CC4BB1C1CD8F7 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x688 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x668 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 PUSH1 0x1 SWAP3 SWAP2 PUSH2 0x33D SWAP1 DUP5 SWAP1 PUSH2 0x654 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 DUP4 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0xEB7BF040C0984F14F21D0089C5EF66E5B6F076260CB92AB3195CC4BB1C1CD8F7 SWAP2 ADD PUSH2 0x28C JUMP JUMPDEST PUSH2 0x38D PUSH2 0x51B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x688 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE SWAP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x668 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 SWAP2 PUSH32 0xEB7BF040C0984F14F21D0089C5EF66E5B6F076260CB92AB3195CC4BB1C1CD8F7 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x668 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x423 SWAP1 DUP5 SWAP1 PUSH2 0x654 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE TIMESTAMP PUSH1 0x2 DUP4 ADD SSTORE DUP2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x59950FB23669EE30425F6D79758E75FAE698A6C88B2982F2980638D8BCD9397D SWAP1 PUSH1 0x20 ADD PUSH2 0x28C JUMP JUMPDEST PUSH2 0x47F PUSH2 0x51B JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x668 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE PUSH32 0xB7B015D605ECE0E8FE533FE842B448CE2B6465E6D573F424DD3872FBF1824257 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE TIMESTAMP PUSH32 0xB7B015D605ECE0E8FE533FE842B448CE2B6465E6D573F424DD3872FBF1824258 SSTORE PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0xC4F92D0724FB3D16C74D6FD66F78FE790DBFB5849F7691E9931DB60BB64AAD4 SWAP1 PUSH1 0x20 ADD PUSH2 0x2F4 JUMP JUMPDEST PUSH32 0xC8FCAD8DB84D3CC18B4C41D551EA0EE66DD599CDE068D998E57D5E09332C131C PUSH1 0x4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C69624469616D6F6E643A204D75737420626520636F6E7472616374206F776E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x32B9 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x21E JUMP JUMPDEST JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x5BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5DB DUP3 PUSH2 0x5A4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x60E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x617 DUP4 PUSH2 0x5A4 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x64E JUMPI PUSH2 0x64E PUSH2 0x625 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x64E JUMPI PUSH2 0x64E PUSH2 0x625 JUMP INVALID 0xB7 0xB0 ISZERO 0xD6 SDIV 0xEC 0xE0 0xE8 INVALID MSTORE8 EXTCODEHASH 0xE8 TIMESTAMP 0xB4 BASEFEE 0xCE 0x2B PUSH5 0x65E6D573F4 0x24 0xDD CODESIZE PUSH19 0xFBF1824256B7B015D605ECE0E8FE533FE842B4 BASEFEE 0xCE 0x2B PUSH5 0x65E6D573F4 0x24 0xDD CODESIZE PUSH19 0xFBF1824259A26469706673582212209CEEF763 DUP4 0xB7 LOG0 0xDA TIMESTAMP 0x24 0xD LOG3 0xEA SIGNEXTEND PUSH10 0x9487C28288F3D3BAB802 PUSH2 0x9CC4 0xE7 SWAP3 CODECOPY 0xE5 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"490:4704:11:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@counterStorage_1724":{"entryPoint":null,"id":1724,"parameterSlots":0,"returnSlots":1},"@decrement_1808":{"entryPoint":434,"id":1808,"parameterSlots":0,"returnSlots":0},"@diamondStorage_2756":{"entryPoint":null,"id":2756,"parameterSlots":0,"returnSlots":1},"@enforceIsContractOwner_2810":{"entryPoint":1307,"id":2810,"parameterSlots":0,"returnSlots":0},"@getCounterMetadata_1887":{"entryPoint":null,"id":1887,"parameterSlots":0,"returnSlots":2},"@getCounter_1866":{"entryPoint":null,"id":1866,"parameterSlots":0,"returnSlots":1},"@getUserCounter_1932":{"entryPoint":null,"id":1932,"parameterSlots":1,"returnSlots":1},"@incrementUserCounter_1917":{"entryPoint":768,"id":1917,"parameterSlots":0,"returnSlots":0},"@increment_1762":{"entryPoint":1023,"id":1762,"parameterSlots":0,"returnSlots":0},"@resetCounter_1855":{"entryPoint":1143,"id":1855,"parameterSlots":0,"returnSlots":0},"@setUserCounterAsOwner_1993":{"entryPoint":901,"id":1993,"parameterSlots":2,"returnSlots":0},"@setUserCounter_1960":{"entryPoint":663,"id":1960,"parameterSlots":1,"returnSlots":0},"abi_decode_address":{"entryPoint":1444,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1472,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":1531,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":1506,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0d4ae41009c51fd276653a54d7793c24f266ddc8c56ce21f8be5e2c6595ab3ac__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9d45330d3ebd353699057c3d7096dcbbafcfb60102c95dfe2ed2330e620f2a3f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":1620,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":1595,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":1573,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:2494:28","statements":[{"nodeType":"YulBlock","src":"6:3:28","statements":[]},{"body":{"nodeType":"YulBlock","src":"63:124:28","statements":[{"nodeType":"YulAssignment","src":"73:29:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"82:12:28"},"nodeType":"YulFunctionCall","src":"82:20:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"73:5:28"}]},{"body":{"nodeType":"YulBlock","src":"165:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"174:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"177:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"167:6:28"},"nodeType":"YulFunctionCall","src":"167:12:28"},"nodeType":"YulExpressionStatement","src":"167:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"124:5:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"135:5:28"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:3:28","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"155:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"146:3:28"},"nodeType":"YulFunctionCall","src":"146:11:28"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"142:3:28"},"nodeType":"YulFunctionCall","src":"142:19:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"131:3:28"},"nodeType":"YulFunctionCall","src":"131:31:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"121:2:28"},"nodeType":"YulFunctionCall","src":"121:42:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"114:6:28"},"nodeType":"YulFunctionCall","src":"114:50:28"},"nodeType":"YulIf","src":"111:70:28"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"42:6:28","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:28","type":""}],"src":"14:173:28"},{"body":{"nodeType":"YulBlock","src":"262:116:28","statements":[{"body":{"nodeType":"YulBlock","src":"308:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:28"},"nodeType":"YulFunctionCall","src":"310:12:28"},"nodeType":"YulExpressionStatement","src":"310:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"283:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"292:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"279:3:28"},"nodeType":"YulFunctionCall","src":"279:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"304:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"275:3:28"},"nodeType":"YulFunctionCall","src":"275:32:28"},"nodeType":"YulIf","src":"272:52:28"},{"nodeType":"YulAssignment","src":"333:39:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"362:9:28"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"343:18:28"},"nodeType":"YulFunctionCall","src":"343:29:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"333:6:28"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"228:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"239:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"251:6:28","type":""}],"src":"192:186:28"},{"body":{"nodeType":"YulBlock","src":"484:76:28","statements":[{"nodeType":"YulAssignment","src":"494:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"506:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"517:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"502:3:28"},"nodeType":"YulFunctionCall","src":"502:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"494:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"536:9:28"},{"name":"value0","nodeType":"YulIdentifier","src":"547:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"529:6:28"},"nodeType":"YulFunctionCall","src":"529:25:28"},"nodeType":"YulExpressionStatement","src":"529:25:28"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"453:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"464:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"475:4:28","type":""}],"src":"383:177:28"},{"body":{"nodeType":"YulBlock","src":"635:110:28","statements":[{"body":{"nodeType":"YulBlock","src":"681:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"690:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"693:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"683:6:28"},"nodeType":"YulFunctionCall","src":"683:12:28"},"nodeType":"YulExpressionStatement","src":"683:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"656:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"665:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"652:3:28"},"nodeType":"YulFunctionCall","src":"652:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"677:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"648:3:28"},"nodeType":"YulFunctionCall","src":"648:32:28"},"nodeType":"YulIf","src":"645:52:28"},{"nodeType":"YulAssignment","src":"706:33:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"729:9:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"716:12:28"},"nodeType":"YulFunctionCall","src":"716:23:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"706:6:28"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"601:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"612:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"624:6:28","type":""}],"src":"565:180:28"},{"body":{"nodeType":"YulBlock","src":"837:167:28","statements":[{"body":{"nodeType":"YulBlock","src":"883:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"892:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"895:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"885:6:28"},"nodeType":"YulFunctionCall","src":"885:12:28"},"nodeType":"YulExpressionStatement","src":"885:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"858:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"867:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"854:3:28"},"nodeType":"YulFunctionCall","src":"854:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"879:2:28","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"850:3:28"},"nodeType":"YulFunctionCall","src":"850:32:28"},"nodeType":"YulIf","src":"847:52:28"},{"nodeType":"YulAssignment","src":"908:39:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"937:9:28"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"918:18:28"},"nodeType":"YulFunctionCall","src":"918:29:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"908:6:28"}]},{"nodeType":"YulAssignment","src":"956:42:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"983:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"994:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"979:3:28"},"nodeType":"YulFunctionCall","src":"979:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"966:12:28"},"nodeType":"YulFunctionCall","src":"966:32:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"956:6:28"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"795:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"806:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"818:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"826:6:28","type":""}],"src":"750:254:28"},{"body":{"nodeType":"YulBlock","src":"1138:145:28","statements":[{"nodeType":"YulAssignment","src":"1148:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1160:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1171:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1156:3:28"},"nodeType":"YulFunctionCall","src":"1156:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1148:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1190:9:28"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1205:6:28"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1221:3:28","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1226:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1217:3:28"},"nodeType":"YulFunctionCall","src":"1217:11:28"},{"kind":"number","nodeType":"YulLiteral","src":"1230:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1213:3:28"},"nodeType":"YulFunctionCall","src":"1213:19:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1201:3:28"},"nodeType":"YulFunctionCall","src":"1201:32:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1183:6:28"},"nodeType":"YulFunctionCall","src":"1183:51:28"},"nodeType":"YulExpressionStatement","src":"1183:51:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1254:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1265:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1250:3:28"},"nodeType":"YulFunctionCall","src":"1250:18:28"},{"name":"value1","nodeType":"YulIdentifier","src":"1270:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1243:6:28"},"nodeType":"YulFunctionCall","src":"1243:34:28"},"nodeType":"YulExpressionStatement","src":"1243:34:28"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1099:9:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1110:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1118:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1129:4:28","type":""}],"src":"1009:274:28"},{"body":{"nodeType":"YulBlock","src":"1462:232:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1479:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1490:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1472:6:28"},"nodeType":"YulFunctionCall","src":"1472:21:28"},"nodeType":"YulExpressionStatement","src":"1472:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1513:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1524:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1509:3:28"},"nodeType":"YulFunctionCall","src":"1509:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"1529:2:28","type":"","value":"42"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1502:6:28"},"nodeType":"YulFunctionCall","src":"1502:30:28"},"nodeType":"YulExpressionStatement","src":"1502:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1552:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1563:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1548:3:28"},"nodeType":"YulFunctionCall","src":"1548:18:28"},{"hexValue":"436f756e74657246616365743a20436f756e7465722063616e6e6f7420676f20","kind":"string","nodeType":"YulLiteral","src":"1568:34:28","type":"","value":"CounterFacet: Counter cannot go "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1541:6:28"},"nodeType":"YulFunctionCall","src":"1541:62:28"},"nodeType":"YulExpressionStatement","src":"1541:62:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1623:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1634:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1619:3:28"},"nodeType":"YulFunctionCall","src":"1619:18:28"},{"hexValue":"62656c6f77207a65726f","kind":"string","nodeType":"YulLiteral","src":"1639:12:28","type":"","value":"below zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1612:6:28"},"nodeType":"YulFunctionCall","src":"1612:40:28"},"nodeType":"YulExpressionStatement","src":"1612:40:28"},{"nodeType":"YulAssignment","src":"1661:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1673:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1684:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1669:3:28"},"nodeType":"YulFunctionCall","src":"1669:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1661:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_9d45330d3ebd353699057c3d7096dcbbafcfb60102c95dfe2ed2330e620f2a3f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1439:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1453:4:28","type":""}],"src":"1288:406:28"},{"body":{"nodeType":"YulBlock","src":"1731:95:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1748:1:28","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1755:3:28","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1760:10:28","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1751:3:28"},"nodeType":"YulFunctionCall","src":"1751:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1741:6:28"},"nodeType":"YulFunctionCall","src":"1741:31:28"},"nodeType":"YulExpressionStatement","src":"1741:31:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1788:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1791:4:28","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1781:6:28"},"nodeType":"YulFunctionCall","src":"1781:15:28"},"nodeType":"YulExpressionStatement","src":"1781:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1812:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1815:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1805:6:28"},"nodeType":"YulFunctionCall","src":"1805:15:28"},"nodeType":"YulExpressionStatement","src":"1805:15:28"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"1699:127:28"},{"body":{"nodeType":"YulBlock","src":"1880:79:28","statements":[{"nodeType":"YulAssignment","src":"1890:17:28","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"1902:1:28"},{"name":"y","nodeType":"YulIdentifier","src":"1905:1:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1898:3:28"},"nodeType":"YulFunctionCall","src":"1898:9:28"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"1890:4:28"}]},{"body":{"nodeType":"YulBlock","src":"1931:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"1933:16:28"},"nodeType":"YulFunctionCall","src":"1933:18:28"},"nodeType":"YulExpressionStatement","src":"1933:18:28"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"1922:4:28"},{"name":"x","nodeType":"YulIdentifier","src":"1928:1:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1919:2:28"},"nodeType":"YulFunctionCall","src":"1919:11:28"},"nodeType":"YulIf","src":"1916:37:28"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"1862:1:28","type":""},{"name":"y","nodeType":"YulTypedName","src":"1865:1:28","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"1871:4:28","type":""}],"src":"1831:128:28"},{"body":{"nodeType":"YulBlock","src":"2012:77:28","statements":[{"nodeType":"YulAssignment","src":"2022:16:28","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2033:1:28"},{"name":"y","nodeType":"YulIdentifier","src":"2036:1:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2029:3:28"},"nodeType":"YulFunctionCall","src":"2029:9:28"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"2022:3:28"}]},{"body":{"nodeType":"YulBlock","src":"2061:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"2063:16:28"},"nodeType":"YulFunctionCall","src":"2063:18:28"},"nodeType":"YulExpressionStatement","src":"2063:18:28"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2053:1:28"},{"name":"sum","nodeType":"YulIdentifier","src":"2056:3:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2050:2:28"},"nodeType":"YulFunctionCall","src":"2050:10:28"},"nodeType":"YulIf","src":"2047:36:28"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"1995:1:28","type":""},{"name":"y","nodeType":"YulTypedName","src":"1998:1:28","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"2004:3:28","type":""}],"src":"1964:125:28"},{"body":{"nodeType":"YulBlock","src":"2268:224:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2285:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"2296:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2278:6:28"},"nodeType":"YulFunctionCall","src":"2278:21:28"},"nodeType":"YulExpressionStatement","src":"2278:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2319:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"2330:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2315:3:28"},"nodeType":"YulFunctionCall","src":"2315:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"2335:2:28","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2308:6:28"},"nodeType":"YulFunctionCall","src":"2308:30:28"},"nodeType":"YulExpressionStatement","src":"2308:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2358:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"2369:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2354:3:28"},"nodeType":"YulFunctionCall","src":"2354:18:28"},{"hexValue":"4c69624469616d6f6e643a204d75737420626520636f6e7472616374206f776e","kind":"string","nodeType":"YulLiteral","src":"2374:34:28","type":"","value":"LibDiamond: Must be contract own"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2347:6:28"},"nodeType":"YulFunctionCall","src":"2347:62:28"},"nodeType":"YulExpressionStatement","src":"2347:62:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2429:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"2440:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2425:3:28"},"nodeType":"YulFunctionCall","src":"2425:18:28"},{"hexValue":"6572","kind":"string","nodeType":"YulLiteral","src":"2445:4:28","type":"","value":"er"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2418:6:28"},"nodeType":"YulFunctionCall","src":"2418:32:28"},"nodeType":"YulExpressionStatement","src":"2418:32:28"},{"nodeType":"YulAssignment","src":"2459:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2471:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"2482:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2467:3:28"},"nodeType":"YulFunctionCall","src":"2467:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2459:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_0d4ae41009c51fd276653a54d7793c24f266ddc8c56ce21f8be5e2c6595ab3ac__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2245:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2259:4:28","type":""}],"src":"2094:398:28"}]},"contents":"{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_9d45330d3ebd353699057c3d7096dcbbafcfb60102c95dfe2ed2330e620f2a3f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"CounterFacet: Counter cannot go \")\n        mstore(add(headStart, 96), \"below zero\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_0d4ae41009c51fd276653a54d7793c24f266ddc8c56ce21f8be5e2c6595ab3ac__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"LibDiamond: Must be contract own\")\n        mstore(add(headStart, 96), \"er\")\n        tail := add(headStart, 128)\n    }\n}","id":28,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100935760003560e01c80638ada066e116100665780638ada066e14610106578063aaa089141461011b578063d09de08a1461012e578063dbdf7fce14610136578063e1aad65b1461013e57600080fd5b806316cb1bc7146100985780632baeceb7146100e157806338c6a5c4146100eb5780638806a32f146100fe575b600080fd5b6100ce6100a63660046105c0565b6001600160a01b03166000908152600080516020610688833981519152602052604090205490565b6040519081526020015b60405180910390f35b6100e96101b2565b005b6100e96100f93660046105e2565b610297565b6100e9610300565b600080516020610668833981519152546100ce565b6100e96101293660046105fb565b610385565b6100e96103ff565b6100e9610477565b6101937fb7b015d605ece0e8fe533fe842b448ce2b6465e6d573f424dd3872fbf1824257547fb7b015d605ece0e8fe533fe842b448ce2b6465e6d573f424dd3872fbf1824258546001600160a01b0390911691565b604080516001600160a01b0390931683526020830191909152016100d8565b60008051602061066883398151915280546102275760405162461bcd60e51b815260206004820152602a60248201527f436f756e74657246616365743a20436f756e7465722063616e6e6f7420676f2060448201526962656c6f77207a65726f60b01b60648201526084015b60405180910390fd5b600181600001600082825461023c919061063b565b90915550506001810180546001600160a01b0319163390811790915542600283015581546040519081527f9cdaca08b82c2d66f0eb8c0ca62ab7a1e1da2238c2edd03b19e1accc9e806d6a906020015b60405180910390a250565b3360008181526000805160206106888339815191526020908152604091829020849055905183815260008051602061066883398151915292917feb7bf040c0984f14f21d0089c5ef66e5b6f076260cb92ab3195cc4bb1c1cd8f791015b60405180910390a25050565b336000908152600080516020610688833981519152602052604081208054600080516020610668833981519152926001929161033d908490610654565b90915550503360008181526003830160209081526040918290205491519182527feb7bf040c0984f14f21d0089c5ef66e5b6f076260cb92ab3195cc4bb1c1cd8f7910161028c565b61038d61051b565b6001600160a01b03821660008181526000805160206106888339815191526020908152604091829020849055905183815260008051602061066883398151915292917feb7bf040c0984f14f21d0089c5ef66e5b6f076260cb92ab3195cc4bb1c1cd8f7910160405180910390a2505050565b60008051602061066883398151915280546001908290600090610423908490610654565b90915550506001810180546001600160a01b0319163390811790915542600283015581546040519081527f59950fb23669ee30425f6d79758e75fae698a6c88b2982f2980638d8bcd9397d9060200161028c565b61047f61051b565b6000805160206106688339815191528054600082557fb7b015d605ece0e8fe533fe842b448ce2b6465e6d573f424dd3872fbf182425780546001600160a01b03191633908117909155427fb7b015d605ece0e8fe533fe842b448ce2b6465e6d573f424dd3872fbf1824258556040518281527f0c4f92d0724fb3d16c74d6fd66f78fe790dbfb5849f7691e9931db60bb64aad4906020016102f4565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c600401546001600160a01b031633146105a25760405162461bcd60e51b815260206004820152602260248201527f4c69624469616d6f6e643a204d75737420626520636f6e7472616374206f776e60448201526132b960f11b606482015260840161021e565b565b80356001600160a01b03811681146105bb57600080fd5b919050565b6000602082840312156105d257600080fd5b6105db826105a4565b9392505050565b6000602082840312156105f457600080fd5b5035919050565b6000806040838503121561060e57600080fd5b610617836105a4565b946020939093013593505050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561064e5761064e610625565b92915050565b8082018082111561064e5761064e61062556feb7b015d605ece0e8fe533fe842b448ce2b6465e6d573f424dd3872fbf1824256b7b015d605ece0e8fe533fe842b448ce2b6465e6d573f424dd3872fbf1824259a26469706673582212209ceef76383b7a0da42240da3ea0b699487c28288f3d3bab802619cc4e79239e564736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8ADA066E GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x8ADA066E EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0xAAA08914 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0xD09DE08A EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0xDBDF7FCE EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0xE1AAD65B EQ PUSH2 0x13E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x16CB1BC7 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x2BAECEB7 EQ PUSH2 0xE1 JUMPI DUP1 PUSH4 0x38C6A5C4 EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x8806A32F EQ PUSH2 0xFE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCE PUSH2 0xA6 CALLDATASIZE PUSH1 0x4 PUSH2 0x5C0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x688 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE9 PUSH2 0x1B2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE9 PUSH2 0xF9 CALLDATASIZE PUSH1 0x4 PUSH2 0x5E2 JUMP JUMPDEST PUSH2 0x297 JUMP JUMPDEST PUSH2 0xE9 PUSH2 0x300 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x668 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH2 0xCE JUMP JUMPDEST PUSH2 0xE9 PUSH2 0x129 CALLDATASIZE PUSH1 0x4 PUSH2 0x5FB JUMP JUMPDEST PUSH2 0x385 JUMP JUMPDEST PUSH2 0xE9 PUSH2 0x3FF JUMP JUMPDEST PUSH2 0xE9 PUSH2 0x477 JUMP JUMPDEST PUSH2 0x193 PUSH32 0xB7B015D605ECE0E8FE533FE842B448CE2B6465E6D573F424DD3872FBF1824257 SLOAD PUSH32 0xB7B015D605ECE0E8FE533FE842B448CE2B6465E6D573F424DD3872FBF1824258 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0xD8 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x668 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH2 0x227 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F756E74657246616365743A20436F756E7465722063616E6E6F7420676F20 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x62656C6F77207A65726F PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x23C SWAP2 SWAP1 PUSH2 0x63B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE TIMESTAMP PUSH1 0x2 DUP4 ADD SSTORE DUP2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x9CDACA08B82C2D66F0EB8C0CA62AB7A1E1DA2238C2EDD03B19E1ACCC9E806D6A SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x688 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE SWAP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x668 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 SWAP2 PUSH32 0xEB7BF040C0984F14F21D0089C5EF66E5B6F076260CB92AB3195CC4BB1C1CD8F7 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x688 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x668 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 PUSH1 0x1 SWAP3 SWAP2 PUSH2 0x33D SWAP1 DUP5 SWAP1 PUSH2 0x654 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 DUP4 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0xEB7BF040C0984F14F21D0089C5EF66E5B6F076260CB92AB3195CC4BB1C1CD8F7 SWAP2 ADD PUSH2 0x28C JUMP JUMPDEST PUSH2 0x38D PUSH2 0x51B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x688 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE SWAP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x668 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 SWAP2 PUSH32 0xEB7BF040C0984F14F21D0089C5EF66E5B6F076260CB92AB3195CC4BB1C1CD8F7 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x668 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x423 SWAP1 DUP5 SWAP1 PUSH2 0x654 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE TIMESTAMP PUSH1 0x2 DUP4 ADD SSTORE DUP2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x59950FB23669EE30425F6D79758E75FAE698A6C88B2982F2980638D8BCD9397D SWAP1 PUSH1 0x20 ADD PUSH2 0x28C JUMP JUMPDEST PUSH2 0x47F PUSH2 0x51B JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x668 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE PUSH32 0xB7B015D605ECE0E8FE533FE842B448CE2B6465E6D573F424DD3872FBF1824257 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE TIMESTAMP PUSH32 0xB7B015D605ECE0E8FE533FE842B448CE2B6465E6D573F424DD3872FBF1824258 SSTORE PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0xC4F92D0724FB3D16C74D6FD66F78FE790DBFB5849F7691E9931DB60BB64AAD4 SWAP1 PUSH1 0x20 ADD PUSH2 0x2F4 JUMP JUMPDEST PUSH32 0xC8FCAD8DB84D3CC18B4C41D551EA0EE66DD599CDE068D998E57D5E09332C131C PUSH1 0x4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C69624469616D6F6E643A204D75737420626520636F6E7472616374206F776E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x32B9 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x21E JUMP JUMPDEST JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x5BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5DB DUP3 PUSH2 0x5A4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x60E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x617 DUP4 PUSH2 0x5A4 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x64E JUMPI PUSH2 0x64E PUSH2 0x625 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x64E JUMPI PUSH2 0x64E PUSH2 0x625 JUMP INVALID 0xB7 0xB0 ISZERO 0xD6 SDIV 0xEC 0xE0 0xE8 INVALID MSTORE8 EXTCODEHASH 0xE8 TIMESTAMP 0xB4 BASEFEE 0xCE 0x2B PUSH5 0x65E6D573F4 0x24 0xDD CODESIZE PUSH19 0xFBF1824256B7B015D605ECE0E8FE533FE842B4 BASEFEE 0xCE 0x2B PUSH5 0x65E6D573F4 0x24 0xDD CODESIZE PUSH19 0xFBF1824259A26469706673582212209CEEF763 DUP4 0xB7 LOG0 0xDA TIMESTAMP 0x24 0xD LOG3 0xEA SIGNEXTEND PUSH10 0x9487C28288F3D3BAB802 PUSH2 0x9CC4 0xE7 SWAP3 CODECOPY 0xE5 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"490:4704:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4150:129;;;;;;:::i;:::-;-1:-1:-1;;;;;4237:35:11;4211:7;4237:35;;;-1:-1:-1;;;;;;;;;;;4237:35:11;;;;;;;4150:129;;;;529:25:28;;;517:2;502:18;4150:129:11;;;;;;;;2114:357;;;:::i;:::-;;4479:215;;;;;;:::i;:::-;;:::i;3767:227::-;;;:::i;3079:102::-;-1:-1:-1;;;;;;;;;;;3150:24:11;3079:102;;4923:269;;;;;;:::i;:::-;;:::i;1661:::-;;;:::i;2598:366::-;;;:::i;3399:221::-;;3574:14;;3590:22;;-1:-1:-1;;;;;3574:14:11;;;;3399:221;;;;;-1:-1:-1;;;;;1201:32:28;;;1183:51;;1265:2;1250:18;;1243:34;;;;1156:18;3399:221:11;1009:274:28;2114:357:11;-1:-1:-1;;;;;;;;;;;2216:10:11;;2208:69;;;;-1:-1:-1;;;2208:69:11;;1490:2:28;2208:69:11;;;1472:21:28;1529:2;1509:18;;;1502:30;1568:34;1548:18;;;1541:62;-1:-1:-1;;;1619:18:28;;;1612:40;1669:19;;2208:69:11;;;;;;;;;2310:1;2296:2;:10;;;:15;;;;;;;:::i;:::-;;;;-1:-1:-1;;2321:14:11;;;:27;;-1:-1:-1;;;;;;2321:27:11;2338:10;2321:27;;;;;;2383:15;2358:22;;;:40;2453:10;;2422:42;;529:25:28;;;2422:42:11;;517:2:28;502:18;2422:42:11;;;;;;;;2144:327;2114:357::o;4479:215::-;4607:10;4537:25;4591:27;;;-1:-1:-1;;;;;;;;;;;4591:27:11;;;;;;;;;:35;;;4650:37;;529:25:28;;;-1:-1:-1;;;;;;;;;;;821:34:11;4607:10;4650:37;;502:18:28;4650:37:11;;;;;;;;4527:167;4479:215;:::o;3767:227::-;3888:10;3818:25;3872:27;;;-1:-1:-1;;;;;;;;;;;3872:27:11;;;;;:32;;-1:-1:-1;;;;;;;;;;;821:34:11;3903:1;;3872:27;:32;;3903:1;;3872:32;:::i;:::-;;;;-1:-1:-1;;3947:10:11;3959:27;;;;:15;;;:27;;;;;;;;;;3928:59;;529:25:28;;;3928:59:11;;502:18:28;3928:59:11;383:177:28;4923:269:11;5002:35;:33;:35::i;:::-;-1:-1:-1;;;;;5101:21:11;;5047:25;5101:21;;;-1:-1:-1;;;;;;;;;;;5101:21:11;;;;;;;;;:29;;;5154:31;;529:25:28;;;-1:-1:-1;;;;;;;;;;;821:34:11;5101:21;5154:31;;502:18:28;5154:31:11;;;;;;;4992:200;4923:269;;:::o;1661:::-;-1:-1:-1;;;;;;;;;;;1755:15:11;;1769:1;;821:34;;1701:25;;1755:15;;1769:1;;1755:15;:::i;:::-;;;;-1:-1:-1;;1780:14:11;;;:27;;-1:-1:-1;;;;;;1780:27:11;1797:10;1780:27;;;;;;1842:15;1817:22;;;:40;1912:10;;1881:42;;529:25:28;;;1881:42:11;;517:2:28;502:18;1881:42:11;383:177:28;2598:366:11;2641:35;:33;:35::i;:::-;-1:-1:-1;;;;;;;;;;;2773:10:11;;2686:25;2793:14;;2817;:27;;-1:-1:-1;;;;;;2817:27:11;2834:10;2817:27;;;;;;2879:15;2854:22;:40;2918:39;;529:25:28;;;2918:39:11;;517:2:28;502:18;2918:39:11;383:177:28;3186:156:25;741:45;3266:30;;;-1:-1:-1;;;;;3266:30:25;3252:10;:44;3244:91;;;;-1:-1:-1;;;3244:91:25;;2296:2:28;3244:91:25;;;2278:21:28;2335:2;2315:18;;;2308:30;2374:34;2354:18;;;2347:62;-1:-1:-1;;;2425:18:28;;;2418:32;2467:19;;3244:91:25;2094:398:28;3244:91:25;3186:156::o;14:173:28:-;82:20;;-1:-1:-1;;;;;131:31:28;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:28:o;565:180::-;624:6;677:2;665:9;656:7;652:23;648:32;645:52;;;693:1;690;683:12;645:52;-1:-1:-1;716:23:28;;565:180;-1:-1:-1;565:180:28:o;750:254::-;818:6;826;879:2;867:9;858:7;854:23;850:32;847:52;;;895:1;892;885:12;847:52;918:29;937:9;918:29;:::i;:::-;908:39;994:2;979:18;;;;966:32;;-1:-1:-1;;;750:254:28:o;1699:127::-;1760:10;1755:3;1751:20;1748:1;1741:31;1791:4;1788:1;1781:15;1815:4;1812:1;1805:15;1831:128;1898:9;;;1919:11;;;1916:37;;;1933:18;;:::i;:::-;1831:128;;;;:::o;1964:125::-;2029:9;;;2050:10;;;2047:36;;;2063:18;;:::i"},"gasEstimates":{"creation":{"codeDepositCost":"351400","executionCost":"386","totalCost":"351786"},"external":{"decrement()":"infinite","getCounter()":"infinite","getCounterMetadata()":"4555","getUserCounter(address)":"infinite","increment()":"infinite","incrementUserCounter()":"infinite","resetCounter()":"infinite","setUserCounter(uint256)":"infinite","setUserCounterAsOwner(address,uint256)":"infinite"},"internal":{"counterStorage()":"infinite"}},"methodIdentifiers":{"decrement()":"2baeceb7","getCounter()":"8ada066e","getCounterMetadata()":"e1aad65b","getUserCounter(address)":"16cb1bc7","increment()":"d09de08a","incrementUserCounter()":"8806a32f","resetCounter()":"dbdf7fce","setUserCounter(uint256)":"38c6a5c4","setUserCounterAsOwner(address,uint256)":"aaa08914"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"CounterDecremented\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"CounterIncremented\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousValue\",\"type\":\"uint256\"}],\"name\":\"CounterReset\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"UserCounterUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"decrement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCounterMetadata\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"lastUpdater\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"increment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"incrementUserCounter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resetCounter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"setUserCounter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"setUserCounterAsOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"A sample facet that demonstrates basic diamond functionality with a simple counter      This facet provides increment, decrement, and view operations for a counter value      stored in diamond storage. It serves as an example of how to implement business      logic in a diamond facet while using the diamond storage pattern.\",\"kind\":\"dev\",\"methods\":{\"decrement()\":{\"details\":\"Decreases the global counter and updates metadata      Reverts if counter would go below zero\"},\"getCounter()\":{\"returns\":{\"_0\":\"The current counter value\"}},\"getCounterMetadata()\":{\"returns\":{\"lastUpdateTimestamp\":\"Timestamp of the last update\",\"lastUpdater\":\"Address of the last user to update the counter\"}},\"getUserCounter(address)\":{\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"_0\":\"The user's counter value\"}},\"increment()\":{\"details\":\"Increases the global counter and updates metadata\"},\"incrementUserCounter()\":{\"details\":\"Each user has their own counter independent of the global one\"},\"resetCounter()\":{\"details\":\"Only the diamond owner can reset the counter\"},\"setUserCounter(uint256)\":{\"details\":\"Only the user themselves or the diamond owner can set their counter\",\"params\":{\"value\":\"The new counter value\"}},\"setUserCounterAsOwner(address,uint256)\":{\"details\":\"Only the diamond owner can set other users' counters\",\"params\":{\"user\":\"The user whose counter to set\",\"value\":\"The new counter value\"}}},\"title\":\"CounterFacet\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"decrement()\":{\"notice\":\"Decrement the global counter by 1\"},\"getCounter()\":{\"notice\":\"Get the current global counter value\"},\"getCounterMetadata()\":{\"notice\":\"Get metadata about the last counter update\"},\"getUserCounter(address)\":{\"notice\":\"Get a user's personal counter value\"},\"increment()\":{\"notice\":\"Increment the global counter by 1\"},\"incrementUserCounter()\":{\"notice\":\"Increment a user's personal counter\"},\"resetCounter()\":{\"notice\":\"Reset the global counter to zero\"},\"setUserCounter(uint256)\":{\"notice\":\"Set a user's counter to a specific value\"},\"setUserCounterAsOwner(address,uint256)\":{\"notice\":\"Set any user's counter (owner only)\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/facets/CounterFacet.sol\":\"CounterFacet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/facets/CounterFacet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport { LibDiamond } from \\\"../libraries/LibDiamond.sol\\\";\\n\\n/**\\n * @title CounterFacet\\n * @dev A sample facet that demonstrates basic diamond functionality with a simple counter\\n *      This facet provides increment, decrement, and view operations for a counter value\\n *      stored in diamond storage. It serves as an example of how to implement business\\n *      logic in a diamond facet while using the diamond storage pattern.\\n */\\ncontract CounterFacet {\\n    // Custom storage struct for this facet\\n    struct CounterStorage {\\n        uint256 counter;\\n        address lastUpdater;\\n        uint256 lastUpdateTimestamp;\\n        mapping(address => uint256) userCounters;\\n    }\\n\\n    // Storage position for this facet\\n    bytes32 constant COUNTER_STORAGE_POSITION = keccak256(\\\"counter.facet.storage\\\");\\n\\n    // Events\\n    event CounterIncremented(address indexed user, uint256 newValue);\\n    event CounterDecremented(address indexed user, uint256 newValue);\\n    event CounterReset(address indexed user, uint256 previousValue);\\n    event UserCounterUpdated(address indexed user, uint256 newValue);\\n\\n    /**\\n     * @notice Get the counter storage\\n     * @dev Internal function to access the counter's diamond storage slot\\n     * @return cs The counter storage struct\\n     */\\n    function counterStorage() internal pure returns (CounterStorage storage cs) {\\n        bytes32 position = COUNTER_STORAGE_POSITION;\\n        assembly {\\n            cs.slot := position\\n        }\\n    }\\n\\n    /**\\n     * @notice Increment the global counter by 1\\n     * @dev Increases the global counter and updates metadata\\n     */\\n    function increment() external {\\n        CounterStorage storage cs = counterStorage();\\n        cs.counter += 1;\\n        cs.lastUpdater = msg.sender;\\n        cs.lastUpdateTimestamp = block.timestamp;\\n        \\n        emit CounterIncremented(msg.sender, cs.counter);\\n    }\\n\\n    /**\\n     * @notice Decrement the global counter by 1\\n     * @dev Decreases the global counter and updates metadata\\n     *      Reverts if counter would go below zero\\n     */\\n    function decrement() external {\\n        CounterStorage storage cs = counterStorage();\\n        require(cs.counter > 0, \\\"CounterFacet: Counter cannot go below zero\\\");\\n        \\n        cs.counter -= 1;\\n        cs.lastUpdater = msg.sender;\\n        cs.lastUpdateTimestamp = block.timestamp;\\n        \\n        emit CounterDecremented(msg.sender, cs.counter);\\n    }\\n\\n    /**\\n     * @notice Reset the global counter to zero\\n     * @dev Only the diamond owner can reset the counter\\n     */\\n    function resetCounter() external {\\n        LibDiamond.enforceIsContractOwner();\\n        CounterStorage storage cs = counterStorage();\\n        \\n        uint256 previousValue = cs.counter;\\n        cs.counter = 0;\\n        cs.lastUpdater = msg.sender;\\n        cs.lastUpdateTimestamp = block.timestamp;\\n        \\n        emit CounterReset(msg.sender, previousValue);\\n    }\\n\\n    /**\\n     * @notice Get the current global counter value\\n     * @return The current counter value\\n     */\\n    function getCounter() external view returns (uint256) {\\n        return counterStorage().counter;\\n    }\\n\\n    /**\\n     * @notice Get metadata about the last counter update\\n     * @return lastUpdater Address of the last user to update the counter\\n     * @return lastUpdateTimestamp Timestamp of the last update\\n     */\\n    function getCounterMetadata() external view returns (address lastUpdater, uint256 lastUpdateTimestamp) {\\n        CounterStorage storage cs = counterStorage();\\n        return (cs.lastUpdater, cs.lastUpdateTimestamp);\\n    }\\n\\n    /**\\n     * @notice Increment a user's personal counter\\n     * @dev Each user has their own counter independent of the global one\\n     */\\n    function incrementUserCounter() external {\\n        CounterStorage storage cs = counterStorage();\\n        cs.userCounters[msg.sender] += 1;\\n        \\n        emit UserCounterUpdated(msg.sender, cs.userCounters[msg.sender]);\\n    }\\n\\n    /**\\n     * @notice Get a user's personal counter value\\n     * @param user The address of the user\\n     * @return The user's counter value\\n     */\\n    function getUserCounter(address user) external view returns (uint256) {\\n        return counterStorage().userCounters[user];\\n    }\\n\\n    /**\\n     * @notice Set a user's counter to a specific value\\n     * @dev Only the user themselves or the diamond owner can set their counter\\n     * @param value The new counter value\\n     */\\n    function setUserCounter(uint256 value) external {\\n        CounterStorage storage cs = counterStorage();\\n        cs.userCounters[msg.sender] = value;\\n        \\n        emit UserCounterUpdated(msg.sender, value);\\n    }\\n\\n    /**\\n     * @notice Set any user's counter (owner only)\\n     * @dev Only the diamond owner can set other users' counters\\n     * @param user The user whose counter to set\\n     * @param value The new counter value\\n     */\\n    function setUserCounterAsOwner(address user, uint256 value) external {\\n        LibDiamond.enforceIsContractOwner();\\n        CounterStorage storage cs = counterStorage();\\n        cs.userCounters[user] = value;\\n        \\n        emit UserCounterUpdated(user, value);\\n    }\\n}\",\"keccak256\":\"0x86ba3aaac79975cfe1dd6175472d52e98b73f4f462c6e19cd861d1d1bc38500f\",\"license\":\"MIT\"},\"contracts/interfaces/IDiamondCut.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.6;\\r\\n\\r\\n/******************************************************************************\\\\\\r\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\r\\n* EIP-2535 Diamonds: https://eips.ethereum.org/EIPS/eip-2535\\r\\n/******************************************************************************/\\r\\n\\r\\ninterface IDiamondCut {\\r\\n    enum FacetCutAction {Add, Replace, Remove}\\r\\n    // Add=0, Replace=1, Remove=2\\r\\n\\r\\n    struct FacetCut {\\r\\n        address facetAddress;\\r\\n        FacetCutAction action;\\r\\n        bytes4[] functionSelectors;\\r\\n    }\\r\\n\\r\\n    /// @notice Add/replace/remove any number of functions and optionally execute\\r\\n    ///         a function with delegatecall\\r\\n    /// @param _diamondCut Contains the facet addresses and function selectors\\r\\n    /// @param _init The address of the contract or facet to execute _calldata\\r\\n    /// @param _calldata A function call, including function selector and arguments\\r\\n    ///                  _calldata is executed with delegatecall on _init\\r\\n    function diamondCut(\\r\\n        FacetCut[] calldata _diamondCut,\\r\\n        address _init,\\r\\n        bytes calldata _calldata\\r\\n    ) external;\\r\\n    \\r\\n    /// @notice Propose an upgrade to be executed after the timelock period\\r\\n    /// @param _diamondCut Contains the facet addresses and function selectors\\r\\n    /// @param _init The address of the contract or facet to execute _calldata\\r\\n    /// @param _calldata A function call, including function selector and arguments\\r\\n    function proposeDiamondCut(\\r\\n        FacetCut[] calldata _diamondCut,\\r\\n        address _init,\\r\\n        bytes calldata _calldata\\r\\n    ) external;\\r\\n    \\r\\n    /// @notice Execute a previously proposed upgrade after the timelock period\\r\\n    function executeDiamondCut() external;\\r\\n    \\r\\n    /// @notice Cancel a proposed upgrade\\r\\n    function cancelDiamondCut() external;\\r\\n\\r\\n    event DiamondCut(FacetCut[] _diamondCut, address _init, bytes _calldata);\\r\\n    event DiamondCutProposed(address indexed proposer, uint256 indexed proposalTime, uint256 executionTime);\\r\\n    event DiamondCutCancelled(address indexed canceller);\\r\\n}\\r\\n\",\"keccak256\":\"0x340a039f0dd63cf19bc669551feec28879457d8b741711ef3513168d620f11bc\",\"license\":\"MIT\"},\"contracts/interfaces/IERC173.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.6;\\n\\n/// @title ERC-173 Contract Ownership Standard\\n///  Note: the ERC-165 identifier for this interface is 0x7f5828d0\\n/* is ERC165 */\\ninterface IERC173 {\\n    /// @dev This emits when ownership of a contract changes.\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /// @notice Get the address of the owner\\n    /// @return owner_ The address of the owner.\\n    function owner() external view returns (address owner_);\\n\\n    /// @notice Set the address of the new owner of the contract\\n    /// @dev Set _newOwner to address(0) to renounce any ownership.\\n    /// @param _newOwner The address of the new owner of the contract\\n    function transferOwnership(address _newOwner) external;\\n}\\n\",\"keccak256\":\"0x84fe28f479bf96f1819514dd8493ae15955eda0dbabcbb5f24c3c935075a31d4\",\"license\":\"MIT\"},\"contracts/libraries/LibDiamond.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.6;\\n\\n/******************************************************************************\\\\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\n* EIP-2535 Diamonds: https://eips.ethereum.org/EIPS/eip-2535\\n/******************************************************************************/\\nimport { IDiamondCut } from \\\"../interfaces/IDiamondCut.sol\\\";\\nimport \\\"../interfaces/IERC173.sol\\\"; // for IERC173 interface\\nimport \\\"../interfaces/IDiamondCut.sol\\\";\\n\\n// Remember to add the loupe functions from DiamondLoupeFacet to the diamond.\\n// The loupe functions are required by the EIP2535 Diamonds standard\\n\\nlibrary LibDiamond {\\n    bytes32 constant DIAMOND_STORAGE_POSITION = keccak256(\\\"diamond.standard.diamond.storage\\\");\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n    event DiamondCut(IDiamondCut.FacetCut[] _diamondCut, address _init, bytes _calldata);\\n    event DiamondCutProposed(address indexed proposer, uint256 indexed proposalTime, uint256 executionTime);\\n    event DiamondCutCancelled(address indexed canceller);\\n\\n    struct FacetAddressAndPosition {\\n        address facetAddress;\\n        uint96 functionSelectorPosition; // position in facetFunctionSelectors.functionSelectors array\\n    }\\n\\n    struct FacetFunctionSelectors {\\n        bytes4[] functionSelectors;\\n        uint256 facetAddressPosition; // position of facetAddress in facetAddresses array\\n    }\\n\\n    // Upgrade proposal struct for timelock functionality\\n    struct UpgradeProposal {\\n        IDiamondCut.FacetCut[] diamondCut;\\n        address initAddress;\\n        bytes initCalldata;\\n        uint256 proposalTime;\\n        bool exists;\\n    }\\n\\n    struct DiamondStorage {\\n        // maps function selector to the facet address and\\n        // the position of the selector in the facetFunctionSelectors.selectors array\\n        mapping(bytes4 => FacetAddressAndPosition) selectorToFacetAndPosition;\\n        // maps facet addresses to function selectors\\n        mapping(address => FacetFunctionSelectors) facetFunctionSelectors;\\n        // facet addresses\\n        address[] facetAddresses;\\n        // Used to query if a contract implements an interface.\\n        // Used to implement ERC-165.\\n        mapping(bytes4 => bool) supportedInterfaces;\\n        // owner of the contract\\n        address contractOwner;\\n        // Timelock for upgrades (in seconds)\\n        uint256 upgradeTimelock;\\n        // Storage for the current upgrade proposal\\n        UpgradeProposal upgradeProposal;\\n    }\\n\\n    function diamondStorage() internal pure returns (DiamondStorage storage ds) {\\n        bytes32 position = DIAMOND_STORAGE_POSITION;\\n        assembly {\\n            ds.slot := position\\n        }\\n    }\\n\\n    function setContractOwner(address _newOwner) internal {\\n        DiamondStorage storage ds = diamondStorage();\\n        address previousOwner = ds.contractOwner;\\n        ds.contractOwner = _newOwner;\\n        emit OwnershipTransferred(previousOwner, _newOwner);\\n    }\\n\\n    function contractOwner() internal view returns (address contractOwner_) {\\n        contractOwner_ = diamondStorage().contractOwner;\\n    }\\n\\n    function enforceIsContractOwner() internal view {\\n        require(msg.sender == diamondStorage().contractOwner, \\\"LibDiamond: Must be contract owner\\\");\\n    }\\n\\n    // Timelock constants\\n    uint256 constant DEFAULT_UPGRADE_TIMELOCK = 2 days;\\n\\n    // Internal function version of diamondCut\\n    function diamondCut(\\n        IDiamondCut.FacetCut[] memory _diamondCut,\\n        address _init,\\n        bytes memory _calldata\\n    ) internal {\\n        for (uint256 facetIndex; facetIndex < _diamondCut.length; facetIndex++) {\\n            IDiamondCut.FacetCutAction action = _diamondCut[facetIndex].action;\\n            if (action == IDiamondCut.FacetCutAction.Add) {\\n                addFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\\n            } else if (action == IDiamondCut.FacetCutAction.Replace) {\\n                replaceFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\\n            } else if (action == IDiamondCut.FacetCutAction.Remove) {\\n                removeFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\\n            } else {\\n                revert(\\\"LibDiamondCut: Incorrect FacetCutAction\\\");\\n            }\\n        }\\n        emit DiamondCut(_diamondCut, _init, _calldata);\\n        initializeDiamondCut(_init, _calldata);\\n    }\\n\\n    function addFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\\n        require(_functionSelectors.length > 0, \\\"LibDiamondCut: No selectors in facet to cut\\\");\\n        DiamondStorage storage ds = diamondStorage();        \\n        require(_facetAddress != address(0), \\\"LibDiamondCut: Add facet can't be address(0)\\\");\\n        uint96 selectorPosition = uint96(ds.facetFunctionSelectors[_facetAddress].functionSelectors.length);\\n        // add new facet address if it does not exist\\n        if (selectorPosition == 0) {\\n            addFacet(ds, _facetAddress);            \\n        }\\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\\n            bytes4 selector = _functionSelectors[selectorIndex];\\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\\n            require(oldFacetAddress == address(0), \\\"LibDiamondCut: Can't add function that already exists\\\");\\n            addFunction(ds, selector, selectorPosition, _facetAddress);\\n            selectorPosition++;\\n        }\\n    }\\n\\n    function replaceFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\\n        require(_functionSelectors.length > 0, \\\"LibDiamondCut: No selectors in facet to cut\\\");\\n        DiamondStorage storage ds = diamondStorage();\\n        require(_facetAddress != address(0), \\\"LibDiamondCut: Add facet can't be address(0)\\\");\\n        uint96 selectorPosition = uint96(ds.facetFunctionSelectors[_facetAddress].functionSelectors.length);\\n        // add new facet address if it does not exist\\n        if (selectorPosition == 0) {\\n            addFacet(ds, _facetAddress);\\n        }\\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\\n            bytes4 selector = _functionSelectors[selectorIndex];\\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\\n            require(oldFacetAddress != _facetAddress, \\\"LibDiamondCut: Can't replace function with same function\\\");\\n            removeFunction(ds, oldFacetAddress, selector);\\n            addFunction(ds, selector, selectorPosition, _facetAddress);\\n            selectorPosition++;\\n        }\\n    }\\n\\n    function removeFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\\n        require(_functionSelectors.length > 0, \\\"LibDiamondCut: No selectors in facet to cut\\\");\\n        DiamondStorage storage ds = diamondStorage();\\n        // if function does not exist then do nothing and return\\n        require(_facetAddress == address(0), \\\"LibDiamondCut: Remove facet address must be address(0)\\\");\\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\\n            bytes4 selector = _functionSelectors[selectorIndex];\\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\\n            removeFunction(ds, oldFacetAddress, selector);\\n        }\\n    }\\n\\n    function addFacet(DiamondStorage storage ds, address _facetAddress) internal {\\n        enforceHasContractCode(_facetAddress, \\\"LibDiamondCut: New facet has no code\\\");\\n        ds.facetFunctionSelectors[_facetAddress].facetAddressPosition = ds.facetAddresses.length;\\n        ds.facetAddresses.push(_facetAddress);\\n    }    \\n\\n\\n    function addFunction(DiamondStorage storage ds, bytes4 _selector, uint96 _selectorPosition, address _facetAddress) internal {\\n        ds.selectorToFacetAndPosition[_selector].functionSelectorPosition = _selectorPosition;\\n        ds.facetFunctionSelectors[_facetAddress].functionSelectors.push(_selector);\\n        ds.selectorToFacetAndPosition[_selector].facetAddress = _facetAddress;\\n    }\\n\\n    function removeFunction(DiamondStorage storage ds, address _facetAddress, bytes4 _selector) internal {        \\n        require(_facetAddress != address(0), \\\"LibDiamondCut: Can't remove function that doesn't exist\\\");\\n        // an immutable function is a function defined directly in a diamond\\n        require(_facetAddress != address(this), \\\"LibDiamondCut: Can't remove immutable function\\\");\\n        // replace selector with last selector, then delete last selector\\n        uint256 selectorPosition = ds.selectorToFacetAndPosition[_selector].functionSelectorPosition;\\n        uint256 lastSelectorPosition = ds.facetFunctionSelectors[_facetAddress].functionSelectors.length - 1;\\n        // if not the same then replace _selector with lastSelector\\n        if (selectorPosition != lastSelectorPosition) {\\n            bytes4 lastSelector = ds.facetFunctionSelectors[_facetAddress].functionSelectors[lastSelectorPosition];\\n            ds.facetFunctionSelectors[_facetAddress].functionSelectors[selectorPosition] = lastSelector;\\n            ds.selectorToFacetAndPosition[lastSelector].functionSelectorPosition = uint96(selectorPosition);\\n        }\\n        // delete the last selector\\n        ds.facetFunctionSelectors[_facetAddress].functionSelectors.pop();\\n        delete ds.selectorToFacetAndPosition[_selector];\\n\\n        // if no more selectors for facet address then delete the facet address\\n        if (lastSelectorPosition == 0) {\\n            // replace facet address with last facet address and delete last facet address\\n            uint256 lastFacetAddressPosition = ds.facetAddresses.length - 1;\\n            uint256 facetAddressPosition = ds.facetFunctionSelectors[_facetAddress].facetAddressPosition;\\n            if (facetAddressPosition != lastFacetAddressPosition) {\\n                address lastFacetAddress = ds.facetAddresses[lastFacetAddressPosition];\\n                ds.facetAddresses[facetAddressPosition] = lastFacetAddress;\\n                ds.facetFunctionSelectors[lastFacetAddress].facetAddressPosition = facetAddressPosition;\\n            }\\n            ds.facetAddresses.pop();\\n            delete ds.facetFunctionSelectors[_facetAddress].facetAddressPosition;\\n        }\\n    }\\n\\n    function initializeDiamondCut(address _init, bytes memory _calldata) internal {\\n        if (_init == address(0)) {\\n            require(_calldata.length == 0, \\\"LibDiamondCut: _init is address(0) but_calldata is not empty\\\");\\n        } else {\\n            require(_calldata.length > 0, \\\"LibDiamondCut: _calldata is empty but _init is not address(0)\\\");\\n            if (_init != address(this)) {\\n                enforceHasContractCode(_init, \\\"LibDiamondCut: _init address has no code\\\");\\n            }\\n            (bool success, bytes memory error) = _init.delegatecall(_calldata);\\n            if (!success) {\\n                if (error.length > 0) {\\n                    // bubble up the error\\n                    revert(string(error));\\n                } else {\\n                    revert(\\\"LibDiamondCut: _init function reverted\\\");\\n                }\\n            }\\n        }\\n    }\\n\\n    function enforceHasContractCode(address _contract, string memory _errorMessage) internal view {\\n        uint256 contractSize;\\n        assembly {\\n            contractSize := extcodesize(_contract)\\n        }\\n        require(contractSize > 0, _errorMessage);\\n    }\\n\\n    // Initialize timelock settings for upgrade proposals\\n    function initializeUpgradeTimelock(uint256 _timelock) internal {\\n        DiamondStorage storage ds = diamondStorage();\\n        require(ds.upgradeTimelock == 0, \\\"LibDiamond: Timelock already initialized\\\");\\n        ds.upgradeTimelock = _timelock > 0 ? _timelock : DEFAULT_UPGRADE_TIMELOCK;\\n    }\\n\\n    // Propose a diamond cut to be executed after the timelock\\n    function proposeDiamondCut(\\n        IDiamondCut.FacetCut[] memory _diamondCut,\\n        address _init,\\n        bytes memory _calldata\\n    ) internal {\\n        DiamondStorage storage ds = diamondStorage();\\n        require(!ds.upgradeProposal.exists, \\\"LibDiamond: Upgrade already proposed\\\");\\n        require(ds.upgradeTimelock > 0, \\\"LibDiamond: Timelock not initialized\\\");\\n        \\n        // Create a deep copy of the diamond cut to store in the proposal\\n        IDiamondCut.FacetCut[] memory diamondCutCopy = new IDiamondCut.FacetCut[](_diamondCut.length);\\n        for (uint256 i = 0; i < _diamondCut.length; i++) {\\n            diamondCutCopy[i] = _diamondCut[i];\\n            \\n            // Deep copy the function selectors array\\n            bytes4[] memory selectors = new bytes4[](_diamondCut[i].functionSelectors.length);\\n            for (uint256 j = 0; j < _diamondCut[i].functionSelectors.length; j++) {\\n                selectors[j] = _diamondCut[i].functionSelectors[j];\\n            }\\n            diamondCutCopy[i].functionSelectors = selectors;\\n        }\\n        \\n        // Store the proposal\\n        // Create empty array in storage first\\n        delete ds.upgradeProposal.diamondCut;\\n        \\n        // Manually copy each element and its nested arrays to storage\\n        for (uint256 i = 0; i < _diamondCut.length; i++) {\\n            // Create a new struct in storage by pushing an empty element first\\n            ds.upgradeProposal.diamondCut.push();\\n            \\n            // Now set the values for this element's fields\\n            ds.upgradeProposal.diamondCut[i].facetAddress = _diamondCut[i].facetAddress;\\n            ds.upgradeProposal.diamondCut[i].action = _diamondCut[i].action;\\n            \\n            // For the selectors array, we need to handle it separately\\n            // Clear any existing selectors to ensure clean state\\n            delete ds.upgradeProposal.diamondCut[i].functionSelectors;\\n            \\n            // Copy each selector individually\\n            for (uint256 j = 0; j < _diamondCut[i].functionSelectors.length; j++) {\\n                ds.upgradeProposal.diamondCut[i].functionSelectors.push(_diamondCut[i].functionSelectors[j]);\\n            }\\n        }\\n        ds.upgradeProposal.initAddress = _init;\\n        ds.upgradeProposal.initCalldata = _calldata;\\n        ds.upgradeProposal.proposalTime = block.timestamp;\\n        ds.upgradeProposal.exists = true;\\n        \\n        emit DiamondCutProposed(msg.sender, block.timestamp, block.timestamp + ds.upgradeTimelock);\\n    }\\n    \\n    // Execute a proposed diamond cut after the timelock period\\n    function executeDiamondCut() internal {\\n        DiamondStorage storage ds = diamondStorage();\\n        require(ds.upgradeProposal.exists, \\\"LibDiamond: No upgrade proposal exists\\\");\\n        require(\\n            block.timestamp >= ds.upgradeProposal.proposalTime + ds.upgradeTimelock,\\n            \\\"LibDiamond: Timelock period not elapsed\\\"\\n        );\\n        \\n        // Execute the diamond cut\\n        diamondCut(\\n            ds.upgradeProposal.diamondCut,\\n            ds.upgradeProposal.initAddress,\\n            ds.upgradeProposal.initCalldata\\n        );\\n        \\n        // Reset the proposal\\n        delete ds.upgradeProposal;\\n    }\\n    \\n    // Cancel a proposed diamond cut\\n    function cancelDiamondCut() internal {\\n        DiamondStorage storage ds = diamondStorage();\\n        require(ds.upgradeProposal.exists, \\\"LibDiamond: No upgrade proposal exists\\\");\\n        \\n        // Reset the proposal\\n        delete ds.upgradeProposal;\\n        \\n        emit DiamondCutCancelled(msg.sender);\\n    }\\n}\\n\",\"keccak256\":\"0x3d3bb1df2d228d2738f7ce7b9f634653edda3f638a335b92565e9b42e941b1bb\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"decrement()":{"notice":"Decrement the global counter by 1"},"getCounter()":{"notice":"Get the current global counter value"},"getCounterMetadata()":{"notice":"Get metadata about the last counter update"},"getUserCounter(address)":{"notice":"Get a user's personal counter value"},"increment()":{"notice":"Increment the global counter by 1"},"incrementUserCounter()":{"notice":"Increment a user's personal counter"},"resetCounter()":{"notice":"Reset the global counter to zero"},"setUserCounter(uint256)":{"notice":"Set a user's counter to a specific value"},"setUserCounterAsOwner(address,uint256)":{"notice":"Set any user's counter (owner only)"}},"version":1}}},"contracts/facets/DiamondCutFacet.sol":{"DiamondCutFacet":{"abi":[{"anonymous":false,"inputs":[{"components":[{"internalType":"address","name":"facetAddress","type":"address"},{"internalType":"enum IDiamondCut.FacetCutAction","name":"action","type":"uint8"},{"internalType":"bytes4[]","name":"functionSelectors","type":"bytes4[]"}],"indexed":false,"internalType":"struct IDiamondCut.FacetCut[]","name":"_diamondCut","type":"tuple[]"},{"indexed":false,"internalType":"address","name":"_init","type":"address"},{"indexed":false,"internalType":"bytes","name":"_calldata","type":"bytes"}],"name":"DiamondCut","type":"event"},{"anonymous":false,"inputs":[{"components":[{"internalType":"address","name":"facetAddress","type":"address"},{"internalType":"enum IDiamondCut.FacetCutAction","name":"action","type":"uint8"},{"internalType":"bytes4[]","name":"functionSelectors","type":"bytes4[]"}],"indexed":false,"internalType":"struct IDiamondCut.FacetCut[]","name":"_diamondCut","type":"tuple[]"},{"indexed":false,"internalType":"address","name":"_init","type":"address"},{"indexed":false,"internalType":"bytes","name":"_calldata","type":"bytes"}],"name":"DiamondCut","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"canceller","type":"address"}],"name":"DiamondCutCancelled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"canceller","type":"address"}],"name":"DiamondCutCancelled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"proposer","type":"address"},{"indexed":true,"internalType":"uint256","name":"proposalTime","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"executionTime","type":"uint256"}],"name":"DiamondCutProposed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"proposer","type":"address"},{"indexed":true,"internalType":"uint256","name":"proposalTime","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"executionTime","type":"uint256"}],"name":"DiamondCutProposed","type":"event"},{"inputs":[],"name":"cancelDiamondCut","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"facetAddress","type":"address"},{"internalType":"enum IDiamondCut.FacetCutAction","name":"action","type":"uint8"},{"internalType":"bytes4[]","name":"functionSelectors","type":"bytes4[]"}],"internalType":"struct IDiamondCut.FacetCut[]","name":"","type":"tuple[]"},{"internalType":"address","name":"","type":"address"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"diamondCut","outputs":[],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"executeDiamondCut","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"facetAddress","type":"address"},{"internalType":"enum IDiamondCut.FacetCutAction","name":"action","type":"uint8"},{"internalType":"bytes4[]","name":"functionSelectors","type":"bytes4[]"}],"internalType":"struct IDiamondCut.FacetCut[]","name":"_diamondCut","type":"tuple[]"},{"internalType":"address","name":"_init","type":"address"},{"internalType":"bytes","name":"_calldata","type":"bytes"}],"name":"proposeDiamondCut","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of the diamond cut functionality with a timelock mechanism.      The diamond cut operation allows adding, replacing, or removing facets and functions      from the diamond proxy contract. This implementation adds a security timelock      that requires a two-step process (propose and execute) for diamond cuts,      enhancing security by allowing time for review before execution.      Based on the EIP-2535 Diamond Standard.","kind":"dev","methods":{"cancelDiamondCut()":{"custom:security":"Only callable by the contract owner","details":"Allows the contract owner to cancel a pending diamond cut proposal      before it is executed. This is useful if errors are found in the      proposed changes during the timelock period or if the changes      are no longer desired. Once cancelled, the proposal is completely      removed and a new proposal would need to be submitted if needed."},"diamondCut((address,uint8,bytes4[])[],address,bytes)":{"custom:security":"Always reverts with an error message directing to the new functions","details":"THIS FUNCTION IS DEPRECATED and will always revert when called.      It has been replaced by the more secure two-step process using      proposeDiamondCut() followed by executeDiamondCut(), which adds a timelock      security feature. This function remains to maintain compatibility with      the IDiamondCut interface but cannot be used."},"executeDiamondCut()":{"custom:security":"Reverts if no diamond cut is proposed, if the timelock period                  hasn't expired, or if the initialization call fails","details":"Second and final step in the two-step diamond modification process.      This executes the changes that were previously proposed, but only if      the required timelock period has passed. The timelock period is a      security measure to allow stakeholders time to review proposed changes.      Only the contract owner can execute the diamond cut."},"proposeDiamondCut((address,uint8,bytes4[])[],address,bytes)":{"details":"First step in the two-step process for modifying the diamond. This queues up      changes that can only be executed after a predefined timelock period.      Only the contract owner can propose changes.","params":{"_calldata":"A function call, including function selector and arguments, for initialization","_diamondCut":"Contains the facet addresses and function selectors to add, replace, or remove","_init":"The address of the contract or facet to execute initialization code"}}},"title":"DiamondCutFacet","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2120 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1F931C1C EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x6FB05998 EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0xBBF2358E EQ PUSH2 0x6E JUMPI DUP1 PUSH4 0xF37A5DA0 EQ PUSH2 0x81 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x5F CALLDATASIZE PUSH1 0x4 PUSH2 0x1986 JUMP JUMPDEST PUSH2 0x89 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x64 PUSH2 0x10F JUMP JUMPDEST PUSH2 0x64 PUSH2 0x7C CALLDATASIZE PUSH1 0x4 PUSH2 0x1986 JUMP JUMPDEST PUSH2 0x121 JUMP JUMPDEST PUSH2 0x64 PUSH2 0x17A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x4A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E20646570726563617465643A205573652070726F706F7365 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x4469616D6F6E644375742829202B20657865637574654469616D6F6E64437574 PUSH1 0x64 DUP3 ADD MSTORE PUSH10 0xA0A481A5B9CDD195859 PUSH1 0xB2 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x117 PUSH2 0x18A JUMP JUMPDEST PUSH2 0x11F PUSH2 0x1FF JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x129 PUSH2 0x18A JUMP JUMPDEST PUSH2 0x173 PUSH2 0x136 DUP6 DUP8 PUSH2 0x1ACC JUMP JUMPDEST DUP5 DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x2C2 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x182 PUSH2 0x18A JUMP JUMPDEST PUSH2 0x11F PUSH2 0x84B JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x207F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x11F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C69624469616D6F6E643A204D75737420626520636F6E7472616374206F776E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x32B9 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x106 JUMP JUMPDEST PUSH32 0xC8FCAD8DB84D3CC18B4C41D551EA0EE66DD599CDE068D998E57D5E09332C1326 SLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x207F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0xFF AND PUSH2 0x250 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x106 SWAP1 PUSH2 0x1C10 JUMP JUMPDEST PUSH1 0x6 DUP2 ADD PUSH1 0x0 PUSH2 0x260 DUP3 DUP3 PUSH2 0x1857 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH2 0x280 PUSH1 0x2 DUP4 ADD PUSH1 0x0 PUSH2 0x187B JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x3 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD CALLER SWAP2 PUSH32 0xDE8F30FEFD36BA49BCF89E333C7BAFB2B3B3BAD08938DB1630376B2A66B15F6C SWAP2 LOG2 POP JUMP JUMPDEST PUSH32 0xC8FCAD8DB84D3CC18B4C41D551EA0EE66DD599CDE068D998E57D5E09332C1326 SLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x207F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x350 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4C69624469616D6F6E643A205570677261646520616C72656164792070726F70 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x1BDCD959 PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x106 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x5 ADD SLOAD GT PUSH2 0x3B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4C69624469616D6F6E643A2054696D656C6F636B206E6F7420696E697469616C PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x1A5E9959 PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x106 JUMP JUMPDEST PUSH1 0x0 DUP5 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3CC JUMPI PUSH2 0x3CC PUSH2 0x1A38 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x419 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP1 DUP3 ADD DUP4 MSTORE PUSH1 0x0 DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x3EA JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x598 JUMPI DUP6 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x43A JUMPI PUSH2 0x43A PUSH2 0x1C56 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x454 JUMPI PUSH2 0x454 PUSH2 0x1C56 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH1 0x0 DUP7 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x473 JUMPI PUSH2 0x473 PUSH2 0x1C56 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x498 JUMPI PUSH2 0x498 PUSH2 0x1A38 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x4C1 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP8 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x4D9 JUMPI PUSH2 0x4D9 PUSH2 0x1C56 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x561 JUMPI DUP8 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x4FF JUMPI PUSH2 0x4FF PUSH2 0x1C56 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x51C JUMPI PUSH2 0x51C PUSH2 0x1C56 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x536 JUMPI PUSH2 0x536 PUSH2 0x1C56 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 PUSH2 0x559 DUP2 PUSH2 0x1C82 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x4C7 JUMP JUMPDEST POP DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x575 JUMPI PUSH2 0x575 PUSH2 0x1C56 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD DUP2 SWAP1 MSTORE POP POP DUP1 DUP1 PUSH2 0x590 SWAP1 PUSH2 0x1C82 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x41F JUMP JUMPDEST POP PUSH2 0x5A7 PUSH1 0x6 DUP4 ADD PUSH1 0x0 PUSH2 0x1857 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x7BC JUMPI PUSH1 0x6 DUP4 ADD DUP1 SLOAD PUSH1 0x1 ADD DUP2 SSTORE PUSH1 0x0 MSTORE DUP6 MLOAD DUP7 SWAP1 DUP3 SWAP1 DUP2 LT PUSH2 0x5D5 JUMPI PUSH2 0x5D5 PUSH2 0x1C56 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP4 PUSH1 0x6 ADD PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x5F9 JUMPI PUSH2 0x5F9 PUSH2 0x1C56 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP6 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x640 JUMPI PUSH2 0x640 PUSH2 0x1C56 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP4 PUSH1 0x6 ADD PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x664 JUMPI PUSH2 0x664 PUSH2 0x1C56 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x696 JUMPI PUSH2 0x696 PUSH2 0x1C9B JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x6 DUP4 ADD DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x6B1 JUMPI PUSH2 0x6B1 PUSH2 0x1C56 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x6CE SWAP2 SWAP1 PUSH2 0x18B5 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP7 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x6E3 JUMPI PUSH2 0x6E3 PUSH2 0x1C56 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x7A9 JUMPI PUSH1 0x6 DUP5 ADD DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0x70D JUMPI PUSH2 0x70D PUSH2 0x1C56 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD DUP8 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x730 JUMPI PUSH2 0x730 PUSH2 0x1C56 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x74D JUMPI PUSH2 0x74D PUSH2 0x1C56 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 SLOAD PUSH1 0x1 DUP2 ADD DUP5 SSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE SWAP2 SWAP1 SWAP3 KECCAK256 PUSH1 0x8 DUP3 DIV ADD DUP1 SLOAD PUSH4 0xFFFFFFFF PUSH1 0x7 SWAP1 SWAP4 AND PUSH1 0x4 MUL PUSH2 0x100 EXP SWAP3 DUP4 MUL NOT AND PUSH1 0xE0 SWAP4 SWAP1 SWAP4 SHR SWAP2 SWAP1 SWAP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH2 0x7A1 DUP2 PUSH2 0x1C82 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x6D1 JUMP JUMPDEST POP DUP1 PUSH2 0x7B4 DUP2 PUSH2 0x1C82 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x5AA JUMP JUMPDEST POP PUSH1 0x7 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND OR SWAP1 SSTORE PUSH1 0x8 DUP3 ADD PUSH2 0x7E8 DUP5 DUP3 PUSH2 0x1D39 JUMP JUMPDEST POP TIMESTAMP PUSH1 0x9 DUP4 ADD DUP2 SWAP1 SSTORE PUSH1 0xA DUP4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x5 DUP4 ADD SLOAD CALLER SWAP1 PUSH32 0x11C0A67EABFBE53177AAAC87BBBB2F9C5730614D4C5C6A6EC177E86DDFE5C7E0 SWAP1 PUSH2 0x833 SWAP1 DUP5 PUSH2 0x1DF9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH32 0xC8FCAD8DB84D3CC18B4C41D551EA0EE66DD599CDE068D998E57D5E09332C1326 SLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x207F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0xFF AND PUSH2 0x89C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x106 SWAP1 PUSH2 0x1C10 JUMP JUMPDEST PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0x9 DUP3 ADD SLOAD PUSH2 0x8B0 SWAP2 SWAP1 PUSH2 0x1DF9 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x90F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C69624469616D6F6E643A2054696D656C6F636B20706572696F64206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x195B185C1CD959 PUSH1 0xCA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x106 JUMP JUMPDEST PUSH2 0xADF DUP2 PUSH1 0x6 ADD PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xA38 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP6 DUP2 MUL SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP4 MSTORE SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 DUP5 ADD SWAP2 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0x98F JUMPI PUSH2 0x98F PUSH2 0x1C9B JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x9A0 JUMPI PUSH2 0x9A0 PUSH2 0x1C9B JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xA20 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x4 ADD SWAP1 PUSH1 0x20 DUP3 PUSH1 0x3 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB DUP3 MUL SWAP2 POP DUP1 DUP5 GT PUSH2 0x9E2 JUMPI SWAP1 POP JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x939 JUMP JUMPDEST POP POP POP POP PUSH1 0x7 DUP4 ADD SLOAD PUSH1 0x8 DUP5 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH2 0xA5C SWAP1 PUSH2 0x1CB1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA88 SWAP1 PUSH2 0x1CB1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAD5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAAA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAD5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAB8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x6 DUP2 ADD PUSH1 0x0 PUSH2 0xAEF DUP3 DUP3 PUSH2 0x1857 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH2 0xB0F PUSH1 0x2 DUP4 ADD PUSH1 0x0 PUSH2 0x187B JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xCEB JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xB45 JUMPI PUSH2 0xB45 PUSH2 0x1C56 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xB66 JUMPI PUSH2 0xB66 PUSH2 0x1C9B JUMP JUMPDEST DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xB78 JUMPI PUSH2 0xB78 PUSH2 0x1C9B JUMP JUMPDEST SUB PUSH2 0xBC6 JUMPI PUSH2 0xBC1 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xB92 JUMPI PUSH2 0xB92 PUSH2 0x1C56 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xBB0 JUMPI PUSH2 0xBB0 PUSH2 0x1C56 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH2 0xD36 JUMP JUMPDEST PUSH2 0xCD8 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xBDA JUMPI PUSH2 0xBDA PUSH2 0x1C9B JUMP JUMPDEST SUB PUSH2 0xC23 JUMPI PUSH2 0xBC1 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xBF4 JUMPI PUSH2 0xBF4 PUSH2 0x1C56 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xC12 JUMPI PUSH2 0xC12 PUSH2 0x1C56 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH2 0xEAE JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xC37 JUMPI PUSH2 0xC37 PUSH2 0x1C9B JUMP JUMPDEST SUB PUSH2 0xC80 JUMPI PUSH2 0xBC1 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xC51 JUMPI PUSH2 0xC51 PUSH2 0x1C56 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xC6F JUMPI PUSH2 0xC6F PUSH2 0x1C56 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH2 0x103E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C69624469616D6F6E644375743A20496E636F72726563742046616365744375 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x3A20B1BA34B7B7 PUSH1 0xC9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x106 JUMP JUMPDEST POP DUP1 PUSH2 0xCE3 DUP2 PUSH2 0x1C82 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB28 JUMP JUMPDEST POP PUSH32 0x8FAA70878671CCD212D20771B795C50AF8FD3FF6CF27F4BDE57E5D4DE0AEB673 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xD1F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xD31 DUP3 DUP3 PUSH2 0x115C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT PUSH2 0xD57 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x106 SWAP1 PUSH2 0x1F62 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x207F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xD8C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x106 SWAP1 PUSH2 0x1FAD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP3 AND SWAP1 SUB PUSH2 0xDC2 JUMPI PUSH2 0xDC2 DUP3 DUP6 PUSH2 0x1369 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x173 JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xDE2 JUMPI PUSH2 0xDE2 PUSH2 0x1C56 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 DUP7 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0xE80 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C69624469616D6F6E644375743A2043616E2774206164642066756E6374696F PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x6E207468617420616C726561647920657869737473 PUSH1 0x58 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x106 JUMP JUMPDEST PUSH2 0xE8C DUP6 DUP4 DUP7 DUP11 PUSH2 0x13D3 JUMP JUMPDEST DUP4 PUSH2 0xE96 DUP2 PUSH2 0x1FF9 JUMP JUMPDEST SWAP5 POP POP POP POP DUP1 DUP1 PUSH2 0xEA6 SWAP1 PUSH2 0x1C82 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xDC5 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT PUSH2 0xECF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x106 SWAP1 PUSH2 0x1F62 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x207F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xF04 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x106 SWAP1 PUSH2 0x1FAD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP3 AND SWAP1 SUB PUSH2 0xF3A JUMPI PUSH2 0xF3A DUP3 DUP6 PUSH2 0x1369 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x173 JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xF5A JUMPI PUSH2 0xF5A PUSH2 0x1C56 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 DUP7 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP8 AND DUP2 SUB PUSH2 0x1005 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C69624469616D6F6E644375743A2043616E2774207265706C6163652066756E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6374696F6E20776974682073616D652066756E6374696F6E0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x106 JUMP JUMPDEST PUSH2 0x1010 DUP6 DUP3 DUP5 PUSH2 0x1473 JUMP JUMPDEST PUSH2 0x101C DUP6 DUP4 DUP7 DUP11 PUSH2 0x13D3 JUMP JUMPDEST DUP4 PUSH2 0x1026 DUP2 PUSH2 0x1FF9 JUMP JUMPDEST SWAP5 POP POP POP POP DUP1 DUP1 PUSH2 0x1036 SWAP1 PUSH2 0x1C82 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xF3D JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x105F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x106 SWAP1 PUSH2 0x1F62 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x207F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x10E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C69624469616D6F6E644375743A2052656D6F76652066616365742061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH22 0x657373206D7573742062652061646472657373283029 PUSH1 0x50 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x106 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x1156 JUMPI PUSH1 0x0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1104 JUMPI PUSH2 0x1104 PUSH2 0x1C56 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 DUP6 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1141 DUP5 DUP3 DUP5 PUSH2 0x1473 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x114E SWAP1 PUSH2 0x1C82 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x10E7 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x11E3 JUMPI DUP1 MLOAD ISZERO PUSH2 0x11DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C69624469616D6F6E644375743A205F696E6974206973206164647265737328 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x3029206275745F63616C6C64617461206973206E6F7420656D70747900000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x106 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x125A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C69624469616D6F6E644375743A205F63616C6C6461746120697320656D7074 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7920627574205F696E6974206973206E6F742061646472657373283029000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x106 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ADDRESS EQ PUSH2 0x128C JUMPI PUSH2 0x128C DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x209F PUSH1 0x28 SWAP2 CODECOPY PUSH2 0x1836 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH2 0x12A7 SWAP2 SWAP1 PUSH2 0x201F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x12E2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x12E7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x1156 JUMPI DUP1 MLOAD ISZERO PUSH2 0x1312 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x106 SWAP2 SWAP1 PUSH2 0x203B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C69624469616D6F6E644375743A205F696E69742066756E6374696F6E207265 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1D995C9D1959 PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x106 JUMP JUMPDEST PUSH2 0x138B DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x20C7 PUSH1 0x24 SWAP2 CODECOPY PUSH2 0x1836 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 SWAP5 DUP6 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP7 ADD DUP6 SWAP1 SSTORE SWAP5 DUP5 ADD DUP4 SSTORE SWAP2 DUP3 MSTORE SWAP3 SWAP1 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP7 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP8 AND PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP8 DUP9 AND OR DUP2 SSTORE SWAP5 SWAP1 SWAP6 AND DUP1 DUP4 MSTORE PUSH1 0x1 DUP1 DUP10 ADD DUP4 MSTORE SWAP6 DUP4 KECCAK256 DUP1 SLOAD SWAP7 DUP8 ADD DUP2 SSTORE DUP4 MSTORE DUP2 DUP4 KECCAK256 PUSH1 0x8 DUP8 DIV ADD DUP1 SLOAD PUSH1 0xE0 SWAP9 SWAP1 SWAP9 SHR PUSH1 0x4 PUSH1 0x7 SWAP1 SWAP9 AND SWAP8 SWAP1 SWAP8 MUL PUSH2 0x100 EXP SWAP7 DUP8 MUL PUSH4 0xFFFFFFFF SWAP1 SWAP8 MUL NOT SWAP1 SWAP8 AND SWAP6 SWAP1 SWAP6 OR SWAP1 SWAP6 SSTORE MSTORE SWAP3 SWAP1 SWAP2 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x14EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x37 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C69624469616D6F6E644375743A2043616E27742072656D6F76652066756E63 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x74696F6E207468617420646F65736E2774206578697374000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x106 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0x155E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C69624469616D6F6E644375743A2043616E27742072656D6F766520696D6D75 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x3A30B1363290333AB731BA34B7B7 PUSH1 0x91 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x106 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP5 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE PUSH1 0x1 DUP1 DUP9 ADD SWAP1 SWAP4 MSTORE SWAP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP3 SWAP2 PUSH2 0x15AD SWAP2 PUSH2 0x2055 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 EQ PUSH2 0x169F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP7 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0x15E2 JUMPI PUSH2 0x15E2 PUSH2 0x1C56 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x8 DUP4 DIV ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP5 MSTORE PUSH1 0x1 DUP11 ADD SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 DUP1 SLOAD PUSH1 0x7 SWAP1 SWAP3 AND PUSH1 0x4 MUL PUSH2 0x100 EXP SWAP1 SWAP3 DIV PUSH1 0xE0 SHL SWAP3 POP DUP3 SWAP2 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0x1633 JUMPI PUSH2 0x1633 PUSH2 0x1C56 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x8 DUP4 DIV ADD DUP1 SLOAD PUSH4 0xFFFFFFFF PUSH1 0x7 SWAP1 SWAP5 AND PUSH1 0x4 MUL PUSH2 0x100 EXP SWAP4 DUP5 MUL NOT AND PUSH1 0xE0 SWAP6 SWAP1 SWAP6 SHR SWAP3 SWAP1 SWAP3 MUL SWAP4 SWAP1 SWAP4 OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE DUP7 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP6 AND MUL OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP7 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP1 PUSH2 0x16C8 JUMPI PUSH2 0x16C8 PUSH2 0x2068 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 PUSH1 0x8 PUSH1 0x0 NOT SWAP1 SWAP5 ADD SWAP4 DUP5 DIV ADD DUP1 SLOAD PUSH4 0xFFFFFFFF PUSH1 0x4 PUSH1 0x7 DUP8 AND MUL PUSH2 0x100 EXP MUL NOT AND SWAP1 SSTORE SWAP2 SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP6 AND DUP3 MSTORE DUP7 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 SWAP1 SSTORE DUP2 SWAP1 SUB PUSH2 0x173 JUMPI PUSH1 0x2 DUP6 ADD SLOAD PUSH1 0x0 SWAP1 PUSH2 0x172B SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2055 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP1 DUP10 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 SWAP2 POP DUP1 DUP3 EQ PUSH2 0x17DA JUMPI PUSH1 0x0 DUP8 PUSH1 0x2 ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x176A JUMPI PUSH2 0x176A PUSH2 0x1C56 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x2 DUP10 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 POP DUP3 SWAP2 DUP5 SWAP1 DUP2 LT PUSH2 0x179B JUMPI PUSH2 0x179B PUSH2 0x1C56 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND OR SWAP1 SSTORE SWAP3 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x1 DUP10 DUP2 ADD SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 KECCAK256 ADD DUP2 SWAP1 SSTORE JUMPDEST DUP7 PUSH1 0x2 ADD DUP1 SLOAD DUP1 PUSH2 0x17ED JUMPI PUSH2 0x17ED PUSH2 0x2068 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 DUP4 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE SWAP1 SWAP3 ADD SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP3 MSTORE PUSH1 0x1 DUP10 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST DUP2 EXTCODESIZE DUP2 DUP2 PUSH2 0x1156 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x106 SWAP2 SWAP1 PUSH2 0x203B JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE PUSH1 0x2 MUL SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1878 SWAP2 SWAP1 PUSH2 0x18DA JUMP JUMPDEST POP JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x1887 SWAP1 PUSH2 0x1CB1 JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x1897 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1878 SWAP2 SWAP1 PUSH2 0x190C JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE PUSH1 0x7 ADD PUSH1 0x8 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1878 SWAP2 SWAP1 PUSH2 0x190C JUMP JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1908 JUMPI DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND DUP2 SSTORE PUSH1 0x0 PUSH2 0x18FF PUSH1 0x1 DUP4 ADD DUP3 PUSH2 0x18B5 JUMP JUMPDEST POP PUSH1 0x2 ADD PUSH2 0x18DA JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1908 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x190D JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1938 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x194F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1967 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x197F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x199E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x19B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x19CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x19D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x19EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP8 POP DUP1 SWAP7 POP POP PUSH2 0x1A04 PUSH1 0x20 DUP10 ADD PUSH2 0x1921 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1A1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A27 DUP9 DUP3 DUP10 ADD PUSH2 0x193D JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1A71 JUMPI PUSH2 0x1A71 PUSH2 0x1A38 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1AA0 JUMPI PUSH2 0x1AA0 PUSH2 0x1A38 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1AC2 JUMPI PUSH2 0x1AC2 PUSH2 0x1A38 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ADF PUSH2 0x1ADA DUP5 PUSH2 0x1AA8 JUMP JUMPDEST PUSH2 0x1A77 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP2 SWAP1 PUSH1 0x5 DUP7 DUP2 SHL DUP7 ADD CALLDATASIZE DUP2 GT ISZERO PUSH2 0x1AFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1C03 JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1B20 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP2 DUP11 ADD SWAP2 POP PUSH1 0x60 DUP3 CALLDATASIZE SUB SLT ISZERO PUSH2 0x1B36 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1B3E PUSH2 0x1A4E JUMP JUMPDEST PUSH2 0x1B47 DUP4 PUSH2 0x1921 JUMP JUMPDEST DUP2 MSTORE DUP7 DUP4 ADD CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0x1B5B JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP2 DUP9 ADD MSTORE PUSH1 0x40 DUP4 DUP2 ADD CALLDATALOAD DUP4 DUP2 GT ISZERO PUSH2 0x1B73 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST SWAP4 SWAP1 SWAP4 ADD SWAP3 CALLDATASIZE PUSH1 0x1F DUP6 ADD SLT PUSH2 0x1B8A JUMPI PUSH1 0x0 SWAP3 POP DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH2 0x1B9A PUSH2 0x1ADA DUP5 PUSH2 0x1AA8 JUMP JUMPDEST DUP4 DUP2 MSTORE SWAP3 DUP8 SHL DUP5 ADD DUP9 ADD SWAP3 DUP9 DUP2 ADD SWAP1 CALLDATASIZE DUP6 GT ISZERO PUSH2 0x1BB7 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST SWAP5 DUP10 ADD SWAP5 JUMPDEST DUP5 DUP7 LT ISZERO PUSH2 0x1BEC JUMPI DUP6 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1BDD JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP3 MSTORE SWAP5 DUP10 ADD SWAP5 SWAP1 DUP10 ADD SWAP1 PUSH2 0x1BBC JUMP JUMPDEST SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP9 MSTORE POP POP SWAP5 DUP4 ADD SWAP5 DUP4 ADD PUSH2 0x1AFF JUMP JUMPDEST POP SWAP3 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4C69624469616D6F6E643A204E6F20757067726164652070726F706F73616C20 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x657869737473 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1C94 JUMPI PUSH2 0x1C94 PUSH2 0x1C6C JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1CC5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1CE5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xD31 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x1D12 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1D31 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1D1E JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D53 JUMPI PUSH2 0x1D53 PUSH2 0x1A38 JUMP JUMPDEST PUSH2 0x1D67 DUP2 PUSH2 0x1D61 DUP5 SLOAD PUSH2 0x1CB1 JUMP JUMPDEST DUP5 PUSH2 0x1CEB JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1D9C JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1D84 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x1D31 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1DCB JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x1DAC JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x1DE9 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1E0C JUMPI PUSH2 0x1E0C PUSH2 0x1C6C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1E2D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1E15 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1E4E DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1E12 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP8 MLOAD DUP1 DUP4 MSTORE PUSH1 0x80 SWAP3 POP DUP3 DUP7 ADD SWAP2 POP DUP3 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD PUSH1 0x20 DUP1 DUP12 ADD PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1F32 JUMPI DUP10 DUP5 SUB PUSH1 0x7F NOT ADD DUP7 MSTORE DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP4 DUP2 ADD MLOAD DUP10 DUP7 ADD SWAP1 PUSH1 0x3 DUP2 LT PUSH2 0x1ED1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP7 DUP7 ADD MSTORE PUSH1 0x40 SWAP2 DUP3 ADD MLOAD SWAP2 DUP7 ADD DUP11 SWAP1 MSTORE DUP2 MLOAD SWAP1 DUP2 SWAP1 MSTORE SWAP1 DUP5 ADD SWAP1 PUSH1 0x0 SWAP1 DUP10 DUP8 ADD SWAP1 JUMPDEST DUP1 DUP4 LT ISZERO PUSH2 0x1F1D JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP3 MSTORE SWAP3 DUP7 ADD SWAP3 PUSH1 0x1 SWAP3 SWAP1 SWAP3 ADD SWAP2 SWAP1 DUP7 ADD SWAP1 PUSH2 0x1EF3 JUMP JUMPDEST POP SWAP8 DUP6 ADD SWAP8 SWAP6 POP POP POP SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1E8B JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND SWAP1 DUP9 ADD MSTORE DUP7 DUP2 SUB PUSH1 0x40 DUP9 ADD MSTORE PUSH2 0x1F54 DUP2 DUP10 PUSH2 0x1E36 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x4C69624469616D6F6E644375743A204E6F2073656C6563746F727320696E2066 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x1858D95D081D1BC818DD5D PUSH1 0xAA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x4C69624469616D6F6E644375743A204164642066616365742063616E27742062 PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x652061646472657373283029 PUSH1 0xA0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP1 DUP4 AND DUP2 DUP2 SUB PUSH2 0x2015 JUMPI PUSH2 0x2015 PUSH2 0x1C6C JUMP JUMPDEST PUSH1 0x1 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x2031 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1E12 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x204E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1E36 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1E0C JUMPI PUSH2 0x1E0C PUSH2 0x1C6C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID 0xC8 0xFC 0xAD DUP14 0xB8 0x4D EXTCODECOPY 0xC1 DUP12 0x4C COINBASE 0xD5 MLOAD 0xEA 0xE 0xE6 PUSH14 0xD599CDE068D998E57D5E09332C13 SHR 0x4C PUSH10 0x624469616D6F6E644375 PUSH21 0x3A205F696E6974206164647265737320686173206E PUSH16 0x20636F64654C69624469616D6F6E6443 PUSH22 0x743A204E657720666163657420686173206E6F20636F PUSH5 0x65A2646970 PUSH7 0x735822122092D8 PUSH6 0xD88FEC14BB22 0x5C 0x1F BALANCE REVERT AND PUSH28 0x832C06056F0F4779A70E2A9569F0778F5D64736F6C63430008140033 ","sourceMap":"1103:3190:12:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@addFacet_3220":{"entryPoint":4969,"id":3220,"parameterSlots":2,"returnSlots":0},"@addFunction_3261":{"entryPoint":5075,"id":3261,"parameterSlots":4,"returnSlots":0},"@addFunctions_3018":{"entryPoint":3382,"id":3018,"parameterSlots":2,"returnSlots":0},"@cancelDiamondCut_2061":{"entryPoint":271,"id":2061,"parameterSlots":0,"returnSlots":0},"@cancelDiamondCut_3886":{"entryPoint":511,"id":3886,"parameterSlots":0,"returnSlots":0},"@diamondCut_2079":{"entryPoint":137,"id":2079,"parameterSlots":5,"returnSlots":0},"@diamondCut_2917":{"entryPoint":2853,"id":2917,"parameterSlots":3,"returnSlots":0},"@diamondStorage_2756":{"entryPoint":null,"id":2756,"parameterSlots":0,"returnSlots":1},"@enforceHasContractCode_3524":{"entryPoint":6198,"id":3524,"parameterSlots":2,"returnSlots":0},"@enforceIsContractOwner_2810":{"entryPoint":394,"id":2810,"parameterSlots":0,"returnSlots":0},"@executeDiamondCut_2046":{"entryPoint":378,"id":2046,"parameterSlots":0,"returnSlots":0},"@executeDiamondCut_3860":{"entryPoint":2123,"id":3860,"parameterSlots":0,"returnSlots":0},"@initializeDiamondCut_3505":{"entryPoint":4444,"id":3505,"parameterSlots":2,"returnSlots":0},"@proposeDiamondCut_2031":{"entryPoint":289,"id":2031,"parameterSlots":5,"returnSlots":0},"@proposeDiamondCut_3814":{"entryPoint":706,"id":3814,"parameterSlots":3,"returnSlots":0},"@removeFunction_3428":{"entryPoint":5235,"id":3428,"parameterSlots":3,"returnSlots":0},"@removeFunctions_3187":{"entryPoint":4158,"id":3187,"parameterSlots":2,"returnSlots":0},"@replaceFunctions_3122":{"entryPoint":3758,"id":3122,"parameterSlots":2,"returnSlots":0},"abi_decode_address":{"entryPoint":6433,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_bytes_calldata":{"entryPoint":6461,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_array$_t_struct$_FacetCut_$2373_calldata_ptr_$dyn_calldata_ptrt_addresst_bytes_calldata_ptr":{"entryPoint":6534,"id":null,"parameterSlots":2,"returnSlots":5},"abi_encode_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_bytes":{"entryPoint":7734,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":8223,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_struct$_FacetCut_$2373_memory_ptr_$dyn_memory_ptr_t_address_t_bytes_memory_ptr__to_t_array$_t_struct$_FacetCut_$2373_memory_ptr_$dyn_memory_ptr_t_address_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":7778,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8251,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_046c761a688d1dc3c500562bc5aaa3544f01f394f9bb3b69aa2a950a45afb1f8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_056fd20c5b5e35526abef0fa8bd3b11181703fb66c442d2bb546f62d84466063__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_080b2fe78815767d522290509c8fce2af708c8a54455ca1b0cc978c92822465d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0d4ae41009c51fd276653a54d7793c24f266ddc8c56ce21f8be5e2c6595ab3ac__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1ffc682bcfedefd5e93ba9ed0c2d1bc0b18319886e3b4bd28a03a3d3729f85c0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8034,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2c590e498c4d56c984a7092fd5e89a68b9f4541ce9f97252fb74e44a00ffbb71__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_43ca8ee6cd16ca31ce88954982145b31f996f016179581e9a51c2213a748d95d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7184,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_48267d8daf5ea9c6bbad1fe9c53dc4c04a2a01b2b85bad432956cf42f45b2f54__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_64609d8b93c93a06b98d7db7a87b04044cd4a52c5661d603bb9b90ad8b914a3a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8109,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_82bc3b95773eabe3ca214efb97c15a90d66aca7ebfe83785362b581f73779158__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_868d165ec2461661b624442252aed6a645399bfae7b60083a77ea1b61b084042__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8ba063dfaa4be2d2cbe73dbb1364728b0f7031ac048441d5fad19e9541992b21__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_99a7418ee014d613f46da44561258cdbb58064508097483a319062b99fa37700__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b5a7112edf707196456f338fdcc19cd849be6cb8c0d166bcd035f4cfb00e7078__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b6b860163f09eaf9581a3c3dca757c905d2636dfee636c736999bea07d6a9262__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b739aae768f79b96e91d9f66398733516895e39eb09ee54a795b49dcc77504d4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d09b47edbfca4a2ee3b2c8249a392b83c890c9a68484e771caaef2e624a6a02e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":6775,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_3721":{"entryPoint":6734,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_array_struct_FacetCut_dyn":{"entryPoint":6824,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_bytes_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":7673,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":8277,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_bytes_storage":{"entryPoint":7403,"id":null,"parameterSlots":3,"returnSlots":0},"convert_array_t_array$_t_struct$_FacetCut_$2373_calldata_ptr_$dyn_calldata_ptr_to_t_array$_t_struct$_FacetCut_$2373_memory_ptr_$dyn_memory_ptr":{"entryPoint":6860,"id":null,"parameterSlots":2,"returnSlots":1},"copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage":{"entryPoint":7481,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":7698,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":7345,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"increment_t_uint256":{"entryPoint":7298,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint96":{"entryPoint":8185,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":7276,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":7323,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":8296,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":7254,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":6712,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:19439:28","statements":[{"nodeType":"YulBlock","src":"6:3:28","statements":[]},{"body":{"nodeType":"YulBlock","src":"63:124:28","statements":[{"nodeType":"YulAssignment","src":"73:29:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"82:12:28"},"nodeType":"YulFunctionCall","src":"82:20:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"73:5:28"}]},{"body":{"nodeType":"YulBlock","src":"165:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"174:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"177:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"167:6:28"},"nodeType":"YulFunctionCall","src":"167:12:28"},"nodeType":"YulExpressionStatement","src":"167:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"124:5:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"135:5:28"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:3:28","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"155:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"146:3:28"},"nodeType":"YulFunctionCall","src":"146:11:28"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"142:3:28"},"nodeType":"YulFunctionCall","src":"142:19:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"131:3:28"},"nodeType":"YulFunctionCall","src":"131:31:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"121:2:28"},"nodeType":"YulFunctionCall","src":"121:42:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"114:6:28"},"nodeType":"YulFunctionCall","src":"114:50:28"},"nodeType":"YulIf","src":"111:70:28"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"42:6:28","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:28","type":""}],"src":"14:173:28"},{"body":{"nodeType":"YulBlock","src":"264:275:28","statements":[{"body":{"nodeType":"YulBlock","src":"313:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"322:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"325:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"315:6:28"},"nodeType":"YulFunctionCall","src":"315:12:28"},"nodeType":"YulExpressionStatement","src":"315:12:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"292:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"300:4:28","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"288:3:28"},"nodeType":"YulFunctionCall","src":"288:17:28"},{"name":"end","nodeType":"YulIdentifier","src":"307:3:28"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"284:3:28"},"nodeType":"YulFunctionCall","src":"284:27:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"277:6:28"},"nodeType":"YulFunctionCall","src":"277:35:28"},"nodeType":"YulIf","src":"274:55:28"},{"nodeType":"YulAssignment","src":"338:30:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"361:6:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"348:12:28"},"nodeType":"YulFunctionCall","src":"348:20:28"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"338:6:28"}]},{"body":{"nodeType":"YulBlock","src":"411:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"420:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"423:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"413:6:28"},"nodeType":"YulFunctionCall","src":"413:12:28"},"nodeType":"YulExpressionStatement","src":"413:12:28"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"383:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"391:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"380:2:28"},"nodeType":"YulFunctionCall","src":"380:30:28"},"nodeType":"YulIf","src":"377:50:28"},{"nodeType":"YulAssignment","src":"436:29:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"452:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"460:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"448:3:28"},"nodeType":"YulFunctionCall","src":"448:17:28"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"436:8:28"}]},{"body":{"nodeType":"YulBlock","src":"517:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"526:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"529:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"519:6:28"},"nodeType":"YulFunctionCall","src":"519:12:28"},"nodeType":"YulExpressionStatement","src":"519:12:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"488:6:28"},{"name":"length","nodeType":"YulIdentifier","src":"496:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"484:3:28"},"nodeType":"YulFunctionCall","src":"484:19:28"},{"kind":"number","nodeType":"YulLiteral","src":"505:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"480:3:28"},"nodeType":"YulFunctionCall","src":"480:30:28"},{"name":"end","nodeType":"YulIdentifier","src":"512:3:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"477:2:28"},"nodeType":"YulFunctionCall","src":"477:39:28"},"nodeType":"YulIf","src":"474:59:28"}]},"name":"abi_decode_bytes_calldata","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"227:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"235:3:28","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"243:8:28","type":""},{"name":"length","nodeType":"YulTypedName","src":"253:6:28","type":""}],"src":"192:347:28"},{"body":{"nodeType":"YulBlock","src":"730:824:28","statements":[{"body":{"nodeType":"YulBlock","src":"776:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"785:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"788:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"778:6:28"},"nodeType":"YulFunctionCall","src":"778:12:28"},"nodeType":"YulExpressionStatement","src":"778:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"751:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"760:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"747:3:28"},"nodeType":"YulFunctionCall","src":"747:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"772:2:28","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"743:3:28"},"nodeType":"YulFunctionCall","src":"743:32:28"},"nodeType":"YulIf","src":"740:52:28"},{"nodeType":"YulVariableDeclaration","src":"801:37:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"828:9:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"815:12:28"},"nodeType":"YulFunctionCall","src":"815:23:28"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"805:6:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"847:28:28","value":{"kind":"number","nodeType":"YulLiteral","src":"857:18:28","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"851:2:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"902:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"911:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"914:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"904:6:28"},"nodeType":"YulFunctionCall","src":"904:12:28"},"nodeType":"YulExpressionStatement","src":"904:12:28"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"890:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"898:2:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"887:2:28"},"nodeType":"YulFunctionCall","src":"887:14:28"},"nodeType":"YulIf","src":"884:34:28"},{"nodeType":"YulVariableDeclaration","src":"927:32:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"941:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"952:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"937:3:28"},"nodeType":"YulFunctionCall","src":"937:22:28"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"931:2:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"1007:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1016:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1019:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1009:6:28"},"nodeType":"YulFunctionCall","src":"1009:12:28"},"nodeType":"YulExpressionStatement","src":"1009:12:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"986:2:28"},{"kind":"number","nodeType":"YulLiteral","src":"990:4:28","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"982:3:28"},"nodeType":"YulFunctionCall","src":"982:13:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"997:7:28"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"978:3:28"},"nodeType":"YulFunctionCall","src":"978:27:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"971:6:28"},"nodeType":"YulFunctionCall","src":"971:35:28"},"nodeType":"YulIf","src":"968:55:28"},{"nodeType":"YulVariableDeclaration","src":"1032:30:28","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1059:2:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1046:12:28"},"nodeType":"YulFunctionCall","src":"1046:16:28"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1036:6:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"1089:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1098:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1101:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1091:6:28"},"nodeType":"YulFunctionCall","src":"1091:12:28"},"nodeType":"YulExpressionStatement","src":"1091:12:28"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1077:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"1085:2:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1074:2:28"},"nodeType":"YulFunctionCall","src":"1074:14:28"},"nodeType":"YulIf","src":"1071:34:28"},{"body":{"nodeType":"YulBlock","src":"1165:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1174:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1177:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1167:6:28"},"nodeType":"YulFunctionCall","src":"1167:12:28"},"nodeType":"YulExpressionStatement","src":"1167:12:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1128:2:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1136:1:28","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"1139:6:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1132:3:28"},"nodeType":"YulFunctionCall","src":"1132:14:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1124:3:28"},"nodeType":"YulFunctionCall","src":"1124:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"1149:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1120:3:28"},"nodeType":"YulFunctionCall","src":"1120:34:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1156:7:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1117:2:28"},"nodeType":"YulFunctionCall","src":"1117:47:28"},"nodeType":"YulIf","src":"1114:67:28"},{"nodeType":"YulAssignment","src":"1190:23:28","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1204:2:28"},{"kind":"number","nodeType":"YulLiteral","src":"1208:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1200:3:28"},"nodeType":"YulFunctionCall","src":"1200:13:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1190:6:28"}]},{"nodeType":"YulAssignment","src":"1222:16:28","value":{"name":"length","nodeType":"YulIdentifier","src":"1232:6:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1222:6:28"}]},{"nodeType":"YulAssignment","src":"1247:50:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1280:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1291:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1276:3:28"},"nodeType":"YulFunctionCall","src":"1276:20:28"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1257:18:28"},"nodeType":"YulFunctionCall","src":"1257:40:28"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1247:6:28"}]},{"nodeType":"YulVariableDeclaration","src":"1306:48:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1339:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1350:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1335:3:28"},"nodeType":"YulFunctionCall","src":"1335:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1322:12:28"},"nodeType":"YulFunctionCall","src":"1322:32:28"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1310:8:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"1383:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1392:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1395:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1385:6:28"},"nodeType":"YulFunctionCall","src":"1385:12:28"},"nodeType":"YulExpressionStatement","src":"1385:12:28"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1369:8:28"},{"name":"_1","nodeType":"YulIdentifier","src":"1379:2:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1366:2:28"},"nodeType":"YulFunctionCall","src":"1366:16:28"},"nodeType":"YulIf","src":"1363:36:28"},{"nodeType":"YulVariableDeclaration","src":"1408:86:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1464:9:28"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1475:8:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1460:3:28"},"nodeType":"YulFunctionCall","src":"1460:24:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1486:7:28"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"1434:25:28"},"nodeType":"YulFunctionCall","src":"1434:60:28"},"variables":[{"name":"value3_1","nodeType":"YulTypedName","src":"1412:8:28","type":""},{"name":"value4_1","nodeType":"YulTypedName","src":"1422:8:28","type":""}]},{"nodeType":"YulAssignment","src":"1503:18:28","value":{"name":"value3_1","nodeType":"YulIdentifier","src":"1513:8:28"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1503:6:28"}]},{"nodeType":"YulAssignment","src":"1530:18:28","value":{"name":"value4_1","nodeType":"YulIdentifier","src":"1540:8:28"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"1530:6:28"}]}]},"name":"abi_decode_tuple_t_array$_t_struct$_FacetCut_$2373_calldata_ptr_$dyn_calldata_ptrt_addresst_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"664:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"675:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"687:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"695:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"703:6:28","type":""},{"name":"value3","nodeType":"YulTypedName","src":"711:6:28","type":""},{"name":"value4","nodeType":"YulTypedName","src":"719:6:28","type":""}],"src":"544:1010:28"},{"body":{"nodeType":"YulBlock","src":"1733:304:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1750:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1761:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1743:6:28"},"nodeType":"YulFunctionCall","src":"1743:21:28"},"nodeType":"YulExpressionStatement","src":"1743:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1784:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1795:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1780:3:28"},"nodeType":"YulFunctionCall","src":"1780:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"1800:2:28","type":"","value":"74"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1773:6:28"},"nodeType":"YulFunctionCall","src":"1773:30:28"},"nodeType":"YulExpressionStatement","src":"1773:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1823:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1834:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1819:3:28"},"nodeType":"YulFunctionCall","src":"1819:18:28"},{"hexValue":"46756e6374696f6e20646570726563617465643a205573652070726f706f7365","kind":"string","nodeType":"YulLiteral","src":"1839:34:28","type":"","value":"Function deprecated: Use propose"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1812:6:28"},"nodeType":"YulFunctionCall","src":"1812:62:28"},"nodeType":"YulExpressionStatement","src":"1812:62:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1894:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1905:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1890:3:28"},"nodeType":"YulFunctionCall","src":"1890:18:28"},{"hexValue":"4469616d6f6e644375742829202b20657865637574654469616d6f6e64437574","kind":"string","nodeType":"YulLiteral","src":"1910:34:28","type":"","value":"DiamondCut() + executeDiamondCut"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1883:6:28"},"nodeType":"YulFunctionCall","src":"1883:62:28"},"nodeType":"YulExpressionStatement","src":"1883:62:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1965:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1976:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1961:3:28"},"nodeType":"YulFunctionCall","src":"1961:19:28"},{"hexValue":"282920696e7374656164","kind":"string","nodeType":"YulLiteral","src":"1982:12:28","type":"","value":"() instead"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1954:6:28"},"nodeType":"YulFunctionCall","src":"1954:41:28"},"nodeType":"YulExpressionStatement","src":"1954:41:28"},{"nodeType":"YulAssignment","src":"2004:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2016:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"2027:3:28","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2012:3:28"},"nodeType":"YulFunctionCall","src":"2012:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2004:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_056fd20c5b5e35526abef0fa8bd3b11181703fb66c442d2bb546f62d84466063__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1710:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1724:4:28","type":""}],"src":"1559:478:28"},{"body":{"nodeType":"YulBlock","src":"2074:95:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2091:1:28","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2098:3:28","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2103:10:28","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2094:3:28"},"nodeType":"YulFunctionCall","src":"2094:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2084:6:28"},"nodeType":"YulFunctionCall","src":"2084:31:28"},"nodeType":"YulExpressionStatement","src":"2084:31:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2131:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2134:4:28","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2124:6:28"},"nodeType":"YulFunctionCall","src":"2124:15:28"},"nodeType":"YulExpressionStatement","src":"2124:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2155:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2158:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2148:6:28"},"nodeType":"YulFunctionCall","src":"2148:15:28"},"nodeType":"YulExpressionStatement","src":"2148:15:28"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"2042:127:28"},{"body":{"nodeType":"YulBlock","src":"2220:207:28","statements":[{"nodeType":"YulAssignment","src":"2230:19:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2246:2:28","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2240:5:28"},"nodeType":"YulFunctionCall","src":"2240:9:28"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2230:6:28"}]},{"nodeType":"YulVariableDeclaration","src":"2258:35:28","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2280:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"2288:4:28","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2276:3:28"},"nodeType":"YulFunctionCall","src":"2276:17:28"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"2262:10:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"2368:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2370:16:28"},"nodeType":"YulFunctionCall","src":"2370:18:28"},"nodeType":"YulExpressionStatement","src":"2370:18:28"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2311:10:28"},{"kind":"number","nodeType":"YulLiteral","src":"2323:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2308:2:28"},"nodeType":"YulFunctionCall","src":"2308:34:28"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2347:10:28"},{"name":"memPtr","nodeType":"YulIdentifier","src":"2359:6:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2344:2:28"},"nodeType":"YulFunctionCall","src":"2344:22:28"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2305:2:28"},"nodeType":"YulFunctionCall","src":"2305:62:28"},"nodeType":"YulIf","src":"2302:88:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2406:2:28","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2410:10:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2399:6:28"},"nodeType":"YulFunctionCall","src":"2399:22:28"},"nodeType":"YulExpressionStatement","src":"2399:22:28"}]},"name":"allocate_memory_3721","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2209:6:28","type":""}],"src":"2174:253:28"},{"body":{"nodeType":"YulBlock","src":"2477:230:28","statements":[{"nodeType":"YulAssignment","src":"2487:19:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2503:2:28","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2497:5:28"},"nodeType":"YulFunctionCall","src":"2497:9:28"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2487:6:28"}]},{"nodeType":"YulVariableDeclaration","src":"2515:58:28","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2537:6:28"},{"arguments":[{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2553:4:28"},{"kind":"number","nodeType":"YulLiteral","src":"2559:2:28","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2549:3:28"},"nodeType":"YulFunctionCall","src":"2549:13:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2568:2:28","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2564:3:28"},"nodeType":"YulFunctionCall","src":"2564:7:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2545:3:28"},"nodeType":"YulFunctionCall","src":"2545:27:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2533:3:28"},"nodeType":"YulFunctionCall","src":"2533:40:28"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"2519:10:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"2648:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2650:16:28"},"nodeType":"YulFunctionCall","src":"2650:18:28"},"nodeType":"YulExpressionStatement","src":"2650:18:28"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2591:10:28"},{"kind":"number","nodeType":"YulLiteral","src":"2603:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2588:2:28"},"nodeType":"YulFunctionCall","src":"2588:34:28"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2627:10:28"},{"name":"memPtr","nodeType":"YulIdentifier","src":"2639:6:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2624:2:28"},"nodeType":"YulFunctionCall","src":"2624:22:28"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2585:2:28"},"nodeType":"YulFunctionCall","src":"2585:62:28"},"nodeType":"YulIf","src":"2582:88:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2686:2:28","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2690:10:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2679:6:28"},"nodeType":"YulFunctionCall","src":"2679:22:28"},"nodeType":"YulExpressionStatement","src":"2679:22:28"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"2457:4:28","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2466:6:28","type":""}],"src":"2432:275:28"},{"body":{"nodeType":"YulBlock","src":"2789:114:28","statements":[{"body":{"nodeType":"YulBlock","src":"2833:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2835:16:28"},"nodeType":"YulFunctionCall","src":"2835:18:28"},"nodeType":"YulExpressionStatement","src":"2835:18:28"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2805:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"2813:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2802:2:28"},"nodeType":"YulFunctionCall","src":"2802:30:28"},"nodeType":"YulIf","src":"2799:56:28"},{"nodeType":"YulAssignment","src":"2864:33:28","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2880:1:28","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"2883:6:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2876:3:28"},"nodeType":"YulFunctionCall","src":"2876:14:28"},{"kind":"number","nodeType":"YulLiteral","src":"2892:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2872:3:28"},"nodeType":"YulFunctionCall","src":"2872:25:28"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2864:4:28"}]}]},"name":"array_allocation_size_array_struct_FacetCut_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"2769:6:28","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"2780:4:28","type":""}],"src":"2712:191:28"},{"body":{"nodeType":"YulBlock","src":"3092:2541:28","statements":[{"nodeType":"YulVariableDeclaration","src":"3102:83:28","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3177:6:28"}],"functionName":{"name":"array_allocation_size_array_struct_FacetCut_dyn","nodeType":"YulIdentifier","src":"3129:47:28"},"nodeType":"YulFunctionCall","src":"3129:55:28"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"3113:15:28"},"nodeType":"YulFunctionCall","src":"3113:72:28"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"3106:3:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3194:16:28","value":{"name":"dst","nodeType":"YulIdentifier","src":"3207:3:28"},"variables":[{"name":"dst_1","nodeType":"YulTypedName","src":"3198:5:28","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3226:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"3231:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3219:6:28"},"nodeType":"YulFunctionCall","src":"3219:19:28"},"nodeType":"YulExpressionStatement","src":"3219:19:28"},{"nodeType":"YulVariableDeclaration","src":"3247:14:28","value":{"kind":"number","nodeType":"YulLiteral","src":"3257:4:28","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3251:2:28","type":""}]},{"nodeType":"YulAssignment","src":"3270:19:28","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3281:3:28"},{"name":"_1","nodeType":"YulIdentifier","src":"3286:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3277:3:28"},"nodeType":"YulFunctionCall","src":"3277:12:28"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"3270:3:28"}]},{"nodeType":"YulVariableDeclaration","src":"3298:11:28","value":{"kind":"number","nodeType":"YulLiteral","src":"3308:1:28","type":"","value":"5"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"3302:2:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3318:41:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3336:5:28"},{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"3347:2:28"},{"name":"length","nodeType":"YulIdentifier","src":"3351:6:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3343:3:28"},"nodeType":"YulFunctionCall","src":"3343:15:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3332:3:28"},"nodeType":"YulFunctionCall","src":"3332:27:28"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"3322:6:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"3398:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3407:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3410:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3400:6:28"},"nodeType":"YulFunctionCall","src":"3400:12:28"},"nodeType":"YulExpressionStatement","src":"3400:12:28"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"3374:6:28"},{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"3382:12:28"},"nodeType":"YulFunctionCall","src":"3382:14:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3371:2:28"},"nodeType":"YulFunctionCall","src":"3371:26:28"},"nodeType":"YulIf","src":"3368:46:28"},{"nodeType":"YulVariableDeclaration","src":"3423:16:28","value":{"name":"value","nodeType":"YulIdentifier","src":"3434:5:28"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"3427:3:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"3504:2096:28","statements":[{"nodeType":"YulVariableDeclaration","src":"3518:36:28","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3550:3:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3537:12:28"},"nodeType":"YulFunctionCall","src":"3537:17:28"},"variables":[{"name":"innerOffset","nodeType":"YulTypedName","src":"3522:11:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3567:28:28","value":{"kind":"number","nodeType":"YulLiteral","src":"3577:18:28","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"3571:2:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"3643:74:28","statements":[{"nodeType":"YulVariableDeclaration","src":"3661:11:28","value":{"kind":"number","nodeType":"YulLiteral","src":"3671:1:28","type":"","value":"0"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"3665:2:28","type":""}]},{"expression":{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"3696:2:28"},{"name":"_4","nodeType":"YulIdentifier","src":"3700:2:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3689:6:28"},"nodeType":"YulFunctionCall","src":"3689:14:28"},"nodeType":"YulExpressionStatement","src":"3689:14:28"}]},"condition":{"arguments":[{"name":"innerOffset","nodeType":"YulIdentifier","src":"3614:11:28"},{"name":"_3","nodeType":"YulIdentifier","src":"3627:2:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3611:2:28"},"nodeType":"YulFunctionCall","src":"3611:19:28"},"nodeType":"YulIf","src":"3608:109:28"},{"nodeType":"YulVariableDeclaration","src":"3730:33:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3744:5:28"},{"name":"innerOffset","nodeType":"YulIdentifier","src":"3751:11:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3740:3:28"},"nodeType":"YulFunctionCall","src":"3740:23:28"},"variables":[{"name":"_5","nodeType":"YulTypedName","src":"3734:2:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"3826:74:28","statements":[{"nodeType":"YulVariableDeclaration","src":"3844:11:28","value":{"kind":"number","nodeType":"YulLiteral","src":"3854:1:28","type":"","value":"0"},"variables":[{"name":"_6","nodeType":"YulTypedName","src":"3848:2:28","type":""}]},{"expression":{"arguments":[{"name":"_6","nodeType":"YulIdentifier","src":"3879:2:28"},{"name":"_6","nodeType":"YulIdentifier","src":"3883:2:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3872:6:28"},"nodeType":"YulFunctionCall","src":"3872:14:28"},"nodeType":"YulExpressionStatement","src":"3872:14:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"3787:12:28"},"nodeType":"YulFunctionCall","src":"3787:14:28"},{"name":"_5","nodeType":"YulIdentifier","src":"3803:2:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3783:3:28"},"nodeType":"YulFunctionCall","src":"3783:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"3808:4:28","type":"","value":"0x60"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3779:3:28"},"nodeType":"YulFunctionCall","src":"3779:34:28"},"nodeType":"YulIf","src":"3776:124:28"},{"nodeType":"YulVariableDeclaration","src":"3913:37:28","value":{"arguments":[],"functionName":{"name":"allocate_memory_3721","nodeType":"YulIdentifier","src":"3928:20:28"},"nodeType":"YulFunctionCall","src":"3928:22:28"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"3917:7:28","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"3970:7:28"},{"arguments":[{"name":"_5","nodeType":"YulIdentifier","src":"3998:2:28"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3979:18:28"},"nodeType":"YulFunctionCall","src":"3979:22:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3963:6:28"},"nodeType":"YulFunctionCall","src":"3963:39:28"},"nodeType":"YulExpressionStatement","src":"3963:39:28"},{"nodeType":"YulVariableDeclaration","src":"4015:40:28","value":{"arguments":[{"arguments":[{"name":"_5","nodeType":"YulIdentifier","src":"4047:2:28"},{"name":"_1","nodeType":"YulIdentifier","src":"4051:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4043:3:28"},"nodeType":"YulFunctionCall","src":"4043:11:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4030:12:28"},"nodeType":"YulFunctionCall","src":"4030:25:28"},"variables":[{"name":"value_2","nodeType":"YulTypedName","src":"4019:7:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"4106:74:28","statements":[{"nodeType":"YulVariableDeclaration","src":"4124:11:28","value":{"kind":"number","nodeType":"YulLiteral","src":"4134:1:28","type":"","value":"0"},"variables":[{"name":"_7","nodeType":"YulTypedName","src":"4128:2:28","type":""}]},{"expression":{"arguments":[{"name":"_7","nodeType":"YulIdentifier","src":"4159:2:28"},{"name":"_7","nodeType":"YulIdentifier","src":"4163:2:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4152:6:28"},"nodeType":"YulFunctionCall","src":"4152:14:28"},"nodeType":"YulExpressionStatement","src":"4152:14:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value_2","nodeType":"YulIdentifier","src":"4081:7:28"},{"kind":"number","nodeType":"YulLiteral","src":"4090:1:28","type":"","value":"3"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4078:2:28"},"nodeType":"YulFunctionCall","src":"4078:14:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4071:6:28"},"nodeType":"YulFunctionCall","src":"4071:22:28"},"nodeType":"YulIf","src":"4068:112:28"},{"expression":{"arguments":[{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"4204:7:28"},{"name":"_1","nodeType":"YulIdentifier","src":"4213:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4200:3:28"},"nodeType":"YulFunctionCall","src":"4200:16:28"},{"name":"value_2","nodeType":"YulIdentifier","src":"4218:7:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4193:6:28"},"nodeType":"YulFunctionCall","src":"4193:33:28"},"nodeType":"YulExpressionStatement","src":"4193:33:28"},{"nodeType":"YulVariableDeclaration","src":"4239:12:28","value":{"kind":"number","nodeType":"YulLiteral","src":"4249:2:28","type":"","value":"64"},"variables":[{"name":"_8","nodeType":"YulTypedName","src":"4243:2:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4264:39:28","value":{"arguments":[{"arguments":[{"name":"_5","nodeType":"YulIdentifier","src":"4295:2:28"},{"name":"_8","nodeType":"YulIdentifier","src":"4299:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4291:3:28"},"nodeType":"YulFunctionCall","src":"4291:11:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4278:12:28"},"nodeType":"YulFunctionCall","src":"4278:25:28"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4268:6:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"4346:74:28","statements":[{"nodeType":"YulVariableDeclaration","src":"4364:11:28","value":{"kind":"number","nodeType":"YulLiteral","src":"4374:1:28","type":"","value":"0"},"variables":[{"name":"_9","nodeType":"YulTypedName","src":"4368:2:28","type":""}]},{"expression":{"arguments":[{"name":"_9","nodeType":"YulIdentifier","src":"4399:2:28"},{"name":"_9","nodeType":"YulIdentifier","src":"4403:2:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4392:6:28"},"nodeType":"YulFunctionCall","src":"4392:14:28"},"nodeType":"YulExpressionStatement","src":"4392:14:28"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4322:6:28"},{"name":"_3","nodeType":"YulIdentifier","src":"4330:2:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4319:2:28"},"nodeType":"YulFunctionCall","src":"4319:14:28"},"nodeType":"YulIf","src":"4316:104:28"},{"nodeType":"YulVariableDeclaration","src":"4433:26:28","value":{"arguments":[{"name":"_5","nodeType":"YulIdentifier","src":"4448:2:28"},{"name":"offset","nodeType":"YulIdentifier","src":"4452:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4444:3:28"},"nodeType":"YulFunctionCall","src":"4444:15:28"},"variables":[{"name":"_10","nodeType":"YulTypedName","src":"4437:3:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"4531:77:28","statements":[{"nodeType":"YulVariableDeclaration","src":"4549:12:28","value":{"kind":"number","nodeType":"YulLiteral","src":"4560:1:28","type":"","value":"0"},"variables":[{"name":"_11","nodeType":"YulTypedName","src":"4553:3:28","type":""}]},{"expression":{"arguments":[{"name":"_11","nodeType":"YulIdentifier","src":"4585:3:28"},{"name":"_11","nodeType":"YulIdentifier","src":"4590:3:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4578:6:28"},"nodeType":"YulFunctionCall","src":"4578:16:28"},"nodeType":"YulExpressionStatement","src":"4578:16:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_10","nodeType":"YulIdentifier","src":"4490:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"4495:4:28","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4486:3:28"},"nodeType":"YulFunctionCall","src":"4486:14:28"},{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"4502:12:28"},"nodeType":"YulFunctionCall","src":"4502:14:28"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4482:3:28"},"nodeType":"YulFunctionCall","src":"4482:35:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4475:6:28"},"nodeType":"YulFunctionCall","src":"4475:43:28"},"nodeType":"YulIf","src":"4472:136:28"},{"nodeType":"YulVariableDeclaration","src":"4621:28:28","value":{"arguments":[{"name":"_10","nodeType":"YulIdentifier","src":"4645:3:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4632:12:28"},"nodeType":"YulFunctionCall","src":"4632:17:28"},"variables":[{"name":"_12","nodeType":"YulTypedName","src":"4625:3:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4662:82:28","value":{"arguments":[{"arguments":[{"name":"_12","nodeType":"YulIdentifier","src":"4739:3:28"}],"functionName":{"name":"array_allocation_size_array_struct_FacetCut_dyn","nodeType":"YulIdentifier","src":"4691:47:28"},"nodeType":"YulFunctionCall","src":"4691:52:28"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"4675:15:28"},"nodeType":"YulFunctionCall","src":"4675:69:28"},"variables":[{"name":"dst_2","nodeType":"YulTypedName","src":"4666:5:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4757:18:28","value":{"name":"dst_2","nodeType":"YulIdentifier","src":"4770:5:28"},"variables":[{"name":"dst_3","nodeType":"YulTypedName","src":"4761:5:28","type":""}]},{"expression":{"arguments":[{"name":"dst_2","nodeType":"YulIdentifier","src":"4795:5:28"},{"name":"_12","nodeType":"YulIdentifier","src":"4802:3:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4788:6:28"},"nodeType":"YulFunctionCall","src":"4788:18:28"},"nodeType":"YulExpressionStatement","src":"4788:18:28"},{"nodeType":"YulAssignment","src":"4819:23:28","value":{"arguments":[{"name":"dst_2","nodeType":"YulIdentifier","src":"4832:5:28"},{"name":"_1","nodeType":"YulIdentifier","src":"4839:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4828:3:28"},"nodeType":"YulFunctionCall","src":"4828:14:28"},"variableNames":[{"name":"dst_2","nodeType":"YulIdentifier","src":"4819:5:28"}]},{"nodeType":"YulVariableDeclaration","src":"4855:47:28","value":{"arguments":[{"arguments":[{"name":"_10","nodeType":"YulIdentifier","src":"4879:3:28"},{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"4888:2:28"},{"name":"_12","nodeType":"YulIdentifier","src":"4892:3:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4884:3:28"},"nodeType":"YulFunctionCall","src":"4884:12:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4875:3:28"},"nodeType":"YulFunctionCall","src":"4875:22:28"},{"name":"_1","nodeType":"YulIdentifier","src":"4899:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4871:3:28"},"nodeType":"YulFunctionCall","src":"4871:31:28"},"variables":[{"name":"srcEnd_1","nodeType":"YulTypedName","src":"4859:8:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"4959:77:28","statements":[{"nodeType":"YulVariableDeclaration","src":"4977:12:28","value":{"kind":"number","nodeType":"YulLiteral","src":"4988:1:28","type":"","value":"0"},"variables":[{"name":"_13","nodeType":"YulTypedName","src":"4981:3:28","type":""}]},{"expression":{"arguments":[{"name":"_13","nodeType":"YulIdentifier","src":"5013:3:28"},{"name":"_13","nodeType":"YulIdentifier","src":"5018:3:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5006:6:28"},"nodeType":"YulFunctionCall","src":"5006:16:28"},"nodeType":"YulExpressionStatement","src":"5006:16:28"}]},"condition":{"arguments":[{"name":"srcEnd_1","nodeType":"YulIdentifier","src":"4921:8:28"},{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"4931:12:28"},"nodeType":"YulFunctionCall","src":"4931:14:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4918:2:28"},"nodeType":"YulFunctionCall","src":"4918:28:28"},"nodeType":"YulIf","src":"4915:121:28"},{"nodeType":"YulVariableDeclaration","src":"5049:25:28","value":{"arguments":[{"name":"_10","nodeType":"YulIdentifier","src":"5066:3:28"},{"name":"_1","nodeType":"YulIdentifier","src":"5071:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5062:3:28"},"nodeType":"YulFunctionCall","src":"5062:12:28"},"variables":[{"name":"src_1","nodeType":"YulTypedName","src":"5053:5:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"5155:326:28","statements":[{"nodeType":"YulVariableDeclaration","src":"5173:34:28","value":{"arguments":[{"name":"src_1","nodeType":"YulIdentifier","src":"5201:5:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5188:12:28"},"nodeType":"YulFunctionCall","src":"5188:19:28"},"variables":[{"name":"value_3","nodeType":"YulTypedName","src":"5177:7:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"5299:89:28","statements":[{"nodeType":"YulVariableDeclaration","src":"5321:12:28","value":{"kind":"number","nodeType":"YulLiteral","src":"5332:1:28","type":"","value":"0"},"variables":[{"name":"_14","nodeType":"YulTypedName","src":"5325:3:28","type":""}]},{"expression":{"arguments":[{"name":"_14","nodeType":"YulIdentifier","src":"5361:3:28"},{"name":"_14","nodeType":"YulIdentifier","src":"5366:3:28"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5354:6:28"},"nodeType":"YulFunctionCall","src":"5354:16:28"},"nodeType":"YulExpressionStatement","src":"5354:16:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value_3","nodeType":"YulIdentifier","src":"5237:7:28"},{"arguments":[{"name":"value_3","nodeType":"YulIdentifier","src":"5250:7:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5263:3:28","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5268:10:28","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5259:3:28"},"nodeType":"YulFunctionCall","src":"5259:20:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5246:3:28"},"nodeType":"YulFunctionCall","src":"5246:34:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5234:2:28"},"nodeType":"YulFunctionCall","src":"5234:47:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5227:6:28"},"nodeType":"YulFunctionCall","src":"5227:55:28"},"nodeType":"YulIf","src":"5224:164:28"},{"expression":{"arguments":[{"name":"dst_2","nodeType":"YulIdentifier","src":"5412:5:28"},{"name":"value_3","nodeType":"YulIdentifier","src":"5419:7:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5405:6:28"},"nodeType":"YulFunctionCall","src":"5405:22:28"},"nodeType":"YulExpressionStatement","src":"5405:22:28"},{"nodeType":"YulAssignment","src":"5444:23:28","value":{"arguments":[{"name":"dst_2","nodeType":"YulIdentifier","src":"5457:5:28"},{"name":"_1","nodeType":"YulIdentifier","src":"5464:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5453:3:28"},"nodeType":"YulFunctionCall","src":"5453:14:28"},"variableNames":[{"name":"dst_2","nodeType":"YulIdentifier","src":"5444:5:28"}]}]},"condition":{"arguments":[{"name":"src_1","nodeType":"YulIdentifier","src":"5098:5:28"},{"name":"srcEnd_1","nodeType":"YulIdentifier","src":"5105:8:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5095:2:28"},"nodeType":"YulFunctionCall","src":"5095:19:28"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5115:27:28","statements":[{"nodeType":"YulAssignment","src":"5117:23:28","value":{"arguments":[{"name":"src_1","nodeType":"YulIdentifier","src":"5130:5:28"},{"name":"_1","nodeType":"YulIdentifier","src":"5137:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5126:3:28"},"nodeType":"YulFunctionCall","src":"5126:14:28"},"variableNames":[{"name":"src_1","nodeType":"YulIdentifier","src":"5117:5:28"}]}]},"pre":{"nodeType":"YulBlock","src":"5091:3:28","statements":[]},"src":"5087:394:28"},{"expression":{"arguments":[{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"5505:7:28"},{"name":"_8","nodeType":"YulIdentifier","src":"5514:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5501:3:28"},"nodeType":"YulFunctionCall","src":"5501:16:28"},{"name":"dst_3","nodeType":"YulIdentifier","src":"5519:5:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5494:6:28"},"nodeType":"YulFunctionCall","src":"5494:31:28"},"nodeType":"YulExpressionStatement","src":"5494:31:28"},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5545:3:28"},{"name":"value_1","nodeType":"YulIdentifier","src":"5550:7:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5538:6:28"},"nodeType":"YulFunctionCall","src":"5538:20:28"},"nodeType":"YulExpressionStatement","src":"5538:20:28"},{"nodeType":"YulAssignment","src":"5571:19:28","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5582:3:28"},{"name":"_1","nodeType":"YulIdentifier","src":"5587:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5578:3:28"},"nodeType":"YulFunctionCall","src":"5578:12:28"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"5571:3:28"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3459:3:28"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"3464:6:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3456:2:28"},"nodeType":"YulFunctionCall","src":"3456:15:28"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3472:23:28","statements":[{"nodeType":"YulAssignment","src":"3474:19:28","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3485:3:28"},{"name":"_1","nodeType":"YulIdentifier","src":"3490:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3481:3:28"},"nodeType":"YulFunctionCall","src":"3481:12:28"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"3474:3:28"}]}]},"pre":{"nodeType":"YulBlock","src":"3452:3:28","statements":[]},"src":"3448:2152:28"},{"nodeType":"YulAssignment","src":"5609:18:28","value":{"name":"dst_1","nodeType":"YulIdentifier","src":"5622:5:28"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"5609:9:28"}]}]},"name":"convert_array_t_array$_t_struct$_FacetCut_$2373_calldata_ptr_$dyn_calldata_ptr_to_t_array$_t_struct$_FacetCut_$2373_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3060:5:28","type":""},{"name":"length","nodeType":"YulTypedName","src":"3067:6:28","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"3078:9:28","type":""}],"src":"2908:2725:28"},{"body":{"nodeType":"YulBlock","src":"5812:224:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5829:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"5840:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5822:6:28"},"nodeType":"YulFunctionCall","src":"5822:21:28"},"nodeType":"YulExpressionStatement","src":"5822:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5863:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"5874:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5859:3:28"},"nodeType":"YulFunctionCall","src":"5859:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"5879:2:28","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5852:6:28"},"nodeType":"YulFunctionCall","src":"5852:30:28"},"nodeType":"YulExpressionStatement","src":"5852:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5902:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"5913:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5898:3:28"},"nodeType":"YulFunctionCall","src":"5898:18:28"},{"hexValue":"4c69624469616d6f6e643a204d75737420626520636f6e7472616374206f776e","kind":"string","nodeType":"YulLiteral","src":"5918:34:28","type":"","value":"LibDiamond: Must be contract own"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5891:6:28"},"nodeType":"YulFunctionCall","src":"5891:62:28"},"nodeType":"YulExpressionStatement","src":"5891:62:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5973:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"5984:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5969:3:28"},"nodeType":"YulFunctionCall","src":"5969:18:28"},{"hexValue":"6572","kind":"string","nodeType":"YulLiteral","src":"5989:4:28","type":"","value":"er"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5962:6:28"},"nodeType":"YulFunctionCall","src":"5962:32:28"},"nodeType":"YulExpressionStatement","src":"5962:32:28"},{"nodeType":"YulAssignment","src":"6003:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6015:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"6026:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6011:3:28"},"nodeType":"YulFunctionCall","src":"6011:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6003:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_0d4ae41009c51fd276653a54d7793c24f266ddc8c56ce21f8be5e2c6595ab3ac__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5789:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5803:4:28","type":""}],"src":"5638:398:28"},{"body":{"nodeType":"YulBlock","src":"6215:228:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6232:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"6243:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6225:6:28"},"nodeType":"YulFunctionCall","src":"6225:21:28"},"nodeType":"YulExpressionStatement","src":"6225:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6266:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"6277:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6262:3:28"},"nodeType":"YulFunctionCall","src":"6262:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"6282:2:28","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6255:6:28"},"nodeType":"YulFunctionCall","src":"6255:30:28"},"nodeType":"YulExpressionStatement","src":"6255:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6305:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"6316:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6301:3:28"},"nodeType":"YulFunctionCall","src":"6301:18:28"},{"hexValue":"4c69624469616d6f6e643a204e6f20757067726164652070726f706f73616c20","kind":"string","nodeType":"YulLiteral","src":"6321:34:28","type":"","value":"LibDiamond: No upgrade proposal "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6294:6:28"},"nodeType":"YulFunctionCall","src":"6294:62:28"},"nodeType":"YulExpressionStatement","src":"6294:62:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6376:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"6387:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6372:3:28"},"nodeType":"YulFunctionCall","src":"6372:18:28"},{"hexValue":"657869737473","kind":"string","nodeType":"YulLiteral","src":"6392:8:28","type":"","value":"exists"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6365:6:28"},"nodeType":"YulFunctionCall","src":"6365:36:28"},"nodeType":"YulExpressionStatement","src":"6365:36:28"},{"nodeType":"YulAssignment","src":"6410:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6422:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"6433:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6418:3:28"},"nodeType":"YulFunctionCall","src":"6418:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6410:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_43ca8ee6cd16ca31ce88954982145b31f996f016179581e9a51c2213a748d95d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6192:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6206:4:28","type":""}],"src":"6041:402:28"},{"body":{"nodeType":"YulBlock","src":"6622:226:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6639:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"6650:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6632:6:28"},"nodeType":"YulFunctionCall","src":"6632:21:28"},"nodeType":"YulExpressionStatement","src":"6632:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6673:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"6684:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6669:3:28"},"nodeType":"YulFunctionCall","src":"6669:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"6689:2:28","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6662:6:28"},"nodeType":"YulFunctionCall","src":"6662:30:28"},"nodeType":"YulExpressionStatement","src":"6662:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6712:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"6723:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6708:3:28"},"nodeType":"YulFunctionCall","src":"6708:18:28"},{"hexValue":"4c69624469616d6f6e643a205570677261646520616c72656164792070726f70","kind":"string","nodeType":"YulLiteral","src":"6728:34:28","type":"","value":"LibDiamond: Upgrade already prop"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6701:6:28"},"nodeType":"YulFunctionCall","src":"6701:62:28"},"nodeType":"YulExpressionStatement","src":"6701:62:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6783:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"6794:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6779:3:28"},"nodeType":"YulFunctionCall","src":"6779:18:28"},{"hexValue":"6f736564","kind":"string","nodeType":"YulLiteral","src":"6799:6:28","type":"","value":"osed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6772:6:28"},"nodeType":"YulFunctionCall","src":"6772:34:28"},"nodeType":"YulExpressionStatement","src":"6772:34:28"},{"nodeType":"YulAssignment","src":"6815:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6827:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"6838:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6823:3:28"},"nodeType":"YulFunctionCall","src":"6823:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6815:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_b6b860163f09eaf9581a3c3dca757c905d2636dfee636c736999bea07d6a9262__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6599:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6613:4:28","type":""}],"src":"6448:400:28"},{"body":{"nodeType":"YulBlock","src":"7027:226:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7044:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"7055:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7037:6:28"},"nodeType":"YulFunctionCall","src":"7037:21:28"},"nodeType":"YulExpressionStatement","src":"7037:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7078:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"7089:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7074:3:28"},"nodeType":"YulFunctionCall","src":"7074:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"7094:2:28","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7067:6:28"},"nodeType":"YulFunctionCall","src":"7067:30:28"},"nodeType":"YulExpressionStatement","src":"7067:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7117:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"7128:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7113:3:28"},"nodeType":"YulFunctionCall","src":"7113:18:28"},{"hexValue":"4c69624469616d6f6e643a2054696d656c6f636b206e6f7420696e697469616c","kind":"string","nodeType":"YulLiteral","src":"7133:34:28","type":"","value":"LibDiamond: Timelock not initial"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7106:6:28"},"nodeType":"YulFunctionCall","src":"7106:62:28"},"nodeType":"YulExpressionStatement","src":"7106:62:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7188:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"7199:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7184:3:28"},"nodeType":"YulFunctionCall","src":"7184:18:28"},{"hexValue":"697a6564","kind":"string","nodeType":"YulLiteral","src":"7204:6:28","type":"","value":"ized"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7177:6:28"},"nodeType":"YulFunctionCall","src":"7177:34:28"},"nodeType":"YulExpressionStatement","src":"7177:34:28"},{"nodeType":"YulAssignment","src":"7220:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7232:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"7243:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7228:3:28"},"nodeType":"YulFunctionCall","src":"7228:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7220:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_d09b47edbfca4a2ee3b2c8249a392b83c890c9a68484e771caaef2e624a6a02e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7004:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7018:4:28","type":""}],"src":"6853:400:28"},{"body":{"nodeType":"YulBlock","src":"7290:95:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7307:1:28","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7314:3:28","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"7319:10:28","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7310:3:28"},"nodeType":"YulFunctionCall","src":"7310:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7300:6:28"},"nodeType":"YulFunctionCall","src":"7300:31:28"},"nodeType":"YulExpressionStatement","src":"7300:31:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7347:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7350:4:28","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7340:6:28"},"nodeType":"YulFunctionCall","src":"7340:15:28"},"nodeType":"YulExpressionStatement","src":"7340:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7371:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7374:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7364:6:28"},"nodeType":"YulFunctionCall","src":"7364:15:28"},"nodeType":"YulExpressionStatement","src":"7364:15:28"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"7258:127:28"},{"body":{"nodeType":"YulBlock","src":"7422:95:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7439:1:28","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7446:3:28","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"7451:10:28","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7442:3:28"},"nodeType":"YulFunctionCall","src":"7442:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7432:6:28"},"nodeType":"YulFunctionCall","src":"7432:31:28"},"nodeType":"YulExpressionStatement","src":"7432:31:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7479:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7482:4:28","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7472:6:28"},"nodeType":"YulFunctionCall","src":"7472:15:28"},"nodeType":"YulExpressionStatement","src":"7472:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7503:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7506:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7496:6:28"},"nodeType":"YulFunctionCall","src":"7496:15:28"},"nodeType":"YulExpressionStatement","src":"7496:15:28"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"7390:127:28"},{"body":{"nodeType":"YulBlock","src":"7569:88:28","statements":[{"body":{"nodeType":"YulBlock","src":"7600:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7602:16:28"},"nodeType":"YulFunctionCall","src":"7602:18:28"},"nodeType":"YulExpressionStatement","src":"7602:18:28"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7585:5:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7596:1:28","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7592:3:28"},"nodeType":"YulFunctionCall","src":"7592:6:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7582:2:28"},"nodeType":"YulFunctionCall","src":"7582:17:28"},"nodeType":"YulIf","src":"7579:43:28"},{"nodeType":"YulAssignment","src":"7631:20:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7642:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"7649:1:28","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7638:3:28"},"nodeType":"YulFunctionCall","src":"7638:13:28"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"7631:3:28"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7551:5:28","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"7561:3:28","type":""}],"src":"7522:135:28"},{"body":{"nodeType":"YulBlock","src":"7694:95:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7711:1:28","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7718:3:28","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"7723:10:28","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7714:3:28"},"nodeType":"YulFunctionCall","src":"7714:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7704:6:28"},"nodeType":"YulFunctionCall","src":"7704:31:28"},"nodeType":"YulExpressionStatement","src":"7704:31:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7751:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7754:4:28","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7744:6:28"},"nodeType":"YulFunctionCall","src":"7744:15:28"},"nodeType":"YulExpressionStatement","src":"7744:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7775:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7778:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7768:6:28"},"nodeType":"YulFunctionCall","src":"7768:15:28"},"nodeType":"YulExpressionStatement","src":"7768:15:28"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"7662:127:28"},{"body":{"nodeType":"YulBlock","src":"7849:325:28","statements":[{"nodeType":"YulAssignment","src":"7859:22:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7873:1:28","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"7876:4:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7869:3:28"},"nodeType":"YulFunctionCall","src":"7869:12:28"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7859:6:28"}]},{"nodeType":"YulVariableDeclaration","src":"7890:38:28","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7920:4:28"},{"kind":"number","nodeType":"YulLiteral","src":"7926:1:28","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7916:3:28"},"nodeType":"YulFunctionCall","src":"7916:12:28"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"7894:18:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"7967:31:28","statements":[{"nodeType":"YulAssignment","src":"7969:27:28","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7983:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"7991:4:28","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7979:3:28"},"nodeType":"YulFunctionCall","src":"7979:17:28"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7969:6:28"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"7947:18:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7940:6:28"},"nodeType":"YulFunctionCall","src":"7940:26:28"},"nodeType":"YulIf","src":"7937:61:28"},{"body":{"nodeType":"YulBlock","src":"8057:111:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8078:1:28","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8085:3:28","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"8090:10:28","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8081:3:28"},"nodeType":"YulFunctionCall","src":"8081:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8071:6:28"},"nodeType":"YulFunctionCall","src":"8071:31:28"},"nodeType":"YulExpressionStatement","src":"8071:31:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8122:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8125:4:28","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8115:6:28"},"nodeType":"YulFunctionCall","src":"8115:15:28"},"nodeType":"YulExpressionStatement","src":"8115:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8150:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8153:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8143:6:28"},"nodeType":"YulFunctionCall","src":"8143:15:28"},"nodeType":"YulExpressionStatement","src":"8143:15:28"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"8013:18:28"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8036:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"8044:2:28","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8033:2:28"},"nodeType":"YulFunctionCall","src":"8033:14:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8010:2:28"},"nodeType":"YulFunctionCall","src":"8010:38:28"},"nodeType":"YulIf","src":"8007:161:28"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"7829:4:28","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"7838:6:28","type":""}],"src":"7794:380:28"},{"body":{"nodeType":"YulBlock","src":"8234:65:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8251:1:28","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"8254:3:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8244:6:28"},"nodeType":"YulFunctionCall","src":"8244:14:28"},"nodeType":"YulExpressionStatement","src":"8244:14:28"},{"nodeType":"YulAssignment","src":"8267:26:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8285:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8288:4:28","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"8275:9:28"},"nodeType":"YulFunctionCall","src":"8275:18:28"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"8267:4:28"}]}]},"name":"array_dataslot_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"8217:3:28","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"8225:4:28","type":""}],"src":"8179:120:28"},{"body":{"nodeType":"YulBlock","src":"8384:464:28","statements":[{"body":{"nodeType":"YulBlock","src":"8417:425:28","statements":[{"nodeType":"YulVariableDeclaration","src":"8431:11:28","value":{"kind":"number","nodeType":"YulLiteral","src":"8441:1:28","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"8435:2:28","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"8462:2:28"},{"name":"array","nodeType":"YulIdentifier","src":"8466:5:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8455:6:28"},"nodeType":"YulFunctionCall","src":"8455:17:28"},"nodeType":"YulExpressionStatement","src":"8455:17:28"},{"nodeType":"YulVariableDeclaration","src":"8485:31:28","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"8507:2:28"},{"kind":"number","nodeType":"YulLiteral","src":"8511:4:28","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"8497:9:28"},"nodeType":"YulFunctionCall","src":"8497:19:28"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"8489:4:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8529:57:28","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8552:4:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8562:1:28","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"8569:10:28"},{"kind":"number","nodeType":"YulLiteral","src":"8581:2:28","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8565:3:28"},"nodeType":"YulFunctionCall","src":"8565:19:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"8558:3:28"},"nodeType":"YulFunctionCall","src":"8558:27:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8548:3:28"},"nodeType":"YulFunctionCall","src":"8548:38:28"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"8533:11:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"8623:23:28","statements":[{"nodeType":"YulAssignment","src":"8625:19:28","value":{"name":"data","nodeType":"YulIdentifier","src":"8640:4:28"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"8625:11:28"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"8605:10:28"},{"kind":"number","nodeType":"YulLiteral","src":"8617:4:28","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8602:2:28"},"nodeType":"YulFunctionCall","src":"8602:20:28"},"nodeType":"YulIf","src":"8599:47:28"},{"nodeType":"YulVariableDeclaration","src":"8659:41:28","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8673:4:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8683:1:28","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"8690:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"8695:2:28","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8686:3:28"},"nodeType":"YulFunctionCall","src":"8686:12:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"8679:3:28"},"nodeType":"YulFunctionCall","src":"8679:20:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8669:3:28"},"nodeType":"YulFunctionCall","src":"8669:31:28"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"8663:2:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8713:24:28","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"8726:11:28"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"8717:5:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"8811:21:28","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"8820:5:28"},{"name":"_1","nodeType":"YulIdentifier","src":"8827:2:28"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8813:6:28"},"nodeType":"YulFunctionCall","src":"8813:17:28"},"nodeType":"YulExpressionStatement","src":"8813:17:28"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"8761:5:28"},{"name":"_2","nodeType":"YulIdentifier","src":"8768:2:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8758:2:28"},"nodeType":"YulFunctionCall","src":"8758:13:28"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8772:26:28","statements":[{"nodeType":"YulAssignment","src":"8774:22:28","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"8787:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"8794:1:28","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8783:3:28"},"nodeType":"YulFunctionCall","src":"8783:13:28"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"8774:5:28"}]}]},"pre":{"nodeType":"YulBlock","src":"8754:3:28","statements":[]},"src":"8750:82:28"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"8400:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"8405:2:28","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8397:2:28"},"nodeType":"YulFunctionCall","src":"8397:11:28"},"nodeType":"YulIf","src":"8394:448:28"}]},"name":"clean_up_bytearray_end_slots_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"8356:5:28","type":""},{"name":"len","nodeType":"YulTypedName","src":"8363:3:28","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"8368:10:28","type":""}],"src":"8304:544:28"},{"body":{"nodeType":"YulBlock","src":"8938:81:28","statements":[{"nodeType":"YulAssignment","src":"8948:65:28","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8963:4:28"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8981:1:28","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"8984:3:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8977:3:28"},"nodeType":"YulFunctionCall","src":"8977:11:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8994:1:28","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"8990:3:28"},"nodeType":"YulFunctionCall","src":"8990:6:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"8973:3:28"},"nodeType":"YulFunctionCall","src":"8973:24:28"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"8969:3:28"},"nodeType":"YulFunctionCall","src":"8969:29:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8959:3:28"},"nodeType":"YulFunctionCall","src":"8959:40:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9005:1:28","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"9008:3:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9001:3:28"},"nodeType":"YulFunctionCall","src":"9001:11:28"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"8956:2:28"},"nodeType":"YulFunctionCall","src":"8956:57:28"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"8948:4:28"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"8915:4:28","type":""},{"name":"len","nodeType":"YulTypedName","src":"8921:3:28","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"8929:4:28","type":""}],"src":"8853:166:28"},{"body":{"nodeType":"YulBlock","src":"9118:1254:28","statements":[{"nodeType":"YulVariableDeclaration","src":"9128:24:28","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9148:3:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9142:5:28"},"nodeType":"YulFunctionCall","src":"9142:10:28"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"9132:6:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"9195:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"9197:16:28"},"nodeType":"YulFunctionCall","src":"9197:18:28"},"nodeType":"YulExpressionStatement","src":"9197:18:28"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"9167:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"9175:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9164:2:28"},"nodeType":"YulFunctionCall","src":"9164:30:28"},"nodeType":"YulIf","src":"9161:56:28"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"9269:4:28"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"9307:4:28"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"9301:5:28"},"nodeType":"YulFunctionCall","src":"9301:11:28"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"9275:25:28"},"nodeType":"YulFunctionCall","src":"9275:38:28"},{"name":"newLen","nodeType":"YulIdentifier","src":"9315:6:28"}],"functionName":{"name":"clean_up_bytearray_end_slots_bytes_storage","nodeType":"YulIdentifier","src":"9226:42:28"},"nodeType":"YulFunctionCall","src":"9226:96:28"},"nodeType":"YulExpressionStatement","src":"9226:96:28"},{"nodeType":"YulVariableDeclaration","src":"9331:18:28","value":{"kind":"number","nodeType":"YulLiteral","src":"9348:1:28","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"9335:9:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9358:23:28","value":{"kind":"number","nodeType":"YulLiteral","src":"9377:4:28","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"9362:11:28","type":""}]},{"nodeType":"YulAssignment","src":"9390:24:28","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"9403:11:28"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"9390:9:28"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"9460:655:28","statements":[{"nodeType":"YulVariableDeclaration","src":"9474:35:28","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"9493:6:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9505:2:28","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"9501:3:28"},"nodeType":"YulFunctionCall","src":"9501:7:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9489:3:28"},"nodeType":"YulFunctionCall","src":"9489:20:28"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"9478:7:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9522:48:28","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"9565:4:28"}],"functionName":{"name":"array_dataslot_bytes_storage","nodeType":"YulIdentifier","src":"9536:28:28"},"nodeType":"YulFunctionCall","src":"9536:34:28"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"9526:6:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9583:10:28","value":{"kind":"number","nodeType":"YulLiteral","src":"9592:1:28","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"9587:1:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"9670:172:28","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"9695:6:28"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9713:3:28"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"9718:9:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9709:3:28"},"nodeType":"YulFunctionCall","src":"9709:19:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9703:5:28"},"nodeType":"YulFunctionCall","src":"9703:26:28"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"9688:6:28"},"nodeType":"YulFunctionCall","src":"9688:42:28"},"nodeType":"YulExpressionStatement","src":"9688:42:28"},{"nodeType":"YulAssignment","src":"9747:24:28","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"9761:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"9769:1:28","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9757:3:28"},"nodeType":"YulFunctionCall","src":"9757:14:28"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"9747:6:28"}]},{"nodeType":"YulAssignment","src":"9788:40:28","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"9805:9:28"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"9816:11:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9801:3:28"},"nodeType":"YulFunctionCall","src":"9801:27:28"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"9788:9:28"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9617:1:28"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"9620:7:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9614:2:28"},"nodeType":"YulFunctionCall","src":"9614:14:28"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"9629:28:28","statements":[{"nodeType":"YulAssignment","src":"9631:24:28","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9640:1:28"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"9643:11:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9636:3:28"},"nodeType":"YulFunctionCall","src":"9636:19:28"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"9631:1:28"}]}]},"pre":{"nodeType":"YulBlock","src":"9610:3:28","statements":[]},"src":"9606:236:28"},{"body":{"nodeType":"YulBlock","src":"9890:166:28","statements":[{"nodeType":"YulVariableDeclaration","src":"9908:43:28","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9935:3:28"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"9940:9:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9931:3:28"},"nodeType":"YulFunctionCall","src":"9931:19:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9925:5:28"},"nodeType":"YulFunctionCall","src":"9925:26:28"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"9912:9:28","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"9975:6:28"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"9987:9:28"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10014:1:28","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"10017:6:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10010:3:28"},"nodeType":"YulFunctionCall","src":"10010:14:28"},{"kind":"number","nodeType":"YulLiteral","src":"10026:3:28","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10006:3:28"},"nodeType":"YulFunctionCall","src":"10006:24:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10036:1:28","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"10032:3:28"},"nodeType":"YulFunctionCall","src":"10032:6:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"10002:3:28"},"nodeType":"YulFunctionCall","src":"10002:37:28"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"9998:3:28"},"nodeType":"YulFunctionCall","src":"9998:42:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9983:3:28"},"nodeType":"YulFunctionCall","src":"9983:58:28"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"9968:6:28"},"nodeType":"YulFunctionCall","src":"9968:74:28"},"nodeType":"YulExpressionStatement","src":"9968:74:28"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"9861:7:28"},{"name":"newLen","nodeType":"YulIdentifier","src":"9870:6:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9858:2:28"},"nodeType":"YulFunctionCall","src":"9858:19:28"},"nodeType":"YulIf","src":"9855:201:28"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"10076:4:28"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10090:1:28","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"10093:6:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10086:3:28"},"nodeType":"YulFunctionCall","src":"10086:14:28"},{"kind":"number","nodeType":"YulLiteral","src":"10102:1:28","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10082:3:28"},"nodeType":"YulFunctionCall","src":"10082:22:28"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"10069:6:28"},"nodeType":"YulFunctionCall","src":"10069:36:28"},"nodeType":"YulExpressionStatement","src":"10069:36:28"}]},"nodeType":"YulCase","src":"9453:662:28","value":{"kind":"number","nodeType":"YulLiteral","src":"9458:1:28","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"10132:234:28","statements":[{"nodeType":"YulVariableDeclaration","src":"10146:14:28","value":{"kind":"number","nodeType":"YulLiteral","src":"10159:1:28","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"10150:5:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"10195:67:28","statements":[{"nodeType":"YulAssignment","src":"10213:35:28","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10232:3:28"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"10237:9:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10228:3:28"},"nodeType":"YulFunctionCall","src":"10228:19:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10222:5:28"},"nodeType":"YulFunctionCall","src":"10222:26:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"10213:5:28"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"10176:6:28"},"nodeType":"YulIf","src":"10173:89:28"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"10282:4:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10341:5:28"},{"name":"newLen","nodeType":"YulIdentifier","src":"10348:6:28"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"10288:52:28"},"nodeType":"YulFunctionCall","src":"10288:67:28"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"10275:6:28"},"nodeType":"YulFunctionCall","src":"10275:81:28"},"nodeType":"YulExpressionStatement","src":"10275:81:28"}]},"nodeType":"YulCase","src":"10124:242:28","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"9433:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"9441:2:28","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9430:2:28"},"nodeType":"YulFunctionCall","src":"9430:14:28"},"nodeType":"YulSwitch","src":"9423:943:28"}]},"name":"copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"9103:4:28","type":""},{"name":"src","nodeType":"YulTypedName","src":"9109:3:28","type":""}],"src":"9024:1348:28"},{"body":{"nodeType":"YulBlock","src":"10425:77:28","statements":[{"nodeType":"YulAssignment","src":"10435:16:28","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10446:1:28"},{"name":"y","nodeType":"YulIdentifier","src":"10449:1:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10442:3:28"},"nodeType":"YulFunctionCall","src":"10442:9:28"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"10435:3:28"}]},{"body":{"nodeType":"YulBlock","src":"10474:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"10476:16:28"},"nodeType":"YulFunctionCall","src":"10476:18:28"},"nodeType":"YulExpressionStatement","src":"10476:18:28"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"10466:1:28"},{"name":"sum","nodeType":"YulIdentifier","src":"10469:3:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10463:2:28"},"nodeType":"YulFunctionCall","src":"10463:10:28"},"nodeType":"YulIf","src":"10460:36:28"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"10408:1:28","type":""},{"name":"y","nodeType":"YulTypedName","src":"10411:1:28","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"10417:3:28","type":""}],"src":"10377:125:28"},{"body":{"nodeType":"YulBlock","src":"10608:76:28","statements":[{"nodeType":"YulAssignment","src":"10618:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10630:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"10641:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10626:3:28"},"nodeType":"YulFunctionCall","src":"10626:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10618:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10660:9:28"},{"name":"value0","nodeType":"YulIdentifier","src":"10671:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10653:6:28"},"nodeType":"YulFunctionCall","src":"10653:25:28"},"nodeType":"YulExpressionStatement","src":"10653:25:28"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10577:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10588:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10599:4:28","type":""}],"src":"10507:177:28"},{"body":{"nodeType":"YulBlock","src":"10863:229:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10880:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"10891:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10873:6:28"},"nodeType":"YulFunctionCall","src":"10873:21:28"},"nodeType":"YulExpressionStatement","src":"10873:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10914:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"10925:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10910:3:28"},"nodeType":"YulFunctionCall","src":"10910:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"10930:2:28","type":"","value":"39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10903:6:28"},"nodeType":"YulFunctionCall","src":"10903:30:28"},"nodeType":"YulExpressionStatement","src":"10903:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10953:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"10964:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10949:3:28"},"nodeType":"YulFunctionCall","src":"10949:18:28"},{"hexValue":"4c69624469616d6f6e643a2054696d656c6f636b20706572696f64206e6f7420","kind":"string","nodeType":"YulLiteral","src":"10969:34:28","type":"","value":"LibDiamond: Timelock period not "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10942:6:28"},"nodeType":"YulFunctionCall","src":"10942:62:28"},"nodeType":"YulExpressionStatement","src":"10942:62:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11024:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"11035:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11020:3:28"},"nodeType":"YulFunctionCall","src":"11020:18:28"},{"hexValue":"656c6170736564","kind":"string","nodeType":"YulLiteral","src":"11040:9:28","type":"","value":"elapsed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11013:6:28"},"nodeType":"YulFunctionCall","src":"11013:37:28"},"nodeType":"YulExpressionStatement","src":"11013:37:28"},{"nodeType":"YulAssignment","src":"11059:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11071:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"11082:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11067:3:28"},"nodeType":"YulFunctionCall","src":"11067:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11059:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_82bc3b95773eabe3ca214efb97c15a90d66aca7ebfe83785362b581f73779158__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10840:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10854:4:28","type":""}],"src":"10689:403:28"},{"body":{"nodeType":"YulBlock","src":"11271:229:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11288:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"11299:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11281:6:28"},"nodeType":"YulFunctionCall","src":"11281:21:28"},"nodeType":"YulExpressionStatement","src":"11281:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11322:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"11333:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11318:3:28"},"nodeType":"YulFunctionCall","src":"11318:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"11338:2:28","type":"","value":"39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11311:6:28"},"nodeType":"YulFunctionCall","src":"11311:30:28"},"nodeType":"YulExpressionStatement","src":"11311:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11361:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"11372:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11357:3:28"},"nodeType":"YulFunctionCall","src":"11357:18:28"},{"hexValue":"4c69624469616d6f6e644375743a20496e636f72726563742046616365744375","kind":"string","nodeType":"YulLiteral","src":"11377:34:28","type":"","value":"LibDiamondCut: Incorrect FacetCu"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11350:6:28"},"nodeType":"YulFunctionCall","src":"11350:62:28"},"nodeType":"YulExpressionStatement","src":"11350:62:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11432:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"11443:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11428:3:28"},"nodeType":"YulFunctionCall","src":"11428:18:28"},{"hexValue":"74416374696f6e","kind":"string","nodeType":"YulLiteral","src":"11448:9:28","type":"","value":"tAction"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11421:6:28"},"nodeType":"YulFunctionCall","src":"11421:37:28"},"nodeType":"YulExpressionStatement","src":"11421:37:28"},{"nodeType":"YulAssignment","src":"11467:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11479:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"11490:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11475:3:28"},"nodeType":"YulFunctionCall","src":"11475:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11467:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_48267d8daf5ea9c6bbad1fe9c53dc4c04a2a01b2b85bad432956cf42f45b2f54__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11248:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11262:4:28","type":""}],"src":"11097:403:28"},{"body":{"nodeType":"YulBlock","src":"11549:60:28","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11566:3:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11575:5:28"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11590:3:28","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"11595:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11586:3:28"},"nodeType":"YulFunctionCall","src":"11586:11:28"},{"kind":"number","nodeType":"YulLiteral","src":"11599:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11582:3:28"},"nodeType":"YulFunctionCall","src":"11582:19:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11571:3:28"},"nodeType":"YulFunctionCall","src":"11571:31:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11559:6:28"},"nodeType":"YulFunctionCall","src":"11559:44:28"},"nodeType":"YulExpressionStatement","src":"11559:44:28"}]},"name":"abi_encode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11533:5:28","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11540:3:28","type":""}],"src":"11505:104:28"},{"body":{"nodeType":"YulBlock","src":"11680:184:28","statements":[{"nodeType":"YulVariableDeclaration","src":"11690:10:28","value":{"kind":"number","nodeType":"YulLiteral","src":"11699:1:28","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"11694:1:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"11759:63:28","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"11784:3:28"},{"name":"i","nodeType":"YulIdentifier","src":"11789:1:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11780:3:28"},"nodeType":"YulFunctionCall","src":"11780:11:28"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"11803:3:28"},{"name":"i","nodeType":"YulIdentifier","src":"11808:1:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11799:3:28"},"nodeType":"YulFunctionCall","src":"11799:11:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11793:5:28"},"nodeType":"YulFunctionCall","src":"11793:18:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11773:6:28"},"nodeType":"YulFunctionCall","src":"11773:39:28"},"nodeType":"YulExpressionStatement","src":"11773:39:28"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11720:1:28"},{"name":"length","nodeType":"YulIdentifier","src":"11723:6:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11717:2:28"},"nodeType":"YulFunctionCall","src":"11717:13:28"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"11731:19:28","statements":[{"nodeType":"YulAssignment","src":"11733:15:28","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11742:1:28"},{"kind":"number","nodeType":"YulLiteral","src":"11745:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11738:3:28"},"nodeType":"YulFunctionCall","src":"11738:10:28"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"11733:1:28"}]}]},"pre":{"nodeType":"YulBlock","src":"11713:3:28","statements":[]},"src":"11709:113:28"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"11842:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"11847:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11838:3:28"},"nodeType":"YulFunctionCall","src":"11838:16:28"},{"kind":"number","nodeType":"YulLiteral","src":"11856:1:28","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11831:6:28"},"nodeType":"YulFunctionCall","src":"11831:27:28"},"nodeType":"YulExpressionStatement","src":"11831:27:28"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"11658:3:28","type":""},{"name":"dst","nodeType":"YulTypedName","src":"11663:3:28","type":""},{"name":"length","nodeType":"YulTypedName","src":"11668:6:28","type":""}],"src":"11614:250:28"},{"body":{"nodeType":"YulBlock","src":"11918:221:28","statements":[{"nodeType":"YulVariableDeclaration","src":"11928:26:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11948:5:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11942:5:28"},"nodeType":"YulFunctionCall","src":"11942:12:28"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"11932:6:28","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11970:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"11975:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11963:6:28"},"nodeType":"YulFunctionCall","src":"11963:19:28"},"nodeType":"YulExpressionStatement","src":"11963:19:28"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12030:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"12037:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12026:3:28"},"nodeType":"YulFunctionCall","src":"12026:16:28"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12048:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"12053:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12044:3:28"},"nodeType":"YulFunctionCall","src":"12044:14:28"},{"name":"length","nodeType":"YulIdentifier","src":"12060:6:28"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"11991:34:28"},"nodeType":"YulFunctionCall","src":"11991:76:28"},"nodeType":"YulExpressionStatement","src":"11991:76:28"},{"nodeType":"YulAssignment","src":"12076:57:28","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12091:3:28"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12104:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"12112:2:28","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12100:3:28"},"nodeType":"YulFunctionCall","src":"12100:15:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12121:2:28","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"12117:3:28"},"nodeType":"YulFunctionCall","src":"12117:7:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12096:3:28"},"nodeType":"YulFunctionCall","src":"12096:29:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12087:3:28"},"nodeType":"YulFunctionCall","src":"12087:39:28"},{"kind":"number","nodeType":"YulLiteral","src":"12128:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12083:3:28"},"nodeType":"YulFunctionCall","src":"12083:50:28"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12076:3:28"}]}]},"name":"abi_encode_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11895:5:28","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11902:3:28","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11910:3:28","type":""}],"src":"11869:270:28"},{"body":{"nodeType":"YulBlock","src":"12421:1813:28","statements":[{"nodeType":"YulVariableDeclaration","src":"12431:12:28","value":{"kind":"number","nodeType":"YulLiteral","src":"12441:2:28","type":"","value":"96"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"12435:2:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12452:32:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12470:9:28"},{"name":"_1","nodeType":"YulIdentifier","src":"12481:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12466:3:28"},"nodeType":"YulFunctionCall","src":"12466:18:28"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"12456:6:28","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12500:9:28"},{"name":"_1","nodeType":"YulIdentifier","src":"12511:2:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12493:6:28"},"nodeType":"YulFunctionCall","src":"12493:21:28"},"nodeType":"YulExpressionStatement","src":"12493:21:28"},{"nodeType":"YulVariableDeclaration","src":"12523:17:28","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"12534:6:28"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"12527:3:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12549:27:28","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12569:6:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12563:5:28"},"nodeType":"YulFunctionCall","src":"12563:13:28"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"12553:6:28","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"12592:6:28"},{"name":"length","nodeType":"YulIdentifier","src":"12600:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12585:6:28"},"nodeType":"YulFunctionCall","src":"12585:22:28"},"nodeType":"YulExpressionStatement","src":"12585:22:28"},{"nodeType":"YulVariableDeclaration","src":"12616:13:28","value":{"kind":"number","nodeType":"YulLiteral","src":"12626:3:28","type":"","value":"128"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"12620:2:28","type":""}]},{"nodeType":"YulAssignment","src":"12638:25:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12649:9:28"},{"name":"_2","nodeType":"YulIdentifier","src":"12660:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12645:3:28"},"nodeType":"YulFunctionCall","src":"12645:18:28"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12638:3:28"}]},{"nodeType":"YulVariableDeclaration","src":"12672:53:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12694:9:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12709:1:28","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"12712:6:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12705:3:28"},"nodeType":"YulFunctionCall","src":"12705:14:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12690:3:28"},"nodeType":"YulFunctionCall","src":"12690:30:28"},{"name":"_2","nodeType":"YulIdentifier","src":"12722:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12686:3:28"},"nodeType":"YulFunctionCall","src":"12686:39:28"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"12676:6:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12734:14:28","value":{"kind":"number","nodeType":"YulLiteral","src":"12744:4:28","type":"","value":"0x20"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"12738:2:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12757:29:28","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12775:6:28"},{"name":"_3","nodeType":"YulIdentifier","src":"12783:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12771:3:28"},"nodeType":"YulFunctionCall","src":"12771:15:28"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"12761:6:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12795:10:28","value":{"kind":"number","nodeType":"YulLiteral","src":"12804:1:28","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"12799:1:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"12863:1200:28","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12884:3:28"},{"arguments":[{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"12897:6:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"12905:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12893:3:28"},"nodeType":"YulFunctionCall","src":"12893:22:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12921:3:28","type":"","value":"127"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"12917:3:28"},"nodeType":"YulFunctionCall","src":"12917:8:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12889:3:28"},"nodeType":"YulFunctionCall","src":"12889:37:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12877:6:28"},"nodeType":"YulFunctionCall","src":"12877:50:28"},"nodeType":"YulExpressionStatement","src":"12877:50:28"},{"nodeType":"YulVariableDeclaration","src":"12940:23:28","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"12956:6:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12950:5:28"},"nodeType":"YulFunctionCall","src":"12950:13:28"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"12944:2:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12976:29:28","value":{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"12994:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"13002:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12990:3:28"},"nodeType":"YulFunctionCall","src":"12990:15:28"},"variables":[{"name":"tail_3","nodeType":"YulTypedName","src":"12980:6:28","type":""}]},{"expression":{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"13025:6:28"},{"arguments":[{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"13043:2:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13037:5:28"},"nodeType":"YulFunctionCall","src":"13037:9:28"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13056:3:28","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"13061:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"13052:3:28"},"nodeType":"YulFunctionCall","src":"13052:11:28"},{"kind":"number","nodeType":"YulLiteral","src":"13065:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13048:3:28"},"nodeType":"YulFunctionCall","src":"13048:19:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13033:3:28"},"nodeType":"YulFunctionCall","src":"13033:35:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13018:6:28"},"nodeType":"YulFunctionCall","src":"13018:51:28"},"nodeType":"YulExpressionStatement","src":"13018:51:28"},{"nodeType":"YulVariableDeclaration","src":"13082:38:28","value":{"arguments":[{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"13112:2:28"},{"name":"_3","nodeType":"YulIdentifier","src":"13116:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13108:3:28"},"nodeType":"YulFunctionCall","src":"13108:11:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13102:5:28"},"nodeType":"YulFunctionCall","src":"13102:18:28"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"13086:12:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"13176:127:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13201:1:28","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13208:3:28","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"13213:10:28","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"13204:3:28"},"nodeType":"YulFunctionCall","src":"13204:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13194:6:28"},"nodeType":"YulFunctionCall","src":"13194:31:28"},"nodeType":"YulExpressionStatement","src":"13194:31:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13249:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"13252:4:28","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13242:6:28"},"nodeType":"YulFunctionCall","src":"13242:15:28"},"nodeType":"YulExpressionStatement","src":"13242:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13281:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13284:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13274:6:28"},"nodeType":"YulFunctionCall","src":"13274:15:28"},"nodeType":"YulExpressionStatement","src":"13274:15:28"}]},"condition":{"arguments":[{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"13146:12:28"},{"kind":"number","nodeType":"YulLiteral","src":"13160:1:28","type":"","value":"3"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13143:2:28"},"nodeType":"YulFunctionCall","src":"13143:19:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13136:6:28"},"nodeType":"YulFunctionCall","src":"13136:27:28"},"nodeType":"YulIf","src":"13133:170:28"},{"expression":{"arguments":[{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"13327:6:28"},{"name":"_3","nodeType":"YulIdentifier","src":"13335:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13323:3:28"},"nodeType":"YulFunctionCall","src":"13323:15:28"},{"name":"memberValue0","nodeType":"YulIdentifier","src":"13340:12:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13316:6:28"},"nodeType":"YulFunctionCall","src":"13316:37:28"},"nodeType":"YulExpressionStatement","src":"13316:37:28"},{"nodeType":"YulVariableDeclaration","src":"13366:14:28","value":{"kind":"number","nodeType":"YulLiteral","src":"13376:4:28","type":"","value":"0x40"},"variables":[{"name":"_5","nodeType":"YulTypedName","src":"13370:2:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13393:40:28","value":{"arguments":[{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"13425:2:28"},{"name":"_5","nodeType":"YulIdentifier","src":"13429:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13421:3:28"},"nodeType":"YulFunctionCall","src":"13421:11:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13415:5:28"},"nodeType":"YulFunctionCall","src":"13415:18:28"},"variables":[{"name":"memberValue0_1","nodeType":"YulTypedName","src":"13397:14:28","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"13457:6:28"},{"name":"_5","nodeType":"YulIdentifier","src":"13465:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13453:3:28"},"nodeType":"YulFunctionCall","src":"13453:15:28"},{"name":"_1","nodeType":"YulIdentifier","src":"13470:2:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13446:6:28"},"nodeType":"YulFunctionCall","src":"13446:27:28"},"nodeType":"YulExpressionStatement","src":"13446:27:28"},{"nodeType":"YulVariableDeclaration","src":"13486:19:28","value":{"name":"tail_3","nodeType":"YulIdentifier","src":"13499:6:28"},"variables":[{"name":"pos_1","nodeType":"YulTypedName","src":"13490:5:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13518:37:28","value":{"arguments":[{"name":"memberValue0_1","nodeType":"YulIdentifier","src":"13540:14:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13534:5:28"},"nodeType":"YulFunctionCall","src":"13534:21:28"},"variables":[{"name":"length_1","nodeType":"YulTypedName","src":"13522:8:28","type":""}]},{"expression":{"arguments":[{"name":"tail_3","nodeType":"YulIdentifier","src":"13575:6:28"},{"name":"length_1","nodeType":"YulIdentifier","src":"13583:8:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13568:6:28"},"nodeType":"YulFunctionCall","src":"13568:24:28"},"nodeType":"YulExpressionStatement","src":"13568:24:28"},{"nodeType":"YulAssignment","src":"13605:24:28","value":{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"13618:6:28"},{"name":"_2","nodeType":"YulIdentifier","src":"13626:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13614:3:28"},"nodeType":"YulFunctionCall","src":"13614:15:28"},"variableNames":[{"name":"pos_1","nodeType":"YulIdentifier","src":"13605:5:28"}]},{"nodeType":"YulVariableDeclaration","src":"13642:39:28","value":{"arguments":[{"name":"memberValue0_1","nodeType":"YulIdentifier","src":"13662:14:28"},{"name":"_3","nodeType":"YulIdentifier","src":"13678:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13658:3:28"},"nodeType":"YulFunctionCall","src":"13658:23:28"},"variables":[{"name":"srcPtr_1","nodeType":"YulTypedName","src":"13646:8:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13694:12:28","value":{"kind":"number","nodeType":"YulLiteral","src":"13705:1:28","type":"","value":"0"},"variables":[{"name":"i_1","nodeType":"YulTypedName","src":"13698:3:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"13780:175:28","statements":[{"expression":{"arguments":[{"name":"pos_1","nodeType":"YulIdentifier","src":"13805:5:28"},{"arguments":[{"arguments":[{"name":"srcPtr_1","nodeType":"YulIdentifier","src":"13822:8:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13816:5:28"},"nodeType":"YulFunctionCall","src":"13816:15:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13837:3:28","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"13842:10:28","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"13833:3:28"},"nodeType":"YulFunctionCall","src":"13833:20:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13812:3:28"},"nodeType":"YulFunctionCall","src":"13812:42:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13798:6:28"},"nodeType":"YulFunctionCall","src":"13798:57:28"},"nodeType":"YulExpressionStatement","src":"13798:57:28"},{"nodeType":"YulAssignment","src":"13872:23:28","value":{"arguments":[{"name":"pos_1","nodeType":"YulIdentifier","src":"13885:5:28"},{"name":"_3","nodeType":"YulIdentifier","src":"13892:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13881:3:28"},"nodeType":"YulFunctionCall","src":"13881:14:28"},"variableNames":[{"name":"pos_1","nodeType":"YulIdentifier","src":"13872:5:28"}]},{"nodeType":"YulAssignment","src":"13912:29:28","value":{"arguments":[{"name":"srcPtr_1","nodeType":"YulIdentifier","src":"13928:8:28"},{"name":"_3","nodeType":"YulIdentifier","src":"13938:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13924:3:28"},"nodeType":"YulFunctionCall","src":"13924:17:28"},"variableNames":[{"name":"srcPtr_1","nodeType":"YulIdentifier","src":"13912:8:28"}]}]},"condition":{"arguments":[{"name":"i_1","nodeType":"YulIdentifier","src":"13730:3:28"},{"name":"length_1","nodeType":"YulIdentifier","src":"13735:8:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13727:2:28"},"nodeType":"YulFunctionCall","src":"13727:17:28"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"13745:22:28","statements":[{"nodeType":"YulAssignment","src":"13747:18:28","value":{"arguments":[{"name":"i_1","nodeType":"YulIdentifier","src":"13758:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"13763:1:28","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13754:3:28"},"nodeType":"YulFunctionCall","src":"13754:11:28"},"variableNames":[{"name":"i_1","nodeType":"YulIdentifier","src":"13747:3:28"}]}]},"pre":{"nodeType":"YulBlock","src":"13723:3:28","statements":[]},"src":"13719:236:28"},{"nodeType":"YulAssignment","src":"13968:15:28","value":{"name":"pos_1","nodeType":"YulIdentifier","src":"13978:5:28"},"variableNames":[{"name":"tail_2","nodeType":"YulIdentifier","src":"13968:6:28"}]},{"nodeType":"YulAssignment","src":"13996:25:28","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"14010:6:28"},{"name":"_3","nodeType":"YulIdentifier","src":"14018:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14006:3:28"},"nodeType":"YulFunctionCall","src":"14006:15:28"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"13996:6:28"}]},{"nodeType":"YulAssignment","src":"14034:19:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14045:3:28"},{"name":"_3","nodeType":"YulIdentifier","src":"14050:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14041:3:28"},"nodeType":"YulFunctionCall","src":"14041:12:28"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14034:3:28"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"12825:1:28"},{"name":"length","nodeType":"YulIdentifier","src":"12828:6:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12822:2:28"},"nodeType":"YulFunctionCall","src":"12822:13:28"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"12836:18:28","statements":[{"nodeType":"YulAssignment","src":"12838:14:28","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"12847:1:28"},{"kind":"number","nodeType":"YulLiteral","src":"12850:1:28","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12843:3:28"},"nodeType":"YulFunctionCall","src":"12843:9:28"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"12838:1:28"}]}]},"pre":{"nodeType":"YulBlock","src":"12818:3:28","statements":[]},"src":"12814:1249:28"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14091:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14103:9:28"},{"name":"_3","nodeType":"YulIdentifier","src":"14114:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14099:3:28"},"nodeType":"YulFunctionCall","src":"14099:18:28"}],"functionName":{"name":"abi_encode_address","nodeType":"YulIdentifier","src":"14072:18:28"},"nodeType":"YulFunctionCall","src":"14072:46:28"},"nodeType":"YulExpressionStatement","src":"14072:46:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14138:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"14149:4:28","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14134:3:28"},"nodeType":"YulFunctionCall","src":"14134:20:28"},{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"14160:6:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"14168:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14156:3:28"},"nodeType":"YulFunctionCall","src":"14156:22:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14127:6:28"},"nodeType":"YulFunctionCall","src":"14127:52:28"},"nodeType":"YulExpressionStatement","src":"14127:52:28"},{"nodeType":"YulAssignment","src":"14188:40:28","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"14213:6:28"},{"name":"tail_2","nodeType":"YulIdentifier","src":"14221:6:28"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"14196:16:28"},"nodeType":"YulFunctionCall","src":"14196:32:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14188:4:28"}]}]},"name":"abi_encode_tuple_t_array$_t_struct$_FacetCut_$2373_memory_ptr_$dyn_memory_ptr_t_address_t_bytes_memory_ptr__to_t_array$_t_struct$_FacetCut_$2373_memory_ptr_$dyn_memory_ptr_t_address_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12374:9:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12385:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12393:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12401:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12412:4:28","type":""}],"src":"12144:2090:28"},{"body":{"nodeType":"YulBlock","src":"14413:233:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14430:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"14441:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14423:6:28"},"nodeType":"YulFunctionCall","src":"14423:21:28"},"nodeType":"YulExpressionStatement","src":"14423:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14464:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"14475:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14460:3:28"},"nodeType":"YulFunctionCall","src":"14460:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"14480:2:28","type":"","value":"43"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14453:6:28"},"nodeType":"YulFunctionCall","src":"14453:30:28"},"nodeType":"YulExpressionStatement","src":"14453:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14503:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"14514:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14499:3:28"},"nodeType":"YulFunctionCall","src":"14499:18:28"},{"hexValue":"4c69624469616d6f6e644375743a204e6f2073656c6563746f727320696e2066","kind":"string","nodeType":"YulLiteral","src":"14519:34:28","type":"","value":"LibDiamondCut: No selectors in f"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14492:6:28"},"nodeType":"YulFunctionCall","src":"14492:62:28"},"nodeType":"YulExpressionStatement","src":"14492:62:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14574:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"14585:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14570:3:28"},"nodeType":"YulFunctionCall","src":"14570:18:28"},{"hexValue":"6163657420746f20637574","kind":"string","nodeType":"YulLiteral","src":"14590:13:28","type":"","value":"acet to cut"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14563:6:28"},"nodeType":"YulFunctionCall","src":"14563:41:28"},"nodeType":"YulExpressionStatement","src":"14563:41:28"},{"nodeType":"YulAssignment","src":"14613:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14625:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"14636:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14621:3:28"},"nodeType":"YulFunctionCall","src":"14621:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14613:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_1ffc682bcfedefd5e93ba9ed0c2d1bc0b18319886e3b4bd28a03a3d3729f85c0__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14390:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14404:4:28","type":""}],"src":"14239:407:28"},{"body":{"nodeType":"YulBlock","src":"14825:234:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14842:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"14853:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14835:6:28"},"nodeType":"YulFunctionCall","src":"14835:21:28"},"nodeType":"YulExpressionStatement","src":"14835:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14876:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"14887:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14872:3:28"},"nodeType":"YulFunctionCall","src":"14872:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"14892:2:28","type":"","value":"44"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14865:6:28"},"nodeType":"YulFunctionCall","src":"14865:30:28"},"nodeType":"YulExpressionStatement","src":"14865:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14915:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"14926:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14911:3:28"},"nodeType":"YulFunctionCall","src":"14911:18:28"},{"hexValue":"4c69624469616d6f6e644375743a204164642066616365742063616e27742062","kind":"string","nodeType":"YulLiteral","src":"14931:34:28","type":"","value":"LibDiamondCut: Add facet can't b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14904:6:28"},"nodeType":"YulFunctionCall","src":"14904:62:28"},"nodeType":"YulExpressionStatement","src":"14904:62:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14986:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"14997:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14982:3:28"},"nodeType":"YulFunctionCall","src":"14982:18:28"},{"hexValue":"652061646472657373283029","kind":"string","nodeType":"YulLiteral","src":"15002:14:28","type":"","value":"e address(0)"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14975:6:28"},"nodeType":"YulFunctionCall","src":"14975:42:28"},"nodeType":"YulExpressionStatement","src":"14975:42:28"},{"nodeType":"YulAssignment","src":"15026:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15038:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"15049:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15034:3:28"},"nodeType":"YulFunctionCall","src":"15034:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15026:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_64609d8b93c93a06b98d7db7a87b04044cd4a52c5661d603bb9b90ad8b914a3a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14802:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14816:4:28","type":""}],"src":"14651:408:28"},{"body":{"nodeType":"YulBlock","src":"15238:243:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15255:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"15266:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15248:6:28"},"nodeType":"YulFunctionCall","src":"15248:21:28"},"nodeType":"YulExpressionStatement","src":"15248:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15289:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"15300:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15285:3:28"},"nodeType":"YulFunctionCall","src":"15285:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"15305:2:28","type":"","value":"53"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15278:6:28"},"nodeType":"YulFunctionCall","src":"15278:30:28"},"nodeType":"YulExpressionStatement","src":"15278:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15328:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"15339:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15324:3:28"},"nodeType":"YulFunctionCall","src":"15324:18:28"},{"hexValue":"4c69624469616d6f6e644375743a2043616e2774206164642066756e6374696f","kind":"string","nodeType":"YulLiteral","src":"15344:34:28","type":"","value":"LibDiamondCut: Can't add functio"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15317:6:28"},"nodeType":"YulFunctionCall","src":"15317:62:28"},"nodeType":"YulExpressionStatement","src":"15317:62:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15399:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"15410:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15395:3:28"},"nodeType":"YulFunctionCall","src":"15395:18:28"},{"hexValue":"6e207468617420616c726561647920657869737473","kind":"string","nodeType":"YulLiteral","src":"15415:23:28","type":"","value":"n that already exists"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15388:6:28"},"nodeType":"YulFunctionCall","src":"15388:51:28"},"nodeType":"YulExpressionStatement","src":"15388:51:28"},{"nodeType":"YulAssignment","src":"15448:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15460:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"15471:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15456:3:28"},"nodeType":"YulFunctionCall","src":"15456:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15448:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_99a7418ee014d613f46da44561258cdbb58064508097483a319062b99fa37700__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15215:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15229:4:28","type":""}],"src":"15064:417:28"},{"body":{"nodeType":"YulBlock","src":"15532:171:28","statements":[{"nodeType":"YulVariableDeclaration","src":"15542:36:28","value":{"kind":"number","nodeType":"YulLiteral","src":"15552:26:28","type":"","value":"0xffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"15546:2:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15587:29:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15606:5:28"},{"name":"_1","nodeType":"YulIdentifier","src":"15613:2:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15602:3:28"},"nodeType":"YulFunctionCall","src":"15602:14:28"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"15591:7:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"15644:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"15646:16:28"},"nodeType":"YulFunctionCall","src":"15646:18:28"},"nodeType":"YulExpressionStatement","src":"15646:18:28"}]},"condition":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"15631:7:28"},{"name":"_1","nodeType":"YulIdentifier","src":"15640:2:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"15628:2:28"},"nodeType":"YulFunctionCall","src":"15628:15:28"},"nodeType":"YulIf","src":"15625:41:28"},{"nodeType":"YulAssignment","src":"15675:22:28","value":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"15686:7:28"},{"kind":"number","nodeType":"YulLiteral","src":"15695:1:28","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15682:3:28"},"nodeType":"YulFunctionCall","src":"15682:15:28"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"15675:3:28"}]}]},"name":"increment_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15514:5:28","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"15524:3:28","type":""}],"src":"15486:217:28"},{"body":{"nodeType":"YulBlock","src":"15882:246:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15899:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"15910:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15892:6:28"},"nodeType":"YulFunctionCall","src":"15892:21:28"},"nodeType":"YulExpressionStatement","src":"15892:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15933:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"15944:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15929:3:28"},"nodeType":"YulFunctionCall","src":"15929:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"15949:2:28","type":"","value":"56"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15922:6:28"},"nodeType":"YulFunctionCall","src":"15922:30:28"},"nodeType":"YulExpressionStatement","src":"15922:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15972:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"15983:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15968:3:28"},"nodeType":"YulFunctionCall","src":"15968:18:28"},{"hexValue":"4c69624469616d6f6e644375743a2043616e2774207265706c6163652066756e","kind":"string","nodeType":"YulLiteral","src":"15988:34:28","type":"","value":"LibDiamondCut: Can't replace fun"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15961:6:28"},"nodeType":"YulFunctionCall","src":"15961:62:28"},"nodeType":"YulExpressionStatement","src":"15961:62:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16043:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"16054:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16039:3:28"},"nodeType":"YulFunctionCall","src":"16039:18:28"},{"hexValue":"6374696f6e20776974682073616d652066756e6374696f6e","kind":"string","nodeType":"YulLiteral","src":"16059:26:28","type":"","value":"ction with same function"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16032:6:28"},"nodeType":"YulFunctionCall","src":"16032:54:28"},"nodeType":"YulExpressionStatement","src":"16032:54:28"},{"nodeType":"YulAssignment","src":"16095:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16107:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"16118:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16103:3:28"},"nodeType":"YulFunctionCall","src":"16103:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16095:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_b5a7112edf707196456f338fdcc19cd849be6cb8c0d166bcd035f4cfb00e7078__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15859:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15873:4:28","type":""}],"src":"15708:420:28"},{"body":{"nodeType":"YulBlock","src":"16307:244:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16324:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"16335:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16317:6:28"},"nodeType":"YulFunctionCall","src":"16317:21:28"},"nodeType":"YulExpressionStatement","src":"16317:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16358:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"16369:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16354:3:28"},"nodeType":"YulFunctionCall","src":"16354:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"16374:2:28","type":"","value":"54"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16347:6:28"},"nodeType":"YulFunctionCall","src":"16347:30:28"},"nodeType":"YulExpressionStatement","src":"16347:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16397:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"16408:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16393:3:28"},"nodeType":"YulFunctionCall","src":"16393:18:28"},{"hexValue":"4c69624469616d6f6e644375743a2052656d6f76652066616365742061646472","kind":"string","nodeType":"YulLiteral","src":"16413:34:28","type":"","value":"LibDiamondCut: Remove facet addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16386:6:28"},"nodeType":"YulFunctionCall","src":"16386:62:28"},"nodeType":"YulExpressionStatement","src":"16386:62:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16468:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"16479:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16464:3:28"},"nodeType":"YulFunctionCall","src":"16464:18:28"},{"hexValue":"657373206d7573742062652061646472657373283029","kind":"string","nodeType":"YulLiteral","src":"16484:24:28","type":"","value":"ess must be address(0)"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16457:6:28"},"nodeType":"YulFunctionCall","src":"16457:52:28"},"nodeType":"YulExpressionStatement","src":"16457:52:28"},{"nodeType":"YulAssignment","src":"16518:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16530:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"16541:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16526:3:28"},"nodeType":"YulFunctionCall","src":"16526:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16518:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_b739aae768f79b96e91d9f66398733516895e39eb09ee54a795b49dcc77504d4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16284:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16298:4:28","type":""}],"src":"16133:418:28"},{"body":{"nodeType":"YulBlock","src":"16730:250:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16747:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"16758:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16740:6:28"},"nodeType":"YulFunctionCall","src":"16740:21:28"},"nodeType":"YulExpressionStatement","src":"16740:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16781:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"16792:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16777:3:28"},"nodeType":"YulFunctionCall","src":"16777:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"16797:2:28","type":"","value":"60"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16770:6:28"},"nodeType":"YulFunctionCall","src":"16770:30:28"},"nodeType":"YulExpressionStatement","src":"16770:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16820:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"16831:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16816:3:28"},"nodeType":"YulFunctionCall","src":"16816:18:28"},{"hexValue":"4c69624469616d6f6e644375743a205f696e6974206973206164647265737328","kind":"string","nodeType":"YulLiteral","src":"16836:34:28","type":"","value":"LibDiamondCut: _init is address("}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16809:6:28"},"nodeType":"YulFunctionCall","src":"16809:62:28"},"nodeType":"YulExpressionStatement","src":"16809:62:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16891:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"16902:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16887:3:28"},"nodeType":"YulFunctionCall","src":"16887:18:28"},{"hexValue":"3029206275745f63616c6c64617461206973206e6f7420656d707479","kind":"string","nodeType":"YulLiteral","src":"16907:30:28","type":"","value":"0) but_calldata is not empty"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16880:6:28"},"nodeType":"YulFunctionCall","src":"16880:58:28"},"nodeType":"YulExpressionStatement","src":"16880:58:28"},{"nodeType":"YulAssignment","src":"16947:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16959:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"16970:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16955:3:28"},"nodeType":"YulFunctionCall","src":"16955:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16947:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_046c761a688d1dc3c500562bc5aaa3544f01f394f9bb3b69aa2a950a45afb1f8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16707:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16721:4:28","type":""}],"src":"16556:424:28"},{"body":{"nodeType":"YulBlock","src":"17159:251:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17176:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"17187:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17169:6:28"},"nodeType":"YulFunctionCall","src":"17169:21:28"},"nodeType":"YulExpressionStatement","src":"17169:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17210:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"17221:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17206:3:28"},"nodeType":"YulFunctionCall","src":"17206:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"17226:2:28","type":"","value":"61"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17199:6:28"},"nodeType":"YulFunctionCall","src":"17199:30:28"},"nodeType":"YulExpressionStatement","src":"17199:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17249:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"17260:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17245:3:28"},"nodeType":"YulFunctionCall","src":"17245:18:28"},{"hexValue":"4c69624469616d6f6e644375743a205f63616c6c6461746120697320656d7074","kind":"string","nodeType":"YulLiteral","src":"17265:34:28","type":"","value":"LibDiamondCut: _calldata is empt"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17238:6:28"},"nodeType":"YulFunctionCall","src":"17238:62:28"},"nodeType":"YulExpressionStatement","src":"17238:62:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17320:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"17331:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17316:3:28"},"nodeType":"YulFunctionCall","src":"17316:18:28"},{"hexValue":"7920627574205f696e6974206973206e6f742061646472657373283029","kind":"string","nodeType":"YulLiteral","src":"17336:31:28","type":"","value":"y but _init is not address(0)"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17309:6:28"},"nodeType":"YulFunctionCall","src":"17309:59:28"},"nodeType":"YulExpressionStatement","src":"17309:59:28"},{"nodeType":"YulAssignment","src":"17377:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17389:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"17400:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17385:3:28"},"nodeType":"YulFunctionCall","src":"17385:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17377:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_868d165ec2461661b624442252aed6a645399bfae7b60083a77ea1b61b084042__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17136:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17150:4:28","type":""}],"src":"16985:425:28"},{"body":{"nodeType":"YulBlock","src":"17552:150:28","statements":[{"nodeType":"YulVariableDeclaration","src":"17562:27:28","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17582:6:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17576:5:28"},"nodeType":"YulFunctionCall","src":"17576:13:28"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"17566:6:28","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17637:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"17645:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17633:3:28"},"nodeType":"YulFunctionCall","src":"17633:17:28"},{"name":"pos","nodeType":"YulIdentifier","src":"17652:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"17657:6:28"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"17598:34:28"},"nodeType":"YulFunctionCall","src":"17598:66:28"},"nodeType":"YulExpressionStatement","src":"17598:66:28"},{"nodeType":"YulAssignment","src":"17673:23:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17684:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"17689:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17680:3:28"},"nodeType":"YulFunctionCall","src":"17680:16:28"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17673:3:28"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17528:3:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17533:6:28","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17544:3:28","type":""}],"src":"17415:287:28"},{"body":{"nodeType":"YulBlock","src":"17828:98:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17845:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"17856:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17838:6:28"},"nodeType":"YulFunctionCall","src":"17838:21:28"},"nodeType":"YulExpressionStatement","src":"17838:21:28"},{"nodeType":"YulAssignment","src":"17868:52:28","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17893:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17905:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"17916:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17901:3:28"},"nodeType":"YulFunctionCall","src":"17901:18:28"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"17876:16:28"},"nodeType":"YulFunctionCall","src":"17876:44:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17868:4:28"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17797:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17808:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17819:4:28","type":""}],"src":"17707:219:28"},{"body":{"nodeType":"YulBlock","src":"18105:228:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18122:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"18133:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18115:6:28"},"nodeType":"YulFunctionCall","src":"18115:21:28"},"nodeType":"YulExpressionStatement","src":"18115:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18156:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"18167:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18152:3:28"},"nodeType":"YulFunctionCall","src":"18152:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"18172:2:28","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18145:6:28"},"nodeType":"YulFunctionCall","src":"18145:30:28"},"nodeType":"YulExpressionStatement","src":"18145:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18195:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"18206:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18191:3:28"},"nodeType":"YulFunctionCall","src":"18191:18:28"},{"hexValue":"4c69624469616d6f6e644375743a205f696e69742066756e6374696f6e207265","kind":"string","nodeType":"YulLiteral","src":"18211:34:28","type":"","value":"LibDiamondCut: _init function re"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18184:6:28"},"nodeType":"YulFunctionCall","src":"18184:62:28"},"nodeType":"YulExpressionStatement","src":"18184:62:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18266:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"18277:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18262:3:28"},"nodeType":"YulFunctionCall","src":"18262:18:28"},{"hexValue":"766572746564","kind":"string","nodeType":"YulLiteral","src":"18282:8:28","type":"","value":"verted"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18255:6:28"},"nodeType":"YulFunctionCall","src":"18255:36:28"},"nodeType":"YulExpressionStatement","src":"18255:36:28"},{"nodeType":"YulAssignment","src":"18300:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18312:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"18323:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18308:3:28"},"nodeType":"YulFunctionCall","src":"18308:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18300:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_080b2fe78815767d522290509c8fce2af708c8a54455ca1b0cc978c92822465d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18082:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18096:4:28","type":""}],"src":"17931:402:28"},{"body":{"nodeType":"YulBlock","src":"18512:245:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18529:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"18540:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18522:6:28"},"nodeType":"YulFunctionCall","src":"18522:21:28"},"nodeType":"YulExpressionStatement","src":"18522:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18563:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"18574:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18559:3:28"},"nodeType":"YulFunctionCall","src":"18559:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"18579:2:28","type":"","value":"55"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18552:6:28"},"nodeType":"YulFunctionCall","src":"18552:30:28"},"nodeType":"YulExpressionStatement","src":"18552:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18602:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"18613:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18598:3:28"},"nodeType":"YulFunctionCall","src":"18598:18:28"},{"hexValue":"4c69624469616d6f6e644375743a2043616e27742072656d6f76652066756e63","kind":"string","nodeType":"YulLiteral","src":"18618:34:28","type":"","value":"LibDiamondCut: Can't remove func"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18591:6:28"},"nodeType":"YulFunctionCall","src":"18591:62:28"},"nodeType":"YulExpressionStatement","src":"18591:62:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18673:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"18684:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18669:3:28"},"nodeType":"YulFunctionCall","src":"18669:18:28"},{"hexValue":"74696f6e207468617420646f65736e2774206578697374","kind":"string","nodeType":"YulLiteral","src":"18689:25:28","type":"","value":"tion that doesn't exist"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18662:6:28"},"nodeType":"YulFunctionCall","src":"18662:53:28"},"nodeType":"YulExpressionStatement","src":"18662:53:28"},{"nodeType":"YulAssignment","src":"18724:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18736:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"18747:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18732:3:28"},"nodeType":"YulFunctionCall","src":"18732:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18724:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_2c590e498c4d56c984a7092fd5e89a68b9f4541ce9f97252fb74e44a00ffbb71__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18489:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18503:4:28","type":""}],"src":"18338:419:28"},{"body":{"nodeType":"YulBlock","src":"18936:236:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18953:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"18964:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18946:6:28"},"nodeType":"YulFunctionCall","src":"18946:21:28"},"nodeType":"YulExpressionStatement","src":"18946:21:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18987:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"18998:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18983:3:28"},"nodeType":"YulFunctionCall","src":"18983:18:28"},{"kind":"number","nodeType":"YulLiteral","src":"19003:2:28","type":"","value":"46"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18976:6:28"},"nodeType":"YulFunctionCall","src":"18976:30:28"},"nodeType":"YulExpressionStatement","src":"18976:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19026:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"19037:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19022:3:28"},"nodeType":"YulFunctionCall","src":"19022:18:28"},{"hexValue":"4c69624469616d6f6e644375743a2043616e27742072656d6f766520696d6d75","kind":"string","nodeType":"YulLiteral","src":"19042:34:28","type":"","value":"LibDiamondCut: Can't remove immu"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19015:6:28"},"nodeType":"YulFunctionCall","src":"19015:62:28"},"nodeType":"YulExpressionStatement","src":"19015:62:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19097:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"19108:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19093:3:28"},"nodeType":"YulFunctionCall","src":"19093:18:28"},{"hexValue":"7461626c652066756e6374696f6e","kind":"string","nodeType":"YulLiteral","src":"19113:16:28","type":"","value":"table function"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19086:6:28"},"nodeType":"YulFunctionCall","src":"19086:44:28"},"nodeType":"YulExpressionStatement","src":"19086:44:28"},{"nodeType":"YulAssignment","src":"19139:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19151:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"19162:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19147:3:28"},"nodeType":"YulFunctionCall","src":"19147:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19139:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_8ba063dfaa4be2d2cbe73dbb1364728b0f7031ac048441d5fad19e9541992b21__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18913:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18927:4:28","type":""}],"src":"18762:410:28"},{"body":{"nodeType":"YulBlock","src":"19226:79:28","statements":[{"nodeType":"YulAssignment","src":"19236:17:28","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19248:1:28"},{"name":"y","nodeType":"YulIdentifier","src":"19251:1:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19244:3:28"},"nodeType":"YulFunctionCall","src":"19244:9:28"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"19236:4:28"}]},{"body":{"nodeType":"YulBlock","src":"19277:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"19279:16:28"},"nodeType":"YulFunctionCall","src":"19279:18:28"},"nodeType":"YulExpressionStatement","src":"19279:18:28"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"19268:4:28"},{"name":"x","nodeType":"YulIdentifier","src":"19274:1:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19265:2:28"},"nodeType":"YulFunctionCall","src":"19265:11:28"},"nodeType":"YulIf","src":"19262:37:28"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"19208:1:28","type":""},{"name":"y","nodeType":"YulTypedName","src":"19211:1:28","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"19217:4:28","type":""}],"src":"19177:128:28"},{"body":{"nodeType":"YulBlock","src":"19342:95:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19359:1:28","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19366:3:28","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"19371:10:28","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"19362:3:28"},"nodeType":"YulFunctionCall","src":"19362:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19352:6:28"},"nodeType":"YulFunctionCall","src":"19352:31:28"},"nodeType":"YulExpressionStatement","src":"19352:31:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19399:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"19402:4:28","type":"","value":"0x31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19392:6:28"},"nodeType":"YulFunctionCall","src":"19392:15:28"},"nodeType":"YulExpressionStatement","src":"19392:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19423:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19426:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19416:6:28"},"nodeType":"YulFunctionCall","src":"19416:15:28"},"nodeType":"YulExpressionStatement","src":"19416:15:28"}]},"name":"panic_error_0x31","nodeType":"YulFunctionDefinition","src":"19310:127:28"}]},"contents":"{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_bytes_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_array$_t_struct$_FacetCut_$2373_calldata_ptr_$dyn_calldata_ptrt_addresst_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, shl(5, length)), 0x20), dataEnd) { revert(0, 0) }\n        value0 := add(_2, 0x20)\n        value1 := length\n        value2 := abi_decode_address(add(headStart, 0x20))\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value3_1, value4_1 := abi_decode_bytes_calldata(add(headStart, offset_1), dataEnd)\n        value3 := value3_1\n        value4 := value4_1\n    }\n    function abi_encode_tuple_t_stringliteral_056fd20c5b5e35526abef0fa8bd3b11181703fb66c442d2bb546f62d84466063__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 74)\n        mstore(add(headStart, 64), \"Function deprecated: Use propose\")\n        mstore(add(headStart, 96), \"DiamondCut() + executeDiamondCut\")\n        mstore(add(headStart, 128), \"() instead\")\n        tail := add(headStart, 160)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory_3721() -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, 0x60)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_struct_FacetCut_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function convert_array_t_array$_t_struct$_FacetCut_$2373_calldata_ptr_$dyn_calldata_ptr_to_t_array$_t_struct$_FacetCut_$2373_memory_ptr_$dyn_memory_ptr(value, length) -> converted\n    {\n        let dst := allocate_memory(array_allocation_size_array_struct_FacetCut_dyn(length))\n        let dst_1 := dst\n        mstore(dst, length)\n        let _1 := 0x20\n        dst := add(dst, _1)\n        let _2 := 5\n        let srcEnd := add(value, shl(_2, length))\n        if gt(srcEnd, calldatasize()) { revert(0, 0) }\n        let src := value\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            let innerOffset := calldataload(src)\n            let _3 := 0xffffffffffffffff\n            if gt(innerOffset, _3)\n            {\n                let _4 := 0\n                revert(_4, _4)\n            }\n            let _5 := add(value, innerOffset)\n            if slt(sub(calldatasize(), _5), 0x60)\n            {\n                let _6 := 0\n                revert(_6, _6)\n            }\n            let value_1 := allocate_memory_3721()\n            mstore(value_1, abi_decode_address(_5))\n            let value_2 := calldataload(add(_5, _1))\n            if iszero(lt(value_2, 3))\n            {\n                let _7 := 0\n                revert(_7, _7)\n            }\n            mstore(add(value_1, _1), value_2)\n            let _8 := 64\n            let offset := calldataload(add(_5, _8))\n            if gt(offset, _3)\n            {\n                let _9 := 0\n                revert(_9, _9)\n            }\n            let _10 := add(_5, offset)\n            if iszero(slt(add(_10, 0x1f), calldatasize()))\n            {\n                let _11 := 0\n                revert(_11, _11)\n            }\n            let _12 := calldataload(_10)\n            let dst_2 := allocate_memory(array_allocation_size_array_struct_FacetCut_dyn(_12))\n            let dst_3 := dst_2\n            mstore(dst_2, _12)\n            dst_2 := add(dst_2, _1)\n            let srcEnd_1 := add(add(_10, shl(_2, _12)), _1)\n            if gt(srcEnd_1, calldatasize())\n            {\n                let _13 := 0\n                revert(_13, _13)\n            }\n            let src_1 := add(_10, _1)\n            for { } lt(src_1, srcEnd_1) { src_1 := add(src_1, _1) }\n            {\n                let value_3 := calldataload(src_1)\n                if iszero(eq(value_3, and(value_3, shl(224, 0xffffffff))))\n                {\n                    let _14 := 0\n                    revert(_14, _14)\n                }\n                mstore(dst_2, value_3)\n                dst_2 := add(dst_2, _1)\n            }\n            mstore(add(value_1, _8), dst_3)\n            mstore(dst, value_1)\n            dst := add(dst, _1)\n        }\n        converted := dst_1\n    }\n    function abi_encode_tuple_t_stringliteral_0d4ae41009c51fd276653a54d7793c24f266ddc8c56ce21f8be5e2c6595ab3ac__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"LibDiamond: Must be contract own\")\n        mstore(add(headStart, 96), \"er\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_43ca8ee6cd16ca31ce88954982145b31f996f016179581e9a51c2213a748d95d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"LibDiamond: No upgrade proposal \")\n        mstore(add(headStart, 96), \"exists\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b6b860163f09eaf9581a3c3dca757c905d2636dfee636c736999bea07d6a9262__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"LibDiamond: Upgrade already prop\")\n        mstore(add(headStart, 96), \"osed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d09b47edbfca4a2ee3b2c8249a392b83c890c9a68484e771caaef2e624a6a02e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"LibDiamond: Timelock not initial\")\n        mstore(add(headStart, 96), \"ized\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_bytes_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_bytes_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_bytes_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_bytes_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_82bc3b95773eabe3ca214efb97c15a90d66aca7ebfe83785362b581f73779158__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"LibDiamond: Timelock period not \")\n        mstore(add(headStart, 96), \"elapsed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_48267d8daf5ea9c6bbad1fe9c53dc4c04a2a01b2b85bad432956cf42f45b2f54__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"LibDiamondCut: Incorrect FacetCu\")\n        mstore(add(headStart, 96), \"tAction\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_address(value, pos)\n    {\n        mstore(pos, and(value, sub(shl(160, 1), 1)))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_array$_t_struct$_FacetCut_$2373_memory_ptr_$dyn_memory_ptr_t_address_t_bytes_memory_ptr__to_t_array$_t_struct$_FacetCut_$2373_memory_ptr_$dyn_memory_ptr_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        let _1 := 96\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        let _2 := 128\n        pos := add(headStart, _2)\n        let tail_2 := add(add(headStart, shl(5, length)), _2)\n        let _3 := 0x20\n        let srcPtr := add(value0, _3)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, add(sub(tail_2, headStart), not(127)))\n            let _4 := mload(srcPtr)\n            let tail_3 := add(tail_2, _1)\n            mstore(tail_2, and(mload(_4), sub(shl(160, 1), 1)))\n            let memberValue0 := mload(add(_4, _3))\n            if iszero(lt(memberValue0, 3))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x21)\n                revert(0, 0x24)\n            }\n            mstore(add(tail_2, _3), memberValue0)\n            let _5 := 0x40\n            let memberValue0_1 := mload(add(_4, _5))\n            mstore(add(tail_2, _5), _1)\n            let pos_1 := tail_3\n            let length_1 := mload(memberValue0_1)\n            mstore(tail_3, length_1)\n            pos_1 := add(tail_2, _2)\n            let srcPtr_1 := add(memberValue0_1, _3)\n            let i_1 := 0\n            for { } lt(i_1, length_1) { i_1 := add(i_1, 1) }\n            {\n                mstore(pos_1, and(mload(srcPtr_1), shl(224, 0xffffffff)))\n                pos_1 := add(pos_1, _3)\n                srcPtr_1 := add(srcPtr_1, _3)\n            }\n            tail_2 := pos_1\n            srcPtr := add(srcPtr, _3)\n            pos := add(pos, _3)\n        }\n        abi_encode_address(value1, add(headStart, _3))\n        mstore(add(headStart, 0x40), sub(tail_2, headStart))\n        tail := abi_encode_bytes(value2, tail_2)\n    }\n    function abi_encode_tuple_t_stringliteral_1ffc682bcfedefd5e93ba9ed0c2d1bc0b18319886e3b4bd28a03a3d3729f85c0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"LibDiamondCut: No selectors in f\")\n        mstore(add(headStart, 96), \"acet to cut\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_64609d8b93c93a06b98d7db7a87b04044cd4a52c5661d603bb9b90ad8b914a3a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"LibDiamondCut: Add facet can't b\")\n        mstore(add(headStart, 96), \"e address(0)\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_99a7418ee014d613f46da44561258cdbb58064508097483a319062b99fa37700__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 53)\n        mstore(add(headStart, 64), \"LibDiamondCut: Can't add functio\")\n        mstore(add(headStart, 96), \"n that already exists\")\n        tail := add(headStart, 128)\n    }\n    function increment_t_uint96(value) -> ret\n    {\n        let _1 := 0xffffffffffffffffffffffff\n        let value_1 := and(value, _1)\n        if eq(value_1, _1) { panic_error_0x11() }\n        ret := add(value_1, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_b5a7112edf707196456f338fdcc19cd849be6cb8c0d166bcd035f4cfb00e7078__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 56)\n        mstore(add(headStart, 64), \"LibDiamondCut: Can't replace fun\")\n        mstore(add(headStart, 96), \"ction with same function\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b739aae768f79b96e91d9f66398733516895e39eb09ee54a795b49dcc77504d4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 54)\n        mstore(add(headStart, 64), \"LibDiamondCut: Remove facet addr\")\n        mstore(add(headStart, 96), \"ess must be address(0)\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_046c761a688d1dc3c500562bc5aaa3544f01f394f9bb3b69aa2a950a45afb1f8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 60)\n        mstore(add(headStart, 64), \"LibDiamondCut: _init is address(\")\n        mstore(add(headStart, 96), \"0) but_calldata is not empty\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_868d165ec2461661b624442252aed6a645399bfae7b60083a77ea1b61b084042__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 61)\n        mstore(add(headStart, 64), \"LibDiamondCut: _calldata is empt\")\n        mstore(add(headStart, 96), \"y but _init is not address(0)\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_080b2fe78815767d522290509c8fce2af708c8a54455ca1b0cc978c92822465d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"LibDiamondCut: _init function re\")\n        mstore(add(headStart, 96), \"verted\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_2c590e498c4d56c984a7092fd5e89a68b9f4541ce9f97252fb74e44a00ffbb71__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 55)\n        mstore(add(headStart, 64), \"LibDiamondCut: Can't remove func\")\n        mstore(add(headStart, 96), \"tion that doesn't exist\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8ba063dfaa4be2d2cbe73dbb1364728b0f7031ac048441d5fad19e9541992b21__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"LibDiamondCut: Can't remove immu\")\n        mstore(add(headStart, 96), \"table function\")\n        tail := add(headStart, 128)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n}","id":28,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1F931C1C EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x6FB05998 EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0xBBF2358E EQ PUSH2 0x6E JUMPI DUP1 PUSH4 0xF37A5DA0 EQ PUSH2 0x81 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x5F CALLDATASIZE PUSH1 0x4 PUSH2 0x1986 JUMP JUMPDEST PUSH2 0x89 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x64 PUSH2 0x10F JUMP JUMPDEST PUSH2 0x64 PUSH2 0x7C CALLDATASIZE PUSH1 0x4 PUSH2 0x1986 JUMP JUMPDEST PUSH2 0x121 JUMP JUMPDEST PUSH2 0x64 PUSH2 0x17A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x4A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E20646570726563617465643A205573652070726F706F7365 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x4469616D6F6E644375742829202B20657865637574654469616D6F6E64437574 PUSH1 0x64 DUP3 ADD MSTORE PUSH10 0xA0A481A5B9CDD195859 PUSH1 0xB2 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x117 PUSH2 0x18A JUMP JUMPDEST PUSH2 0x11F PUSH2 0x1FF JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x129 PUSH2 0x18A JUMP JUMPDEST PUSH2 0x173 PUSH2 0x136 DUP6 DUP8 PUSH2 0x1ACC JUMP JUMPDEST DUP5 DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x2C2 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x182 PUSH2 0x18A JUMP JUMPDEST PUSH2 0x11F PUSH2 0x84B JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x207F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x11F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C69624469616D6F6E643A204D75737420626520636F6E7472616374206F776E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x32B9 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x106 JUMP JUMPDEST PUSH32 0xC8FCAD8DB84D3CC18B4C41D551EA0EE66DD599CDE068D998E57D5E09332C1326 SLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x207F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0xFF AND PUSH2 0x250 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x106 SWAP1 PUSH2 0x1C10 JUMP JUMPDEST PUSH1 0x6 DUP2 ADD PUSH1 0x0 PUSH2 0x260 DUP3 DUP3 PUSH2 0x1857 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH2 0x280 PUSH1 0x2 DUP4 ADD PUSH1 0x0 PUSH2 0x187B JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x3 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD CALLER SWAP2 PUSH32 0xDE8F30FEFD36BA49BCF89E333C7BAFB2B3B3BAD08938DB1630376B2A66B15F6C SWAP2 LOG2 POP JUMP JUMPDEST PUSH32 0xC8FCAD8DB84D3CC18B4C41D551EA0EE66DD599CDE068D998E57D5E09332C1326 SLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x207F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x350 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4C69624469616D6F6E643A205570677261646520616C72656164792070726F70 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x1BDCD959 PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x106 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x5 ADD SLOAD GT PUSH2 0x3B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4C69624469616D6F6E643A2054696D656C6F636B206E6F7420696E697469616C PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x1A5E9959 PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x106 JUMP JUMPDEST PUSH1 0x0 DUP5 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3CC JUMPI PUSH2 0x3CC PUSH2 0x1A38 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x419 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP1 DUP3 ADD DUP4 MSTORE PUSH1 0x0 DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x3EA JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x598 JUMPI DUP6 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x43A JUMPI PUSH2 0x43A PUSH2 0x1C56 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x454 JUMPI PUSH2 0x454 PUSH2 0x1C56 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH1 0x0 DUP7 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x473 JUMPI PUSH2 0x473 PUSH2 0x1C56 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x498 JUMPI PUSH2 0x498 PUSH2 0x1A38 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x4C1 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP8 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x4D9 JUMPI PUSH2 0x4D9 PUSH2 0x1C56 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x561 JUMPI DUP8 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x4FF JUMPI PUSH2 0x4FF PUSH2 0x1C56 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x51C JUMPI PUSH2 0x51C PUSH2 0x1C56 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x536 JUMPI PUSH2 0x536 PUSH2 0x1C56 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 PUSH2 0x559 DUP2 PUSH2 0x1C82 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x4C7 JUMP JUMPDEST POP DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x575 JUMPI PUSH2 0x575 PUSH2 0x1C56 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD DUP2 SWAP1 MSTORE POP POP DUP1 DUP1 PUSH2 0x590 SWAP1 PUSH2 0x1C82 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x41F JUMP JUMPDEST POP PUSH2 0x5A7 PUSH1 0x6 DUP4 ADD PUSH1 0x0 PUSH2 0x1857 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x7BC JUMPI PUSH1 0x6 DUP4 ADD DUP1 SLOAD PUSH1 0x1 ADD DUP2 SSTORE PUSH1 0x0 MSTORE DUP6 MLOAD DUP7 SWAP1 DUP3 SWAP1 DUP2 LT PUSH2 0x5D5 JUMPI PUSH2 0x5D5 PUSH2 0x1C56 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP4 PUSH1 0x6 ADD PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x5F9 JUMPI PUSH2 0x5F9 PUSH2 0x1C56 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP6 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x640 JUMPI PUSH2 0x640 PUSH2 0x1C56 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP4 PUSH1 0x6 ADD PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x664 JUMPI PUSH2 0x664 PUSH2 0x1C56 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x696 JUMPI PUSH2 0x696 PUSH2 0x1C9B JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x6 DUP4 ADD DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x6B1 JUMPI PUSH2 0x6B1 PUSH2 0x1C56 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x6CE SWAP2 SWAP1 PUSH2 0x18B5 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP7 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x6E3 JUMPI PUSH2 0x6E3 PUSH2 0x1C56 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x7A9 JUMPI PUSH1 0x6 DUP5 ADD DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0x70D JUMPI PUSH2 0x70D PUSH2 0x1C56 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD DUP8 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x730 JUMPI PUSH2 0x730 PUSH2 0x1C56 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x74D JUMPI PUSH2 0x74D PUSH2 0x1C56 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 SLOAD PUSH1 0x1 DUP2 ADD DUP5 SSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE SWAP2 SWAP1 SWAP3 KECCAK256 PUSH1 0x8 DUP3 DIV ADD DUP1 SLOAD PUSH4 0xFFFFFFFF PUSH1 0x7 SWAP1 SWAP4 AND PUSH1 0x4 MUL PUSH2 0x100 EXP SWAP3 DUP4 MUL NOT AND PUSH1 0xE0 SWAP4 SWAP1 SWAP4 SHR SWAP2 SWAP1 SWAP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH2 0x7A1 DUP2 PUSH2 0x1C82 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x6D1 JUMP JUMPDEST POP DUP1 PUSH2 0x7B4 DUP2 PUSH2 0x1C82 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x5AA JUMP JUMPDEST POP PUSH1 0x7 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND OR SWAP1 SSTORE PUSH1 0x8 DUP3 ADD PUSH2 0x7E8 DUP5 DUP3 PUSH2 0x1D39 JUMP JUMPDEST POP TIMESTAMP PUSH1 0x9 DUP4 ADD DUP2 SWAP1 SSTORE PUSH1 0xA DUP4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x5 DUP4 ADD SLOAD CALLER SWAP1 PUSH32 0x11C0A67EABFBE53177AAAC87BBBB2F9C5730614D4C5C6A6EC177E86DDFE5C7E0 SWAP1 PUSH2 0x833 SWAP1 DUP5 PUSH2 0x1DF9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH32 0xC8FCAD8DB84D3CC18B4C41D551EA0EE66DD599CDE068D998E57D5E09332C1326 SLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x207F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0xFF AND PUSH2 0x89C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x106 SWAP1 PUSH2 0x1C10 JUMP JUMPDEST PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0x9 DUP3 ADD SLOAD PUSH2 0x8B0 SWAP2 SWAP1 PUSH2 0x1DF9 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x90F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C69624469616D6F6E643A2054696D656C6F636B20706572696F64206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x195B185C1CD959 PUSH1 0xCA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x106 JUMP JUMPDEST PUSH2 0xADF DUP2 PUSH1 0x6 ADD PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xA38 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP6 DUP2 MUL SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP4 MSTORE SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 DUP5 ADD SWAP2 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0x98F JUMPI PUSH2 0x98F PUSH2 0x1C9B JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x9A0 JUMPI PUSH2 0x9A0 PUSH2 0x1C9B JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xA20 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x4 ADD SWAP1 PUSH1 0x20 DUP3 PUSH1 0x3 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB DUP3 MUL SWAP2 POP DUP1 DUP5 GT PUSH2 0x9E2 JUMPI SWAP1 POP JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x939 JUMP JUMPDEST POP POP POP POP PUSH1 0x7 DUP4 ADD SLOAD PUSH1 0x8 DUP5 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH2 0xA5C SWAP1 PUSH2 0x1CB1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA88 SWAP1 PUSH2 0x1CB1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAD5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAAA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAD5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAB8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x6 DUP2 ADD PUSH1 0x0 PUSH2 0xAEF DUP3 DUP3 PUSH2 0x1857 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH2 0xB0F PUSH1 0x2 DUP4 ADD PUSH1 0x0 PUSH2 0x187B JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xCEB JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xB45 JUMPI PUSH2 0xB45 PUSH2 0x1C56 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xB66 JUMPI PUSH2 0xB66 PUSH2 0x1C9B JUMP JUMPDEST DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xB78 JUMPI PUSH2 0xB78 PUSH2 0x1C9B JUMP JUMPDEST SUB PUSH2 0xBC6 JUMPI PUSH2 0xBC1 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xB92 JUMPI PUSH2 0xB92 PUSH2 0x1C56 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xBB0 JUMPI PUSH2 0xBB0 PUSH2 0x1C56 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH2 0xD36 JUMP JUMPDEST PUSH2 0xCD8 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xBDA JUMPI PUSH2 0xBDA PUSH2 0x1C9B JUMP JUMPDEST SUB PUSH2 0xC23 JUMPI PUSH2 0xBC1 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xBF4 JUMPI PUSH2 0xBF4 PUSH2 0x1C56 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xC12 JUMPI PUSH2 0xC12 PUSH2 0x1C56 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH2 0xEAE JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xC37 JUMPI PUSH2 0xC37 PUSH2 0x1C9B JUMP JUMPDEST SUB PUSH2 0xC80 JUMPI PUSH2 0xBC1 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xC51 JUMPI PUSH2 0xC51 PUSH2 0x1C56 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xC6F JUMPI PUSH2 0xC6F PUSH2 0x1C56 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH2 0x103E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C69624469616D6F6E644375743A20496E636F72726563742046616365744375 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x3A20B1BA34B7B7 PUSH1 0xC9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x106 JUMP JUMPDEST POP DUP1 PUSH2 0xCE3 DUP2 PUSH2 0x1C82 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB28 JUMP JUMPDEST POP PUSH32 0x8FAA70878671CCD212D20771B795C50AF8FD3FF6CF27F4BDE57E5D4DE0AEB673 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xD1F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xD31 DUP3 DUP3 PUSH2 0x115C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT PUSH2 0xD57 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x106 SWAP1 PUSH2 0x1F62 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x207F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xD8C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x106 SWAP1 PUSH2 0x1FAD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP3 AND SWAP1 SUB PUSH2 0xDC2 JUMPI PUSH2 0xDC2 DUP3 DUP6 PUSH2 0x1369 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x173 JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xDE2 JUMPI PUSH2 0xDE2 PUSH2 0x1C56 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 DUP7 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0xE80 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C69624469616D6F6E644375743A2043616E2774206164642066756E6374696F PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x6E207468617420616C726561647920657869737473 PUSH1 0x58 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x106 JUMP JUMPDEST PUSH2 0xE8C DUP6 DUP4 DUP7 DUP11 PUSH2 0x13D3 JUMP JUMPDEST DUP4 PUSH2 0xE96 DUP2 PUSH2 0x1FF9 JUMP JUMPDEST SWAP5 POP POP POP POP DUP1 DUP1 PUSH2 0xEA6 SWAP1 PUSH2 0x1C82 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xDC5 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT PUSH2 0xECF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x106 SWAP1 PUSH2 0x1F62 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x207F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xF04 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x106 SWAP1 PUSH2 0x1FAD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP3 AND SWAP1 SUB PUSH2 0xF3A JUMPI PUSH2 0xF3A DUP3 DUP6 PUSH2 0x1369 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x173 JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xF5A JUMPI PUSH2 0xF5A PUSH2 0x1C56 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 DUP7 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP8 AND DUP2 SUB PUSH2 0x1005 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C69624469616D6F6E644375743A2043616E2774207265706C6163652066756E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6374696F6E20776974682073616D652066756E6374696F6E0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x106 JUMP JUMPDEST PUSH2 0x1010 DUP6 DUP3 DUP5 PUSH2 0x1473 JUMP JUMPDEST PUSH2 0x101C DUP6 DUP4 DUP7 DUP11 PUSH2 0x13D3 JUMP JUMPDEST DUP4 PUSH2 0x1026 DUP2 PUSH2 0x1FF9 JUMP JUMPDEST SWAP5 POP POP POP POP DUP1 DUP1 PUSH2 0x1036 SWAP1 PUSH2 0x1C82 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xF3D JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x105F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x106 SWAP1 PUSH2 0x1F62 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x207F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x10E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C69624469616D6F6E644375743A2052656D6F76652066616365742061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH22 0x657373206D7573742062652061646472657373283029 PUSH1 0x50 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x106 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x1156 JUMPI PUSH1 0x0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1104 JUMPI PUSH2 0x1104 PUSH2 0x1C56 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 DUP6 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1141 DUP5 DUP3 DUP5 PUSH2 0x1473 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x114E SWAP1 PUSH2 0x1C82 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x10E7 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x11E3 JUMPI DUP1 MLOAD ISZERO PUSH2 0x11DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C69624469616D6F6E644375743A205F696E6974206973206164647265737328 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x3029206275745F63616C6C64617461206973206E6F7420656D70747900000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x106 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x125A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C69624469616D6F6E644375743A205F63616C6C6461746120697320656D7074 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7920627574205F696E6974206973206E6F742061646472657373283029000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x106 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ADDRESS EQ PUSH2 0x128C JUMPI PUSH2 0x128C DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x209F PUSH1 0x28 SWAP2 CODECOPY PUSH2 0x1836 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH2 0x12A7 SWAP2 SWAP1 PUSH2 0x201F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x12E2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x12E7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x1156 JUMPI DUP1 MLOAD ISZERO PUSH2 0x1312 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x106 SWAP2 SWAP1 PUSH2 0x203B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C69624469616D6F6E644375743A205F696E69742066756E6374696F6E207265 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1D995C9D1959 PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x106 JUMP JUMPDEST PUSH2 0x138B DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x20C7 PUSH1 0x24 SWAP2 CODECOPY PUSH2 0x1836 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 SWAP5 DUP6 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP7 ADD DUP6 SWAP1 SSTORE SWAP5 DUP5 ADD DUP4 SSTORE SWAP2 DUP3 MSTORE SWAP3 SWAP1 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP7 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP8 AND PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP8 DUP9 AND OR DUP2 SSTORE SWAP5 SWAP1 SWAP6 AND DUP1 DUP4 MSTORE PUSH1 0x1 DUP1 DUP10 ADD DUP4 MSTORE SWAP6 DUP4 KECCAK256 DUP1 SLOAD SWAP7 DUP8 ADD DUP2 SSTORE DUP4 MSTORE DUP2 DUP4 KECCAK256 PUSH1 0x8 DUP8 DIV ADD DUP1 SLOAD PUSH1 0xE0 SWAP9 SWAP1 SWAP9 SHR PUSH1 0x4 PUSH1 0x7 SWAP1 SWAP9 AND SWAP8 SWAP1 SWAP8 MUL PUSH2 0x100 EXP SWAP7 DUP8 MUL PUSH4 0xFFFFFFFF SWAP1 SWAP8 MUL NOT SWAP1 SWAP8 AND SWAP6 SWAP1 SWAP6 OR SWAP1 SWAP6 SSTORE MSTORE SWAP3 SWAP1 SWAP2 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x14EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x37 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C69624469616D6F6E644375743A2043616E27742072656D6F76652066756E63 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x74696F6E207468617420646F65736E2774206578697374000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x106 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0x155E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C69624469616D6F6E644375743A2043616E27742072656D6F766520696D6D75 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x3A30B1363290333AB731BA34B7B7 PUSH1 0x91 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x106 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP5 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE PUSH1 0x1 DUP1 DUP9 ADD SWAP1 SWAP4 MSTORE SWAP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP3 SWAP2 PUSH2 0x15AD SWAP2 PUSH2 0x2055 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 EQ PUSH2 0x169F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP7 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0x15E2 JUMPI PUSH2 0x15E2 PUSH2 0x1C56 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x8 DUP4 DIV ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP5 MSTORE PUSH1 0x1 DUP11 ADD SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 DUP1 SLOAD PUSH1 0x7 SWAP1 SWAP3 AND PUSH1 0x4 MUL PUSH2 0x100 EXP SWAP1 SWAP3 DIV PUSH1 0xE0 SHL SWAP3 POP DUP3 SWAP2 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0x1633 JUMPI PUSH2 0x1633 PUSH2 0x1C56 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x8 DUP4 DIV ADD DUP1 SLOAD PUSH4 0xFFFFFFFF PUSH1 0x7 SWAP1 SWAP5 AND PUSH1 0x4 MUL PUSH2 0x100 EXP SWAP4 DUP5 MUL NOT AND PUSH1 0xE0 SWAP6 SWAP1 SWAP6 SHR SWAP3 SWAP1 SWAP3 MUL SWAP4 SWAP1 SWAP4 OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE DUP7 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP6 AND MUL OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP7 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP1 PUSH2 0x16C8 JUMPI PUSH2 0x16C8 PUSH2 0x2068 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 PUSH1 0x8 PUSH1 0x0 NOT SWAP1 SWAP5 ADD SWAP4 DUP5 DIV ADD DUP1 SLOAD PUSH4 0xFFFFFFFF PUSH1 0x4 PUSH1 0x7 DUP8 AND MUL PUSH2 0x100 EXP MUL NOT AND SWAP1 SSTORE SWAP2 SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP6 AND DUP3 MSTORE DUP7 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 SWAP1 SSTORE DUP2 SWAP1 SUB PUSH2 0x173 JUMPI PUSH1 0x2 DUP6 ADD SLOAD PUSH1 0x0 SWAP1 PUSH2 0x172B SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2055 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP1 DUP10 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 SWAP2 POP DUP1 DUP3 EQ PUSH2 0x17DA JUMPI PUSH1 0x0 DUP8 PUSH1 0x2 ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x176A JUMPI PUSH2 0x176A PUSH2 0x1C56 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x2 DUP10 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 POP DUP3 SWAP2 DUP5 SWAP1 DUP2 LT PUSH2 0x179B JUMPI PUSH2 0x179B PUSH2 0x1C56 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND OR SWAP1 SSTORE SWAP3 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x1 DUP10 DUP2 ADD SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 KECCAK256 ADD DUP2 SWAP1 SSTORE JUMPDEST DUP7 PUSH1 0x2 ADD DUP1 SLOAD DUP1 PUSH2 0x17ED JUMPI PUSH2 0x17ED PUSH2 0x2068 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 DUP4 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE SWAP1 SWAP3 ADD SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP3 MSTORE PUSH1 0x1 DUP10 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST DUP2 EXTCODESIZE DUP2 DUP2 PUSH2 0x1156 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x106 SWAP2 SWAP1 PUSH2 0x203B JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE PUSH1 0x2 MUL SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1878 SWAP2 SWAP1 PUSH2 0x18DA JUMP JUMPDEST POP JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x1887 SWAP1 PUSH2 0x1CB1 JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x1897 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1878 SWAP2 SWAP1 PUSH2 0x190C JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE PUSH1 0x7 ADD PUSH1 0x8 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1878 SWAP2 SWAP1 PUSH2 0x190C JUMP JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1908 JUMPI DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND DUP2 SSTORE PUSH1 0x0 PUSH2 0x18FF PUSH1 0x1 DUP4 ADD DUP3 PUSH2 0x18B5 JUMP JUMPDEST POP PUSH1 0x2 ADD PUSH2 0x18DA JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1908 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x190D JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1938 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x194F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1967 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x197F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x199E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x19B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x19CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x19D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x19EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP8 POP DUP1 SWAP7 POP POP PUSH2 0x1A04 PUSH1 0x20 DUP10 ADD PUSH2 0x1921 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1A1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A27 DUP9 DUP3 DUP10 ADD PUSH2 0x193D JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1A71 JUMPI PUSH2 0x1A71 PUSH2 0x1A38 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1AA0 JUMPI PUSH2 0x1AA0 PUSH2 0x1A38 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1AC2 JUMPI PUSH2 0x1AC2 PUSH2 0x1A38 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ADF PUSH2 0x1ADA DUP5 PUSH2 0x1AA8 JUMP JUMPDEST PUSH2 0x1A77 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP2 SWAP1 PUSH1 0x5 DUP7 DUP2 SHL DUP7 ADD CALLDATASIZE DUP2 GT ISZERO PUSH2 0x1AFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1C03 JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1B20 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP2 DUP11 ADD SWAP2 POP PUSH1 0x60 DUP3 CALLDATASIZE SUB SLT ISZERO PUSH2 0x1B36 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1B3E PUSH2 0x1A4E JUMP JUMPDEST PUSH2 0x1B47 DUP4 PUSH2 0x1921 JUMP JUMPDEST DUP2 MSTORE DUP7 DUP4 ADD CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0x1B5B JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP2 DUP9 ADD MSTORE PUSH1 0x40 DUP4 DUP2 ADD CALLDATALOAD DUP4 DUP2 GT ISZERO PUSH2 0x1B73 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST SWAP4 SWAP1 SWAP4 ADD SWAP3 CALLDATASIZE PUSH1 0x1F DUP6 ADD SLT PUSH2 0x1B8A JUMPI PUSH1 0x0 SWAP3 POP DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH2 0x1B9A PUSH2 0x1ADA DUP5 PUSH2 0x1AA8 JUMP JUMPDEST DUP4 DUP2 MSTORE SWAP3 DUP8 SHL DUP5 ADD DUP9 ADD SWAP3 DUP9 DUP2 ADD SWAP1 CALLDATASIZE DUP6 GT ISZERO PUSH2 0x1BB7 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST SWAP5 DUP10 ADD SWAP5 JUMPDEST DUP5 DUP7 LT ISZERO PUSH2 0x1BEC JUMPI DUP6 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1BDD JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP3 MSTORE SWAP5 DUP10 ADD SWAP5 SWAP1 DUP10 ADD SWAP1 PUSH2 0x1BBC JUMP JUMPDEST SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP9 MSTORE POP POP SWAP5 DUP4 ADD SWAP5 DUP4 ADD PUSH2 0x1AFF JUMP JUMPDEST POP SWAP3 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4C69624469616D6F6E643A204E6F20757067726164652070726F706F73616C20 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x657869737473 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1C94 JUMPI PUSH2 0x1C94 PUSH2 0x1C6C JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1CC5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1CE5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xD31 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x1D12 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1D31 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1D1E JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D53 JUMPI PUSH2 0x1D53 PUSH2 0x1A38 JUMP JUMPDEST PUSH2 0x1D67 DUP2 PUSH2 0x1D61 DUP5 SLOAD PUSH2 0x1CB1 JUMP JUMPDEST DUP5 PUSH2 0x1CEB JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1D9C JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1D84 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x1D31 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1DCB JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x1DAC JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x1DE9 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1E0C JUMPI PUSH2 0x1E0C PUSH2 0x1C6C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1E2D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1E15 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1E4E DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1E12 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP8 MLOAD DUP1 DUP4 MSTORE PUSH1 0x80 SWAP3 POP DUP3 DUP7 ADD SWAP2 POP DUP3 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD PUSH1 0x20 DUP1 DUP12 ADD PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1F32 JUMPI DUP10 DUP5 SUB PUSH1 0x7F NOT ADD DUP7 MSTORE DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP4 DUP2 ADD MLOAD DUP10 DUP7 ADD SWAP1 PUSH1 0x3 DUP2 LT PUSH2 0x1ED1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP7 DUP7 ADD MSTORE PUSH1 0x40 SWAP2 DUP3 ADD MLOAD SWAP2 DUP7 ADD DUP11 SWAP1 MSTORE DUP2 MLOAD SWAP1 DUP2 SWAP1 MSTORE SWAP1 DUP5 ADD SWAP1 PUSH1 0x0 SWAP1 DUP10 DUP8 ADD SWAP1 JUMPDEST DUP1 DUP4 LT ISZERO PUSH2 0x1F1D JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP3 MSTORE SWAP3 DUP7 ADD SWAP3 PUSH1 0x1 SWAP3 SWAP1 SWAP3 ADD SWAP2 SWAP1 DUP7 ADD SWAP1 PUSH2 0x1EF3 JUMP JUMPDEST POP SWAP8 DUP6 ADD SWAP8 SWAP6 POP POP POP SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1E8B JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND SWAP1 DUP9 ADD MSTORE DUP7 DUP2 SUB PUSH1 0x40 DUP9 ADD MSTORE PUSH2 0x1F54 DUP2 DUP10 PUSH2 0x1E36 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x4C69624469616D6F6E644375743A204E6F2073656C6563746F727320696E2066 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x1858D95D081D1BC818DD5D PUSH1 0xAA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x4C69624469616D6F6E644375743A204164642066616365742063616E27742062 PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x652061646472657373283029 PUSH1 0xA0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP1 DUP4 AND DUP2 DUP2 SUB PUSH2 0x2015 JUMPI PUSH2 0x2015 PUSH2 0x1C6C JUMP JUMPDEST PUSH1 0x1 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x2031 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1E12 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x204E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1E36 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1E0C JUMPI PUSH2 0x1E0C PUSH2 0x1C6C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID 0xC8 0xFC 0xAD DUP14 0xB8 0x4D EXTCODECOPY 0xC1 DUP12 0x4C COINBASE 0xD5 MLOAD 0xEA 0xE 0xE6 PUSH14 0xD599CDE068D998E57D5E09332C13 SHR 0x4C PUSH10 0x624469616D6F6E644375 PUSH21 0x3A205F696E6974206164647265737320686173206E PUSH16 0x20636F64654C69624469616D6F6E6443 PUSH22 0x743A204E657720666163657420686173206E6F20636F PUSH5 0x65A2646970 PUSH7 0x735822122092D8 PUSH6 0xD88FEC14BB22 0x5C 0x1F BALANCE REVERT AND PUSH28 0x832C06056F0F4779A70E2A9569F0778F5D64736F6C63430008140033 ","sourceMap":"1103:3190:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4059:232;;;;;;:::i;:::-;;:::i;:::-;;3342:128;;;:::i;1758:273::-;;;;;;:::i;:::-;;:::i;2694:130::-;;;:::i;4059:232::-;4200:84;;-1:-1:-1;;;4200:84:12;;1761:2:28;4200:84:12;;;1743:21:28;1800:2;1780:18;;;1773:30;1839:34;1819:18;;;1812:62;1910:34;1890:18;;;1883:62;-1:-1:-1;;;1961:19:28;;;1954:41;2012:19;;4200:84:12;;;;;;;;3342:128;3389:35;:33;:35::i;:::-;3434:29;:27;:29::i;:::-;3342:128::o;1758:273::-;1920:35;:33;:35::i;:::-;1965:59;;1994:11;;1965:59;:::i;:::-;2007:5;2014:9;;1965:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1965:28:12;;-1:-1:-1;;;1965:59:12:i;:::-;1758:273;;;;;:::o;2694:130::-;2742:35;:33;:35::i;:::-;2787:30;:28;:30::i;3186:156:25:-;-1:-1:-1;;;;;;;;;;;3266:30:25;;;-1:-1:-1;;;;;3266:30:25;3252:10;:44;3244:91;;;;-1:-1:-1;;;3244:91:25;;5840:2:28;3244:91:25;;;5822:21:28;5879:2;5859:18;;;5852:30;5918:34;5898:18;;;5891:62;-1:-1:-1;;;5969:18:28;;;5962:32;6011:19;;3244:91:25;5638:398:28;15291:313:25;15400:25;;-1:-1:-1;;;;;;;;;;;741:45:25;15400:25;;15392:76;;;;-1:-1:-1;;;15392:76:25;;;;;;;:::i;:::-;15524:18;;;;15517:25;15524:18;;15517:25;:::i;:::-;;;;;;-1:-1:-1;;;;;;15517:25:25;;;;;;;;;:::i;:::-;-1:-1:-1;15517:25:25;;;;;;;;;;;;;-1:-1:-1;;15517:25:25;;;15566:31;;15586:10;;15566:31;;;15328:276;15291:313::o;12020:2518::-;12241:25;;-1:-1:-1;;;;;;;;;;;741:45:25;12241:25;;12240:26;12232:75;;;;-1:-1:-1;;;12232:75:25;;6650:2:28;12232:75:25;;;6632:21:28;6689:2;6669:18;;;6662:30;6728:34;6708:18;;;6701:62;-1:-1:-1;;;6779:18:28;;;6772:34;6823:19;;12232:75:25;6448:400:28;12232:75:25;12346:1;12325:2;:18;;;:22;12317:71;;;;-1:-1:-1;;;12317:71:25;;7055:2:28;12317:71:25;;;7037:21:28;7094:2;7074:18;;;7067:30;7133:34;7113:18;;;7106:62;-1:-1:-1;;;7184:18:28;;;7177:34;7228:19;;12317:71:25;6853:400:28;12317:71:25;12481:44;12555:11;:18;12528:46;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;12528:46:25;;;;;;;;;;;;;;;;12481:93;;12589:9;12584:497;12608:11;:18;12604:1;:22;12584:497;;;12667:11;12679:1;12667:14;;;;;;;;:::i;:::-;;;;;;;12647;12662:1;12647:17;;;;;;;;:::i;:::-;;;;;;:34;;;;12762:25;12803:11;12815:1;12803:14;;;;;;;;:::i;:::-;;;;;;;:32;;;:39;12790:53;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12790:53:25;;12762:81;;12862:9;12857:153;12881:11;12893:1;12881:14;;;;;;;;:::i;:::-;;;;;;;:32;;;:39;12877:1;:43;12857:153;;;12960:11;12972:1;12960:14;;;;;;;;:::i;:::-;;;;;;;:32;;;12993:1;12960:35;;;;;;;;:::i;:::-;;;;;;;12945:9;12955:1;12945:12;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;12945:50:25;;;:12;;;;;;;;;;;:50;12922:3;;;;:::i;:::-;;;;12857:153;;;;13061:9;13023:14;13038:1;13023:17;;;;;;;;:::i;:::-;;;;;;;:35;;:47;;;;12633:448;12628:3;;;;;:::i;:::-;;;;12584:497;;;-1:-1:-1;13176:36:25;13183:18;;;:29;13176:36;:::i;:::-;13307:9;13302:919;13326:11;:18;13322:1;:22;13302:919;;;13445:18;;;:36;;;;;;:29;:36;13616:14;;:11;;13628:1;;13616:14;;;;;;:::i;:::-;;;;;;;:27;;;13568:2;:18;;:29;;13598:1;13568:32;;;;;;;;:::i;:::-;;;;;;;;;;;:45;;;:75;;;;;-1:-1:-1;;;;;13568:75:25;;;;;-1:-1:-1;;;;;13568:75:25;;;;;;13699:11;13711:1;13699:14;;;;;;;;:::i;:::-;;;;;;;:21;;;13657:2;:18;;:29;;13687:1;13657:32;;;;;;;;:::i;:::-;;;;;;;;;;;:39;;;:63;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;13892:18:25;;;:32;;13922:1;;13892:32;;;;;;:::i;:::-;;;;;;;;;;;:50;;;13885:57;;;;:::i;:::-;14021:9;14016:195;14040:11;14052:1;14040:14;;;;;;;;:::i;:::-;;;;;;;:32;;;:39;14036:1;:43;14016:195;;;14104:18;;;:32;;14134:1;;14104:32;;;;;;:::i;:::-;;;;;;;;;;;:50;;14160:11;14172:1;14160:14;;;;;;;;:::i;:::-;;;;;;;:32;;;14193:1;14160:35;;;;;;;;:::i;:::-;;;;;;;;;;;;14104:92;;;;;;;-1:-1:-1;14104:92:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14081:3;;;;:::i;:::-;;;;14016:195;;;-1:-1:-1;13346:3:25;;;;:::i;:::-;;;;13302:919;;;-1:-1:-1;14230:30:25;;;:38;;-1:-1:-1;;;;;;14230:38:25;-1:-1:-1;;;;;14230:38:25;;;;;14278:31;;;:43;14312:9;14278:31;:43;:::i;:::-;-1:-1:-1;14365:15:25;14331:31;;;:49;;;14390:25;;;:32;;-1:-1:-1;;14390:32:25;14418:4;14390:32;;;14512:18;;;;14465:10;;14446:85;;14494:36;;14365:15;14494:36;:::i;:::-;14446:85;;10653:25:28;;;10641:2;10626:18;14446:85:25;;;;;;;12168:2370;;12020:2518;;;:::o;14612:632::-;14722:25;;-1:-1:-1;;;;;;;;;;;741:45:25;14722:25;;14714:76;;;;-1:-1:-1;;;14714:76:25;;;;;;;:::i;:::-;14874:18;;;;14840:31;;;;:52;;14874:18;14840:52;:::i;:::-;14821:15;:71;;14800:157;;;;-1:-1:-1;;;14800:157:25;;10891:2:28;14800:157:25;;;10873:21:28;10930:2;10910:18;;;10903:30;10969:34;10949:18;;;10942:62;-1:-1:-1;;;11020:18:28;;;11013:37;11067:19;;14800:157:25;10689:403:28;14800:157:25;15011:152;15035:2;:18;;:29;;15011:152;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15011:152:25;;;;;;;;;;;;-1:-1:-1;;;15011:152:25;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15011:152:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;15078:30:25;;;;15122:31;;;15011:152;;-1:-1:-1;;;;;15078:30:25;;;;15011:152;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:10;:152::i;:::-;15219:18;;;;15212:25;15219:18;;15212:25;:::i;:::-;;;;;;-1:-1:-1;;;;;;15212:25:25;;;;;;;;;:::i;:::-;-1:-1:-1;15212:25:25;;;;;;;;;-1:-1:-1;;15212:25:25;;;-1:-1:-1;14612:632:25:o;3478:1067::-;3634:18;3629:806;3667:11;:18;3654:10;:31;3629:806;;;3715:33;3751:11;3763:10;3751:23;;;;;;;;:::i;:::-;;;;;;;:30;;;3715:66;;3809:30;3799:40;;;;;;;;:::i;:::-;:6;:40;;;;;;;;:::i;:::-;;3795:630;;3859:93;3872:11;3884:10;3872:23;;;;;;;;:::i;:::-;;;;;;;:36;;;3910:11;3922:10;3910:23;;;;;;;;:::i;:::-;;;;;;;:41;;;3859:12;:93::i;:::-;3795:630;;;3987:34;3977:6;:44;;;;;;;;:::i;:::-;;3973:452;;4041:97;4058:11;4070:10;4058:23;;;;;;;;:::i;:::-;;;;;;;:36;;;4096:11;4108:10;4096:23;;;;;;;;:::i;:::-;;;;;;;:41;;;4041:16;:97::i;3973:452::-;4173:33;4163:6;:43;;;;;;;;:::i;:::-;;4159:266;;4226:96;4242:11;4254:10;4242:23;;;;;;;;:::i;:::-;;;;;;;:36;;;4280:11;4292:10;4280:23;;;;;;;;:::i;:::-;;;;;;;:41;;;4226:15;:96::i;4159:266::-;4361:49;;-1:-1:-1;;;4361:49:25;;11299:2:28;4361:49:25;;;11281:21:28;11338:2;11318:18;;;11311:30;11377:34;11357:18;;;11350:62;-1:-1:-1;;;11428:18:28;;;11421:37;11475:19;;4361:49:25;11097:403:28;4159:266:25;-1:-1:-1;3687:12:25;;;;:::i;:::-;;;;3629:806;;;;4449:41;4460:11;4473:5;4480:9;4449:41;;;;;;;;:::i;:::-;;;;;;;;4500:38;4521:5;4528:9;4500:20;:38::i;:::-;3478:1067;;;:::o;4551:1089::-;4687:1;4659:18;:25;:29;4651:85;;;;-1:-1:-1;;;4651:85:25;;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;4816:27:25;;4808:84;;;;-1:-1:-1;;;4808:84:25;;;;;;;:::i;:::-;-1:-1:-1;;;;;4935:40:25;;4902:23;4935:40;;;:25;;;:40;;;;;:65;;-1:-1:-1;;;;;5069:21:25;;;;5065:91;;5106:27;5115:2;5119:13;5106:8;:27::i;:::-;5170:21;5165:469;5209:18;:25;5193:13;:41;5165:469;;;5267:15;5285:18;5304:13;5285:33;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;;5358:39:25;;5332:23;5358:39;;;;;;;;;;;:52;5285:33;;-1:-1:-1;;;;;;5358:52:25;5432:29;;5424:95;;;;-1:-1:-1;;;5424:95:25;;15266:2:28;5424:95:25;;;15248:21:28;15305:2;15285:18;;;15278:30;15344:34;15324:18;;;15317:62;-1:-1:-1;;;15395:18:28;;;15388:51;15456:19;;5424:95:25;15064:417:28;5424:95:25;5533:58;5545:2;5549:8;5559:16;5577:13;5533:11;:58::i;:::-;5605:18;;;;:::i;:::-;;;;5253:381;;5236:15;;;;;:::i;:::-;;;;5165:469;;5646:1138;5786:1;5758:18;:25;:29;5750:85;;;;-1:-1:-1;;;5750:85:25;;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;5907:27:25;;5899:84;;;;-1:-1:-1;;;5899:84:25;;;;;;;:::i;:::-;-1:-1:-1;;;;;6026:40:25;;5993:23;6026:40;;;:25;;;:40;;;;;:65;;-1:-1:-1;;;;;6160:21:25;;;;6156:79;;6197:27;6206:2;6210:13;6197:8;:27::i;:::-;6249:21;6244:534;6288:18;:25;6272:13;:41;6244:534;;;6346:15;6364:18;6383:13;6364:33;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;;6437:39:25;;6411:23;6437:39;;;;;;;;;;;:52;6364:33;;-1:-1:-1;;;;;;6437:52:25;;;;6511:32;;;;6503:101;;;;-1:-1:-1;;;6503:101:25;;15910:2:28;6503:101:25;;;15892:21:28;15949:2;15929:18;;;15922:30;15988:34;15968:18;;;15961:62;16059:26;16039:18;;;16032:54;16103:19;;6503:101:25;15708:420:28;6503:101:25;6618:45;6633:2;6637:15;6654:8;6618:14;:45::i;:::-;6677:58;6689:2;6693:8;6703:16;6721:13;6677:11;:58::i;:::-;6749:18;;;;:::i;:::-;;;;6332:446;;6315:15;;;;;:::i;:::-;;;;6244:534;;6790:742;6929:1;6901:18;:25;:29;6893:85;;;;-1:-1:-1;;;6893:85:25;;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;7115:27:25;;;7107:94;;;;-1:-1:-1;;;7107:94:25;;16335:2:28;7107:94:25;;;16317:21:28;16374:2;16354:18;;;16347:30;16413:34;16393:18;;;16386:62;-1:-1:-1;;;16464:18:28;;;16457:52;16526:19;;7107:94:25;16133:418:28;7107:94:25;7216:21;7211:315;7255:18;:25;7239:13;:41;7211:315;;;7313:15;7331:18;7350:13;7331:33;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;;7404:39:25;;7378:23;7404:39;;;;;;;;;;;:52;7331:33;;-1:-1:-1;;;;;;7404:52:25;7470:45;7404:2;:52;7331:33;7470:14;:45::i;:::-;7299:227;;7282:15;;;;;:::i;:::-;;;;7211:315;;;;6883:649;6790:742;;:::o;10456:871::-;-1:-1:-1;;;;;10548:19:25;;10544:777;;10591:16;;:21;10583:94;;;;-1:-1:-1;;;10583:94:25;;16758:2:28;10583:94:25;;;16740:21:28;16797:2;16777:18;;;16770:30;16836:34;16816:18;;;16809:62;16907:30;16887:18;;;16880:58;16955:19;;10583:94:25;16556:424:28;10583:94:25;10456:871;;:::o;10544:777::-;10735:1;10716:9;:16;:20;10708:94;;;;-1:-1:-1;;;10708:94:25;;17187:2:28;10708:94:25;;;17169:21:28;17226:2;17206:18;;;17199:30;17265:34;17245:18;;;17238:62;17336:31;17316:18;;;17309:59;17385:19;;10708:94:25;16985:425:28;10708:94:25;-1:-1:-1;;;;;10820:22:25;;10837:4;10820:22;10816:134;;10862:73;10885:5;10862:73;;;;;;;;;;;;;;;;;:22;:73::i;:::-;10964:12;10978:18;11000:5;-1:-1:-1;;;;;11000:18:25;11019:9;11000:29;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10963:66;;;;11048:7;11043:268;;11079:12;;:16;11075:222;;11176:5;11162:21;;-1:-1:-1;;;11162:21:25;;;;;;;;:::i;11075:222::-;11230:48;;-1:-1:-1;;;11230:48:25;;18133:2:28;11230:48:25;;;18115:21:28;18172:2;18152:18;;;18145:30;18211:34;18191:18;;;18184:62;-1:-1:-1;;;18262:18:28;;;18255:36;18308:19;;11230:48:25;17931:402:28;7538:316:25;7625:77;7648:13;7625:77;;;;;;;;;;;;;;;;;:22;:77::i;:::-;7776:17;;;:24;;-1:-1:-1;;;;;7712:40:25;;;;;;;:25;;;;:40;;;;;;;:61;;:88;;;7810:37;;;;;;;;;;;;;;-1:-1:-1;;;;;;7810:37:25;;;;;;7538:316::o;7865:389::-;-1:-1:-1;;;;;;7999:40:25;;:29;:40;;;;;;;;;;;:85;;-1:-1:-1;;;;;7999:85:25;;;-1:-1:-1;;;7999:85:25;-1:-1:-1;;;;;7999:85:25;;;;;;8094:40;;;;;;;-1:-1:-1;8094:25:25;;;:40;;;;;:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7999:85;8094:74;;;;;;;;;;;;;;;;;;;8178:40;;;;;:69;;-1:-1:-1;;;;;;8178:69:25;;;;7865:389::o;8260:2190::-;-1:-1:-1;;;;;8387:27:25;;8379:95;;;;-1:-1:-1;;;8379:95:25;;18540:2:28;8379:95:25;;;18522:21:28;18579:2;18559:18;;;18552:30;18618:34;18598:18;;;18591:62;18689:25;18669:18;;;18662:53;18732:19;;8379:95:25;18338:419:28;8379:95:25;8594:4;-1:-1:-1;;;;;8569:30:25;;;8561:89;;;;-1:-1:-1;;;8561:89:25;;18964:2:28;8561:89:25;;;18946:21:28;19003:2;18983:18;;;18976:30;19042:34;19022:18;;;19015:62;-1:-1:-1;;;19093:18:28;;;19086:44;19147:19;;8561:89:25;18762:410:28;8561:89:25;-1:-1:-1;;;;;;8761:40:25;;8734:24;8761:40;;;;;;;;;;;:65;-1:-1:-1;;;;;8867:40:25;;;;8935:1;8867:25;;;:40;;;;;;:65;-1:-1:-1;;;8761:65:25;;;-1:-1:-1;;;;;8761:65:25;;8734:24;8867:69;;;:::i;:::-;8836:100;;9038:20;9018:16;:40;9014:387;;-1:-1:-1;;;;;9096:40:25;;9074:19;9096:40;;;:25;;;:40;;;;;:80;;9155:20;;9096:80;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;9190:40:25;;;;:25;;;:40;;;;;;;:76;;9096:80;;;;;;;;;;;;;;-1:-1:-1;9096:80:25;;9190:40;9249:16;;9190:76;;;;;;:::i;:::-;;;;;;;;;;;;;:91;;;:76;;;;;;:91;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;9295:43:25;;;;;;;;;;;;:95;;-1:-1:-1;;;;;9295:95:25;-1:-1:-1;;;;;;;;9295:95:25;;;;;;9014:387;-1:-1:-1;;;;;9446:40:25;;;;;;:25;;;:40;;;;;:64;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;9446:64:25;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;9527:40:25;;;;;;;;;;9520:47;;;9662:25;;;9658:786;;9829:17;;;:24;9794:32;;9829:28;;9856:1;;9829:28;:::i;:::-;-1:-1:-1;;;;;9902:40:25;;9871:28;9902:40;;;:25;;;;:40;;;;;;:61;;9794:63;;-1:-1:-1;9981:48:25;;;9977:338;;10049:24;10076:2;:17;;10094:24;10076:43;;;;;;;;:::i;:::-;;;;;;;;;;;10137:17;;;:39;;-1:-1:-1;;;;;10076:43:25;;;;-1:-1:-1;10076:43:25;;10155:20;;10137:39;;;;;;:::i;:::-;;;;;;;;;;;;;:58;;-1:-1:-1;;;;;;10137:58:25;-1:-1:-1;;;;;10137:58:25;;;;;;10213:43;;;;;;-1:-1:-1;10213:25:25;;;:43;;;;;;:64;:87;;;9977:338;10328:2;:17;;:23;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;10328:23:25;;;;;-1:-1:-1;;;;;;10328:23:25;;;;;;;;;-1:-1:-1;;;;;10372:40:25;;;;10328:23;10372:25;;;:40;;;;;;:61;10365:68;-1:-1:-1;;8361:2089:25;;8260:2190;;;:::o;11333:261::-;11506:22;;11573:13;11555:16;11547:40;;;;-1:-1:-1;;;11547:40:25;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;14:173:28;82:20;;-1:-1:-1;;;;;131:31:28;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:347::-;243:8;253:6;307:3;300:4;292:6;288:17;284:27;274:55;;325:1;322;315:12;274:55;-1:-1:-1;348:20:28;;391:18;380:30;;377:50;;;423:1;420;413:12;377:50;460:4;452:6;448:17;436:29;;512:3;505:4;496:6;488;484:19;480:30;477:39;474:59;;;529:1;526;519:12;474:59;192:347;;;;;:::o;544:1010::-;687:6;695;703;711;719;772:2;760:9;751:7;747:23;743:32;740:52;;;788:1;785;778:12;740:52;828:9;815:23;857:18;898:2;890:6;887:14;884:34;;;914:1;911;904:12;884:34;952:6;941:9;937:22;927:32;;997:7;990:4;986:2;982:13;978:27;968:55;;1019:1;1016;1009:12;968:55;1059:2;1046:16;1085:2;1077:6;1074:14;1071:34;;;1101:1;1098;1091:12;1071:34;1156:7;1149:4;1139:6;1136:1;1132:14;1128:2;1124:23;1120:34;1117:47;1114:67;;;1177:1;1174;1167:12;1114:67;1208:4;1204:2;1200:13;1190:23;;1232:6;1222:16;;;1257:40;1291:4;1280:9;1276:20;1257:40;:::i;:::-;1247:50;;1350:2;1339:9;1335:18;1322:32;1306:48;;1379:2;1369:8;1366:16;1363:36;;;1395:1;1392;1385:12;1363:36;;1434:60;1486:7;1475:8;1464:9;1460:24;1434:60;:::i;:::-;544:1010;;;;-1:-1:-1;544:1010:28;;-1:-1:-1;1513:8:28;;1408:86;544:1010;-1:-1:-1;;;544:1010:28:o;2042:127::-;2103:10;2098:3;2094:20;2091:1;2084:31;2134:4;2131:1;2124:15;2158:4;2155:1;2148:15;2174:253;2246:2;2240:9;2288:4;2276:17;;2323:18;2308:34;;2344:22;;;2305:62;2302:88;;;2370:18;;:::i;:::-;2406:2;2399:22;2174:253;:::o;2432:275::-;2503:2;2497:9;2568:2;2549:13;;-1:-1:-1;;2545:27:28;2533:40;;2603:18;2588:34;;2624:22;;;2585:62;2582:88;;;2650:18;;:::i;:::-;2686:2;2679:22;2432:275;;-1:-1:-1;2432:275:28:o;2712:191::-;2780:4;2813:18;2805:6;2802:30;2799:56;;;2835:18;;:::i;:::-;-1:-1:-1;2880:1:28;2876:14;2892:4;2872:25;;2712:191::o;2908:2725::-;3078:9;3113:72;3129:55;3177:6;3129:55;:::i;:::-;3113:72;:::i;:::-;3219:19;;;3257:4;3277:12;;;;3207:3;3308:1;3343:15;;;3332:27;;3382:14;3371:26;;3368:46;;;3410:1;3407;3400:12;3368:46;3434:5;3448:2152;3464:6;3459:3;3456:15;3448:2152;;;3550:3;3537:17;3577:18;3627:2;3614:11;3611:19;3608:109;;;3671:1;3700:2;3696;3689:14;3608:109;3751:11;3744:5;3740:23;3730:33;;3808:4;3803:2;3787:14;3783:23;3779:34;3776:124;;;3854:1;3883:2;3879;3872:14;3776:124;3928:22;;:::i;:::-;3979;3998:2;3979:22;:::i;:::-;3970:7;3963:39;4051:2;4047;4043:11;4030:25;4090:1;4081:7;4078:14;4068:112;;4134:1;4163:2;4159;4152:14;4068:112;4200:16;;;4193:33;4249:2;4291:11;;;4278:25;4319:14;;;4316:104;;;4374:1;4403:2;4399;4392:14;4316:104;4444:15;;;;;4502:14;4495:4;4486:14;;4482:35;4472:136;;4560:1;4549:12;;4590:3;4585;4578:16;4472:136;4645:3;4632:17;4621:28;;4675:69;4691:52;4739:3;4691:52;:::i;4675:69::-;4788:18;;;4884:12;;;4875:22;;4871:31;;;4828:14;;;;4931;4918:28;;4915:121;;;4988:1;5018:3;5013;5006:16;4915:121;5062:12;;;;5087:394;5105:8;5098:5;5095:19;5087:394;;;5188:19;;-1:-1:-1;;;;;;5246:34:28;;5234:47;;5224:164;;5332:1;5366:3;5361;5354:16;5224:164;5405:22;;5126:14;;;;5453;;;;5087:394;;;5501:16;;;5494:31;;;;-1:-1:-1;5538:20:28;;-1:-1:-1;;5578:12:28;;;;3481;;3448:2152;;;-1:-1:-1;5622:5:28;;2908:2725;-1:-1:-1;;;;;;;2908:2725:28:o;6041:402::-;6243:2;6225:21;;;6282:2;6262:18;;;6255:30;6321:34;6316:2;6301:18;;6294:62;-1:-1:-1;;;6387:2:28;6372:18;;6365:36;6433:3;6418:19;;6041:402::o;7258:127::-;7319:10;7314:3;7310:20;7307:1;7300:31;7350:4;7347:1;7340:15;7374:4;7371:1;7364:15;7390:127;7451:10;7446:3;7442:20;7439:1;7432:31;7482:4;7479:1;7472:15;7506:4;7503:1;7496:15;7522:135;7561:3;7582:17;;;7579:43;;7602:18;;:::i;:::-;-1:-1:-1;7649:1:28;7638:13;;7522:135::o;7662:127::-;7723:10;7718:3;7714:20;7711:1;7704:31;7754:4;7751:1;7744:15;7778:4;7775:1;7768:15;7794:380;7873:1;7869:12;;;;7916;;;7937:61;;7991:4;7983:6;7979:17;7969:27;;7937:61;8044:2;8036:6;8033:14;8013:18;8010:38;8007:161;;8090:10;8085:3;8081:20;8078:1;8071:31;8125:4;8122:1;8115:15;8153:4;8150:1;8143:15;8007:161;;7794:380;;;:::o;8304:544::-;8405:2;8400:3;8397:11;8394:448;;;8441:1;8466:5;8462:2;8455:17;8511:4;8507:2;8497:19;8581:2;8569:10;8565:19;8562:1;8558:27;8552:4;8548:38;8617:4;8605:10;8602:20;8599:47;;;-1:-1:-1;8640:4:28;8599:47;8695:2;8690:3;8686:12;8683:1;8679:20;8673:4;8669:31;8659:41;;8750:82;8768:2;8761:5;8758:13;8750:82;;;8813:17;;;8794:1;8783:13;8750:82;;;8754:3;;;8304:544;;;:::o;9024:1348::-;9148:3;9142:10;9175:18;9167:6;9164:30;9161:56;;;9197:18;;:::i;:::-;9226:96;9315:6;9275:38;9307:4;9301:11;9275:38;:::i;:::-;9269:4;9226:96;:::i;:::-;9377:4;;9441:2;9430:14;;9458:1;9453:662;;;;10159:1;10176:6;10173:89;;;-1:-1:-1;10228:19:28;;;10222:26;10173:89;-1:-1:-1;;8981:1:28;8977:11;;;8973:24;8969:29;8959:40;9005:1;9001:11;;;8956:57;10275:81;;9423:943;;9453:662;8251:1;8244:14;;;8288:4;8275:18;;-1:-1:-1;;9489:20:28;;;9606:236;9620:7;9617:1;9614:14;9606:236;;;9709:19;;;9703:26;9688:42;;9801:27;;;;9769:1;9757:14;;;;9636:19;;9606:236;;;9610:3;9870:6;9861:7;9858:19;9855:201;;;9931:19;;;9925:26;-1:-1:-1;;10014:1:28;10010:14;;;10026:3;10006:24;10002:37;9998:42;9983:58;9968:74;;9855:201;-1:-1:-1;;;;;10102:1:28;10086:14;;;10082:22;10069:36;;-1:-1:-1;9024:1348:28:o;10377:125::-;10442:9;;;10463:10;;;10460:36;;;10476:18;;:::i;:::-;10377:125;;;;:::o;11614:250::-;11699:1;11709:113;11723:6;11720:1;11717:13;11709:113;;;11799:11;;;11793:18;11780:11;;;11773:39;11745:2;11738:10;11709:113;;;-1:-1:-1;;11856:1:28;11838:16;;11831:27;11614:250::o;11869:270::-;11910:3;11948:5;11942:12;11975:6;11970:3;11963:19;11991:76;12060:6;12053:4;12048:3;12044:14;12037:4;12030:5;12026:16;11991:76;:::i;:::-;12121:2;12100:15;-1:-1:-1;;12096:29:28;12087:39;;;;12128:4;12083:50;;11869:270;-1:-1:-1;;11869:270:28:o;12144:2090::-;12412:4;12441:2;12481;12470:9;12466:18;12511:2;12500:9;12493:21;12534:6;12569;12563:13;12600:6;12592;12585:22;12626:3;12616:13;;12660:2;12649:9;12645:18;12638:25;;12722:2;12712:6;12709:1;12705:14;12694:9;12690:30;12686:39;12744:4;12783:2;12775:6;12771:15;12804:1;12814:1249;12828:6;12825:1;12822:13;12814:1249;;;12893:22;;;-1:-1:-1;;12889:37:28;12877:50;;12950:13;;13037:9;;-1:-1:-1;;;;;13033:35:28;13018:51;;13108:11;;;13102:18;12990:15;;;;13160:1;13143:19;;13133:170;;13213:10;13208:3;13204:20;13201:1;13194:31;13252:4;13249:1;13242:15;13284:4;13281:1;13274:15;13133:170;13323:15;;;13316:37;13376:4;13421:11;;;13415:18;13453:15;;;13446:27;;;13534:21;;13568:24;;;;13658:23;;;;-1:-1:-1;;13614:15:28;;;;13719:236;13735:8;13730:3;13727:17;13719:236;;;13816:15;;-1:-1:-1;;;;;;13812:42:28;13798:57;;13924:17;;;;13763:1;13754:11;;;;;13881:14;;;;13719:236;;;-1:-1:-1;14041:12:28;;;;13978:5;-1:-1:-1;;;14006:15:28;;;;12850:1;12843:9;12814:1249;;;-1:-1:-1;;;;;;;11571:31:28;;14099:18;;;11559:44;14156:22;;;14149:4;14134:20;;14127:52;14196:32;14160:6;14213;14196:32;:::i;:::-;14188:40;12144:2090;-1:-1:-1;;;;;;;;;;12144:2090:28:o;14239:407::-;14441:2;14423:21;;;14480:2;14460:18;;;14453:30;14519:34;14514:2;14499:18;;14492:62;-1:-1:-1;;;14585:2:28;14570:18;;14563:41;14636:3;14621:19;;14239:407::o;14651:408::-;14853:2;14835:21;;;14892:2;14872:18;;;14865:30;14931:34;14926:2;14911:18;;14904:62;-1:-1:-1;;;14997:2:28;14982:18;;14975:42;15049:3;15034:19;;14651:408::o;15486:217::-;15524:3;-1:-1:-1;;;;;15613:2:28;15606:5;15602:14;15640:2;15631:7;15628:15;15625:41;;15646:18;;:::i;:::-;15695:1;15682:15;;15486:217;-1:-1:-1;;;15486:217:28:o;17415:287::-;17544:3;17582:6;17576:13;17598:66;17657:6;17652:3;17645:4;17637:6;17633:17;17598:66;:::i;:::-;17680:16;;;;;17415:287;-1:-1:-1;;17415:287:28:o;17707:219::-;17856:2;17845:9;17838:21;17819:4;17876:44;17916:2;17905:9;17901:18;17893:6;17876:44;:::i;:::-;17868:52;17707:219;-1:-1:-1;;;17707:219:28:o;19177:128::-;19244:9;;;19265:11;;;19262:37;;;19279:18;;:::i;19310:127::-;19371:10;19366:3;19362:20;19359:1;19352:31;19402:4;19399:1;19392:15;19426:4;19423:1;19416:15"},"gasEstimates":{"creation":{"codeDepositCost":"1696000","executionCost":"1778","totalCost":"1697778"},"external":{"cancelDiamondCut()":"infinite","diamondCut((address,uint8,bytes4[])[],address,bytes)":"863","executeDiamondCut()":"infinite","proposeDiamondCut((address,uint8,bytes4[])[],address,bytes)":"infinite"}},"methodIdentifiers":{"cancelDiamondCut()":"6fb05998","diamondCut((address,uint8,bytes4[])[],address,bytes)":"1f931c1c","executeDiamondCut()":"f37a5da0","proposeDiamondCut((address,uint8,bytes4[])[],address,bytes)":"bbf2358e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"facetAddress\",\"type\":\"address\"},{\"internalType\":\"enum IDiamondCut.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"functionSelectors\",\"type\":\"bytes4[]\"}],\"indexed\":false,\"internalType\":\"struct IDiamondCut.FacetCut[]\",\"name\":\"_diamondCut\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_init\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_calldata\",\"type\":\"bytes\"}],\"name\":\"DiamondCut\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"facetAddress\",\"type\":\"address\"},{\"internalType\":\"enum IDiamondCut.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"functionSelectors\",\"type\":\"bytes4[]\"}],\"indexed\":false,\"internalType\":\"struct IDiamondCut.FacetCut[]\",\"name\":\"_diamondCut\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_init\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_calldata\",\"type\":\"bytes\"}],\"name\":\"DiamondCut\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"canceller\",\"type\":\"address\"}],\"name\":\"DiamondCutCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"canceller\",\"type\":\"address\"}],\"name\":\"DiamondCutCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"executionTime\",\"type\":\"uint256\"}],\"name\":\"DiamondCutProposed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"executionTime\",\"type\":\"uint256\"}],\"name\":\"DiamondCutProposed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"cancelDiamondCut\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"facetAddress\",\"type\":\"address\"},{\"internalType\":\"enum IDiamondCut.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"functionSelectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct IDiamondCut.FacetCut[]\",\"name\":\"\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"diamondCut\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"executeDiamondCut\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"facetAddress\",\"type\":\"address\"},{\"internalType\":\"enum IDiamondCut.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"functionSelectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct IDiamondCut.FacetCut[]\",\"name\":\"_diamondCut\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"_init\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_calldata\",\"type\":\"bytes\"}],\"name\":\"proposeDiamondCut\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the diamond cut functionality with a timelock mechanism.      The diamond cut operation allows adding, replacing, or removing facets and functions      from the diamond proxy contract. This implementation adds a security timelock      that requires a two-step process (propose and execute) for diamond cuts,      enhancing security by allowing time for review before execution.      Based on the EIP-2535 Diamond Standard.\",\"kind\":\"dev\",\"methods\":{\"cancelDiamondCut()\":{\"custom:security\":\"Only callable by the contract owner\",\"details\":\"Allows the contract owner to cancel a pending diamond cut proposal      before it is executed. This is useful if errors are found in the      proposed changes during the timelock period or if the changes      are no longer desired. Once cancelled, the proposal is completely      removed and a new proposal would need to be submitted if needed.\"},\"diamondCut((address,uint8,bytes4[])[],address,bytes)\":{\"custom:security\":\"Always reverts with an error message directing to the new functions\",\"details\":\"THIS FUNCTION IS DEPRECATED and will always revert when called.      It has been replaced by the more secure two-step process using      proposeDiamondCut() followed by executeDiamondCut(), which adds a timelock      security feature. This function remains to maintain compatibility with      the IDiamondCut interface but cannot be used.\"},\"executeDiamondCut()\":{\"custom:security\":\"Reverts if no diamond cut is proposed, if the timelock period                  hasn't expired, or if the initialization call fails\",\"details\":\"Second and final step in the two-step diamond modification process.      This executes the changes that were previously proposed, but only if      the required timelock period has passed. The timelock period is a      security measure to allow stakeholders time to review proposed changes.      Only the contract owner can execute the diamond cut.\"},\"proposeDiamondCut((address,uint8,bytes4[])[],address,bytes)\":{\"details\":\"First step in the two-step process for modifying the diamond. This queues up      changes that can only be executed after a predefined timelock period.      Only the contract owner can propose changes.\",\"params\":{\"_calldata\":\"A function call, including function selector and arguments, for initialization\",\"_diamondCut\":\"Contains the facet addresses and function selectors to add, replace, or remove\",\"_init\":\"The address of the contract or facet to execute initialization code\"}}},\"title\":\"DiamondCutFacet\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"cancelDiamondCut()\":{\"notice\":\"Cancel a previously proposed diamond cut\"},\"diamondCut((address,uint8,bytes4[])[],address,bytes)\":{\"notice\":\"Add/replace/remove any number of functions and optionally execute initialization code\"},\"executeDiamondCut()\":{\"notice\":\"Execute a previously proposed diamond cut after the timelock period has elapsed\"},\"proposeDiamondCut((address,uint8,bytes4[])[],address,bytes)\":{\"notice\":\"Propose a diamond cut to be executed after the timelock period\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/facets/DiamondCutFacet.sol\":\"DiamondCutFacet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\\n\\npragma solidity >=0.4.16;\\n\\nimport {IERC165} from \\\"../utils/introspection/IERC165.sol\\\";\\n\",\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity >=0.4.16;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\"},\"contracts/facets/DiamondCutFacet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/******************************************************************************\\\\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\n* EIP-2535 Diamonds: https://eips.ethereum.org/EIPS/eip-2535\\n*\\n* Implementation of the diamond cut functions.\\n/******************************************************************************/\\n\\nimport { LibDiamond } from \\\"../libraries/LibDiamond.sol\\\";\\nimport { IDiamondCut } from \\\"../interfaces/IDiamondCut.sol\\\";\\nimport { IERC165 } from \\\"@openzeppelin/contracts/interfaces/IERC165.sol\\\";\\n\\n/**\\n * @title DiamondCutFacet\\n * @dev Implementation of the diamond cut functionality with a timelock mechanism.\\n *      The diamond cut operation allows adding, replacing, or removing facets and functions\\n *      from the diamond proxy contract. This implementation adds a security timelock\\n *      that requires a two-step process (propose and execute) for diamond cuts,\\n *      enhancing security by allowing time for review before execution.\\n *      Based on the EIP-2535 Diamond Standard.\\n */\\ncontract DiamondCutFacet is IDiamondCut {\\n    /// @notice Propose a diamond cut to be executed after the timelock period\\n    /// @dev First step in the two-step process for modifying the diamond. This queues up\\n    ///      changes that can only be executed after a predefined timelock period.\\n    ///      Only the contract owner can propose changes.\\n    /// @param _diamondCut Contains the facet addresses and function selectors to add, replace, or remove\\n    /// @param _init The address of the contract or facet to execute initialization code\\n    /// @param _calldata A function call, including function selector and arguments, for initialization\\n    function proposeDiamondCut(\\n        IDiamondCut.FacetCut[] calldata _diamondCut,\\n        address _init,\\n        bytes calldata _calldata\\n    ) external {\\n        LibDiamond.enforceIsContractOwner();\\n        LibDiamond.proposeDiamondCut(_diamondCut, _init, _calldata);\\n    }\\n    \\n    /// @notice Execute a previously proposed diamond cut after the timelock period has elapsed\\n    /// @dev Second and final step in the two-step diamond modification process.\\n    ///      This executes the changes that were previously proposed, but only if\\n    ///      the required timelock period has passed. The timelock period is a\\n    ///      security measure to allow stakeholders time to review proposed changes.\\n    ///      Only the contract owner can execute the diamond cut.\\n    /// @custom:security Reverts if no diamond cut is proposed, if the timelock period\\n    ///                  hasn't expired, or if the initialization call fails\\n    function executeDiamondCut() external {\\n        LibDiamond.enforceIsContractOwner();\\n        LibDiamond.executeDiamondCut();\\n    }\\n    \\n    /// @notice Cancel a previously proposed diamond cut\\n    /// @dev Allows the contract owner to cancel a pending diamond cut proposal\\n    ///      before it is executed. This is useful if errors are found in the\\n    ///      proposed changes during the timelock period or if the changes\\n    ///      are no longer desired. Once cancelled, the proposal is completely\\n    ///      removed and a new proposal would need to be submitted if needed.\\n    /// @custom:security Only callable by the contract owner\\n    function cancelDiamondCut() external {\\n        LibDiamond.enforceIsContractOwner();\\n        LibDiamond.cancelDiamondCut();\\n    }\\n    \\n    /// @notice Add/replace/remove any number of functions and optionally execute initialization code\\n    /// @dev THIS FUNCTION IS DEPRECATED and will always revert when called.\\n    ///      It has been replaced by the more secure two-step process using\\n    ///      proposeDiamondCut() followed by executeDiamondCut(), which adds a timelock\\n    ///      security feature. This function remains to maintain compatibility with\\n    ///      the IDiamondCut interface but cannot be used.\\n    /// @custom:security Always reverts with an error message directing to the new functions\\n    function diamondCut(\\n        IDiamondCut.FacetCut[] calldata,\\n        address,\\n        bytes calldata\\n    ) external pure override {\\n        revert(\\\"Function deprecated: Use proposeDiamondCut() + executeDiamondCut() instead\\\");\\n    }\\n}\",\"keccak256\":\"0xa2465548a92c33993cd90ae082039e69d44b5186efe66d5cc6e91b7b9d446368\",\"license\":\"MIT\"},\"contracts/interfaces/IDiamondCut.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.6;\\r\\n\\r\\n/******************************************************************************\\\\\\r\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\r\\n* EIP-2535 Diamonds: https://eips.ethereum.org/EIPS/eip-2535\\r\\n/******************************************************************************/\\r\\n\\r\\ninterface IDiamondCut {\\r\\n    enum FacetCutAction {Add, Replace, Remove}\\r\\n    // Add=0, Replace=1, Remove=2\\r\\n\\r\\n    struct FacetCut {\\r\\n        address facetAddress;\\r\\n        FacetCutAction action;\\r\\n        bytes4[] functionSelectors;\\r\\n    }\\r\\n\\r\\n    /// @notice Add/replace/remove any number of functions and optionally execute\\r\\n    ///         a function with delegatecall\\r\\n    /// @param _diamondCut Contains the facet addresses and function selectors\\r\\n    /// @param _init The address of the contract or facet to execute _calldata\\r\\n    /// @param _calldata A function call, including function selector and arguments\\r\\n    ///                  _calldata is executed with delegatecall on _init\\r\\n    function diamondCut(\\r\\n        FacetCut[] calldata _diamondCut,\\r\\n        address _init,\\r\\n        bytes calldata _calldata\\r\\n    ) external;\\r\\n    \\r\\n    /// @notice Propose an upgrade to be executed after the timelock period\\r\\n    /// @param _diamondCut Contains the facet addresses and function selectors\\r\\n    /// @param _init The address of the contract or facet to execute _calldata\\r\\n    /// @param _calldata A function call, including function selector and arguments\\r\\n    function proposeDiamondCut(\\r\\n        FacetCut[] calldata _diamondCut,\\r\\n        address _init,\\r\\n        bytes calldata _calldata\\r\\n    ) external;\\r\\n    \\r\\n    /// @notice Execute a previously proposed upgrade after the timelock period\\r\\n    function executeDiamondCut() external;\\r\\n    \\r\\n    /// @notice Cancel a proposed upgrade\\r\\n    function cancelDiamondCut() external;\\r\\n\\r\\n    event DiamondCut(FacetCut[] _diamondCut, address _init, bytes _calldata);\\r\\n    event DiamondCutProposed(address indexed proposer, uint256 indexed proposalTime, uint256 executionTime);\\r\\n    event DiamondCutCancelled(address indexed canceller);\\r\\n}\\r\\n\",\"keccak256\":\"0x340a039f0dd63cf19bc669551feec28879457d8b741711ef3513168d620f11bc\",\"license\":\"MIT\"},\"contracts/interfaces/IERC173.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.6;\\n\\n/// @title ERC-173 Contract Ownership Standard\\n///  Note: the ERC-165 identifier for this interface is 0x7f5828d0\\n/* is ERC165 */\\ninterface IERC173 {\\n    /// @dev This emits when ownership of a contract changes.\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /// @notice Get the address of the owner\\n    /// @return owner_ The address of the owner.\\n    function owner() external view returns (address owner_);\\n\\n    /// @notice Set the address of the new owner of the contract\\n    /// @dev Set _newOwner to address(0) to renounce any ownership.\\n    /// @param _newOwner The address of the new owner of the contract\\n    function transferOwnership(address _newOwner) external;\\n}\\n\",\"keccak256\":\"0x84fe28f479bf96f1819514dd8493ae15955eda0dbabcbb5f24c3c935075a31d4\",\"license\":\"MIT\"},\"contracts/libraries/LibDiamond.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.6;\\n\\n/******************************************************************************\\\\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\n* EIP-2535 Diamonds: https://eips.ethereum.org/EIPS/eip-2535\\n/******************************************************************************/\\nimport { IDiamondCut } from \\\"../interfaces/IDiamondCut.sol\\\";\\nimport \\\"../interfaces/IERC173.sol\\\"; // for IERC173 interface\\nimport \\\"../interfaces/IDiamondCut.sol\\\";\\n\\n// Remember to add the loupe functions from DiamondLoupeFacet to the diamond.\\n// The loupe functions are required by the EIP2535 Diamonds standard\\n\\nlibrary LibDiamond {\\n    bytes32 constant DIAMOND_STORAGE_POSITION = keccak256(\\\"diamond.standard.diamond.storage\\\");\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n    event DiamondCut(IDiamondCut.FacetCut[] _diamondCut, address _init, bytes _calldata);\\n    event DiamondCutProposed(address indexed proposer, uint256 indexed proposalTime, uint256 executionTime);\\n    event DiamondCutCancelled(address indexed canceller);\\n\\n    struct FacetAddressAndPosition {\\n        address facetAddress;\\n        uint96 functionSelectorPosition; // position in facetFunctionSelectors.functionSelectors array\\n    }\\n\\n    struct FacetFunctionSelectors {\\n        bytes4[] functionSelectors;\\n        uint256 facetAddressPosition; // position of facetAddress in facetAddresses array\\n    }\\n\\n    // Upgrade proposal struct for timelock functionality\\n    struct UpgradeProposal {\\n        IDiamondCut.FacetCut[] diamondCut;\\n        address initAddress;\\n        bytes initCalldata;\\n        uint256 proposalTime;\\n        bool exists;\\n    }\\n\\n    struct DiamondStorage {\\n        // maps function selector to the facet address and\\n        // the position of the selector in the facetFunctionSelectors.selectors array\\n        mapping(bytes4 => FacetAddressAndPosition) selectorToFacetAndPosition;\\n        // maps facet addresses to function selectors\\n        mapping(address => FacetFunctionSelectors) facetFunctionSelectors;\\n        // facet addresses\\n        address[] facetAddresses;\\n        // Used to query if a contract implements an interface.\\n        // Used to implement ERC-165.\\n        mapping(bytes4 => bool) supportedInterfaces;\\n        // owner of the contract\\n        address contractOwner;\\n        // Timelock for upgrades (in seconds)\\n        uint256 upgradeTimelock;\\n        // Storage for the current upgrade proposal\\n        UpgradeProposal upgradeProposal;\\n    }\\n\\n    function diamondStorage() internal pure returns (DiamondStorage storage ds) {\\n        bytes32 position = DIAMOND_STORAGE_POSITION;\\n        assembly {\\n            ds.slot := position\\n        }\\n    }\\n\\n    function setContractOwner(address _newOwner) internal {\\n        DiamondStorage storage ds = diamondStorage();\\n        address previousOwner = ds.contractOwner;\\n        ds.contractOwner = _newOwner;\\n        emit OwnershipTransferred(previousOwner, _newOwner);\\n    }\\n\\n    function contractOwner() internal view returns (address contractOwner_) {\\n        contractOwner_ = diamondStorage().contractOwner;\\n    }\\n\\n    function enforceIsContractOwner() internal view {\\n        require(msg.sender == diamondStorage().contractOwner, \\\"LibDiamond: Must be contract owner\\\");\\n    }\\n\\n    // Timelock constants\\n    uint256 constant DEFAULT_UPGRADE_TIMELOCK = 2 days;\\n\\n    // Internal function version of diamondCut\\n    function diamondCut(\\n        IDiamondCut.FacetCut[] memory _diamondCut,\\n        address _init,\\n        bytes memory _calldata\\n    ) internal {\\n        for (uint256 facetIndex; facetIndex < _diamondCut.length; facetIndex++) {\\n            IDiamondCut.FacetCutAction action = _diamondCut[facetIndex].action;\\n            if (action == IDiamondCut.FacetCutAction.Add) {\\n                addFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\\n            } else if (action == IDiamondCut.FacetCutAction.Replace) {\\n                replaceFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\\n            } else if (action == IDiamondCut.FacetCutAction.Remove) {\\n                removeFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\\n            } else {\\n                revert(\\\"LibDiamondCut: Incorrect FacetCutAction\\\");\\n            }\\n        }\\n        emit DiamondCut(_diamondCut, _init, _calldata);\\n        initializeDiamondCut(_init, _calldata);\\n    }\\n\\n    function addFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\\n        require(_functionSelectors.length > 0, \\\"LibDiamondCut: No selectors in facet to cut\\\");\\n        DiamondStorage storage ds = diamondStorage();        \\n        require(_facetAddress != address(0), \\\"LibDiamondCut: Add facet can't be address(0)\\\");\\n        uint96 selectorPosition = uint96(ds.facetFunctionSelectors[_facetAddress].functionSelectors.length);\\n        // add new facet address if it does not exist\\n        if (selectorPosition == 0) {\\n            addFacet(ds, _facetAddress);            \\n        }\\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\\n            bytes4 selector = _functionSelectors[selectorIndex];\\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\\n            require(oldFacetAddress == address(0), \\\"LibDiamondCut: Can't add function that already exists\\\");\\n            addFunction(ds, selector, selectorPosition, _facetAddress);\\n            selectorPosition++;\\n        }\\n    }\\n\\n    function replaceFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\\n        require(_functionSelectors.length > 0, \\\"LibDiamondCut: No selectors in facet to cut\\\");\\n        DiamondStorage storage ds = diamondStorage();\\n        require(_facetAddress != address(0), \\\"LibDiamondCut: Add facet can't be address(0)\\\");\\n        uint96 selectorPosition = uint96(ds.facetFunctionSelectors[_facetAddress].functionSelectors.length);\\n        // add new facet address if it does not exist\\n        if (selectorPosition == 0) {\\n            addFacet(ds, _facetAddress);\\n        }\\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\\n            bytes4 selector = _functionSelectors[selectorIndex];\\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\\n            require(oldFacetAddress != _facetAddress, \\\"LibDiamondCut: Can't replace function with same function\\\");\\n            removeFunction(ds, oldFacetAddress, selector);\\n            addFunction(ds, selector, selectorPosition, _facetAddress);\\n            selectorPosition++;\\n        }\\n    }\\n\\n    function removeFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\\n        require(_functionSelectors.length > 0, \\\"LibDiamondCut: No selectors in facet to cut\\\");\\n        DiamondStorage storage ds = diamondStorage();\\n        // if function does not exist then do nothing and return\\n        require(_facetAddress == address(0), \\\"LibDiamondCut: Remove facet address must be address(0)\\\");\\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\\n            bytes4 selector = _functionSelectors[selectorIndex];\\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\\n            removeFunction(ds, oldFacetAddress, selector);\\n        }\\n    }\\n\\n    function addFacet(DiamondStorage storage ds, address _facetAddress) internal {\\n        enforceHasContractCode(_facetAddress, \\\"LibDiamondCut: New facet has no code\\\");\\n        ds.facetFunctionSelectors[_facetAddress].facetAddressPosition = ds.facetAddresses.length;\\n        ds.facetAddresses.push(_facetAddress);\\n    }    \\n\\n\\n    function addFunction(DiamondStorage storage ds, bytes4 _selector, uint96 _selectorPosition, address _facetAddress) internal {\\n        ds.selectorToFacetAndPosition[_selector].functionSelectorPosition = _selectorPosition;\\n        ds.facetFunctionSelectors[_facetAddress].functionSelectors.push(_selector);\\n        ds.selectorToFacetAndPosition[_selector].facetAddress = _facetAddress;\\n    }\\n\\n    function removeFunction(DiamondStorage storage ds, address _facetAddress, bytes4 _selector) internal {        \\n        require(_facetAddress != address(0), \\\"LibDiamondCut: Can't remove function that doesn't exist\\\");\\n        // an immutable function is a function defined directly in a diamond\\n        require(_facetAddress != address(this), \\\"LibDiamondCut: Can't remove immutable function\\\");\\n        // replace selector with last selector, then delete last selector\\n        uint256 selectorPosition = ds.selectorToFacetAndPosition[_selector].functionSelectorPosition;\\n        uint256 lastSelectorPosition = ds.facetFunctionSelectors[_facetAddress].functionSelectors.length - 1;\\n        // if not the same then replace _selector with lastSelector\\n        if (selectorPosition != lastSelectorPosition) {\\n            bytes4 lastSelector = ds.facetFunctionSelectors[_facetAddress].functionSelectors[lastSelectorPosition];\\n            ds.facetFunctionSelectors[_facetAddress].functionSelectors[selectorPosition] = lastSelector;\\n            ds.selectorToFacetAndPosition[lastSelector].functionSelectorPosition = uint96(selectorPosition);\\n        }\\n        // delete the last selector\\n        ds.facetFunctionSelectors[_facetAddress].functionSelectors.pop();\\n        delete ds.selectorToFacetAndPosition[_selector];\\n\\n        // if no more selectors for facet address then delete the facet address\\n        if (lastSelectorPosition == 0) {\\n            // replace facet address with last facet address and delete last facet address\\n            uint256 lastFacetAddressPosition = ds.facetAddresses.length - 1;\\n            uint256 facetAddressPosition = ds.facetFunctionSelectors[_facetAddress].facetAddressPosition;\\n            if (facetAddressPosition != lastFacetAddressPosition) {\\n                address lastFacetAddress = ds.facetAddresses[lastFacetAddressPosition];\\n                ds.facetAddresses[facetAddressPosition] = lastFacetAddress;\\n                ds.facetFunctionSelectors[lastFacetAddress].facetAddressPosition = facetAddressPosition;\\n            }\\n            ds.facetAddresses.pop();\\n            delete ds.facetFunctionSelectors[_facetAddress].facetAddressPosition;\\n        }\\n    }\\n\\n    function initializeDiamondCut(address _init, bytes memory _calldata) internal {\\n        if (_init == address(0)) {\\n            require(_calldata.length == 0, \\\"LibDiamondCut: _init is address(0) but_calldata is not empty\\\");\\n        } else {\\n            require(_calldata.length > 0, \\\"LibDiamondCut: _calldata is empty but _init is not address(0)\\\");\\n            if (_init != address(this)) {\\n                enforceHasContractCode(_init, \\\"LibDiamondCut: _init address has no code\\\");\\n            }\\n            (bool success, bytes memory error) = _init.delegatecall(_calldata);\\n            if (!success) {\\n                if (error.length > 0) {\\n                    // bubble up the error\\n                    revert(string(error));\\n                } else {\\n                    revert(\\\"LibDiamondCut: _init function reverted\\\");\\n                }\\n            }\\n        }\\n    }\\n\\n    function enforceHasContractCode(address _contract, string memory _errorMessage) internal view {\\n        uint256 contractSize;\\n        assembly {\\n            contractSize := extcodesize(_contract)\\n        }\\n        require(contractSize > 0, _errorMessage);\\n    }\\n\\n    // Initialize timelock settings for upgrade proposals\\n    function initializeUpgradeTimelock(uint256 _timelock) internal {\\n        DiamondStorage storage ds = diamondStorage();\\n        require(ds.upgradeTimelock == 0, \\\"LibDiamond: Timelock already initialized\\\");\\n        ds.upgradeTimelock = _timelock > 0 ? _timelock : DEFAULT_UPGRADE_TIMELOCK;\\n    }\\n\\n    // Propose a diamond cut to be executed after the timelock\\n    function proposeDiamondCut(\\n        IDiamondCut.FacetCut[] memory _diamondCut,\\n        address _init,\\n        bytes memory _calldata\\n    ) internal {\\n        DiamondStorage storage ds = diamondStorage();\\n        require(!ds.upgradeProposal.exists, \\\"LibDiamond: Upgrade already proposed\\\");\\n        require(ds.upgradeTimelock > 0, \\\"LibDiamond: Timelock not initialized\\\");\\n        \\n        // Create a deep copy of the diamond cut to store in the proposal\\n        IDiamondCut.FacetCut[] memory diamondCutCopy = new IDiamondCut.FacetCut[](_diamondCut.length);\\n        for (uint256 i = 0; i < _diamondCut.length; i++) {\\n            diamondCutCopy[i] = _diamondCut[i];\\n            \\n            // Deep copy the function selectors array\\n            bytes4[] memory selectors = new bytes4[](_diamondCut[i].functionSelectors.length);\\n            for (uint256 j = 0; j < _diamondCut[i].functionSelectors.length; j++) {\\n                selectors[j] = _diamondCut[i].functionSelectors[j];\\n            }\\n            diamondCutCopy[i].functionSelectors = selectors;\\n        }\\n        \\n        // Store the proposal\\n        // Create empty array in storage first\\n        delete ds.upgradeProposal.diamondCut;\\n        \\n        // Manually copy each element and its nested arrays to storage\\n        for (uint256 i = 0; i < _diamondCut.length; i++) {\\n            // Create a new struct in storage by pushing an empty element first\\n            ds.upgradeProposal.diamondCut.push();\\n            \\n            // Now set the values for this element's fields\\n            ds.upgradeProposal.diamondCut[i].facetAddress = _diamondCut[i].facetAddress;\\n            ds.upgradeProposal.diamondCut[i].action = _diamondCut[i].action;\\n            \\n            // For the selectors array, we need to handle it separately\\n            // Clear any existing selectors to ensure clean state\\n            delete ds.upgradeProposal.diamondCut[i].functionSelectors;\\n            \\n            // Copy each selector individually\\n            for (uint256 j = 0; j < _diamondCut[i].functionSelectors.length; j++) {\\n                ds.upgradeProposal.diamondCut[i].functionSelectors.push(_diamondCut[i].functionSelectors[j]);\\n            }\\n        }\\n        ds.upgradeProposal.initAddress = _init;\\n        ds.upgradeProposal.initCalldata = _calldata;\\n        ds.upgradeProposal.proposalTime = block.timestamp;\\n        ds.upgradeProposal.exists = true;\\n        \\n        emit DiamondCutProposed(msg.sender, block.timestamp, block.timestamp + ds.upgradeTimelock);\\n    }\\n    \\n    // Execute a proposed diamond cut after the timelock period\\n    function executeDiamondCut() internal {\\n        DiamondStorage storage ds = diamondStorage();\\n        require(ds.upgradeProposal.exists, \\\"LibDiamond: No upgrade proposal exists\\\");\\n        require(\\n            block.timestamp >= ds.upgradeProposal.proposalTime + ds.upgradeTimelock,\\n            \\\"LibDiamond: Timelock period not elapsed\\\"\\n        );\\n        \\n        // Execute the diamond cut\\n        diamondCut(\\n            ds.upgradeProposal.diamondCut,\\n            ds.upgradeProposal.initAddress,\\n            ds.upgradeProposal.initCalldata\\n        );\\n        \\n        // Reset the proposal\\n        delete ds.upgradeProposal;\\n    }\\n    \\n    // Cancel a proposed diamond cut\\n    function cancelDiamondCut() internal {\\n        DiamondStorage storage ds = diamondStorage();\\n        require(ds.upgradeProposal.exists, \\\"LibDiamond: No upgrade proposal exists\\\");\\n        \\n        // Reset the proposal\\n        delete ds.upgradeProposal;\\n        \\n        emit DiamondCutCancelled(msg.sender);\\n    }\\n}\\n\",\"keccak256\":\"0x3d3bb1df2d228d2738f7ce7b9f634653edda3f638a335b92565e9b42e941b1bb\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"cancelDiamondCut()":{"notice":"Cancel a previously proposed diamond cut"},"diamondCut((address,uint8,bytes4[])[],address,bytes)":{"notice":"Add/replace/remove any number of functions and optionally execute initialization code"},"executeDiamondCut()":{"notice":"Execute a previously proposed diamond cut after the timelock period has elapsed"},"proposeDiamondCut((address,uint8,bytes4[])[],address,bytes)":{"notice":"Propose a diamond cut to be executed after the timelock period"}},"version":1}}},"contracts/facets/DiamondLoupeFacet.sol":{"DiamondLoupeFacet":{"abi":[{"inputs":[{"internalType":"bytes4","name":"_functionSelector","type":"bytes4"}],"name":"facetAddress","outputs":[{"internalType":"address","name":"facetAddress_","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"facetAddresses","outputs":[{"internalType":"address[]","name":"facetAddresses_","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_facet","type":"address"}],"name":"facetFunctionSelectors","outputs":[{"internalType":"bytes4[]","name":"facetFunctionSelectors_","type":"bytes4[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"facets","outputs":[{"components":[{"internalType":"address","name":"facetAddress","type":"address"},{"internalType":"bytes4[]","name":"functionSelectors","type":"bytes4[]"}],"internalType":"struct IDiamondLoupe.Facet[]","name":"facets_","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"_interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Implementation of the DiamondLoupe standard which provides introspection functions      to view what facets and functions are available in the diamond contract.      The Diamond Loupe functions make it possible to look up facets and functions      implemented by a diamond. This implementation is based on the EIP-2535 Diamond Standard.","kind":"dev","methods":{"facetAddress(bytes4)":{"details":"Used to determine which implementation contract handles a particular function.      This function is critical for understanding the diamond's current function routing.      If no facet is found for the selector, returns address(0).","params":{"_functionSelector":"The 4-byte function selector to find the implementation for"},"returns":{"facetAddress_":"The facet address implementing the function, or address(0) if not found"}},"facetAddresses()":{"details":"Provides a complete list of implementation contracts that make up the diamond's functionality","returns":{"facetAddresses_":"Array of all registered facet addresses"}},"facetFunctionSelectors(address)":{"details":"Used to retrieve all function selectors managed by a single facet implementation","params":{"_facet":"The facet address to query"},"returns":{"facetFunctionSelectors_":"Array of function selectors (bytes4) supported by the facet"}},"facets()":{"details":"This function is used to inspect the full facet structure of the diamond","returns":{"facets_":"An array of Facet structs containing the facet addresses and         their associated function selectors"}},"supportsInterface(bytes4)":{"details":"ERC-165 implementation that checks if the diamond supports a specific interface.      Returns true for IDiamondLoupe and IERC165 interfaces, and any additional      interfaces registered with the diamond.","params":{"_interfaceId":"The interface identifier to check, as specified in ERC-165"},"returns":{"_0":"True if the contract implements the interface, false otherwise"}}},"title":"DiamondLoupeFacet","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b506106bb806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806301ffc9a71461005c57806352ef6b2c146100845780637a0ed62714610099578063adfca15e146100ae578063cdffacc6146100ce575b600080fd5b61006f61006a36600461049d565b610126565b60405190151581526020015b60405180910390f35b61008c610193565b60405161007b91906104c7565b6100a1610206565b60405161007b9190610559565b6100c16100bc3660046105d6565b6103d1565b60405161007b91906105ff565b61010e6100dc36600461049d565b6001600160e01b031916600090815260008051602061066683398151915260205260409020546001600160a01b031690565b6040516001600160a01b03909116815260200161007b565b60006000805160206106668339815191526301ffc9a760e01b6001600160e01b03198416148061016657506001600160e01b031983166348e2b09360e01b145b8061018c57506001600160e01b03198316600090815260038201602052604090205460ff165b9392505050565b60606000600080516020610666833981519152600281018054604080516020808402820181019092528281529394508301828280156101fb57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116101dd575b505050505091505090565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131e54606090600080516020610666833981519152908067ffffffffffffffff81111561025457610254610612565b60405190808252806020026020018201604052801561029a57816020015b6040805180820190915260008152606060208201528152602001906001900390816102725790505b50925060005b818110156103cb5760008360020182815481106102bf576102bf610628565b9060005260206000200160009054906101000a90046001600160a01b03169050808583815181106102f2576102f2610628565b6020908102919091018101516001600160a01b03928316905290821660009081526001860182526040908190208054825181850281018501909352808352919290919083018282801561039157602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116103535790505b50505050508583815181106103a8576103a8610628565b6020026020010151602001819052505080806103c39061063e565b9150506102a0565b50505090565b6001600160a01b03811660009081527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131d60209081526040918290208054835181840281018401909452808452606093600080516020610666833981519152939092919083018282801561049057602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116104525790505b5050505050915050919050565b6000602082840312156104af57600080fd5b81356001600160e01b03198116811461018c57600080fd5b6020808252825182820181905260009190848201906040850190845b818110156105085783516001600160a01b0316835292840192918401916001016104e3565b50909695505050505050565b600081518084526020808501945080840160005b8381101561054e5781516001600160e01b03191687529582019590820190600101610528565b509495945050505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b838110156105c857888303603f19018552815180516001600160a01b031684528701518784018790526105b587850182610514565b9588019593505090860190600101610580565b509098975050505050505050565b6000602082840312156105e857600080fd5b81356001600160a01b038116811461018c57600080fd5b60208152600061018c6020830184610514565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60006001820161065e57634e487b7160e01b600052601160045260246000fd5b506001019056fec8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131ca2646970667358221220d00056cb7e597bd119f0caa864585de3585dd5a217defbffac1c251bcd8e9aa364736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6BB DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x52EF6B2C EQ PUSH2 0x84 JUMPI DUP1 PUSH4 0x7A0ED627 EQ PUSH2 0x99 JUMPI DUP1 PUSH4 0xADFCA15E EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0xCDFFACC6 EQ PUSH2 0xCE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0x6A CALLDATASIZE PUSH1 0x4 PUSH2 0x49D JUMP JUMPDEST PUSH2 0x126 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8C PUSH2 0x193 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7B SWAP2 SWAP1 PUSH2 0x4C7 JUMP JUMPDEST PUSH2 0xA1 PUSH2 0x206 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7B SWAP2 SWAP1 PUSH2 0x559 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0xBC CALLDATASIZE PUSH1 0x4 PUSH2 0x5D6 JUMP JUMPDEST PUSH2 0x3D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7B SWAP2 SWAP1 PUSH2 0x5FF JUMP JUMPDEST PUSH2 0x10E PUSH2 0xDC CALLDATASIZE PUSH1 0x4 PUSH2 0x49D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x666 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x7B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x666 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP5 AND EQ DUP1 PUSH2 0x166 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND PUSH4 0x48E2B093 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x18C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x666 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x2 DUP2 ADD DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP5 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE SWAP4 SWAP5 POP DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x1FB JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1DD JUMPI JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH32 0xC8FCAD8DB84D3CC18B4C41D551EA0EE66DD599CDE068D998E57D5E09332C131E SLOAD PUSH1 0x60 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x666 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x254 JUMPI PUSH2 0x254 PUSH2 0x612 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x29A JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x272 JUMPI SWAP1 POP JUMPDEST POP SWAP3 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3CB JUMPI PUSH1 0x0 DUP4 PUSH1 0x2 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2BF JUMPI PUSH2 0x2BF PUSH2 0x628 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP1 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2F2 JUMPI PUSH2 0x2F2 PUSH2 0x628 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP1 MSTORE SWAP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP7 ADD DUP3 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x391 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x4 ADD SWAP1 PUSH1 0x20 DUP3 PUSH1 0x3 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB DUP3 MUL SWAP2 POP DUP1 DUP5 GT PUSH2 0x353 JUMPI SWAP1 POP JUMPDEST POP POP POP POP POP DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x3A8 JUMPI PUSH2 0x3A8 PUSH2 0x628 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD DUP2 SWAP1 MSTORE POP POP DUP1 DUP1 PUSH2 0x3C3 SWAP1 PUSH2 0x63E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2A0 JUMP JUMPDEST POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xC8FCAD8DB84D3CC18B4C41D551EA0EE66DD599CDE068D998E57D5E09332C131D PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x666 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP4 SWAP1 SWAP3 SWAP2 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x490 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x4 ADD SWAP1 PUSH1 0x20 DUP3 PUSH1 0x3 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB DUP3 MUL SWAP2 POP DUP1 DUP5 GT PUSH2 0x452 JUMPI SWAP1 POP JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x18C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x508 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x4E3 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x54E JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x528 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 SWAP3 POP DUP3 DUP7 ADD SWAP2 POP DUP3 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD DUP5 DUP9 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5C8 JUMPI DUP9 DUP4 SUB PUSH1 0x3F NOT ADD DUP6 MSTORE DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE DUP8 ADD MLOAD DUP8 DUP5 ADD DUP8 SWAP1 MSTORE PUSH2 0x5B5 DUP8 DUP6 ADD DUP3 PUSH2 0x514 JUMP JUMPDEST SWAP6 DUP9 ADD SWAP6 SWAP4 POP POP SWAP1 DUP7 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x580 JUMP JUMPDEST POP SWAP1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x18C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x18C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x514 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x65E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID 0xC8 0xFC 0xAD DUP14 0xB8 0x4D EXTCODECOPY 0xC1 DUP12 0x4C COINBASE 0xD5 MLOAD 0xEA 0xE 0xE6 PUSH14 0xD599CDE068D998E57D5E09332C13 SHR LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 STOP JUMP 0xCB PUSH31 0x597BD119F0CAA864585DE3585DD5A217DEFBFFAC1C251BCD8E9AA364736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"1001:3617:13:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@diamondStorage_2756":{"entryPoint":null,"id":2756,"parameterSlots":0,"returnSlots":1},"@facetAddress_2241":{"entryPoint":null,"id":2241,"parameterSlots":1,"returnSlots":1},"@facetAddresses_2214":{"entryPoint":403,"id":2214,"parameterSlots":0,"returnSlots":1},"@facetFunctionSelectors_2191":{"entryPoint":977,"id":2191,"parameterSlots":1,"returnSlots":1},"@facets_2163":{"entryPoint":518,"id":2163,"parameterSlots":0,"returnSlots":1},"@supportsInterface_2279":{"entryPoint":294,"id":2279,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1494,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4":{"entryPoint":1181,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_bytes4_dyn":{"entryPoint":1300,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":1223,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_bytes4_$dyn_memory_ptr__to_t_array$_t_bytes4_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":1535,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_struct$_Facet_$2507_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Facet_$2507_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":1369,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"increment_t_uint256":{"entryPoint":1598,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x32":{"entryPoint":1576,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1554,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3950:28","statements":[{"nodeType":"YulBlock","src":"6:3:28","statements":[]},{"body":{"nodeType":"YulBlock","src":"83:217:28","statements":[{"body":{"nodeType":"YulBlock","src":"129:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"138:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"141:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"131:6:28"},"nodeType":"YulFunctionCall","src":"131:12:28"},"nodeType":"YulExpressionStatement","src":"131:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"104:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"113:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"100:3:28"},"nodeType":"YulFunctionCall","src":"100:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"125:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"96:3:28"},"nodeType":"YulFunctionCall","src":"96:32:28"},"nodeType":"YulIf","src":"93:52:28"},{"nodeType":"YulVariableDeclaration","src":"154:36:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"180:9:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"167:12:28"},"nodeType":"YulFunctionCall","src":"167:23:28"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"158:5:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"254:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"263:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"266:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"256:6:28"},"nodeType":"YulFunctionCall","src":"256:12:28"},"nodeType":"YulExpressionStatement","src":"256:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"212:5:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"223:5:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"234:3:28","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"239:10:28","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"230:3:28"},"nodeType":"YulFunctionCall","src":"230:20:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"219:3:28"},"nodeType":"YulFunctionCall","src":"219:32:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"209:2:28"},"nodeType":"YulFunctionCall","src":"209:43:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"202:6:28"},"nodeType":"YulFunctionCall","src":"202:51:28"},"nodeType":"YulIf","src":"199:71:28"},{"nodeType":"YulAssignment","src":"279:15:28","value":{"name":"value","nodeType":"YulIdentifier","src":"289:5:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"279:6:28"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"49:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"60:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"72:6:28","type":""}],"src":"14:286:28"},{"body":{"nodeType":"YulBlock","src":"400:92:28","statements":[{"nodeType":"YulAssignment","src":"410:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"422:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"433:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"418:3:28"},"nodeType":"YulFunctionCall","src":"418:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"410:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"452:9:28"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"477:6:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"470:6:28"},"nodeType":"YulFunctionCall","src":"470:14:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"463:6:28"},"nodeType":"YulFunctionCall","src":"463:22:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"445:6:28"},"nodeType":"YulFunctionCall","src":"445:41:28"},"nodeType":"YulExpressionStatement","src":"445:41:28"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"369:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"380:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"391:4:28","type":""}],"src":"305:187:28"},{"body":{"nodeType":"YulBlock","src":"648:507:28","statements":[{"nodeType":"YulVariableDeclaration","src":"658:12:28","value":{"kind":"number","nodeType":"YulLiteral","src":"668:2:28","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"662:2:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"679:32:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"697:9:28"},{"name":"_1","nodeType":"YulIdentifier","src":"708:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"693:3:28"},"nodeType":"YulFunctionCall","src":"693:18:28"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"683:6:28","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"727:9:28"},{"name":"_1","nodeType":"YulIdentifier","src":"738:2:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"720:6:28"},"nodeType":"YulFunctionCall","src":"720:21:28"},"nodeType":"YulExpressionStatement","src":"720:21:28"},{"nodeType":"YulVariableDeclaration","src":"750:17:28","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"761:6:28"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"754:3:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"776:27:28","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"796:6:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"790:5:28"},"nodeType":"YulFunctionCall","src":"790:13:28"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"780:6:28","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"819:6:28"},{"name":"length","nodeType":"YulIdentifier","src":"827:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"812:6:28"},"nodeType":"YulFunctionCall","src":"812:22:28"},"nodeType":"YulExpressionStatement","src":"812:22:28"},{"nodeType":"YulAssignment","src":"843:25:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"854:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"865:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"850:3:28"},"nodeType":"YulFunctionCall","src":"850:18:28"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"843:3:28"}]},{"nodeType":"YulVariableDeclaration","src":"877:29:28","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"895:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"903:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"891:3:28"},"nodeType":"YulFunctionCall","src":"891:15:28"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"881:6:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"915:10:28","value":{"kind":"number","nodeType":"YulLiteral","src":"924:1:28","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"919:1:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"983:146:28","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1004:3:28"},{"arguments":[{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"1019:6:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1013:5:28"},"nodeType":"YulFunctionCall","src":"1013:13:28"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1036:3:28","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1041:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1032:3:28"},"nodeType":"YulFunctionCall","src":"1032:11:28"},{"kind":"number","nodeType":"YulLiteral","src":"1045:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1028:3:28"},"nodeType":"YulFunctionCall","src":"1028:19:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1009:3:28"},"nodeType":"YulFunctionCall","src":"1009:39:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"997:6:28"},"nodeType":"YulFunctionCall","src":"997:52:28"},"nodeType":"YulExpressionStatement","src":"997:52:28"},{"nodeType":"YulAssignment","src":"1062:19:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1073:3:28"},{"name":"_1","nodeType":"YulIdentifier","src":"1078:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1069:3:28"},"nodeType":"YulFunctionCall","src":"1069:12:28"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1062:3:28"}]},{"nodeType":"YulAssignment","src":"1094:25:28","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"1108:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"1116:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1104:3:28"},"nodeType":"YulFunctionCall","src":"1104:15:28"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"1094:6:28"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"945:1:28"},{"name":"length","nodeType":"YulIdentifier","src":"948:6:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"942:2:28"},"nodeType":"YulFunctionCall","src":"942:13:28"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"956:18:28","statements":[{"nodeType":"YulAssignment","src":"958:14:28","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"967:1:28"},{"kind":"number","nodeType":"YulLiteral","src":"970:1:28","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"963:3:28"},"nodeType":"YulFunctionCall","src":"963:9:28"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"958:1:28"}]}]},"pre":{"nodeType":"YulBlock","src":"938:3:28","statements":[]},"src":"934:195:28"},{"nodeType":"YulAssignment","src":"1138:11:28","value":{"name":"pos","nodeType":"YulIdentifier","src":"1146:3:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1138:4:28"}]}]},"name":"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"617:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"628:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"639:4:28","type":""}],"src":"497:658:28"},{"body":{"nodeType":"YulBlock","src":"1220:401:28","statements":[{"nodeType":"YulVariableDeclaration","src":"1230:26:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1250:5:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1244:5:28"},"nodeType":"YulFunctionCall","src":"1244:12:28"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1234:6:28","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1272:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"1277:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1265:6:28"},"nodeType":"YulFunctionCall","src":"1265:19:28"},"nodeType":"YulExpressionStatement","src":"1265:19:28"},{"nodeType":"YulVariableDeclaration","src":"1293:14:28","value":{"kind":"number","nodeType":"YulLiteral","src":"1303:4:28","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1297:2:28","type":""}]},{"nodeType":"YulAssignment","src":"1316:19:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1327:3:28"},{"name":"_1","nodeType":"YulIdentifier","src":"1332:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1323:3:28"},"nodeType":"YulFunctionCall","src":"1323:12:28"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1316:3:28"}]},{"nodeType":"YulVariableDeclaration","src":"1344:28:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1362:5:28"},{"name":"_1","nodeType":"YulIdentifier","src":"1369:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1358:3:28"},"nodeType":"YulFunctionCall","src":"1358:14:28"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"1348:6:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1381:10:28","value":{"kind":"number","nodeType":"YulLiteral","src":"1390:1:28","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1385:1:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"1449:147:28","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1470:3:28"},{"arguments":[{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"1485:6:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1479:5:28"},"nodeType":"YulFunctionCall","src":"1479:13:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1498:3:28","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1503:10:28","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1494:3:28"},"nodeType":"YulFunctionCall","src":"1494:20:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1475:3:28"},"nodeType":"YulFunctionCall","src":"1475:40:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1463:6:28"},"nodeType":"YulFunctionCall","src":"1463:53:28"},"nodeType":"YulExpressionStatement","src":"1463:53:28"},{"nodeType":"YulAssignment","src":"1529:19:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1540:3:28"},{"name":"_1","nodeType":"YulIdentifier","src":"1545:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1536:3:28"},"nodeType":"YulFunctionCall","src":"1536:12:28"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1529:3:28"}]},{"nodeType":"YulAssignment","src":"1561:25:28","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"1575:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"1583:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1571:3:28"},"nodeType":"YulFunctionCall","src":"1571:15:28"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"1561:6:28"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1411:1:28"},{"name":"length","nodeType":"YulIdentifier","src":"1414:6:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1408:2:28"},"nodeType":"YulFunctionCall","src":"1408:13:28"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1422:18:28","statements":[{"nodeType":"YulAssignment","src":"1424:14:28","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1433:1:28"},{"kind":"number","nodeType":"YulLiteral","src":"1436:1:28","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1429:3:28"},"nodeType":"YulFunctionCall","src":"1429:9:28"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1424:1:28"}]}]},"pre":{"nodeType":"YulBlock","src":"1404:3:28","statements":[]},"src":"1400:196:28"},{"nodeType":"YulAssignment","src":"1605:10:28","value":{"name":"pos","nodeType":"YulIdentifier","src":"1612:3:28"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1605:3:28"}]}]},"name":"abi_encode_array_bytes4_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1197:5:28","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1204:3:28","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1212:3:28","type":""}],"src":"1160:461:28"},{"body":{"nodeType":"YulBlock","src":"1823:862:28","statements":[{"nodeType":"YulVariableDeclaration","src":"1833:12:28","value":{"kind":"number","nodeType":"YulLiteral","src":"1843:2:28","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1837:2:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1854:32:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1872:9:28"},{"name":"_1","nodeType":"YulIdentifier","src":"1883:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1868:3:28"},"nodeType":"YulFunctionCall","src":"1868:18:28"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"1858:6:28","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1902:9:28"},{"name":"_1","nodeType":"YulIdentifier","src":"1913:2:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1895:6:28"},"nodeType":"YulFunctionCall","src":"1895:21:28"},"nodeType":"YulExpressionStatement","src":"1895:21:28"},{"nodeType":"YulVariableDeclaration","src":"1925:17:28","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"1936:6:28"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"1929:3:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1951:27:28","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1971:6:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1965:5:28"},"nodeType":"YulFunctionCall","src":"1965:13:28"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1955:6:28","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"1994:6:28"},{"name":"length","nodeType":"YulIdentifier","src":"2002:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1987:6:28"},"nodeType":"YulFunctionCall","src":"1987:22:28"},"nodeType":"YulExpressionStatement","src":"1987:22:28"},{"nodeType":"YulVariableDeclaration","src":"2018:12:28","value":{"kind":"number","nodeType":"YulLiteral","src":"2028:2:28","type":"","value":"64"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2022:2:28","type":""}]},{"nodeType":"YulAssignment","src":"2039:25:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2050:9:28"},{"name":"_2","nodeType":"YulIdentifier","src":"2061:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2046:3:28"},"nodeType":"YulFunctionCall","src":"2046:18:28"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2039:3:28"}]},{"nodeType":"YulVariableDeclaration","src":"2073:53:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2095:9:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2110:1:28","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"2113:6:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2106:3:28"},"nodeType":"YulFunctionCall","src":"2106:14:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2091:3:28"},"nodeType":"YulFunctionCall","src":"2091:30:28"},{"name":"_2","nodeType":"YulIdentifier","src":"2123:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2087:3:28"},"nodeType":"YulFunctionCall","src":"2087:39:28"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"2077:6:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2135:29:28","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2153:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"2161:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2149:3:28"},"nodeType":"YulFunctionCall","src":"2149:15:28"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"2139:6:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2173:10:28","value":{"kind":"number","nodeType":"YulLiteral","src":"2182:1:28","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2177:1:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"2241:415:28","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2262:3:28"},{"arguments":[{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"2275:6:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"2283:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2271:3:28"},"nodeType":"YulFunctionCall","src":"2271:22:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2299:2:28","type":"","value":"63"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2295:3:28"},"nodeType":"YulFunctionCall","src":"2295:7:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2267:3:28"},"nodeType":"YulFunctionCall","src":"2267:36:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2255:6:28"},"nodeType":"YulFunctionCall","src":"2255:49:28"},"nodeType":"YulExpressionStatement","src":"2255:49:28"},{"nodeType":"YulVariableDeclaration","src":"2317:23:28","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"2333:6:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2327:5:28"},"nodeType":"YulFunctionCall","src":"2327:13:28"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"2321:2:28","type":""}]},{"expression":{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"2360:6:28"},{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"2378:2:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2372:5:28"},"nodeType":"YulFunctionCall","src":"2372:9:28"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2391:3:28","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2396:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2387:3:28"},"nodeType":"YulFunctionCall","src":"2387:11:28"},{"kind":"number","nodeType":"YulLiteral","src":"2400:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2383:3:28"},"nodeType":"YulFunctionCall","src":"2383:19:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2368:3:28"},"nodeType":"YulFunctionCall","src":"2368:35:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2353:6:28"},"nodeType":"YulFunctionCall","src":"2353:51:28"},"nodeType":"YulExpressionStatement","src":"2353:51:28"},{"nodeType":"YulVariableDeclaration","src":"2417:38:28","value":{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"2447:2:28"},{"name":"_1","nodeType":"YulIdentifier","src":"2451:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2443:3:28"},"nodeType":"YulFunctionCall","src":"2443:11:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2437:5:28"},"nodeType":"YulFunctionCall","src":"2437:18:28"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"2421:12:28","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"2479:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"2487:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2475:3:28"},"nodeType":"YulFunctionCall","src":"2475:15:28"},{"name":"_2","nodeType":"YulIdentifier","src":"2492:2:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2468:6:28"},"nodeType":"YulFunctionCall","src":"2468:27:28"},"nodeType":"YulExpressionStatement","src":"2468:27:28"},{"nodeType":"YulAssignment","src":"2508:68:28","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"2546:12:28"},{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"2564:6:28"},{"name":"_2","nodeType":"YulIdentifier","src":"2572:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2560:3:28"},"nodeType":"YulFunctionCall","src":"2560:15:28"}],"functionName":{"name":"abi_encode_array_bytes4_dyn","nodeType":"YulIdentifier","src":"2518:27:28"},"nodeType":"YulFunctionCall","src":"2518:58:28"},"variableNames":[{"name":"tail_2","nodeType":"YulIdentifier","src":"2508:6:28"}]},{"nodeType":"YulAssignment","src":"2589:25:28","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"2603:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"2611:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2599:3:28"},"nodeType":"YulFunctionCall","src":"2599:15:28"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"2589:6:28"}]},{"nodeType":"YulAssignment","src":"2627:19:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2638:3:28"},{"name":"_1","nodeType":"YulIdentifier","src":"2643:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2634:3:28"},"nodeType":"YulFunctionCall","src":"2634:12:28"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2627:3:28"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2203:1:28"},{"name":"length","nodeType":"YulIdentifier","src":"2206:6:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2200:2:28"},"nodeType":"YulFunctionCall","src":"2200:13:28"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2214:18:28","statements":[{"nodeType":"YulAssignment","src":"2216:14:28","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2225:1:28"},{"kind":"number","nodeType":"YulLiteral","src":"2228:1:28","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2221:3:28"},"nodeType":"YulFunctionCall","src":"2221:9:28"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2216:1:28"}]}]},"pre":{"nodeType":"YulBlock","src":"2196:3:28","statements":[]},"src":"2192:464:28"},{"nodeType":"YulAssignment","src":"2665:14:28","value":{"name":"tail_2","nodeType":"YulIdentifier","src":"2673:6:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2665:4:28"}]}]},"name":"abi_encode_tuple_t_array$_t_struct$_Facet_$2507_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Facet_$2507_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1792:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1803:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1814:4:28","type":""}],"src":"1626:1059:28"},{"body":{"nodeType":"YulBlock","src":"2760:216:28","statements":[{"body":{"nodeType":"YulBlock","src":"2806:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2815:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2818:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2808:6:28"},"nodeType":"YulFunctionCall","src":"2808:12:28"},"nodeType":"YulExpressionStatement","src":"2808:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2781:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"2790:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2777:3:28"},"nodeType":"YulFunctionCall","src":"2777:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"2802:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2773:3:28"},"nodeType":"YulFunctionCall","src":"2773:32:28"},"nodeType":"YulIf","src":"2770:52:28"},{"nodeType":"YulVariableDeclaration","src":"2831:36:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2857:9:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2844:12:28"},"nodeType":"YulFunctionCall","src":"2844:23:28"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2835:5:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"2930:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2939:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2942:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2932:6:28"},"nodeType":"YulFunctionCall","src":"2932:12:28"},"nodeType":"YulExpressionStatement","src":"2932:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2889:5:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2900:5:28"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2915:3:28","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2920:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2911:3:28"},"nodeType":"YulFunctionCall","src":"2911:11:28"},{"kind":"number","nodeType":"YulLiteral","src":"2924:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2907:3:28"},"nodeType":"YulFunctionCall","src":"2907:19:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2896:3:28"},"nodeType":"YulFunctionCall","src":"2896:31:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2886:2:28"},"nodeType":"YulFunctionCall","src":"2886:42:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2879:6:28"},"nodeType":"YulFunctionCall","src":"2879:50:28"},"nodeType":"YulIf","src":"2876:70:28"},{"nodeType":"YulAssignment","src":"2955:15:28","value":{"name":"value","nodeType":"YulIdentifier","src":"2965:5:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2955:6:28"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2726:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2737:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2749:6:28","type":""}],"src":"2690:286:28"},{"body":{"nodeType":"YulBlock","src":"3130:109:28","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3147:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"3158:2:28","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3140:6:28"},"nodeType":"YulFunctionCall","src":"3140:21:28"},"nodeType":"YulExpressionStatement","src":"3140:21:28"},{"nodeType":"YulAssignment","src":"3170:63:28","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3206:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3218:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"3229:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3214:3:28"},"nodeType":"YulFunctionCall","src":"3214:18:28"}],"functionName":{"name":"abi_encode_array_bytes4_dyn","nodeType":"YulIdentifier","src":"3178:27:28"},"nodeType":"YulFunctionCall","src":"3178:55:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3170:4:28"}]}]},"name":"abi_encode_tuple_t_array$_t_bytes4_$dyn_memory_ptr__to_t_array$_t_bytes4_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3099:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3110:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3121:4:28","type":""}],"src":"2981:258:28"},{"body":{"nodeType":"YulBlock","src":"3345:102:28","statements":[{"nodeType":"YulAssignment","src":"3355:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3367:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"3378:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3363:3:28"},"nodeType":"YulFunctionCall","src":"3363:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3355:4:28"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3397:9:28"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3412:6:28"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3428:3:28","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3433:1:28","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3424:3:28"},"nodeType":"YulFunctionCall","src":"3424:11:28"},{"kind":"number","nodeType":"YulLiteral","src":"3437:1:28","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3420:3:28"},"nodeType":"YulFunctionCall","src":"3420:19:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3408:3:28"},"nodeType":"YulFunctionCall","src":"3408:32:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3390:6:28"},"nodeType":"YulFunctionCall","src":"3390:51:28"},"nodeType":"YulExpressionStatement","src":"3390:51:28"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3314:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3325:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3336:4:28","type":""}],"src":"3244:203:28"},{"body":{"nodeType":"YulBlock","src":"3484:95:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3501:1:28","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3508:3:28","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3513:10:28","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3504:3:28"},"nodeType":"YulFunctionCall","src":"3504:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3494:6:28"},"nodeType":"YulFunctionCall","src":"3494:31:28"},"nodeType":"YulExpressionStatement","src":"3494:31:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3541:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3544:4:28","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3534:6:28"},"nodeType":"YulFunctionCall","src":"3534:15:28"},"nodeType":"YulExpressionStatement","src":"3534:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3565:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3568:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3558:6:28"},"nodeType":"YulFunctionCall","src":"3558:15:28"},"nodeType":"YulExpressionStatement","src":"3558:15:28"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"3452:127:28"},{"body":{"nodeType":"YulBlock","src":"3616:95:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3633:1:28","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3640:3:28","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3645:10:28","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3636:3:28"},"nodeType":"YulFunctionCall","src":"3636:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3626:6:28"},"nodeType":"YulFunctionCall","src":"3626:31:28"},"nodeType":"YulExpressionStatement","src":"3626:31:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3673:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3676:4:28","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3666:6:28"},"nodeType":"YulFunctionCall","src":"3666:15:28"},"nodeType":"YulExpressionStatement","src":"3666:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3697:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3700:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3690:6:28"},"nodeType":"YulFunctionCall","src":"3690:15:28"},"nodeType":"YulExpressionStatement","src":"3690:15:28"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"3584:127:28"},{"body":{"nodeType":"YulBlock","src":"3763:185:28","statements":[{"body":{"nodeType":"YulBlock","src":"3802:111:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3823:1:28","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3830:3:28","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3835:10:28","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3826:3:28"},"nodeType":"YulFunctionCall","src":"3826:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3816:6:28"},"nodeType":"YulFunctionCall","src":"3816:31:28"},"nodeType":"YulExpressionStatement","src":"3816:31:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3867:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3870:4:28","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3860:6:28"},"nodeType":"YulFunctionCall","src":"3860:15:28"},"nodeType":"YulExpressionStatement","src":"3860:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3895:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3898:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3888:6:28"},"nodeType":"YulFunctionCall","src":"3888:15:28"},"nodeType":"YulExpressionStatement","src":"3888:15:28"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3779:5:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3790:1:28","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3786:3:28"},"nodeType":"YulFunctionCall","src":"3786:6:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3776:2:28"},"nodeType":"YulFunctionCall","src":"3776:17:28"},"nodeType":"YulIf","src":"3773:140:28"},{"nodeType":"YulAssignment","src":"3922:20:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3933:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"3940:1:28","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3929:3:28"},"nodeType":"YulFunctionCall","src":"3929:13:28"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3922:3:28"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3745:5:28","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"3755:3:28","type":""}],"src":"3716:232:28"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_array_bytes4_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), shl(224, 0xffffffff)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_struct$_Facet_$2507_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Facet_$2507_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        let _2 := 64\n        pos := add(headStart, _2)\n        let tail_2 := add(add(headStart, shl(5, length)), _2)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, add(sub(tail_2, headStart), not(63)))\n            let _3 := mload(srcPtr)\n            mstore(tail_2, and(mload(_3), sub(shl(160, 1), 1)))\n            let memberValue0 := mload(add(_3, _1))\n            mstore(add(tail_2, _1), _2)\n            tail_2 := abi_encode_array_bytes4_dyn(memberValue0, add(tail_2, _2))\n            srcPtr := add(srcPtr, _1)\n            pos := add(pos, _1)\n        }\n        tail := tail_2\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_array$_t_bytes4_$dyn_memory_ptr__to_t_array$_t_bytes4_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_bytes4_dyn(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, 1)\n    }\n}","id":28,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100575760003560e01c806301ffc9a71461005c57806352ef6b2c146100845780637a0ed62714610099578063adfca15e146100ae578063cdffacc6146100ce575b600080fd5b61006f61006a36600461049d565b610126565b60405190151581526020015b60405180910390f35b61008c610193565b60405161007b91906104c7565b6100a1610206565b60405161007b9190610559565b6100c16100bc3660046105d6565b6103d1565b60405161007b91906105ff565b61010e6100dc36600461049d565b6001600160e01b031916600090815260008051602061066683398151915260205260409020546001600160a01b031690565b6040516001600160a01b03909116815260200161007b565b60006000805160206106668339815191526301ffc9a760e01b6001600160e01b03198416148061016657506001600160e01b031983166348e2b09360e01b145b8061018c57506001600160e01b03198316600090815260038201602052604090205460ff165b9392505050565b60606000600080516020610666833981519152600281018054604080516020808402820181019092528281529394508301828280156101fb57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116101dd575b505050505091505090565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131e54606090600080516020610666833981519152908067ffffffffffffffff81111561025457610254610612565b60405190808252806020026020018201604052801561029a57816020015b6040805180820190915260008152606060208201528152602001906001900390816102725790505b50925060005b818110156103cb5760008360020182815481106102bf576102bf610628565b9060005260206000200160009054906101000a90046001600160a01b03169050808583815181106102f2576102f2610628565b6020908102919091018101516001600160a01b03928316905290821660009081526001860182526040908190208054825181850281018501909352808352919290919083018282801561039157602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116103535790505b50505050508583815181106103a8576103a8610628565b6020026020010151602001819052505080806103c39061063e565b9150506102a0565b50505090565b6001600160a01b03811660009081527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131d60209081526040918290208054835181840281018401909452808452606093600080516020610666833981519152939092919083018282801561049057602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116104525790505b5050505050915050919050565b6000602082840312156104af57600080fd5b81356001600160e01b03198116811461018c57600080fd5b6020808252825182820181905260009190848201906040850190845b818110156105085783516001600160a01b0316835292840192918401916001016104e3565b50909695505050505050565b600081518084526020808501945080840160005b8381101561054e5781516001600160e01b03191687529582019590820190600101610528565b509495945050505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b838110156105c857888303603f19018552815180516001600160a01b031684528701518784018790526105b587850182610514565b9588019593505090860190600101610580565b509098975050505050505050565b6000602082840312156105e857600080fd5b81356001600160a01b038116811461018c57600080fd5b60208152600061018c6020830184610514565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60006001820161065e57634e487b7160e01b600052601160045260246000fd5b506001019056fec8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131ca2646970667358221220d00056cb7e597bd119f0caa864585de3585dd5a217defbffac1c251bcd8e9aa364736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x52EF6B2C EQ PUSH2 0x84 JUMPI DUP1 PUSH4 0x7A0ED627 EQ PUSH2 0x99 JUMPI DUP1 PUSH4 0xADFCA15E EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0xCDFFACC6 EQ PUSH2 0xCE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0x6A CALLDATASIZE PUSH1 0x4 PUSH2 0x49D JUMP JUMPDEST PUSH2 0x126 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8C PUSH2 0x193 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7B SWAP2 SWAP1 PUSH2 0x4C7 JUMP JUMPDEST PUSH2 0xA1 PUSH2 0x206 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7B SWAP2 SWAP1 PUSH2 0x559 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0xBC CALLDATASIZE PUSH1 0x4 PUSH2 0x5D6 JUMP JUMPDEST PUSH2 0x3D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7B SWAP2 SWAP1 PUSH2 0x5FF JUMP JUMPDEST PUSH2 0x10E PUSH2 0xDC CALLDATASIZE PUSH1 0x4 PUSH2 0x49D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x666 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x7B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x666 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP5 AND EQ DUP1 PUSH2 0x166 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND PUSH4 0x48E2B093 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x18C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x666 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x2 DUP2 ADD DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP5 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE SWAP4 SWAP5 POP DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x1FB JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1DD JUMPI JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH32 0xC8FCAD8DB84D3CC18B4C41D551EA0EE66DD599CDE068D998E57D5E09332C131E SLOAD PUSH1 0x60 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x666 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x254 JUMPI PUSH2 0x254 PUSH2 0x612 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x29A JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x272 JUMPI SWAP1 POP JUMPDEST POP SWAP3 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3CB JUMPI PUSH1 0x0 DUP4 PUSH1 0x2 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2BF JUMPI PUSH2 0x2BF PUSH2 0x628 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP1 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2F2 JUMPI PUSH2 0x2F2 PUSH2 0x628 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP1 MSTORE SWAP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP7 ADD DUP3 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x391 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x4 ADD SWAP1 PUSH1 0x20 DUP3 PUSH1 0x3 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB DUP3 MUL SWAP2 POP DUP1 DUP5 GT PUSH2 0x353 JUMPI SWAP1 POP JUMPDEST POP POP POP POP POP DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x3A8 JUMPI PUSH2 0x3A8 PUSH2 0x628 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD DUP2 SWAP1 MSTORE POP POP DUP1 DUP1 PUSH2 0x3C3 SWAP1 PUSH2 0x63E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2A0 JUMP JUMPDEST POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xC8FCAD8DB84D3CC18B4C41D551EA0EE66DD599CDE068D998E57D5E09332C131D PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x666 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP4 SWAP1 SWAP3 SWAP2 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x490 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x4 ADD SWAP1 PUSH1 0x20 DUP3 PUSH1 0x3 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB DUP3 MUL SWAP2 POP DUP1 DUP5 GT PUSH2 0x452 JUMPI SWAP1 POP JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x18C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x508 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x4E3 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x54E JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x528 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 SWAP3 POP DUP3 DUP7 ADD SWAP2 POP DUP3 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD DUP5 DUP9 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5C8 JUMPI DUP9 DUP4 SUB PUSH1 0x3F NOT ADD DUP6 MSTORE DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE DUP8 ADD MLOAD DUP8 DUP5 ADD DUP8 SWAP1 MSTORE PUSH2 0x5B5 DUP8 DUP6 ADD DUP3 PUSH2 0x514 JUMP JUMPDEST SWAP6 DUP9 ADD SWAP6 SWAP4 POP POP SWAP1 DUP7 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x580 JUMP JUMPDEST POP SWAP1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x18C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x18C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x514 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x65E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID 0xC8 0xFC 0xAD DUP14 0xB8 0x4D EXTCODECOPY 0xC1 DUP12 0x4C COINBASE 0xD5 MLOAD 0xEA 0xE 0xE6 PUSH14 0xD599CDE068D998E57D5E09332C13 SHR LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 STOP JUMP 0xCB PUSH31 0x597BD119F0CAA864585DE3585DD5A217DEFBFFAC1C251BCD8E9AA364736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"1001:3617:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4267:349;;;;;;:::i;:::-;;:::i;:::-;;;470:14:28;;463:22;445:41;;433:2;418:18;4267:349:13;;;;;;;;2768:220;;;:::i;:::-;;;;;;;:::i;1372:523::-;;;:::i;:::-;;;;;;;:::i;2222:291::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3525:273::-;;;;;;:::i;:::-;-1:-1:-1;;;;;;3730:48:13;3605:21;3730:48;;;-1:-1:-1;;;;;;;;;;;3730:48:13;;;;;:61;-1:-1:-1;;;;;3730:61:13;;3525:273;;;;-1:-1:-1;;;;;3408:32:28;;;3390:51;;3378:2;3363:18;3525:273:13;3244:203:28;4267:349:13;4347:4;-1:-1:-1;;;;;;;;;;;;;;;;;;;;4446:41:13;;;;:108;;-1:-1:-1;;;;;;;4507:47:13;;-1:-1:-1;;;4507:47:13;4446:108;:163;;;-1:-1:-1;;;;;;;4573:36:13;;;;;;:22;;;:36;;;;;;;;4446:163;4439:170;4267:349;-1:-1:-1;;;4267:349:13:o;2768:220::-;2826:32;2870:36;-1:-1:-1;;;;;;;;;;;2964:17:13;;;2946:35;;;;;;;;;;;;;;;;;;;2870:66;;-1:-1:-1;2946:35:13;;2964:17;2946:35;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2946:35:13;;;;;;;;;;;;;;;;;;;;;;;2860:128;2768:220;:::o;1372:523::-;1552:17;:24;1422:22;;-1:-1:-1;;;;;;;;;;;741:45:25;1552:24:13;1596:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;1596:22:13;;;;;;;;;;;;;;;;1586:32;;1633:9;1628:261;1648:9;1644:1;:13;1628:261;;;1678:21;1702:2;:17;;1720:1;1702:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1702:20:13;1678:44;;1762:13;1736:7;1744:1;1736:10;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1736:39:13;;;;;1820:40;;;1736:23;1820:40;;;:25;;;:40;;;;;;;1789:89;;;;;;;;;;;;;;;;;;;1820:40;;1789:89;;;1820:40;1789:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1789:89:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:7;1797:1;1789:10;;;;;;;;:::i;:::-;;;;;;;:28;;:89;;;;1664:225;1659:3;;;;;:::i;:::-;;;;1628:261;;;;1446:449;;1372:523;:::o;2222:291::-;-1:-1:-1;;;;;2455:33:13;;2353:36;2455:33;;;:25;:33;;;;;;;;;2429:77;;;;;;;;;;;;;;;;;2302:39;;-1:-1:-1;;;;;;;;;;;741:45:25;2429:77:13;;2455:33;2429:77;;;2455:33;2429:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2429:77:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2343:170;2222:291;;;:::o;14:286:28:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:28;;209:43;;199:71;;266:1;263;256:12;497:658;668:2;720:21;;;790:13;;693:18;;;812:22;;;639:4;;668:2;891:15;;;;865:2;850:18;;;639:4;934:195;948:6;945:1;942:13;934:195;;;1013:13;;-1:-1:-1;;;;;1009:39:28;997:52;;1104:15;;;;1069:12;;;;1045:1;963:9;934:195;;;-1:-1:-1;1146:3:28;;497:658;-1:-1:-1;;;;;;497:658:28:o;1160:461::-;1212:3;1250:5;1244:12;1277:6;1272:3;1265:19;1303:4;1332:2;1327:3;1323:12;1316:19;;1369:2;1362:5;1358:14;1390:1;1400:196;1414:6;1411:1;1408:13;1400:196;;;1479:13;;-1:-1:-1;;;;;;1475:40:28;1463:53;;1536:12;;;;1571:15;;;;1436:1;1429:9;1400:196;;;-1:-1:-1;1612:3:28;;1160:461;-1:-1:-1;;;;;1160:461:28:o;1626:1059::-;1814:4;1843:2;1883;1872:9;1868:18;1913:2;1902:9;1895:21;1936:6;1971;1965:13;2002:6;1994;1987:22;2028:2;2018:12;;2061:2;2050:9;2046:18;2039:25;;2123:2;2113:6;2110:1;2106:14;2095:9;2091:30;2087:39;2161:2;2153:6;2149:15;2182:1;2192:464;2206:6;2203:1;2200:13;2192:464;;;2271:22;;;-1:-1:-1;;2267:36:28;2255:49;;2327:13;;2372:9;;-1:-1:-1;;;;;2368:35:28;2353:51;;2443:11;;2437:18;2475:15;;;2468:27;;;2518:58;2560:15;;;2437:18;2518:58;:::i;:::-;2634:12;;;;2508:68;-1:-1:-1;;2599:15:28;;;;2228:1;2221:9;2192:464;;;-1:-1:-1;2673:6:28;;1626:1059;-1:-1:-1;;;;;;;;1626:1059:28:o;2690:286::-;2749:6;2802:2;2790:9;2781:7;2777:23;2773:32;2770:52;;;2818:1;2815;2808:12;2770:52;2844:23;;-1:-1:-1;;;;;2896:31:28;;2886:42;;2876:70;;2942:1;2939;2932:12;2981:258;3158:2;3147:9;3140:21;3121:4;3178:55;3229:2;3218:9;3214:18;3206:6;3178:55;:::i;3452:127::-;3513:10;3508:3;3504:20;3501:1;3494:31;3544:4;3541:1;3534:15;3568:4;3565:1;3558:15;3584:127;3645:10;3640:3;3636:20;3633:1;3626:31;3676:4;3673:1;3666:15;3700:4;3697:1;3690:15;3716:232;3755:3;3776:17;;;3773:140;;3835:10;3830:3;3826:20;3823:1;3816:31;3870:4;3867:1;3860:15;3898:4;3895:1;3888:15;3773:140;-1:-1:-1;3940:1:28;3929:13;;3716:232::o"},"gasEstimates":{"creation":{"codeDepositCost":"344600","executionCost":"380","totalCost":"344980"},"external":{"facetAddress(bytes4)":"infinite","facetAddresses()":"infinite","facetFunctionSelectors(address)":"infinite","facets()":"infinite","supportsInterface(bytes4)":"infinite"}},"methodIdentifiers":{"facetAddress(bytes4)":"cdffacc6","facetAddresses()":"52ef6b2c","facetFunctionSelectors(address)":"adfca15e","facets()":"7a0ed627","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_functionSelector\",\"type\":\"bytes4\"}],\"name\":\"facetAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"facetAddress_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"facetAddresses\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"facetAddresses_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_facet\",\"type\":\"address\"}],\"name\":\"facetFunctionSelectors\",\"outputs\":[{\"internalType\":\"bytes4[]\",\"name\":\"facetFunctionSelectors_\",\"type\":\"bytes4[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"facets\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"facetAddress\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"functionSelectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct IDiamondLoupe.Facet[]\",\"name\":\"facets_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the DiamondLoupe standard which provides introspection functions      to view what facets and functions are available in the diamond contract.      The Diamond Loupe functions make it possible to look up facets and functions      implemented by a diamond. This implementation is based on the EIP-2535 Diamond Standard.\",\"kind\":\"dev\",\"methods\":{\"facetAddress(bytes4)\":{\"details\":\"Used to determine which implementation contract handles a particular function.      This function is critical for understanding the diamond's current function routing.      If no facet is found for the selector, returns address(0).\",\"params\":{\"_functionSelector\":\"The 4-byte function selector to find the implementation for\"},\"returns\":{\"facetAddress_\":\"The facet address implementing the function, or address(0) if not found\"}},\"facetAddresses()\":{\"details\":\"Provides a complete list of implementation contracts that make up the diamond's functionality\",\"returns\":{\"facetAddresses_\":\"Array of all registered facet addresses\"}},\"facetFunctionSelectors(address)\":{\"details\":\"Used to retrieve all function selectors managed by a single facet implementation\",\"params\":{\"_facet\":\"The facet address to query\"},\"returns\":{\"facetFunctionSelectors_\":\"Array of function selectors (bytes4) supported by the facet\"}},\"facets()\":{\"details\":\"This function is used to inspect the full facet structure of the diamond\",\"returns\":{\"facets_\":\"An array of Facet structs containing the facet addresses and         their associated function selectors\"}},\"supportsInterface(bytes4)\":{\"details\":\"ERC-165 implementation that checks if the diamond supports a specific interface.      Returns true for IDiamondLoupe and IERC165 interfaces, and any additional      interfaces registered with the diamond.\",\"params\":{\"_interfaceId\":\"The interface identifier to check, as specified in ERC-165\"},\"returns\":{\"_0\":\"True if the contract implements the interface, false otherwise\"}}},\"title\":\"DiamondLoupeFacet\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"facetAddress(bytes4)\":{\"notice\":\"Gets the facet address that implements a specific function\"},\"facetAddresses()\":{\"notice\":\"Get all the facet addresses registered in the diamond\"},\"facetFunctionSelectors(address)\":{\"notice\":\"Gets all the function selectors supported by a specific facet\"},\"facets()\":{\"notice\":\"Gets all facets and their selectors that are registered with the diamond\"},\"supportsInterface(bytes4)\":{\"notice\":\"Checks if the contract implements an interface\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/facets/DiamondLoupeFacet.sol\":\"DiamondLoupeFacet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\\n\\npragma solidity >=0.4.16;\\n\\nimport {IERC165} from \\\"../utils/introspection/IERC165.sol\\\";\\n\",\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity >=0.4.16;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\"},\"contracts/facets/DiamondLoupeFacet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/******************************************************************************\\\\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\n* EIP-2535 Diamonds: https://eips.ethereum.org/EIPS/eip-2535\\n*\\n* Implementation of the diamond loupe functions.\\n/******************************************************************************/\\n\\nimport { LibDiamond } from \\\"../libraries/LibDiamond.sol\\\";\\nimport { IDiamondLoupe } from \\\"../interfaces/IDiamondLoupe.sol\\\";\\nimport { IERC165 } from \\\"@openzeppelin/contracts/interfaces/IERC165.sol\\\";\\n\\n/**\\n * @title DiamondLoupeFacet\\n * @dev Implementation of the DiamondLoupe standard which provides introspection functions\\n *      to view what facets and functions are available in the diamond contract.\\n *      The Diamond Loupe functions make it possible to look up facets and functions\\n *      implemented by a diamond. This implementation is based on the EIP-2535 Diamond Standard.\\n */\\ncontract DiamondLoupeFacet is IDiamondLoupe, IERC165 {\\n    /// @notice Gets all facets and their selectors that are registered with the diamond\\n    /// @dev This function is used to inspect the full facet structure of the diamond\\n    /// @return facets_ An array of Facet structs containing the facet addresses and\\n    ///         their associated function selectors\\n    function facets() external override view returns (Facet[] memory facets_) {\\n        LibDiamond.DiamondStorage storage ds = LibDiamond.diamondStorage();\\n        uint256 numFacets = ds.facetAddresses.length;\\n        facets_ = new Facet[](numFacets);\\n        for (uint256 i; i < numFacets; i++) {\\n            address facetAddress_ = ds.facetAddresses[i];\\n            facets_[i].facetAddress = facetAddress_;\\n            facets_[i].functionSelectors = ds.facetFunctionSelectors[facetAddress_].functionSelectors;\\n        }\\n    }\\n\\n    /// @notice Gets all the function selectors supported by a specific facet\\n    /// @dev Used to retrieve all function selectors managed by a single facet implementation\\n    /// @param _facet The facet address to query\\n    /// @return facetFunctionSelectors_ Array of function selectors (bytes4) supported by the facet\\n    function facetFunctionSelectors(address _facet) external override view returns (bytes4[] memory facetFunctionSelectors_) {\\n        LibDiamond.DiamondStorage storage ds = LibDiamond.diamondStorage();\\n        facetFunctionSelectors_ = ds.facetFunctionSelectors[_facet].functionSelectors;\\n    }\\n\\n    /// @notice Get all the facet addresses registered in the diamond\\n    /// @dev Provides a complete list of implementation contracts that make up the diamond's functionality\\n    /// @return facetAddresses_ Array of all registered facet addresses\\n    function facetAddresses() external override view returns (address[] memory facetAddresses_) {\\n        LibDiamond.DiamondStorage storage ds = LibDiamond.diamondStorage();\\n        facetAddresses_ = ds.facetAddresses;\\n    }\\n\\n    /// @notice Gets the facet address that implements a specific function\\n    /// @dev Used to determine which implementation contract handles a particular function.\\n    ///      This function is critical for understanding the diamond's current function routing.\\n    ///      If no facet is found for the selector, returns address(0).\\n    /// @param _functionSelector The 4-byte function selector to find the implementation for\\n    /// @return facetAddress_ The facet address implementing the function, or address(0) if not found\\n    function facetAddress(bytes4 _functionSelector) external override view returns (address facetAddress_) {\\n        LibDiamond.DiamondStorage storage ds = LibDiamond.diamondStorage();\\n        facetAddress_ = ds.selectorToFacetAndPosition[_functionSelector].facetAddress;\\n    }\\n\\n    /// @notice Checks if the contract implements an interface\\n    /// @dev ERC-165 implementation that checks if the diamond supports a specific interface.\\n    ///      Returns true for IDiamondLoupe and IERC165 interfaces, and any additional\\n    ///      interfaces registered with the diamond.\\n    /// @param _interfaceId The interface identifier to check, as specified in ERC-165\\n    /// @return True if the contract implements the interface, false otherwise\\n    function supportsInterface(bytes4 _interfaceId) external view override returns (bool) {\\n        LibDiamond.DiamondStorage storage ds = LibDiamond.diamondStorage();\\n        return _interfaceId == type(IERC165).interfaceId || \\n               _interfaceId == type(IDiamondLoupe).interfaceId ||\\n               ds.supportedInterfaces[_interfaceId];\\n    }\\n}\",\"keccak256\":\"0xadce67f40cc14d2b5c72fb620bb3bbd7ce6058fb2ca3f7e0e319f8182f9830c5\",\"license\":\"MIT\"},\"contracts/interfaces/IDiamondCut.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.6;\\r\\n\\r\\n/******************************************************************************\\\\\\r\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\r\\n* EIP-2535 Diamonds: https://eips.ethereum.org/EIPS/eip-2535\\r\\n/******************************************************************************/\\r\\n\\r\\ninterface IDiamondCut {\\r\\n    enum FacetCutAction {Add, Replace, Remove}\\r\\n    // Add=0, Replace=1, Remove=2\\r\\n\\r\\n    struct FacetCut {\\r\\n        address facetAddress;\\r\\n        FacetCutAction action;\\r\\n        bytes4[] functionSelectors;\\r\\n    }\\r\\n\\r\\n    /// @notice Add/replace/remove any number of functions and optionally execute\\r\\n    ///         a function with delegatecall\\r\\n    /// @param _diamondCut Contains the facet addresses and function selectors\\r\\n    /// @param _init The address of the contract or facet to execute _calldata\\r\\n    /// @param _calldata A function call, including function selector and arguments\\r\\n    ///                  _calldata is executed with delegatecall on _init\\r\\n    function diamondCut(\\r\\n        FacetCut[] calldata _diamondCut,\\r\\n        address _init,\\r\\n        bytes calldata _calldata\\r\\n    ) external;\\r\\n    \\r\\n    /// @notice Propose an upgrade to be executed after the timelock period\\r\\n    /// @param _diamondCut Contains the facet addresses and function selectors\\r\\n    /// @param _init The address of the contract or facet to execute _calldata\\r\\n    /// @param _calldata A function call, including function selector and arguments\\r\\n    function proposeDiamondCut(\\r\\n        FacetCut[] calldata _diamondCut,\\r\\n        address _init,\\r\\n        bytes calldata _calldata\\r\\n    ) external;\\r\\n    \\r\\n    /// @notice Execute a previously proposed upgrade after the timelock period\\r\\n    function executeDiamondCut() external;\\r\\n    \\r\\n    /// @notice Cancel a proposed upgrade\\r\\n    function cancelDiamondCut() external;\\r\\n\\r\\n    event DiamondCut(FacetCut[] _diamondCut, address _init, bytes _calldata);\\r\\n    event DiamondCutProposed(address indexed proposer, uint256 indexed proposalTime, uint256 executionTime);\\r\\n    event DiamondCutCancelled(address indexed canceller);\\r\\n}\\r\\n\",\"keccak256\":\"0x340a039f0dd63cf19bc669551feec28879457d8b741711ef3513168d620f11bc\",\"license\":\"MIT\"},\"contracts/interfaces/IDiamondLoupe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.6;\\r\\n\\r\\n/******************************************************************************\\\\\\r\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\r\\n* EIP-2535 Diamonds: https://eips.ethereum.org/EIPS/eip-2535\\r\\n/******************************************************************************/\\r\\n\\r\\n// A loupe is a small magnifying glass used to look at diamonds.\\r\\n// These functions look at diamonds\\r\\ninterface IDiamondLoupe {\\r\\n    /// These functions are expected to be called frequently\\r\\n    /// by tools.\\r\\n\\r\\n    struct Facet {\\r\\n        address facetAddress;\\r\\n        bytes4[] functionSelectors;\\r\\n    }\\r\\n\\r\\n    /// @notice Gets all facet addresses and their four byte function selectors.\\r\\n    /// @return facets_ Facet\\r\\n    function facets() external view returns (Facet[] memory facets_);\\r\\n\\r\\n    /// @notice Gets all the function selectors supported by a specific facet.\\r\\n    /// @param _facet The facet address.\\r\\n    /// @return facetFunctionSelectors_\\r\\n    function facetFunctionSelectors(address _facet) external view returns (bytes4[] memory facetFunctionSelectors_);\\r\\n\\r\\n    /// @notice Get all the facet addresses used by a diamond.\\r\\n    /// @return facetAddresses_\\r\\n    function facetAddresses() external view returns (address[] memory facetAddresses_);\\r\\n\\r\\n    /// @notice Gets the facet that supports the given selector.\\r\\n    /// @dev If facet is not found return address(0).\\r\\n    /// @param _functionSelector The function selector.\\r\\n    /// @return facetAddress_ The facet address.\\r\\n    function facetAddress(bytes4 _functionSelector) external view returns (address facetAddress_);\\r\\n}\\r\\n\",\"keccak256\":\"0x817840c97d3fb575971952db3d5096b1f843bffe3176d675cacb18e656f9d2a3\",\"license\":\"MIT\"},\"contracts/interfaces/IERC173.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.6;\\n\\n/// @title ERC-173 Contract Ownership Standard\\n///  Note: the ERC-165 identifier for this interface is 0x7f5828d0\\n/* is ERC165 */\\ninterface IERC173 {\\n    /// @dev This emits when ownership of a contract changes.\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /// @notice Get the address of the owner\\n    /// @return owner_ The address of the owner.\\n    function owner() external view returns (address owner_);\\n\\n    /// @notice Set the address of the new owner of the contract\\n    /// @dev Set _newOwner to address(0) to renounce any ownership.\\n    /// @param _newOwner The address of the new owner of the contract\\n    function transferOwnership(address _newOwner) external;\\n}\\n\",\"keccak256\":\"0x84fe28f479bf96f1819514dd8493ae15955eda0dbabcbb5f24c3c935075a31d4\",\"license\":\"MIT\"},\"contracts/libraries/LibDiamond.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.6;\\n\\n/******************************************************************************\\\\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\n* EIP-2535 Diamonds: https://eips.ethereum.org/EIPS/eip-2535\\n/******************************************************************************/\\nimport { IDiamondCut } from \\\"../interfaces/IDiamondCut.sol\\\";\\nimport \\\"../interfaces/IERC173.sol\\\"; // for IERC173 interface\\nimport \\\"../interfaces/IDiamondCut.sol\\\";\\n\\n// Remember to add the loupe functions from DiamondLoupeFacet to the diamond.\\n// The loupe functions are required by the EIP2535 Diamonds standard\\n\\nlibrary LibDiamond {\\n    bytes32 constant DIAMOND_STORAGE_POSITION = keccak256(\\\"diamond.standard.diamond.storage\\\");\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n    event DiamondCut(IDiamondCut.FacetCut[] _diamondCut, address _init, bytes _calldata);\\n    event DiamondCutProposed(address indexed proposer, uint256 indexed proposalTime, uint256 executionTime);\\n    event DiamondCutCancelled(address indexed canceller);\\n\\n    struct FacetAddressAndPosition {\\n        address facetAddress;\\n        uint96 functionSelectorPosition; // position in facetFunctionSelectors.functionSelectors array\\n    }\\n\\n    struct FacetFunctionSelectors {\\n        bytes4[] functionSelectors;\\n        uint256 facetAddressPosition; // position of facetAddress in facetAddresses array\\n    }\\n\\n    // Upgrade proposal struct for timelock functionality\\n    struct UpgradeProposal {\\n        IDiamondCut.FacetCut[] diamondCut;\\n        address initAddress;\\n        bytes initCalldata;\\n        uint256 proposalTime;\\n        bool exists;\\n    }\\n\\n    struct DiamondStorage {\\n        // maps function selector to the facet address and\\n        // the position of the selector in the facetFunctionSelectors.selectors array\\n        mapping(bytes4 => FacetAddressAndPosition) selectorToFacetAndPosition;\\n        // maps facet addresses to function selectors\\n        mapping(address => FacetFunctionSelectors) facetFunctionSelectors;\\n        // facet addresses\\n        address[] facetAddresses;\\n        // Used to query if a contract implements an interface.\\n        // Used to implement ERC-165.\\n        mapping(bytes4 => bool) supportedInterfaces;\\n        // owner of the contract\\n        address contractOwner;\\n        // Timelock for upgrades (in seconds)\\n        uint256 upgradeTimelock;\\n        // Storage for the current upgrade proposal\\n        UpgradeProposal upgradeProposal;\\n    }\\n\\n    function diamondStorage() internal pure returns (DiamondStorage storage ds) {\\n        bytes32 position = DIAMOND_STORAGE_POSITION;\\n        assembly {\\n            ds.slot := position\\n        }\\n    }\\n\\n    function setContractOwner(address _newOwner) internal {\\n        DiamondStorage storage ds = diamondStorage();\\n        address previousOwner = ds.contractOwner;\\n        ds.contractOwner = _newOwner;\\n        emit OwnershipTransferred(previousOwner, _newOwner);\\n    }\\n\\n    function contractOwner() internal view returns (address contractOwner_) {\\n        contractOwner_ = diamondStorage().contractOwner;\\n    }\\n\\n    function enforceIsContractOwner() internal view {\\n        require(msg.sender == diamondStorage().contractOwner, \\\"LibDiamond: Must be contract owner\\\");\\n    }\\n\\n    // Timelock constants\\n    uint256 constant DEFAULT_UPGRADE_TIMELOCK = 2 days;\\n\\n    // Internal function version of diamondCut\\n    function diamondCut(\\n        IDiamondCut.FacetCut[] memory _diamondCut,\\n        address _init,\\n        bytes memory _calldata\\n    ) internal {\\n        for (uint256 facetIndex; facetIndex < _diamondCut.length; facetIndex++) {\\n            IDiamondCut.FacetCutAction action = _diamondCut[facetIndex].action;\\n            if (action == IDiamondCut.FacetCutAction.Add) {\\n                addFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\\n            } else if (action == IDiamondCut.FacetCutAction.Replace) {\\n                replaceFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\\n            } else if (action == IDiamondCut.FacetCutAction.Remove) {\\n                removeFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\\n            } else {\\n                revert(\\\"LibDiamondCut: Incorrect FacetCutAction\\\");\\n            }\\n        }\\n        emit DiamondCut(_diamondCut, _init, _calldata);\\n        initializeDiamondCut(_init, _calldata);\\n    }\\n\\n    function addFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\\n        require(_functionSelectors.length > 0, \\\"LibDiamondCut: No selectors in facet to cut\\\");\\n        DiamondStorage storage ds = diamondStorage();        \\n        require(_facetAddress != address(0), \\\"LibDiamondCut: Add facet can't be address(0)\\\");\\n        uint96 selectorPosition = uint96(ds.facetFunctionSelectors[_facetAddress].functionSelectors.length);\\n        // add new facet address if it does not exist\\n        if (selectorPosition == 0) {\\n            addFacet(ds, _facetAddress);            \\n        }\\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\\n            bytes4 selector = _functionSelectors[selectorIndex];\\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\\n            require(oldFacetAddress == address(0), \\\"LibDiamondCut: Can't add function that already exists\\\");\\n            addFunction(ds, selector, selectorPosition, _facetAddress);\\n            selectorPosition++;\\n        }\\n    }\\n\\n    function replaceFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\\n        require(_functionSelectors.length > 0, \\\"LibDiamondCut: No selectors in facet to cut\\\");\\n        DiamondStorage storage ds = diamondStorage();\\n        require(_facetAddress != address(0), \\\"LibDiamondCut: Add facet can't be address(0)\\\");\\n        uint96 selectorPosition = uint96(ds.facetFunctionSelectors[_facetAddress].functionSelectors.length);\\n        // add new facet address if it does not exist\\n        if (selectorPosition == 0) {\\n            addFacet(ds, _facetAddress);\\n        }\\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\\n            bytes4 selector = _functionSelectors[selectorIndex];\\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\\n            require(oldFacetAddress != _facetAddress, \\\"LibDiamondCut: Can't replace function with same function\\\");\\n            removeFunction(ds, oldFacetAddress, selector);\\n            addFunction(ds, selector, selectorPosition, _facetAddress);\\n            selectorPosition++;\\n        }\\n    }\\n\\n    function removeFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\\n        require(_functionSelectors.length > 0, \\\"LibDiamondCut: No selectors in facet to cut\\\");\\n        DiamondStorage storage ds = diamondStorage();\\n        // if function does not exist then do nothing and return\\n        require(_facetAddress == address(0), \\\"LibDiamondCut: Remove facet address must be address(0)\\\");\\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\\n            bytes4 selector = _functionSelectors[selectorIndex];\\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\\n            removeFunction(ds, oldFacetAddress, selector);\\n        }\\n    }\\n\\n    function addFacet(DiamondStorage storage ds, address _facetAddress) internal {\\n        enforceHasContractCode(_facetAddress, \\\"LibDiamondCut: New facet has no code\\\");\\n        ds.facetFunctionSelectors[_facetAddress].facetAddressPosition = ds.facetAddresses.length;\\n        ds.facetAddresses.push(_facetAddress);\\n    }    \\n\\n\\n    function addFunction(DiamondStorage storage ds, bytes4 _selector, uint96 _selectorPosition, address _facetAddress) internal {\\n        ds.selectorToFacetAndPosition[_selector].functionSelectorPosition = _selectorPosition;\\n        ds.facetFunctionSelectors[_facetAddress].functionSelectors.push(_selector);\\n        ds.selectorToFacetAndPosition[_selector].facetAddress = _facetAddress;\\n    }\\n\\n    function removeFunction(DiamondStorage storage ds, address _facetAddress, bytes4 _selector) internal {        \\n        require(_facetAddress != address(0), \\\"LibDiamondCut: Can't remove function that doesn't exist\\\");\\n        // an immutable function is a function defined directly in a diamond\\n        require(_facetAddress != address(this), \\\"LibDiamondCut: Can't remove immutable function\\\");\\n        // replace selector with last selector, then delete last selector\\n        uint256 selectorPosition = ds.selectorToFacetAndPosition[_selector].functionSelectorPosition;\\n        uint256 lastSelectorPosition = ds.facetFunctionSelectors[_facetAddress].functionSelectors.length - 1;\\n        // if not the same then replace _selector with lastSelector\\n        if (selectorPosition != lastSelectorPosition) {\\n            bytes4 lastSelector = ds.facetFunctionSelectors[_facetAddress].functionSelectors[lastSelectorPosition];\\n            ds.facetFunctionSelectors[_facetAddress].functionSelectors[selectorPosition] = lastSelector;\\n            ds.selectorToFacetAndPosition[lastSelector].functionSelectorPosition = uint96(selectorPosition);\\n        }\\n        // delete the last selector\\n        ds.facetFunctionSelectors[_facetAddress].functionSelectors.pop();\\n        delete ds.selectorToFacetAndPosition[_selector];\\n\\n        // if no more selectors for facet address then delete the facet address\\n        if (lastSelectorPosition == 0) {\\n            // replace facet address with last facet address and delete last facet address\\n            uint256 lastFacetAddressPosition = ds.facetAddresses.length - 1;\\n            uint256 facetAddressPosition = ds.facetFunctionSelectors[_facetAddress].facetAddressPosition;\\n            if (facetAddressPosition != lastFacetAddressPosition) {\\n                address lastFacetAddress = ds.facetAddresses[lastFacetAddressPosition];\\n                ds.facetAddresses[facetAddressPosition] = lastFacetAddress;\\n                ds.facetFunctionSelectors[lastFacetAddress].facetAddressPosition = facetAddressPosition;\\n            }\\n            ds.facetAddresses.pop();\\n            delete ds.facetFunctionSelectors[_facetAddress].facetAddressPosition;\\n        }\\n    }\\n\\n    function initializeDiamondCut(address _init, bytes memory _calldata) internal {\\n        if (_init == address(0)) {\\n            require(_calldata.length == 0, \\\"LibDiamondCut: _init is address(0) but_calldata is not empty\\\");\\n        } else {\\n            require(_calldata.length > 0, \\\"LibDiamondCut: _calldata is empty but _init is not address(0)\\\");\\n            if (_init != address(this)) {\\n                enforceHasContractCode(_init, \\\"LibDiamondCut: _init address has no code\\\");\\n            }\\n            (bool success, bytes memory error) = _init.delegatecall(_calldata);\\n            if (!success) {\\n                if (error.length > 0) {\\n                    // bubble up the error\\n                    revert(string(error));\\n                } else {\\n                    revert(\\\"LibDiamondCut: _init function reverted\\\");\\n                }\\n            }\\n        }\\n    }\\n\\n    function enforceHasContractCode(address _contract, string memory _errorMessage) internal view {\\n        uint256 contractSize;\\n        assembly {\\n            contractSize := extcodesize(_contract)\\n        }\\n        require(contractSize > 0, _errorMessage);\\n    }\\n\\n    // Initialize timelock settings for upgrade proposals\\n    function initializeUpgradeTimelock(uint256 _timelock) internal {\\n        DiamondStorage storage ds = diamondStorage();\\n        require(ds.upgradeTimelock == 0, \\\"LibDiamond: Timelock already initialized\\\");\\n        ds.upgradeTimelock = _timelock > 0 ? _timelock : DEFAULT_UPGRADE_TIMELOCK;\\n    }\\n\\n    // Propose a diamond cut to be executed after the timelock\\n    function proposeDiamondCut(\\n        IDiamondCut.FacetCut[] memory _diamondCut,\\n        address _init,\\n        bytes memory _calldata\\n    ) internal {\\n        DiamondStorage storage ds = diamondStorage();\\n        require(!ds.upgradeProposal.exists, \\\"LibDiamond: Upgrade already proposed\\\");\\n        require(ds.upgradeTimelock > 0, \\\"LibDiamond: Timelock not initialized\\\");\\n        \\n        // Create a deep copy of the diamond cut to store in the proposal\\n        IDiamondCut.FacetCut[] memory diamondCutCopy = new IDiamondCut.FacetCut[](_diamondCut.length);\\n        for (uint256 i = 0; i < _diamondCut.length; i++) {\\n            diamondCutCopy[i] = _diamondCut[i];\\n            \\n            // Deep copy the function selectors array\\n            bytes4[] memory selectors = new bytes4[](_diamondCut[i].functionSelectors.length);\\n            for (uint256 j = 0; j < _diamondCut[i].functionSelectors.length; j++) {\\n                selectors[j] = _diamondCut[i].functionSelectors[j];\\n            }\\n            diamondCutCopy[i].functionSelectors = selectors;\\n        }\\n        \\n        // Store the proposal\\n        // Create empty array in storage first\\n        delete ds.upgradeProposal.diamondCut;\\n        \\n        // Manually copy each element and its nested arrays to storage\\n        for (uint256 i = 0; i < _diamondCut.length; i++) {\\n            // Create a new struct in storage by pushing an empty element first\\n            ds.upgradeProposal.diamondCut.push();\\n            \\n            // Now set the values for this element's fields\\n            ds.upgradeProposal.diamondCut[i].facetAddress = _diamondCut[i].facetAddress;\\n            ds.upgradeProposal.diamondCut[i].action = _diamondCut[i].action;\\n            \\n            // For the selectors array, we need to handle it separately\\n            // Clear any existing selectors to ensure clean state\\n            delete ds.upgradeProposal.diamondCut[i].functionSelectors;\\n            \\n            // Copy each selector individually\\n            for (uint256 j = 0; j < _diamondCut[i].functionSelectors.length; j++) {\\n                ds.upgradeProposal.diamondCut[i].functionSelectors.push(_diamondCut[i].functionSelectors[j]);\\n            }\\n        }\\n        ds.upgradeProposal.initAddress = _init;\\n        ds.upgradeProposal.initCalldata = _calldata;\\n        ds.upgradeProposal.proposalTime = block.timestamp;\\n        ds.upgradeProposal.exists = true;\\n        \\n        emit DiamondCutProposed(msg.sender, block.timestamp, block.timestamp + ds.upgradeTimelock);\\n    }\\n    \\n    // Execute a proposed diamond cut after the timelock period\\n    function executeDiamondCut() internal {\\n        DiamondStorage storage ds = diamondStorage();\\n        require(ds.upgradeProposal.exists, \\\"LibDiamond: No upgrade proposal exists\\\");\\n        require(\\n            block.timestamp >= ds.upgradeProposal.proposalTime + ds.upgradeTimelock,\\n            \\\"LibDiamond: Timelock period not elapsed\\\"\\n        );\\n        \\n        // Execute the diamond cut\\n        diamondCut(\\n            ds.upgradeProposal.diamondCut,\\n            ds.upgradeProposal.initAddress,\\n            ds.upgradeProposal.initCalldata\\n        );\\n        \\n        // Reset the proposal\\n        delete ds.upgradeProposal;\\n    }\\n    \\n    // Cancel a proposed diamond cut\\n    function cancelDiamondCut() internal {\\n        DiamondStorage storage ds = diamondStorage();\\n        require(ds.upgradeProposal.exists, \\\"LibDiamond: No upgrade proposal exists\\\");\\n        \\n        // Reset the proposal\\n        delete ds.upgradeProposal;\\n        \\n        emit DiamondCutCancelled(msg.sender);\\n    }\\n}\\n\",\"keccak256\":\"0x3d3bb1df2d228d2738f7ce7b9f634653edda3f638a335b92565e9b42e941b1bb\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"facetAddress(bytes4)":{"notice":"Gets the facet address that implements a specific function"},"facetAddresses()":{"notice":"Get all the facet addresses registered in the diamond"},"facetFunctionSelectors(address)":{"notice":"Gets all the function selectors supported by a specific facet"},"facets()":{"notice":"Gets all facets and their selectors that are registered with the diamond"},"supportsInterface(bytes4)":{"notice":"Checks if the contract implements an interface"}},"version":1}}},"contracts/facets/OwnershipFacet.sol":{"OwnershipFacet":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"owner_","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of the ERC-173 ownership standard for the Diamond proxy pattern.      This facet manages the ownership of the diamond contract, which is a critical      security consideration as the owner has complete control over the contract's      functionality through diamond cuts. The ownership model follows the standard      single-owner pattern where the owner can transfer ownership to another address.      This facet implements both the IERC173 interface for ownership and the IERC165      interface for standard interface detection.","events":{"OwnershipTransferred(address,address)":{"details":"This emits when ownership of a contract changes."}},"kind":"dev","methods":{"owner()":{"details":"This view function returns the address of the current owner      without making any state changes. The owner is stored in the      diamond storage pattern and retrieved through the LibDiamond library.      The owner has exclusive privileges for critical operations including      diamond cuts and transferring ownership.","returns":{"owner_":"The current owner address"}},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"transferOwnership(address)":{"details":"Only the current owner can call this function. This is a critical      security function as the owner has complete control over the diamond.      The ownership transfer happens immediately with no two-step process,      so extreme care should be taken to ensure the new owner address is correct.      Setting the owner to address(0) will effectively renounce ownership,      leaving the contract without an owner and unable to perform privileged      operations like diamond cuts.","params":{"_newOwner":"The address of the new owner"}}},"title":"OwnershipFacet","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","supportsInterface(bytes4)":"01ffc9a7","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC-173 ownership standard for the Diamond proxy pattern.      This facet manages the ownership of the diamond contract, which is a critical      security consideration as the owner has complete control over the contract's      functionality through diamond cuts. The ownership model follows the standard      single-owner pattern where the owner can transfer ownership to another address.      This facet implements both the IERC173 interface for ownership and the IERC165      interface for standard interface detection.\",\"events\":{\"OwnershipTransferred(address,address)\":{\"details\":\"This emits when ownership of a contract changes.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"This view function returns the address of the current owner      without making any state changes. The owner is stored in the      diamond storage pattern and retrieved through the LibDiamond library.      The owner has exclusive privileges for critical operations including      diamond cuts and transferring ownership.\",\"returns\":{\"owner_\":\"The current owner address\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferOwnership(address)\":{\"details\":\"Only the current owner can call this function. This is a critical      security function as the owner has complete control over the diamond.      The ownership transfer happens immediately with no two-step process,      so extreme care should be taken to ensure the new owner address is correct.      Setting the owner to address(0) will effectively renounce ownership,      leaving the contract without an owner and unable to perform privileged      operations like diamond cuts.\",\"params\":{\"_newOwner\":\"The address of the new owner\"}}},\"title\":\"OwnershipFacet\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"owner()\":{\"notice\":\"Get the current contract owner's address\"},\"transferOwnership(address)\":{\"notice\":\"Transfer ownership of the contract to a new address\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/facets/OwnershipFacet.sol\":\"OwnershipFacet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\\n\\npragma solidity >=0.4.16;\\n\\nimport {IERC165} from \\\"../utils/introspection/IERC165.sol\\\";\\n\",\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity >=0.4.16;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\"},\"contracts/facets/OwnershipFacet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport { LibDiamond } from \\\"../libraries/LibDiamond.sol\\\";\\nimport { IERC173 } from \\\"../interfaces/IERC173.sol\\\";\\nimport { IERC165 } from \\\"@openzeppelin/contracts/interfaces/IERC165.sol\\\";\\n\\n/**\\n * @title OwnershipFacet\\n * @dev Implementation of the ERC-173 ownership standard for the Diamond proxy pattern.\\n *      This facet manages the ownership of the diamond contract, which is a critical\\n *      security consideration as the owner has complete control over the contract's\\n *      functionality through diamond cuts. The ownership model follows the standard\\n *      single-owner pattern where the owner can transfer ownership to another address.\\n *      This facet implements both the IERC173 interface for ownership and the IERC165\\n *      interface for standard interface detection.\\n */\\nabstract contract OwnershipFacet is IERC173, IERC165 {\\n    /**\\n     * @notice Transfer ownership of the contract to a new address\\n     * @dev Only the current owner can call this function. This is a critical\\n     *      security function as the owner has complete control over the diamond.\\n     *      The ownership transfer happens immediately with no two-step process,\\n     *      so extreme care should be taken to ensure the new owner address is correct.\\n     *      Setting the owner to address(0) will effectively renounce ownership,\\n     *      leaving the contract without an owner and unable to perform privileged\\n     *      operations like diamond cuts.\\n     * @param _newOwner The address of the new owner\\n     */\\n    function transferOwnership(address _newOwner) external override {\\n        LibDiamond.enforceIsContractOwner();\\n        LibDiamond.setContractOwner(_newOwner);\\n    }\\n\\n    /**\\n     * @notice Get the current contract owner's address\\n     * @dev This view function returns the address of the current owner\\n     *      without making any state changes. The owner is stored in the\\n     *      diamond storage pattern and retrieved through the LibDiamond library.\\n     *      The owner has exclusive privileges for critical operations including\\n     *      diamond cuts and transferring ownership.\\n     * @return owner_ The current owner address\\n     */\\n    function owner() external override view returns (address owner_) {\\n        owner_ = LibDiamond.contractOwner();\\n    }\\n\\n    // Removed supportsInterface(bytes4) function.\\n    // This should be handled by DiamondLoupeFacet (ERC165).\\n}\",\"keccak256\":\"0x089e215be6f9ebab38d5f24dff6e9e49e5d9cf22c023fcfb42687d904feb793a\",\"license\":\"MIT\"},\"contracts/interfaces/IDiamondCut.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.6;\\r\\n\\r\\n/******************************************************************************\\\\\\r\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\r\\n* EIP-2535 Diamonds: https://eips.ethereum.org/EIPS/eip-2535\\r\\n/******************************************************************************/\\r\\n\\r\\ninterface IDiamondCut {\\r\\n    enum FacetCutAction {Add, Replace, Remove}\\r\\n    // Add=0, Replace=1, Remove=2\\r\\n\\r\\n    struct FacetCut {\\r\\n        address facetAddress;\\r\\n        FacetCutAction action;\\r\\n        bytes4[] functionSelectors;\\r\\n    }\\r\\n\\r\\n    /// @notice Add/replace/remove any number of functions and optionally execute\\r\\n    ///         a function with delegatecall\\r\\n    /// @param _diamondCut Contains the facet addresses and function selectors\\r\\n    /// @param _init The address of the contract or facet to execute _calldata\\r\\n    /// @param _calldata A function call, including function selector and arguments\\r\\n    ///                  _calldata is executed with delegatecall on _init\\r\\n    function diamondCut(\\r\\n        FacetCut[] calldata _diamondCut,\\r\\n        address _init,\\r\\n        bytes calldata _calldata\\r\\n    ) external;\\r\\n    \\r\\n    /// @notice Propose an upgrade to be executed after the timelock period\\r\\n    /// @param _diamondCut Contains the facet addresses and function selectors\\r\\n    /// @param _init The address of the contract or facet to execute _calldata\\r\\n    /// @param _calldata A function call, including function selector and arguments\\r\\n    function proposeDiamondCut(\\r\\n        FacetCut[] calldata _diamondCut,\\r\\n        address _init,\\r\\n        bytes calldata _calldata\\r\\n    ) external;\\r\\n    \\r\\n    /// @notice Execute a previously proposed upgrade after the timelock period\\r\\n    function executeDiamondCut() external;\\r\\n    \\r\\n    /// @notice Cancel a proposed upgrade\\r\\n    function cancelDiamondCut() external;\\r\\n\\r\\n    event DiamondCut(FacetCut[] _diamondCut, address _init, bytes _calldata);\\r\\n    event DiamondCutProposed(address indexed proposer, uint256 indexed proposalTime, uint256 executionTime);\\r\\n    event DiamondCutCancelled(address indexed canceller);\\r\\n}\\r\\n\",\"keccak256\":\"0x340a039f0dd63cf19bc669551feec28879457d8b741711ef3513168d620f11bc\",\"license\":\"MIT\"},\"contracts/interfaces/IERC173.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.6;\\n\\n/// @title ERC-173 Contract Ownership Standard\\n///  Note: the ERC-165 identifier for this interface is 0x7f5828d0\\n/* is ERC165 */\\ninterface IERC173 {\\n    /// @dev This emits when ownership of a contract changes.\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /// @notice Get the address of the owner\\n    /// @return owner_ The address of the owner.\\n    function owner() external view returns (address owner_);\\n\\n    /// @notice Set the address of the new owner of the contract\\n    /// @dev Set _newOwner to address(0) to renounce any ownership.\\n    /// @param _newOwner The address of the new owner of the contract\\n    function transferOwnership(address _newOwner) external;\\n}\\n\",\"keccak256\":\"0x84fe28f479bf96f1819514dd8493ae15955eda0dbabcbb5f24c3c935075a31d4\",\"license\":\"MIT\"},\"contracts/libraries/LibDiamond.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.6;\\n\\n/******************************************************************************\\\\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\n* EIP-2535 Diamonds: https://eips.ethereum.org/EIPS/eip-2535\\n/******************************************************************************/\\nimport { IDiamondCut } from \\\"../interfaces/IDiamondCut.sol\\\";\\nimport \\\"../interfaces/IERC173.sol\\\"; // for IERC173 interface\\nimport \\\"../interfaces/IDiamondCut.sol\\\";\\n\\n// Remember to add the loupe functions from DiamondLoupeFacet to the diamond.\\n// The loupe functions are required by the EIP2535 Diamonds standard\\n\\nlibrary LibDiamond {\\n    bytes32 constant DIAMOND_STORAGE_POSITION = keccak256(\\\"diamond.standard.diamond.storage\\\");\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n    event DiamondCut(IDiamondCut.FacetCut[] _diamondCut, address _init, bytes _calldata);\\n    event DiamondCutProposed(address indexed proposer, uint256 indexed proposalTime, uint256 executionTime);\\n    event DiamondCutCancelled(address indexed canceller);\\n\\n    struct FacetAddressAndPosition {\\n        address facetAddress;\\n        uint96 functionSelectorPosition; // position in facetFunctionSelectors.functionSelectors array\\n    }\\n\\n    struct FacetFunctionSelectors {\\n        bytes4[] functionSelectors;\\n        uint256 facetAddressPosition; // position of facetAddress in facetAddresses array\\n    }\\n\\n    // Upgrade proposal struct for timelock functionality\\n    struct UpgradeProposal {\\n        IDiamondCut.FacetCut[] diamondCut;\\n        address initAddress;\\n        bytes initCalldata;\\n        uint256 proposalTime;\\n        bool exists;\\n    }\\n\\n    struct DiamondStorage {\\n        // maps function selector to the facet address and\\n        // the position of the selector in the facetFunctionSelectors.selectors array\\n        mapping(bytes4 => FacetAddressAndPosition) selectorToFacetAndPosition;\\n        // maps facet addresses to function selectors\\n        mapping(address => FacetFunctionSelectors) facetFunctionSelectors;\\n        // facet addresses\\n        address[] facetAddresses;\\n        // Used to query if a contract implements an interface.\\n        // Used to implement ERC-165.\\n        mapping(bytes4 => bool) supportedInterfaces;\\n        // owner of the contract\\n        address contractOwner;\\n        // Timelock for upgrades (in seconds)\\n        uint256 upgradeTimelock;\\n        // Storage for the current upgrade proposal\\n        UpgradeProposal upgradeProposal;\\n    }\\n\\n    function diamondStorage() internal pure returns (DiamondStorage storage ds) {\\n        bytes32 position = DIAMOND_STORAGE_POSITION;\\n        assembly {\\n            ds.slot := position\\n        }\\n    }\\n\\n    function setContractOwner(address _newOwner) internal {\\n        DiamondStorage storage ds = diamondStorage();\\n        address previousOwner = ds.contractOwner;\\n        ds.contractOwner = _newOwner;\\n        emit OwnershipTransferred(previousOwner, _newOwner);\\n    }\\n\\n    function contractOwner() internal view returns (address contractOwner_) {\\n        contractOwner_ = diamondStorage().contractOwner;\\n    }\\n\\n    function enforceIsContractOwner() internal view {\\n        require(msg.sender == diamondStorage().contractOwner, \\\"LibDiamond: Must be contract owner\\\");\\n    }\\n\\n    // Timelock constants\\n    uint256 constant DEFAULT_UPGRADE_TIMELOCK = 2 days;\\n\\n    // Internal function version of diamondCut\\n    function diamondCut(\\n        IDiamondCut.FacetCut[] memory _diamondCut,\\n        address _init,\\n        bytes memory _calldata\\n    ) internal {\\n        for (uint256 facetIndex; facetIndex < _diamondCut.length; facetIndex++) {\\n            IDiamondCut.FacetCutAction action = _diamondCut[facetIndex].action;\\n            if (action == IDiamondCut.FacetCutAction.Add) {\\n                addFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\\n            } else if (action == IDiamondCut.FacetCutAction.Replace) {\\n                replaceFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\\n            } else if (action == IDiamondCut.FacetCutAction.Remove) {\\n                removeFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\\n            } else {\\n                revert(\\\"LibDiamondCut: Incorrect FacetCutAction\\\");\\n            }\\n        }\\n        emit DiamondCut(_diamondCut, _init, _calldata);\\n        initializeDiamondCut(_init, _calldata);\\n    }\\n\\n    function addFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\\n        require(_functionSelectors.length > 0, \\\"LibDiamondCut: No selectors in facet to cut\\\");\\n        DiamondStorage storage ds = diamondStorage();        \\n        require(_facetAddress != address(0), \\\"LibDiamondCut: Add facet can't be address(0)\\\");\\n        uint96 selectorPosition = uint96(ds.facetFunctionSelectors[_facetAddress].functionSelectors.length);\\n        // add new facet address if it does not exist\\n        if (selectorPosition == 0) {\\n            addFacet(ds, _facetAddress);            \\n        }\\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\\n            bytes4 selector = _functionSelectors[selectorIndex];\\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\\n            require(oldFacetAddress == address(0), \\\"LibDiamondCut: Can't add function that already exists\\\");\\n            addFunction(ds, selector, selectorPosition, _facetAddress);\\n            selectorPosition++;\\n        }\\n    }\\n\\n    function replaceFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\\n        require(_functionSelectors.length > 0, \\\"LibDiamondCut: No selectors in facet to cut\\\");\\n        DiamondStorage storage ds = diamondStorage();\\n        require(_facetAddress != address(0), \\\"LibDiamondCut: Add facet can't be address(0)\\\");\\n        uint96 selectorPosition = uint96(ds.facetFunctionSelectors[_facetAddress].functionSelectors.length);\\n        // add new facet address if it does not exist\\n        if (selectorPosition == 0) {\\n            addFacet(ds, _facetAddress);\\n        }\\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\\n            bytes4 selector = _functionSelectors[selectorIndex];\\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\\n            require(oldFacetAddress != _facetAddress, \\\"LibDiamondCut: Can't replace function with same function\\\");\\n            removeFunction(ds, oldFacetAddress, selector);\\n            addFunction(ds, selector, selectorPosition, _facetAddress);\\n            selectorPosition++;\\n        }\\n    }\\n\\n    function removeFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\\n        require(_functionSelectors.length > 0, \\\"LibDiamondCut: No selectors in facet to cut\\\");\\n        DiamondStorage storage ds = diamondStorage();\\n        // if function does not exist then do nothing and return\\n        require(_facetAddress == address(0), \\\"LibDiamondCut: Remove facet address must be address(0)\\\");\\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\\n            bytes4 selector = _functionSelectors[selectorIndex];\\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\\n            removeFunction(ds, oldFacetAddress, selector);\\n        }\\n    }\\n\\n    function addFacet(DiamondStorage storage ds, address _facetAddress) internal {\\n        enforceHasContractCode(_facetAddress, \\\"LibDiamondCut: New facet has no code\\\");\\n        ds.facetFunctionSelectors[_facetAddress].facetAddressPosition = ds.facetAddresses.length;\\n        ds.facetAddresses.push(_facetAddress);\\n    }    \\n\\n\\n    function addFunction(DiamondStorage storage ds, bytes4 _selector, uint96 _selectorPosition, address _facetAddress) internal {\\n        ds.selectorToFacetAndPosition[_selector].functionSelectorPosition = _selectorPosition;\\n        ds.facetFunctionSelectors[_facetAddress].functionSelectors.push(_selector);\\n        ds.selectorToFacetAndPosition[_selector].facetAddress = _facetAddress;\\n    }\\n\\n    function removeFunction(DiamondStorage storage ds, address _facetAddress, bytes4 _selector) internal {        \\n        require(_facetAddress != address(0), \\\"LibDiamondCut: Can't remove function that doesn't exist\\\");\\n        // an immutable function is a function defined directly in a diamond\\n        require(_facetAddress != address(this), \\\"LibDiamondCut: Can't remove immutable function\\\");\\n        // replace selector with last selector, then delete last selector\\n        uint256 selectorPosition = ds.selectorToFacetAndPosition[_selector].functionSelectorPosition;\\n        uint256 lastSelectorPosition = ds.facetFunctionSelectors[_facetAddress].functionSelectors.length - 1;\\n        // if not the same then replace _selector with lastSelector\\n        if (selectorPosition != lastSelectorPosition) {\\n            bytes4 lastSelector = ds.facetFunctionSelectors[_facetAddress].functionSelectors[lastSelectorPosition];\\n            ds.facetFunctionSelectors[_facetAddress].functionSelectors[selectorPosition] = lastSelector;\\n            ds.selectorToFacetAndPosition[lastSelector].functionSelectorPosition = uint96(selectorPosition);\\n        }\\n        // delete the last selector\\n        ds.facetFunctionSelectors[_facetAddress].functionSelectors.pop();\\n        delete ds.selectorToFacetAndPosition[_selector];\\n\\n        // if no more selectors for facet address then delete the facet address\\n        if (lastSelectorPosition == 0) {\\n            // replace facet address with last facet address and delete last facet address\\n            uint256 lastFacetAddressPosition = ds.facetAddresses.length - 1;\\n            uint256 facetAddressPosition = ds.facetFunctionSelectors[_facetAddress].facetAddressPosition;\\n            if (facetAddressPosition != lastFacetAddressPosition) {\\n                address lastFacetAddress = ds.facetAddresses[lastFacetAddressPosition];\\n                ds.facetAddresses[facetAddressPosition] = lastFacetAddress;\\n                ds.facetFunctionSelectors[lastFacetAddress].facetAddressPosition = facetAddressPosition;\\n            }\\n            ds.facetAddresses.pop();\\n            delete ds.facetFunctionSelectors[_facetAddress].facetAddressPosition;\\n        }\\n    }\\n\\n    function initializeDiamondCut(address _init, bytes memory _calldata) internal {\\n        if (_init == address(0)) {\\n            require(_calldata.length == 0, \\\"LibDiamondCut: _init is address(0) but_calldata is not empty\\\");\\n        } else {\\n            require(_calldata.length > 0, \\\"LibDiamondCut: _calldata is empty but _init is not address(0)\\\");\\n            if (_init != address(this)) {\\n                enforceHasContractCode(_init, \\\"LibDiamondCut: _init address has no code\\\");\\n            }\\n            (bool success, bytes memory error) = _init.delegatecall(_calldata);\\n            if (!success) {\\n                if (error.length > 0) {\\n                    // bubble up the error\\n                    revert(string(error));\\n                } else {\\n                    revert(\\\"LibDiamondCut: _init function reverted\\\");\\n                }\\n            }\\n        }\\n    }\\n\\n    function enforceHasContractCode(address _contract, string memory _errorMessage) internal view {\\n        uint256 contractSize;\\n        assembly {\\n            contractSize := extcodesize(_contract)\\n        }\\n        require(contractSize > 0, _errorMessage);\\n    }\\n\\n    // Initialize timelock settings for upgrade proposals\\n    function initializeUpgradeTimelock(uint256 _timelock) internal {\\n        DiamondStorage storage ds = diamondStorage();\\n        require(ds.upgradeTimelock == 0, \\\"LibDiamond: Timelock already initialized\\\");\\n        ds.upgradeTimelock = _timelock > 0 ? _timelock : DEFAULT_UPGRADE_TIMELOCK;\\n    }\\n\\n    // Propose a diamond cut to be executed after the timelock\\n    function proposeDiamondCut(\\n        IDiamondCut.FacetCut[] memory _diamondCut,\\n        address _init,\\n        bytes memory _calldata\\n    ) internal {\\n        DiamondStorage storage ds = diamondStorage();\\n        require(!ds.upgradeProposal.exists, \\\"LibDiamond: Upgrade already proposed\\\");\\n        require(ds.upgradeTimelock > 0, \\\"LibDiamond: Timelock not initialized\\\");\\n        \\n        // Create a deep copy of the diamond cut to store in the proposal\\n        IDiamondCut.FacetCut[] memory diamondCutCopy = new IDiamondCut.FacetCut[](_diamondCut.length);\\n        for (uint256 i = 0; i < _diamondCut.length; i++) {\\n            diamondCutCopy[i] = _diamondCut[i];\\n            \\n            // Deep copy the function selectors array\\n            bytes4[] memory selectors = new bytes4[](_diamondCut[i].functionSelectors.length);\\n            for (uint256 j = 0; j < _diamondCut[i].functionSelectors.length; j++) {\\n                selectors[j] = _diamondCut[i].functionSelectors[j];\\n            }\\n            diamondCutCopy[i].functionSelectors = selectors;\\n        }\\n        \\n        // Store the proposal\\n        // Create empty array in storage first\\n        delete ds.upgradeProposal.diamondCut;\\n        \\n        // Manually copy each element and its nested arrays to storage\\n        for (uint256 i = 0; i < _diamondCut.length; i++) {\\n            // Create a new struct in storage by pushing an empty element first\\n            ds.upgradeProposal.diamondCut.push();\\n            \\n            // Now set the values for this element's fields\\n            ds.upgradeProposal.diamondCut[i].facetAddress = _diamondCut[i].facetAddress;\\n            ds.upgradeProposal.diamondCut[i].action = _diamondCut[i].action;\\n            \\n            // For the selectors array, we need to handle it separately\\n            // Clear any existing selectors to ensure clean state\\n            delete ds.upgradeProposal.diamondCut[i].functionSelectors;\\n            \\n            // Copy each selector individually\\n            for (uint256 j = 0; j < _diamondCut[i].functionSelectors.length; j++) {\\n                ds.upgradeProposal.diamondCut[i].functionSelectors.push(_diamondCut[i].functionSelectors[j]);\\n            }\\n        }\\n        ds.upgradeProposal.initAddress = _init;\\n        ds.upgradeProposal.initCalldata = _calldata;\\n        ds.upgradeProposal.proposalTime = block.timestamp;\\n        ds.upgradeProposal.exists = true;\\n        \\n        emit DiamondCutProposed(msg.sender, block.timestamp, block.timestamp + ds.upgradeTimelock);\\n    }\\n    \\n    // Execute a proposed diamond cut after the timelock period\\n    function executeDiamondCut() internal {\\n        DiamondStorage storage ds = diamondStorage();\\n        require(ds.upgradeProposal.exists, \\\"LibDiamond: No upgrade proposal exists\\\");\\n        require(\\n            block.timestamp >= ds.upgradeProposal.proposalTime + ds.upgradeTimelock,\\n            \\\"LibDiamond: Timelock period not elapsed\\\"\\n        );\\n        \\n        // Execute the diamond cut\\n        diamondCut(\\n            ds.upgradeProposal.diamondCut,\\n            ds.upgradeProposal.initAddress,\\n            ds.upgradeProposal.initCalldata\\n        );\\n        \\n        // Reset the proposal\\n        delete ds.upgradeProposal;\\n    }\\n    \\n    // Cancel a proposed diamond cut\\n    function cancelDiamondCut() internal {\\n        DiamondStorage storage ds = diamondStorage();\\n        require(ds.upgradeProposal.exists, \\\"LibDiamond: No upgrade proposal exists\\\");\\n        \\n        // Reset the proposal\\n        delete ds.upgradeProposal;\\n        \\n        emit DiamondCutCancelled(msg.sender);\\n    }\\n}\\n\",\"keccak256\":\"0x3d3bb1df2d228d2738f7ce7b9f634653edda3f638a335b92565e9b42e941b1bb\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"owner()":{"notice":"Get the current contract owner's address"},"transferOwnership(address)":{"notice":"Transfer ownership of the contract to a new address"}},"version":1}}},"contracts/interfaces/IDiamond.sol":{"IDiamond":{"abi":[{"inputs":[],"name":"getDiamondAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getDiamondAddress()":"6013c44c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getDiamondAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IDiamond.sol\":\"IDiamond\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IDiamond.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.6;\\n\\n\\nstruct DiamondSettings {\\n  address owner;\\n  address factory;\\n  address svgManager;\\n  string symbol;\\n  string name;\\n}\\n\\nstruct DiamondContract {\\n  DiamondSettings settings;\\n  mapping(string=>string) metadata;\\n}\\n\\nstruct DiamondStorage {\\n  DiamondContract diamondContract;\\n}\\n\\n\\ninterface IDiamond {\\n  function getDiamondAddress() external view returns (address);\\n}\\n\\n\",\"keccak256\":\"0x157d83f677f5a33a8893fbd9721fa74cb0bcbbaac00eb00af45f19649d46f464\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IDiamondCut.sol":{"IDiamondCut":{"abi":[{"anonymous":false,"inputs":[{"components":[{"internalType":"address","name":"facetAddress","type":"address"},{"internalType":"enum IDiamondCut.FacetCutAction","name":"action","type":"uint8"},{"internalType":"bytes4[]","name":"functionSelectors","type":"bytes4[]"}],"indexed":false,"internalType":"struct IDiamondCut.FacetCut[]","name":"_diamondCut","type":"tuple[]"},{"indexed":false,"internalType":"address","name":"_init","type":"address"},{"indexed":false,"internalType":"bytes","name":"_calldata","type":"bytes"}],"name":"DiamondCut","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"canceller","type":"address"}],"name":"DiamondCutCancelled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"proposer","type":"address"},{"indexed":true,"internalType":"uint256","name":"proposalTime","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"executionTime","type":"uint256"}],"name":"DiamondCutProposed","type":"event"},{"inputs":[],"name":"cancelDiamondCut","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"facetAddress","type":"address"},{"internalType":"enum IDiamondCut.FacetCutAction","name":"action","type":"uint8"},{"internalType":"bytes4[]","name":"functionSelectors","type":"bytes4[]"}],"internalType":"struct IDiamondCut.FacetCut[]","name":"_diamondCut","type":"tuple[]"},{"internalType":"address","name":"_init","type":"address"},{"internalType":"bytes","name":"_calldata","type":"bytes"}],"name":"diamondCut","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"executeDiamondCut","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"facetAddress","type":"address"},{"internalType":"enum IDiamondCut.FacetCutAction","name":"action","type":"uint8"},{"internalType":"bytes4[]","name":"functionSelectors","type":"bytes4[]"}],"internalType":"struct IDiamondCut.FacetCut[]","name":"_diamondCut","type":"tuple[]"},{"internalType":"address","name":"_init","type":"address"},{"internalType":"bytes","name":"_calldata","type":"bytes"}],"name":"proposeDiamondCut","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"diamondCut((address,uint8,bytes4[])[],address,bytes)":{"params":{"_calldata":"A function call, including function selector and arguments                  _calldata is executed with delegatecall on _init","_diamondCut":"Contains the facet addresses and function selectors","_init":"The address of the contract or facet to execute _calldata"}},"proposeDiamondCut((address,uint8,bytes4[])[],address,bytes)":{"params":{"_calldata":"A function call, including function selector and arguments","_diamondCut":"Contains the facet addresses and function selectors","_init":"The address of the contract or facet to execute _calldata"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"cancelDiamondCut()":"6fb05998","diamondCut((address,uint8,bytes4[])[],address,bytes)":"1f931c1c","executeDiamondCut()":"f37a5da0","proposeDiamondCut((address,uint8,bytes4[])[],address,bytes)":"bbf2358e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"facetAddress\",\"type\":\"address\"},{\"internalType\":\"enum IDiamondCut.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"functionSelectors\",\"type\":\"bytes4[]\"}],\"indexed\":false,\"internalType\":\"struct IDiamondCut.FacetCut[]\",\"name\":\"_diamondCut\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_init\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_calldata\",\"type\":\"bytes\"}],\"name\":\"DiamondCut\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"canceller\",\"type\":\"address\"}],\"name\":\"DiamondCutCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"executionTime\",\"type\":\"uint256\"}],\"name\":\"DiamondCutProposed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"cancelDiamondCut\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"facetAddress\",\"type\":\"address\"},{\"internalType\":\"enum IDiamondCut.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"functionSelectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct IDiamondCut.FacetCut[]\",\"name\":\"_diamondCut\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"_init\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_calldata\",\"type\":\"bytes\"}],\"name\":\"diamondCut\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"executeDiamondCut\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"facetAddress\",\"type\":\"address\"},{\"internalType\":\"enum IDiamondCut.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"functionSelectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct IDiamondCut.FacetCut[]\",\"name\":\"_diamondCut\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"_init\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_calldata\",\"type\":\"bytes\"}],\"name\":\"proposeDiamondCut\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"diamondCut((address,uint8,bytes4[])[],address,bytes)\":{\"params\":{\"_calldata\":\"A function call, including function selector and arguments                  _calldata is executed with delegatecall on _init\",\"_diamondCut\":\"Contains the facet addresses and function selectors\",\"_init\":\"The address of the contract or facet to execute _calldata\"}},\"proposeDiamondCut((address,uint8,bytes4[])[],address,bytes)\":{\"params\":{\"_calldata\":\"A function call, including function selector and arguments\",\"_diamondCut\":\"Contains the facet addresses and function selectors\",\"_init\":\"The address of the contract or facet to execute _calldata\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"cancelDiamondCut()\":{\"notice\":\"Cancel a proposed upgrade\"},\"diamondCut((address,uint8,bytes4[])[],address,bytes)\":{\"notice\":\"Add/replace/remove any number of functions and optionally execute         a function with delegatecall\"},\"executeDiamondCut()\":{\"notice\":\"Execute a previously proposed upgrade after the timelock period\"},\"proposeDiamondCut((address,uint8,bytes4[])[],address,bytes)\":{\"notice\":\"Propose an upgrade to be executed after the timelock period\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IDiamondCut.sol\":\"IDiamondCut\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IDiamondCut.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.6;\\r\\n\\r\\n/******************************************************************************\\\\\\r\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\r\\n* EIP-2535 Diamonds: https://eips.ethereum.org/EIPS/eip-2535\\r\\n/******************************************************************************/\\r\\n\\r\\ninterface IDiamondCut {\\r\\n    enum FacetCutAction {Add, Replace, Remove}\\r\\n    // Add=0, Replace=1, Remove=2\\r\\n\\r\\n    struct FacetCut {\\r\\n        address facetAddress;\\r\\n        FacetCutAction action;\\r\\n        bytes4[] functionSelectors;\\r\\n    }\\r\\n\\r\\n    /// @notice Add/replace/remove any number of functions and optionally execute\\r\\n    ///         a function with delegatecall\\r\\n    /// @param _diamondCut Contains the facet addresses and function selectors\\r\\n    /// @param _init The address of the contract or facet to execute _calldata\\r\\n    /// @param _calldata A function call, including function selector and arguments\\r\\n    ///                  _calldata is executed with delegatecall on _init\\r\\n    function diamondCut(\\r\\n        FacetCut[] calldata _diamondCut,\\r\\n        address _init,\\r\\n        bytes calldata _calldata\\r\\n    ) external;\\r\\n    \\r\\n    /// @notice Propose an upgrade to be executed after the timelock period\\r\\n    /// @param _diamondCut Contains the facet addresses and function selectors\\r\\n    /// @param _init The address of the contract or facet to execute _calldata\\r\\n    /// @param _calldata A function call, including function selector and arguments\\r\\n    function proposeDiamondCut(\\r\\n        FacetCut[] calldata _diamondCut,\\r\\n        address _init,\\r\\n        bytes calldata _calldata\\r\\n    ) external;\\r\\n    \\r\\n    /// @notice Execute a previously proposed upgrade after the timelock period\\r\\n    function executeDiamondCut() external;\\r\\n    \\r\\n    /// @notice Cancel a proposed upgrade\\r\\n    function cancelDiamondCut() external;\\r\\n\\r\\n    event DiamondCut(FacetCut[] _diamondCut, address _init, bytes _calldata);\\r\\n    event DiamondCutProposed(address indexed proposer, uint256 indexed proposalTime, uint256 executionTime);\\r\\n    event DiamondCutCancelled(address indexed canceller);\\r\\n}\\r\\n\",\"keccak256\":\"0x340a039f0dd63cf19bc669551feec28879457d8b741711ef3513168d620f11bc\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"cancelDiamondCut()":{"notice":"Cancel a proposed upgrade"},"diamondCut((address,uint8,bytes4[])[],address,bytes)":{"notice":"Add/replace/remove any number of functions and optionally execute         a function with delegatecall"},"executeDiamondCut()":{"notice":"Execute a previously proposed upgrade after the timelock period"},"proposeDiamondCut((address,uint8,bytes4[])[],address,bytes)":{"notice":"Propose an upgrade to be executed after the timelock period"}},"version":1}}},"contracts/interfaces/IDiamondFacetInit.sol":{"IDiamondFacetInit":{"abi":[{"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"components":[{"internalType":"address","name":"facetAddress","type":"address"},{"internalType":"enum IDiamondCut.FacetCutAction","name":"action","type":"uint8"},{"internalType":"bytes4[]","name":"functionSelectors","type":"bytes4[]"}],"internalType":"struct IDiamondCut.FacetCut","name":"_facet","type":"tuple"},{"internalType":"bytes","name":"_calldata","type":"bytes"}],"name":"initializeFacet","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Interface identification is specified in ERC-165. This function  uses less than 30,000 gas.","params":{"interfaceId":"The interface identifier, as specified in ERC-165"},"returns":{"_0":"`true` if the contract implements `interfaceID` and  `interfaceID` is not 0xffffffff, `false` otherwise"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"initializeFacet(address,(address,uint8,bytes4[]),bytes)":"1a782b68","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"facetAddress\",\"type\":\"address\"},{\"internalType\":\"enum IDiamondCut.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"functionSelectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct IDiamondCut.FacetCut\",\"name\":\"_facet\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_calldata\",\"type\":\"bytes\"}],\"name\":\"initializeFacet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Interface identification is specified in ERC-165. This function  uses less than 30,000 gas.\",\"params\":{\"interfaceId\":\"The interface identifier, as specified in ERC-165\"},\"returns\":{\"_0\":\"`true` if the contract implements `interfaceID` and  `interfaceID` is not 0xffffffff, `false` otherwise\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IDiamondFacetInit.sol\":\"IDiamondFacetInit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IDiamondCut.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.6;\\r\\n\\r\\n/******************************************************************************\\\\\\r\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\r\\n* EIP-2535 Diamonds: https://eips.ethereum.org/EIPS/eip-2535\\r\\n/******************************************************************************/\\r\\n\\r\\ninterface IDiamondCut {\\r\\n    enum FacetCutAction {Add, Replace, Remove}\\r\\n    // Add=0, Replace=1, Remove=2\\r\\n\\r\\n    struct FacetCut {\\r\\n        address facetAddress;\\r\\n        FacetCutAction action;\\r\\n        bytes4[] functionSelectors;\\r\\n    }\\r\\n\\r\\n    /// @notice Add/replace/remove any number of functions and optionally execute\\r\\n    ///         a function with delegatecall\\r\\n    /// @param _diamondCut Contains the facet addresses and function selectors\\r\\n    /// @param _init The address of the contract or facet to execute _calldata\\r\\n    /// @param _calldata A function call, including function selector and arguments\\r\\n    ///                  _calldata is executed with delegatecall on _init\\r\\n    function diamondCut(\\r\\n        FacetCut[] calldata _diamondCut,\\r\\n        address _init,\\r\\n        bytes calldata _calldata\\r\\n    ) external;\\r\\n    \\r\\n    /// @notice Propose an upgrade to be executed after the timelock period\\r\\n    /// @param _diamondCut Contains the facet addresses and function selectors\\r\\n    /// @param _init The address of the contract or facet to execute _calldata\\r\\n    /// @param _calldata A function call, including function selector and arguments\\r\\n    function proposeDiamondCut(\\r\\n        FacetCut[] calldata _diamondCut,\\r\\n        address _init,\\r\\n        bytes calldata _calldata\\r\\n    ) external;\\r\\n    \\r\\n    /// @notice Execute a previously proposed upgrade after the timelock period\\r\\n    function executeDiamondCut() external;\\r\\n    \\r\\n    /// @notice Cancel a proposed upgrade\\r\\n    function cancelDiamondCut() external;\\r\\n\\r\\n    event DiamondCut(FacetCut[] _diamondCut, address _init, bytes _calldata);\\r\\n    event DiamondCutProposed(address indexed proposer, uint256 indexed proposalTime, uint256 executionTime);\\r\\n    event DiamondCutCancelled(address indexed canceller);\\r\\n}\\r\\n\",\"keccak256\":\"0x340a039f0dd63cf19bc669551feec28879457d8b741711ef3513168d620f11bc\",\"license\":\"MIT\"},\"contracts/interfaces/IDiamondFacetInit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.6;\\n\\nimport \\\"./IDiamondCut.sol\\\";\\nimport \\\"./IERC165.sol\\\";\\n\\ninterface IDiamondFacetInit is IERC165 {\\n    function initializeFacet(\\n        address _owner, \\n        IDiamondCut.FacetCut memory _facet,\\n        bytes calldata _calldata) external;\\n}\\n\",\"keccak256\":\"0x98f9752bca66dc592726ee3371b98af19929171cce2ff07a6fd5ef020c95d92c\",\"license\":\"MIT\"},\"contracts/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.6;\\n\\ninterface IERC165 {\\n    /// @notice Query if a contract implements an interface\\n    /// @param interfaceId The interface identifier, as specified in ERC-165\\n    /// @dev Interface identification is specified in ERC-165. This function\\n    ///  uses less than 30,000 gas.\\n    /// @return `true` if the contract implements `interfaceID` and\\n    ///  `interfaceID` is not 0xffffffff, `false` otherwise\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x65006dc04090531acd9805684a1f27252b8abb0c1990fcf0ba8db33f50791a0d\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"supportsInterface(bytes4)":{"notice":"Query if a contract implements an interface"}},"version":1}}},"contracts/interfaces/IDiamondInit.sol":{"IDiamondInit":{"abi":[{"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"components":[{"internalType":"address","name":"facetAddress","type":"address"},{"internalType":"enum IDiamondCut.FacetCutAction","name":"action","type":"uint8"},{"internalType":"bytes4[]","name":"functionSelectors","type":"bytes4[]"}],"internalType":"struct IDiamondCut.FacetCut[]","name":"_facets","type":"tuple[]"},{"internalType":"address","name":"_init","type":"address"},{"internalType":"bytes","name":"_calldata","type":"bytes"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"initialize(address,(address,uint8,bytes4[])[],address,bytes)":"8130e84a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"facetAddress\",\"type\":\"address\"},{\"internalType\":\"enum IDiamondCut.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"functionSelectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct IDiamondCut.FacetCut[]\",\"name\":\"_facets\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"_init\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_calldata\",\"type\":\"bytes\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IDiamondInit.sol\":\"IDiamondInit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IDiamondCut.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.6;\\r\\n\\r\\n/******************************************************************************\\\\\\r\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\r\\n* EIP-2535 Diamonds: https://eips.ethereum.org/EIPS/eip-2535\\r\\n/******************************************************************************/\\r\\n\\r\\ninterface IDiamondCut {\\r\\n    enum FacetCutAction {Add, Replace, Remove}\\r\\n    // Add=0, Replace=1, Remove=2\\r\\n\\r\\n    struct FacetCut {\\r\\n        address facetAddress;\\r\\n        FacetCutAction action;\\r\\n        bytes4[] functionSelectors;\\r\\n    }\\r\\n\\r\\n    /// @notice Add/replace/remove any number of functions and optionally execute\\r\\n    ///         a function with delegatecall\\r\\n    /// @param _diamondCut Contains the facet addresses and function selectors\\r\\n    /// @param _init The address of the contract or facet to execute _calldata\\r\\n    /// @param _calldata A function call, including function selector and arguments\\r\\n    ///                  _calldata is executed with delegatecall on _init\\r\\n    function diamondCut(\\r\\n        FacetCut[] calldata _diamondCut,\\r\\n        address _init,\\r\\n        bytes calldata _calldata\\r\\n    ) external;\\r\\n    \\r\\n    /// @notice Propose an upgrade to be executed after the timelock period\\r\\n    /// @param _diamondCut Contains the facet addresses and function selectors\\r\\n    /// @param _init The address of the contract or facet to execute _calldata\\r\\n    /// @param _calldata A function call, including function selector and arguments\\r\\n    function proposeDiamondCut(\\r\\n        FacetCut[] calldata _diamondCut,\\r\\n        address _init,\\r\\n        bytes calldata _calldata\\r\\n    ) external;\\r\\n    \\r\\n    /// @notice Execute a previously proposed upgrade after the timelock period\\r\\n    function executeDiamondCut() external;\\r\\n    \\r\\n    /// @notice Cancel a proposed upgrade\\r\\n    function cancelDiamondCut() external;\\r\\n\\r\\n    event DiamondCut(FacetCut[] _diamondCut, address _init, bytes _calldata);\\r\\n    event DiamondCutProposed(address indexed proposer, uint256 indexed proposalTime, uint256 executionTime);\\r\\n    event DiamondCutCancelled(address indexed canceller);\\r\\n}\\r\\n\",\"keccak256\":\"0x340a039f0dd63cf19bc669551feec28879457d8b741711ef3513168d620f11bc\",\"license\":\"MIT\"},\"contracts/interfaces/IDiamondInit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.6;\\n\\nimport \\\"./IDiamondCut.sol\\\";\\n\\ninterface IDiamondInit {\\n    function initialize(\\n        address _owner, \\n        IDiamondCut.FacetCut[] memory _facets,\\n        address _init,\\n        bytes calldata _calldata) external;\\n}\\n\",\"keccak256\":\"0x85c1667fe1e8f379da31ba75fcbe22ea92c46ae8f0653ff93acfcb4037d53fc7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IDiamondLoupe.sol":{"IDiamondLoupe":{"abi":[{"inputs":[{"internalType":"bytes4","name":"_functionSelector","type":"bytes4"}],"name":"facetAddress","outputs":[{"internalType":"address","name":"facetAddress_","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"facetAddresses","outputs":[{"internalType":"address[]","name":"facetAddresses_","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_facet","type":"address"}],"name":"facetFunctionSelectors","outputs":[{"internalType":"bytes4[]","name":"facetFunctionSelectors_","type":"bytes4[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"facets","outputs":[{"components":[{"internalType":"address","name":"facetAddress","type":"address"},{"internalType":"bytes4[]","name":"functionSelectors","type":"bytes4[]"}],"internalType":"struct IDiamondLoupe.Facet[]","name":"facets_","type":"tuple[]"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"facetAddress(bytes4)":{"details":"If facet is not found return address(0).","params":{"_functionSelector":"The function selector."},"returns":{"facetAddress_":"The facet address."}},"facetAddresses()":{"returns":{"facetAddresses_":"facetAddresses_"}},"facetFunctionSelectors(address)":{"params":{"_facet":"The facet address."},"returns":{"facetFunctionSelectors_":"facetFunctionSelectors_"}},"facets()":{"returns":{"facets_":"Facet"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"facetAddress(bytes4)":"cdffacc6","facetAddresses()":"52ef6b2c","facetFunctionSelectors(address)":"adfca15e","facets()":"7a0ed627"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_functionSelector\",\"type\":\"bytes4\"}],\"name\":\"facetAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"facetAddress_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"facetAddresses\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"facetAddresses_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_facet\",\"type\":\"address\"}],\"name\":\"facetFunctionSelectors\",\"outputs\":[{\"internalType\":\"bytes4[]\",\"name\":\"facetFunctionSelectors_\",\"type\":\"bytes4[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"facets\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"facetAddress\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"functionSelectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct IDiamondLoupe.Facet[]\",\"name\":\"facets_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"facetAddress(bytes4)\":{\"details\":\"If facet is not found return address(0).\",\"params\":{\"_functionSelector\":\"The function selector.\"},\"returns\":{\"facetAddress_\":\"The facet address.\"}},\"facetAddresses()\":{\"returns\":{\"facetAddresses_\":\"facetAddresses_\"}},\"facetFunctionSelectors(address)\":{\"params\":{\"_facet\":\"The facet address.\"},\"returns\":{\"facetFunctionSelectors_\":\"facetFunctionSelectors_\"}},\"facets()\":{\"returns\":{\"facets_\":\"Facet\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"facetAddress(bytes4)\":{\"notice\":\"Gets the facet that supports the given selector.\"},\"facetAddresses()\":{\"notice\":\"Get all the facet addresses used by a diamond.\"},\"facetFunctionSelectors(address)\":{\"notice\":\"Gets all the function selectors supported by a specific facet.\"},\"facets()\":{\"notice\":\"Gets all facet addresses and their four byte function selectors.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IDiamondLoupe.sol\":\"IDiamondLoupe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IDiamondLoupe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.6;\\r\\n\\r\\n/******************************************************************************\\\\\\r\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\r\\n* EIP-2535 Diamonds: https://eips.ethereum.org/EIPS/eip-2535\\r\\n/******************************************************************************/\\r\\n\\r\\n// A loupe is a small magnifying glass used to look at diamonds.\\r\\n// These functions look at diamonds\\r\\ninterface IDiamondLoupe {\\r\\n    /// These functions are expected to be called frequently\\r\\n    /// by tools.\\r\\n\\r\\n    struct Facet {\\r\\n        address facetAddress;\\r\\n        bytes4[] functionSelectors;\\r\\n    }\\r\\n\\r\\n    /// @notice Gets all facet addresses and their four byte function selectors.\\r\\n    /// @return facets_ Facet\\r\\n    function facets() external view returns (Facet[] memory facets_);\\r\\n\\r\\n    /// @notice Gets all the function selectors supported by a specific facet.\\r\\n    /// @param _facet The facet address.\\r\\n    /// @return facetFunctionSelectors_\\r\\n    function facetFunctionSelectors(address _facet) external view returns (bytes4[] memory facetFunctionSelectors_);\\r\\n\\r\\n    /// @notice Get all the facet addresses used by a diamond.\\r\\n    /// @return facetAddresses_\\r\\n    function facetAddresses() external view returns (address[] memory facetAddresses_);\\r\\n\\r\\n    /// @notice Gets the facet that supports the given selector.\\r\\n    /// @dev If facet is not found return address(0).\\r\\n    /// @param _functionSelector The function selector.\\r\\n    /// @return facetAddress_ The facet address.\\r\\n    function facetAddress(bytes4 _functionSelector) external view returns (address facetAddress_);\\r\\n}\\r\\n\",\"keccak256\":\"0x817840c97d3fb575971952db3d5096b1f843bffe3176d675cacb18e656f9d2a3\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"facetAddress(bytes4)":{"notice":"Gets the facet that supports the given selector."},"facetAddresses()":{"notice":"Get all the facet addresses used by a diamond."},"facetFunctionSelectors(address)":{"notice":"Gets all the function selectors supported by a specific facet."},"facets()":{"notice":"Gets all facet addresses and their four byte function selectors."}},"version":1}}},"contracts/interfaces/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Interface identification is specified in ERC-165. This function  uses less than 30,000 gas.","params":{"interfaceId":"The interface identifier, as specified in ERC-165"},"returns":{"_0":"`true` if the contract implements `interfaceID` and  `interfaceID` is not 0xffffffff, `false` otherwise"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Interface identification is specified in ERC-165. This function  uses less than 30,000 gas.\",\"params\":{\"interfaceId\":\"The interface identifier, as specified in ERC-165\"},\"returns\":{\"_0\":\"`true` if the contract implements `interfaceID` and  `interfaceID` is not 0xffffffff, `false` otherwise\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.6;\\n\\ninterface IERC165 {\\n    /// @notice Query if a contract implements an interface\\n    /// @param interfaceId The interface identifier, as specified in ERC-165\\n    /// @dev Interface identification is specified in ERC-165. This function\\n    ///  uses less than 30,000 gas.\\n    /// @return `true` if the contract implements `interfaceID` and\\n    ///  `interfaceID` is not 0xffffffff, `false` otherwise\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x65006dc04090531acd9805684a1f27252b8abb0c1990fcf0ba8db33f50791a0d\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"supportsInterface(bytes4)":{"notice":"Query if a contract implements an interface"}},"version":1}}},"contracts/interfaces/IERC173.sol":{"IERC173":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"owner_","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"events":{"OwnershipTransferred(address,address)":{"details":"This emits when ownership of a contract changes."}},"kind":"dev","methods":{"owner()":{"returns":{"owner_":"The address of the owner."}},"transferOwnership(address)":{"details":"Set _newOwner to address(0) to renounce any ownership.","params":{"_newOwner":"The address of the new owner of the contract"}}},"title":"ERC-173 Contract Ownership Standard  Note: the ERC-165 identifier for this interface is 0x7f5828d0","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"OwnershipTransferred(address,address)\":{\"details\":\"This emits when ownership of a contract changes.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"returns\":{\"owner_\":\"The address of the owner.\"}},\"transferOwnership(address)\":{\"details\":\"Set _newOwner to address(0) to renounce any ownership.\",\"params\":{\"_newOwner\":\"The address of the new owner of the contract\"}}},\"title\":\"ERC-173 Contract Ownership Standard  Note: the ERC-165 identifier for this interface is 0x7f5828d0\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"owner()\":{\"notice\":\"Get the address of the owner\"},\"transferOwnership(address)\":{\"notice\":\"Set the address of the new owner of the contract\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IERC173.sol\":\"IERC173\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC173.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.6;\\n\\n/// @title ERC-173 Contract Ownership Standard\\n///  Note: the ERC-165 identifier for this interface is 0x7f5828d0\\n/* is ERC165 */\\ninterface IERC173 {\\n    /// @dev This emits when ownership of a contract changes.\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /// @notice Get the address of the owner\\n    /// @return owner_ The address of the owner.\\n    function owner() external view returns (address owner_);\\n\\n    /// @notice Set the address of the new owner of the contract\\n    /// @dev Set _newOwner to address(0) to renounce any ownership.\\n    /// @param _newOwner The address of the new owner of the contract\\n    function transferOwnership(address _newOwner) external;\\n}\\n\",\"keccak256\":\"0x84fe28f479bf96f1819514dd8493ae15955eda0dbabcbb5f24c3c935075a31d4\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"owner()":{"notice":"Get the address of the owner"},"transferOwnership(address)":{"notice":"Set the address of the new owner of the contract"}},"version":1}}},"contracts/interfaces/IERC721Enumerable.sol":{"IERC721Enumerable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"See https://eips.ethereum.org/EIPS/eip-721","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"tokenByIndex(uint256)":{"details":"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens."},"tokenOfOwnerByIndex(address,uint256)":{"details":"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."},"totalSupply()":{"details":"Returns the total amount of tokens stored by the contract."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"title":"ERC-721 Non-Fungible Token Standard, optional enumeration extension","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","tokenByIndex(uint256)":"4f6ccce7","tokenOfOwnerByIndex(address,uint256)":"2f745c59","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional enumeration extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IERC721Enumerable.sol\":\"IERC721Enumerable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC721.sol)\\n\\npragma solidity >=0.6.2;\\n\\nimport {IERC721} from \\\"../token/ERC721/IERC721.sol\\\";\\n\",\"keccak256\":\"0xca34c490d41c332106d30b657f00dc028532cb6b9fef2b1729670ce476b36bce\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity >=0.6.2;\\n\\nimport {IERC165} from \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC-721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\\n     *   {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity >=0.4.16;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\"},\"contracts/interfaces/IERC721Enumerable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC721/extensions/IERC721Enumerable.sol)\\n\\npragma solidity ^0.8.6;\\n\\nimport \\\"@openzeppelin/contracts/interfaces/IERC721.sol\\\";\\n\\nstruct ERC721EnumerableContract {\\n    // Mapping from owner to list of owned token IDs\\n    mapping(address => mapping(uint256 => uint256)) _ownedTokens;\\n\\n    // Mapping from token ID to index of the owner tokens list\\n    mapping(uint256 => uint256) _ownedTokensIndex;\\n\\n    // Array with all token ids, used for enumeration\\n    uint256[] _allTokens;\\n\\n    // Mapping from token id to position in the allTokens array\\n    mapping(uint256 => uint256) _allTokensIndex;\\n}\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Enumerable is IERC721 {\\n    /**\\n     * @dev Returns the total amount of tokens stored by the contract.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\\n     */\\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\\n     * Use along with {totalSupply} to enumerate all tokens.\\n     */\\n    function tokenByIndex(uint256 index) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x7f76086c568a2873d3b092a896af66068f061474955c1442fe1eb3cbe3d649a2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/libraries/DiamondLib.sol":{"DiamondLib":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bc04ee68ee33e19b22b5e36be3ceb00a14ded8634c2bca684cdb003b7c8721b364736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBC DIV 0xEE PUSH9 0xEE33E19B22B5E36BE3 0xCE 0xB0 EXP EQ 0xDE 0xD8 PUSH4 0x4C2BCA68 0x4C 0xDB STOP EXTCODESIZE PUSH29 0x8721B364736F6C63430008140033000000000000000000000000000000 ","sourceMap":"555:329:24:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;555:329:24;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bc04ee68ee33e19b22b5e36be3ceb00a14ded8634c2bca684cdb003b7c8721b364736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBC DIV 0xEE PUSH9 0xEE33E19B22B5E36BE3 0xCE 0xB0 EXP EQ 0xDE 0xD8 PUSH4 0x4C2BCA68 0x4C 0xDB STOP EXTCODESIZE PUSH29 0x8721B364736F6C63430008140033000000000000000000000000000000 ","sourceMap":"555:329:24:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"diamondStorage()":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/DiamondLib.sol\":\"DiamondLib\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\\n\\npragma solidity >=0.4.16;\\n\\nimport {IERC165} from \\\"../utils/introspection/IERC165.sol\\\";\\n\",\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC721.sol)\\n\\npragma solidity >=0.6.2;\\n\\nimport {IERC721} from \\\"../token/ERC721/IERC721.sol\\\";\\n\",\"keccak256\":\"0xca34c490d41c332106d30b657f00dc028532cb6b9fef2b1729670ce476b36bce\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC721Metadata.sol)\\n\\npragma solidity >=0.6.2;\\n\\nimport {IERC721Metadata} from \\\"../token/ERC721/extensions/IERC721Metadata.sol\\\";\\n\",\"keccak256\":\"0x0137cd417d5c172629ab893df685f0143811e9b409c087a7a759a70021ccc679\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity >=0.6.2;\\n\\nimport {IERC165} from \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC-721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\\n     *   {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity >=0.6.2;\\n\\nimport {IERC721} from \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity >=0.4.16;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\"},\"contracts/interfaces/IDiamond.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.6;\\n\\n\\nstruct DiamondSettings {\\n  address owner;\\n  address factory;\\n  address svgManager;\\n  string symbol;\\n  string name;\\n}\\n\\nstruct DiamondContract {\\n  DiamondSettings settings;\\n  mapping(string=>string) metadata;\\n}\\n\\nstruct DiamondStorage {\\n  DiamondContract diamondContract;\\n}\\n\\n\\ninterface IDiamond {\\n  function getDiamondAddress() external view returns (address);\\n}\\n\\n\",\"keccak256\":\"0x157d83f677f5a33a8893fbd9721fa74cb0bcbbaac00eb00af45f19649d46f464\",\"license\":\"MIT\"},\"contracts/interfaces/IDiamondCut.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.6;\\r\\n\\r\\n/******************************************************************************\\\\\\r\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\r\\n* EIP-2535 Diamonds: https://eips.ethereum.org/EIPS/eip-2535\\r\\n/******************************************************************************/\\r\\n\\r\\ninterface IDiamondCut {\\r\\n    enum FacetCutAction {Add, Replace, Remove}\\r\\n    // Add=0, Replace=1, Remove=2\\r\\n\\r\\n    struct FacetCut {\\r\\n        address facetAddress;\\r\\n        FacetCutAction action;\\r\\n        bytes4[] functionSelectors;\\r\\n    }\\r\\n\\r\\n    /// @notice Add/replace/remove any number of functions and optionally execute\\r\\n    ///         a function with delegatecall\\r\\n    /// @param _diamondCut Contains the facet addresses and function selectors\\r\\n    /// @param _init The address of the contract or facet to execute _calldata\\r\\n    /// @param _calldata A function call, including function selector and arguments\\r\\n    ///                  _calldata is executed with delegatecall on _init\\r\\n    function diamondCut(\\r\\n        FacetCut[] calldata _diamondCut,\\r\\n        address _init,\\r\\n        bytes calldata _calldata\\r\\n    ) external;\\r\\n    \\r\\n    /// @notice Propose an upgrade to be executed after the timelock period\\r\\n    /// @param _diamondCut Contains the facet addresses and function selectors\\r\\n    /// @param _init The address of the contract or facet to execute _calldata\\r\\n    /// @param _calldata A function call, including function selector and arguments\\r\\n    function proposeDiamondCut(\\r\\n        FacetCut[] calldata _diamondCut,\\r\\n        address _init,\\r\\n        bytes calldata _calldata\\r\\n    ) external;\\r\\n    \\r\\n    /// @notice Execute a previously proposed upgrade after the timelock period\\r\\n    function executeDiamondCut() external;\\r\\n    \\r\\n    /// @notice Cancel a proposed upgrade\\r\\n    function cancelDiamondCut() external;\\r\\n\\r\\n    event DiamondCut(FacetCut[] _diamondCut, address _init, bytes _calldata);\\r\\n    event DiamondCutProposed(address indexed proposer, uint256 indexed proposalTime, uint256 executionTime);\\r\\n    event DiamondCutCancelled(address indexed canceller);\\r\\n}\\r\\n\",\"keccak256\":\"0x340a039f0dd63cf19bc669551feec28879457d8b741711ef3513168d620f11bc\",\"license\":\"MIT\"},\"contracts/interfaces/IDiamondLoupe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.6;\\r\\n\\r\\n/******************************************************************************\\\\\\r\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\r\\n* EIP-2535 Diamonds: https://eips.ethereum.org/EIPS/eip-2535\\r\\n/******************************************************************************/\\r\\n\\r\\n// A loupe is a small magnifying glass used to look at diamonds.\\r\\n// These functions look at diamonds\\r\\ninterface IDiamondLoupe {\\r\\n    /// These functions are expected to be called frequently\\r\\n    /// by tools.\\r\\n\\r\\n    struct Facet {\\r\\n        address facetAddress;\\r\\n        bytes4[] functionSelectors;\\r\\n    }\\r\\n\\r\\n    /// @notice Gets all facet addresses and their four byte function selectors.\\r\\n    /// @return facets_ Facet\\r\\n    function facets() external view returns (Facet[] memory facets_);\\r\\n\\r\\n    /// @notice Gets all the function selectors supported by a specific facet.\\r\\n    /// @param _facet The facet address.\\r\\n    /// @return facetFunctionSelectors_\\r\\n    function facetFunctionSelectors(address _facet) external view returns (bytes4[] memory facetFunctionSelectors_);\\r\\n\\r\\n    /// @notice Get all the facet addresses used by a diamond.\\r\\n    /// @return facetAddresses_\\r\\n    function facetAddresses() external view returns (address[] memory facetAddresses_);\\r\\n\\r\\n    /// @notice Gets the facet that supports the given selector.\\r\\n    /// @dev If facet is not found return address(0).\\r\\n    /// @param _functionSelector The function selector.\\r\\n    /// @return facetAddress_ The facet address.\\r\\n    function facetAddress(bytes4 _functionSelector) external view returns (address facetAddress_);\\r\\n}\\r\\n\",\"keccak256\":\"0x817840c97d3fb575971952db3d5096b1f843bffe3176d675cacb18e656f9d2a3\",\"license\":\"MIT\"},\"contracts/interfaces/IERC173.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.6;\\n\\n/// @title ERC-173 Contract Ownership Standard\\n///  Note: the ERC-165 identifier for this interface is 0x7f5828d0\\n/* is ERC165 */\\ninterface IERC173 {\\n    /// @dev This emits when ownership of a contract changes.\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /// @notice Get the address of the owner\\n    /// @return owner_ The address of the owner.\\n    function owner() external view returns (address owner_);\\n\\n    /// @notice Set the address of the new owner of the contract\\n    /// @dev Set _newOwner to address(0) to renounce any ownership.\\n    /// @param _newOwner The address of the new owner of the contract\\n    function transferOwnership(address _newOwner) external;\\n}\\n\",\"keccak256\":\"0x84fe28f479bf96f1819514dd8493ae15955eda0dbabcbb5f24c3c935075a31d4\",\"license\":\"MIT\"},\"contracts/libraries/DiamondLib.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.6;\\n\\nimport \\\"@openzeppelin/contracts/interfaces/IERC165.sol\\\";\\nimport \\\"@openzeppelin/contracts/interfaces/IERC721.sol\\\";\\nimport \\\"@openzeppelin/contracts/interfaces/IERC721Metadata.sol\\\";\\n\\nimport { IDiamondCut } from \\\"../interfaces/IDiamondCut.sol\\\";\\nimport { DiamondStorage } from \\\"../interfaces/IDiamond.sol\\\";\\nimport { IDiamondLoupe } from \\\"../interfaces/IDiamondLoupe.sol\\\";\\nimport { IERC173 } from \\\"../interfaces/IERC173.sol\\\";\\n\\nimport \\\"./LibDiamond.sol\\\";\\n\\nimport \\\"../upgradeInitializers/DiamondInit.sol\\\";\\n\\nlibrary DiamondLib {\\n\\n  bytes32 internal constant DIAMOND_STORAGE_POSITION =\\n    keccak256(\\\"diamond.nextblock.bitgem.app.DiamondStorage.storage\\\");\\n\\n  function diamondStorage() internal pure returns (DiamondStorage storage ds) {\\n    bytes32 position = DIAMOND_STORAGE_POSITION;\\n    assembly {\\n      ds.slot := position\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0x86ef18a587f87fd1a4662201837a60ecb2ca30bf9cf9784e556514cb950f1fcf\",\"license\":\"MIT\"},\"contracts/libraries/LibDiamond.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.6;\\n\\n/******************************************************************************\\\\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\n* EIP-2535 Diamonds: https://eips.ethereum.org/EIPS/eip-2535\\n/******************************************************************************/\\nimport { IDiamondCut } from \\\"../interfaces/IDiamondCut.sol\\\";\\nimport \\\"../interfaces/IERC173.sol\\\"; // for IERC173 interface\\nimport \\\"../interfaces/IDiamondCut.sol\\\";\\n\\n// Remember to add the loupe functions from DiamondLoupeFacet to the diamond.\\n// The loupe functions are required by the EIP2535 Diamonds standard\\n\\nlibrary LibDiamond {\\n    bytes32 constant DIAMOND_STORAGE_POSITION = keccak256(\\\"diamond.standard.diamond.storage\\\");\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n    event DiamondCut(IDiamondCut.FacetCut[] _diamondCut, address _init, bytes _calldata);\\n    event DiamondCutProposed(address indexed proposer, uint256 indexed proposalTime, uint256 executionTime);\\n    event DiamondCutCancelled(address indexed canceller);\\n\\n    struct FacetAddressAndPosition {\\n        address facetAddress;\\n        uint96 functionSelectorPosition; // position in facetFunctionSelectors.functionSelectors array\\n    }\\n\\n    struct FacetFunctionSelectors {\\n        bytes4[] functionSelectors;\\n        uint256 facetAddressPosition; // position of facetAddress in facetAddresses array\\n    }\\n\\n    // Upgrade proposal struct for timelock functionality\\n    struct UpgradeProposal {\\n        IDiamondCut.FacetCut[] diamondCut;\\n        address initAddress;\\n        bytes initCalldata;\\n        uint256 proposalTime;\\n        bool exists;\\n    }\\n\\n    struct DiamondStorage {\\n        // maps function selector to the facet address and\\n        // the position of the selector in the facetFunctionSelectors.selectors array\\n        mapping(bytes4 => FacetAddressAndPosition) selectorToFacetAndPosition;\\n        // maps facet addresses to function selectors\\n        mapping(address => FacetFunctionSelectors) facetFunctionSelectors;\\n        // facet addresses\\n        address[] facetAddresses;\\n        // Used to query if a contract implements an interface.\\n        // Used to implement ERC-165.\\n        mapping(bytes4 => bool) supportedInterfaces;\\n        // owner of the contract\\n        address contractOwner;\\n        // Timelock for upgrades (in seconds)\\n        uint256 upgradeTimelock;\\n        // Storage for the current upgrade proposal\\n        UpgradeProposal upgradeProposal;\\n    }\\n\\n    function diamondStorage() internal pure returns (DiamondStorage storage ds) {\\n        bytes32 position = DIAMOND_STORAGE_POSITION;\\n        assembly {\\n            ds.slot := position\\n        }\\n    }\\n\\n    function setContractOwner(address _newOwner) internal {\\n        DiamondStorage storage ds = diamondStorage();\\n        address previousOwner = ds.contractOwner;\\n        ds.contractOwner = _newOwner;\\n        emit OwnershipTransferred(previousOwner, _newOwner);\\n    }\\n\\n    function contractOwner() internal view returns (address contractOwner_) {\\n        contractOwner_ = diamondStorage().contractOwner;\\n    }\\n\\n    function enforceIsContractOwner() internal view {\\n        require(msg.sender == diamondStorage().contractOwner, \\\"LibDiamond: Must be contract owner\\\");\\n    }\\n\\n    // Timelock constants\\n    uint256 constant DEFAULT_UPGRADE_TIMELOCK = 2 days;\\n\\n    // Internal function version of diamondCut\\n    function diamondCut(\\n        IDiamondCut.FacetCut[] memory _diamondCut,\\n        address _init,\\n        bytes memory _calldata\\n    ) internal {\\n        for (uint256 facetIndex; facetIndex < _diamondCut.length; facetIndex++) {\\n            IDiamondCut.FacetCutAction action = _diamondCut[facetIndex].action;\\n            if (action == IDiamondCut.FacetCutAction.Add) {\\n                addFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\\n            } else if (action == IDiamondCut.FacetCutAction.Replace) {\\n                replaceFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\\n            } else if (action == IDiamondCut.FacetCutAction.Remove) {\\n                removeFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\\n            } else {\\n                revert(\\\"LibDiamondCut: Incorrect FacetCutAction\\\");\\n            }\\n        }\\n        emit DiamondCut(_diamondCut, _init, _calldata);\\n        initializeDiamondCut(_init, _calldata);\\n    }\\n\\n    function addFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\\n        require(_functionSelectors.length > 0, \\\"LibDiamondCut: No selectors in facet to cut\\\");\\n        DiamondStorage storage ds = diamondStorage();        \\n        require(_facetAddress != address(0), \\\"LibDiamondCut: Add facet can't be address(0)\\\");\\n        uint96 selectorPosition = uint96(ds.facetFunctionSelectors[_facetAddress].functionSelectors.length);\\n        // add new facet address if it does not exist\\n        if (selectorPosition == 0) {\\n            addFacet(ds, _facetAddress);            \\n        }\\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\\n            bytes4 selector = _functionSelectors[selectorIndex];\\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\\n            require(oldFacetAddress == address(0), \\\"LibDiamondCut: Can't add function that already exists\\\");\\n            addFunction(ds, selector, selectorPosition, _facetAddress);\\n            selectorPosition++;\\n        }\\n    }\\n\\n    function replaceFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\\n        require(_functionSelectors.length > 0, \\\"LibDiamondCut: No selectors in facet to cut\\\");\\n        DiamondStorage storage ds = diamondStorage();\\n        require(_facetAddress != address(0), \\\"LibDiamondCut: Add facet can't be address(0)\\\");\\n        uint96 selectorPosition = uint96(ds.facetFunctionSelectors[_facetAddress].functionSelectors.length);\\n        // add new facet address if it does not exist\\n        if (selectorPosition == 0) {\\n            addFacet(ds, _facetAddress);\\n        }\\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\\n            bytes4 selector = _functionSelectors[selectorIndex];\\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\\n            require(oldFacetAddress != _facetAddress, \\\"LibDiamondCut: Can't replace function with same function\\\");\\n            removeFunction(ds, oldFacetAddress, selector);\\n            addFunction(ds, selector, selectorPosition, _facetAddress);\\n            selectorPosition++;\\n        }\\n    }\\n\\n    function removeFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\\n        require(_functionSelectors.length > 0, \\\"LibDiamondCut: No selectors in facet to cut\\\");\\n        DiamondStorage storage ds = diamondStorage();\\n        // if function does not exist then do nothing and return\\n        require(_facetAddress == address(0), \\\"LibDiamondCut: Remove facet address must be address(0)\\\");\\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\\n            bytes4 selector = _functionSelectors[selectorIndex];\\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\\n            removeFunction(ds, oldFacetAddress, selector);\\n        }\\n    }\\n\\n    function addFacet(DiamondStorage storage ds, address _facetAddress) internal {\\n        enforceHasContractCode(_facetAddress, \\\"LibDiamondCut: New facet has no code\\\");\\n        ds.facetFunctionSelectors[_facetAddress].facetAddressPosition = ds.facetAddresses.length;\\n        ds.facetAddresses.push(_facetAddress);\\n    }    \\n\\n\\n    function addFunction(DiamondStorage storage ds, bytes4 _selector, uint96 _selectorPosition, address _facetAddress) internal {\\n        ds.selectorToFacetAndPosition[_selector].functionSelectorPosition = _selectorPosition;\\n        ds.facetFunctionSelectors[_facetAddress].functionSelectors.push(_selector);\\n        ds.selectorToFacetAndPosition[_selector].facetAddress = _facetAddress;\\n    }\\n\\n    function removeFunction(DiamondStorage storage ds, address _facetAddress, bytes4 _selector) internal {        \\n        require(_facetAddress != address(0), \\\"LibDiamondCut: Can't remove function that doesn't exist\\\");\\n        // an immutable function is a function defined directly in a diamond\\n        require(_facetAddress != address(this), \\\"LibDiamondCut: Can't remove immutable function\\\");\\n        // replace selector with last selector, then delete last selector\\n        uint256 selectorPosition = ds.selectorToFacetAndPosition[_selector].functionSelectorPosition;\\n        uint256 lastSelectorPosition = ds.facetFunctionSelectors[_facetAddress].functionSelectors.length - 1;\\n        // if not the same then replace _selector with lastSelector\\n        if (selectorPosition != lastSelectorPosition) {\\n            bytes4 lastSelector = ds.facetFunctionSelectors[_facetAddress].functionSelectors[lastSelectorPosition];\\n            ds.facetFunctionSelectors[_facetAddress].functionSelectors[selectorPosition] = lastSelector;\\n            ds.selectorToFacetAndPosition[lastSelector].functionSelectorPosition = uint96(selectorPosition);\\n        }\\n        // delete the last selector\\n        ds.facetFunctionSelectors[_facetAddress].functionSelectors.pop();\\n        delete ds.selectorToFacetAndPosition[_selector];\\n\\n        // if no more selectors for facet address then delete the facet address\\n        if (lastSelectorPosition == 0) {\\n            // replace facet address with last facet address and delete last facet address\\n            uint256 lastFacetAddressPosition = ds.facetAddresses.length - 1;\\n            uint256 facetAddressPosition = ds.facetFunctionSelectors[_facetAddress].facetAddressPosition;\\n            if (facetAddressPosition != lastFacetAddressPosition) {\\n                address lastFacetAddress = ds.facetAddresses[lastFacetAddressPosition];\\n                ds.facetAddresses[facetAddressPosition] = lastFacetAddress;\\n                ds.facetFunctionSelectors[lastFacetAddress].facetAddressPosition = facetAddressPosition;\\n            }\\n            ds.facetAddresses.pop();\\n            delete ds.facetFunctionSelectors[_facetAddress].facetAddressPosition;\\n        }\\n    }\\n\\n    function initializeDiamondCut(address _init, bytes memory _calldata) internal {\\n        if (_init == address(0)) {\\n            require(_calldata.length == 0, \\\"LibDiamondCut: _init is address(0) but_calldata is not empty\\\");\\n        } else {\\n            require(_calldata.length > 0, \\\"LibDiamondCut: _calldata is empty but _init is not address(0)\\\");\\n            if (_init != address(this)) {\\n                enforceHasContractCode(_init, \\\"LibDiamondCut: _init address has no code\\\");\\n            }\\n            (bool success, bytes memory error) = _init.delegatecall(_calldata);\\n            if (!success) {\\n                if (error.length > 0) {\\n                    // bubble up the error\\n                    revert(string(error));\\n                } else {\\n                    revert(\\\"LibDiamondCut: _init function reverted\\\");\\n                }\\n            }\\n        }\\n    }\\n\\n    function enforceHasContractCode(address _contract, string memory _errorMessage) internal view {\\n        uint256 contractSize;\\n        assembly {\\n            contractSize := extcodesize(_contract)\\n        }\\n        require(contractSize > 0, _errorMessage);\\n    }\\n\\n    // Initialize timelock settings for upgrade proposals\\n    function initializeUpgradeTimelock(uint256 _timelock) internal {\\n        DiamondStorage storage ds = diamondStorage();\\n        require(ds.upgradeTimelock == 0, \\\"LibDiamond: Timelock already initialized\\\");\\n        ds.upgradeTimelock = _timelock > 0 ? _timelock : DEFAULT_UPGRADE_TIMELOCK;\\n    }\\n\\n    // Propose a diamond cut to be executed after the timelock\\n    function proposeDiamondCut(\\n        IDiamondCut.FacetCut[] memory _diamondCut,\\n        address _init,\\n        bytes memory _calldata\\n    ) internal {\\n        DiamondStorage storage ds = diamondStorage();\\n        require(!ds.upgradeProposal.exists, \\\"LibDiamond: Upgrade already proposed\\\");\\n        require(ds.upgradeTimelock > 0, \\\"LibDiamond: Timelock not initialized\\\");\\n        \\n        // Create a deep copy of the diamond cut to store in the proposal\\n        IDiamondCut.FacetCut[] memory diamondCutCopy = new IDiamondCut.FacetCut[](_diamondCut.length);\\n        for (uint256 i = 0; i < _diamondCut.length; i++) {\\n            diamondCutCopy[i] = _diamondCut[i];\\n            \\n            // Deep copy the function selectors array\\n            bytes4[] memory selectors = new bytes4[](_diamondCut[i].functionSelectors.length);\\n            for (uint256 j = 0; j < _diamondCut[i].functionSelectors.length; j++) {\\n                selectors[j] = _diamondCut[i].functionSelectors[j];\\n            }\\n            diamondCutCopy[i].functionSelectors = selectors;\\n        }\\n        \\n        // Store the proposal\\n        // Create empty array in storage first\\n        delete ds.upgradeProposal.diamondCut;\\n        \\n        // Manually copy each element and its nested arrays to storage\\n        for (uint256 i = 0; i < _diamondCut.length; i++) {\\n            // Create a new struct in storage by pushing an empty element first\\n            ds.upgradeProposal.diamondCut.push();\\n            \\n            // Now set the values for this element's fields\\n            ds.upgradeProposal.diamondCut[i].facetAddress = _diamondCut[i].facetAddress;\\n            ds.upgradeProposal.diamondCut[i].action = _diamondCut[i].action;\\n            \\n            // For the selectors array, we need to handle it separately\\n            // Clear any existing selectors to ensure clean state\\n            delete ds.upgradeProposal.diamondCut[i].functionSelectors;\\n            \\n            // Copy each selector individually\\n            for (uint256 j = 0; j < _diamondCut[i].functionSelectors.length; j++) {\\n                ds.upgradeProposal.diamondCut[i].functionSelectors.push(_diamondCut[i].functionSelectors[j]);\\n            }\\n        }\\n        ds.upgradeProposal.initAddress = _init;\\n        ds.upgradeProposal.initCalldata = _calldata;\\n        ds.upgradeProposal.proposalTime = block.timestamp;\\n        ds.upgradeProposal.exists = true;\\n        \\n        emit DiamondCutProposed(msg.sender, block.timestamp, block.timestamp + ds.upgradeTimelock);\\n    }\\n    \\n    // Execute a proposed diamond cut after the timelock period\\n    function executeDiamondCut() internal {\\n        DiamondStorage storage ds = diamondStorage();\\n        require(ds.upgradeProposal.exists, \\\"LibDiamond: No upgrade proposal exists\\\");\\n        require(\\n            block.timestamp >= ds.upgradeProposal.proposalTime + ds.upgradeTimelock,\\n            \\\"LibDiamond: Timelock period not elapsed\\\"\\n        );\\n        \\n        // Execute the diamond cut\\n        diamondCut(\\n            ds.upgradeProposal.diamondCut,\\n            ds.upgradeProposal.initAddress,\\n            ds.upgradeProposal.initCalldata\\n        );\\n        \\n        // Reset the proposal\\n        delete ds.upgradeProposal;\\n    }\\n    \\n    // Cancel a proposed diamond cut\\n    function cancelDiamondCut() internal {\\n        DiamondStorage storage ds = diamondStorage();\\n        require(ds.upgradeProposal.exists, \\\"LibDiamond: No upgrade proposal exists\\\");\\n        \\n        // Reset the proposal\\n        delete ds.upgradeProposal;\\n        \\n        emit DiamondCutCancelled(msg.sender);\\n    }\\n}\\n\",\"keccak256\":\"0x3d3bb1df2d228d2738f7ce7b9f634653edda3f638a335b92565e9b42e941b1bb\",\"license\":\"MIT\"},\"contracts/upgradeInitializers/DiamondInit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.6;\\n\\n/******************************************************************************\\\\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\n* EIP-2535 Diamonds: https://eips.ethereum.org/EIPS/eip-2535\\n*\\n* Implementation of a diamond.\\n/******************************************************************************/\\n\\nimport \\\"@openzeppelin/contracts/interfaces/IERC165.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\nimport \\\"@openzeppelin/contracts/interfaces/IERC721Metadata.sol\\\";\\n\\nimport { LibDiamond } from \\\"../libraries/LibDiamond.sol\\\";\\nimport { IDiamondLoupe } from \\\"../interfaces/IDiamondLoupe.sol\\\";\\nimport { IDiamondCut } from \\\"../interfaces/IDiamondCut.sol\\\";\\nimport { IERC173 } from \\\"../interfaces/IERC173.sol\\\";\\n\\n// It is expected that this contract is customized if you want to deploy your diamond\\n// with data from a deployment script. Use the init function to initialize state variables\\n// of your diamond. Add parameters to the init funciton if you need to.\\n\\ncontract DiamondInit {    \\n\\n    // You can add parameters to this function in order to pass in \\n    // data to set your own state variables\\n    function init() external {        \\n\\n    }\\n\\n}\\n\",\"keccak256\":\"0x61c5408d03a8b99ec18b53efcde99f77b6488e76b625aa6c77fbf8539beed20b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/libraries/LibDiamond.sol":{"LibDiamond":{"abi":[{"anonymous":false,"inputs":[{"components":[{"internalType":"address","name":"facetAddress","type":"address"},{"internalType":"enum IDiamondCut.FacetCutAction","name":"action","type":"uint8"},{"internalType":"bytes4[]","name":"functionSelectors","type":"bytes4[]"}],"indexed":false,"internalType":"struct IDiamondCut.FacetCut[]","name":"_diamondCut","type":"tuple[]"},{"indexed":false,"internalType":"address","name":"_init","type":"address"},{"indexed":false,"internalType":"bytes","name":"_calldata","type":"bytes"}],"name":"DiamondCut","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"canceller","type":"address"}],"name":"DiamondCutCancelled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"proposer","type":"address"},{"indexed":true,"internalType":"uint256","name":"proposalTime","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"executionTime","type":"uint256"}],"name":"DiamondCutProposed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e8d1bae0e2b6a21a0f098ef513c65d56ab41d7a20c74a724890a91150c97686364736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 0xD1 0xBA 0xE0 0xE2 0xB6 LOG2 BYTE 0xF MULMOD DUP15 CREATE2 SGT 0xC6 0x5D JUMP 0xAB COINBASE 0xD7 LOG2 0xC PUSH21 0xA724890A91150C97686364736F6C63430008140033 ","sourceMap":"672:14934:25:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;672:14934:25;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e8d1bae0e2b6a21a0f098ef513c65d56ab41d7a20c74a724890a91150c97686364736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 0xD1 0xBA 0xE0 0xE2 0xB6 LOG2 BYTE 0xF MULMOD DUP15 CREATE2 SGT 0xC6 0x5D JUMP 0xAB COINBASE 0xD7 LOG2 0xC PUSH21 0xA724890A91150C97686364736F6C63430008140033 ","sourceMap":"672:14934:25:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"addFacet(struct LibDiamond.DiamondStorage storage pointer,address)":"infinite","addFunction(struct LibDiamond.DiamondStorage storage pointer,bytes4,uint96,address)":"infinite","addFunctions(address,bytes4[] memory)":"infinite","cancelDiamondCut()":"infinite","contractOwner()":"infinite","diamondCut(struct IDiamondCut.FacetCut memory[] memory,address,bytes memory)":"infinite","diamondStorage()":"infinite","enforceHasContractCode(address,string memory)":"infinite","enforceIsContractOwner()":"infinite","executeDiamondCut()":"infinite","initializeDiamondCut(address,bytes memory)":"infinite","initializeUpgradeTimelock(uint256)":"infinite","proposeDiamondCut(struct IDiamondCut.FacetCut memory[] memory,address,bytes memory)":"infinite","removeFunction(struct LibDiamond.DiamondStorage storage pointer,address,bytes4)":"infinite","removeFunctions(address,bytes4[] memory)":"infinite","replaceFunctions(address,bytes4[] memory)":"infinite","setContractOwner(address)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"facetAddress\",\"type\":\"address\"},{\"internalType\":\"enum IDiamondCut.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"functionSelectors\",\"type\":\"bytes4[]\"}],\"indexed\":false,\"internalType\":\"struct IDiamondCut.FacetCut[]\",\"name\":\"_diamondCut\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_init\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_calldata\",\"type\":\"bytes\"}],\"name\":\"DiamondCut\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"canceller\",\"type\":\"address\"}],\"name\":\"DiamondCutCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"executionTime\",\"type\":\"uint256\"}],\"name\":\"DiamondCutProposed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/LibDiamond.sol\":\"LibDiamond\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IDiamondCut.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.6;\\r\\n\\r\\n/******************************************************************************\\\\\\r\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\r\\n* EIP-2535 Diamonds: https://eips.ethereum.org/EIPS/eip-2535\\r\\n/******************************************************************************/\\r\\n\\r\\ninterface IDiamondCut {\\r\\n    enum FacetCutAction {Add, Replace, Remove}\\r\\n    // Add=0, Replace=1, Remove=2\\r\\n\\r\\n    struct FacetCut {\\r\\n        address facetAddress;\\r\\n        FacetCutAction action;\\r\\n        bytes4[] functionSelectors;\\r\\n    }\\r\\n\\r\\n    /// @notice Add/replace/remove any number of functions and optionally execute\\r\\n    ///         a function with delegatecall\\r\\n    /// @param _diamondCut Contains the facet addresses and function selectors\\r\\n    /// @param _init The address of the contract or facet to execute _calldata\\r\\n    /// @param _calldata A function call, including function selector and arguments\\r\\n    ///                  _calldata is executed with delegatecall on _init\\r\\n    function diamondCut(\\r\\n        FacetCut[] calldata _diamondCut,\\r\\n        address _init,\\r\\n        bytes calldata _calldata\\r\\n    ) external;\\r\\n    \\r\\n    /// @notice Propose an upgrade to be executed after the timelock period\\r\\n    /// @param _diamondCut Contains the facet addresses and function selectors\\r\\n    /// @param _init The address of the contract or facet to execute _calldata\\r\\n    /// @param _calldata A function call, including function selector and arguments\\r\\n    function proposeDiamondCut(\\r\\n        FacetCut[] calldata _diamondCut,\\r\\n        address _init,\\r\\n        bytes calldata _calldata\\r\\n    ) external;\\r\\n    \\r\\n    /// @notice Execute a previously proposed upgrade after the timelock period\\r\\n    function executeDiamondCut() external;\\r\\n    \\r\\n    /// @notice Cancel a proposed upgrade\\r\\n    function cancelDiamondCut() external;\\r\\n\\r\\n    event DiamondCut(FacetCut[] _diamondCut, address _init, bytes _calldata);\\r\\n    event DiamondCutProposed(address indexed proposer, uint256 indexed proposalTime, uint256 executionTime);\\r\\n    event DiamondCutCancelled(address indexed canceller);\\r\\n}\\r\\n\",\"keccak256\":\"0x340a039f0dd63cf19bc669551feec28879457d8b741711ef3513168d620f11bc\",\"license\":\"MIT\"},\"contracts/interfaces/IERC173.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.6;\\n\\n/// @title ERC-173 Contract Ownership Standard\\n///  Note: the ERC-165 identifier for this interface is 0x7f5828d0\\n/* is ERC165 */\\ninterface IERC173 {\\n    /// @dev This emits when ownership of a contract changes.\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /// @notice Get the address of the owner\\n    /// @return owner_ The address of the owner.\\n    function owner() external view returns (address owner_);\\n\\n    /// @notice Set the address of the new owner of the contract\\n    /// @dev Set _newOwner to address(0) to renounce any ownership.\\n    /// @param _newOwner The address of the new owner of the contract\\n    function transferOwnership(address _newOwner) external;\\n}\\n\",\"keccak256\":\"0x84fe28f479bf96f1819514dd8493ae15955eda0dbabcbb5f24c3c935075a31d4\",\"license\":\"MIT\"},\"contracts/libraries/LibDiamond.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.6;\\n\\n/******************************************************************************\\\\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\n* EIP-2535 Diamonds: https://eips.ethereum.org/EIPS/eip-2535\\n/******************************************************************************/\\nimport { IDiamondCut } from \\\"../interfaces/IDiamondCut.sol\\\";\\nimport \\\"../interfaces/IERC173.sol\\\"; // for IERC173 interface\\nimport \\\"../interfaces/IDiamondCut.sol\\\";\\n\\n// Remember to add the loupe functions from DiamondLoupeFacet to the diamond.\\n// The loupe functions are required by the EIP2535 Diamonds standard\\n\\nlibrary LibDiamond {\\n    bytes32 constant DIAMOND_STORAGE_POSITION = keccak256(\\\"diamond.standard.diamond.storage\\\");\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n    event DiamondCut(IDiamondCut.FacetCut[] _diamondCut, address _init, bytes _calldata);\\n    event DiamondCutProposed(address indexed proposer, uint256 indexed proposalTime, uint256 executionTime);\\n    event DiamondCutCancelled(address indexed canceller);\\n\\n    struct FacetAddressAndPosition {\\n        address facetAddress;\\n        uint96 functionSelectorPosition; // position in facetFunctionSelectors.functionSelectors array\\n    }\\n\\n    struct FacetFunctionSelectors {\\n        bytes4[] functionSelectors;\\n        uint256 facetAddressPosition; // position of facetAddress in facetAddresses array\\n    }\\n\\n    // Upgrade proposal struct for timelock functionality\\n    struct UpgradeProposal {\\n        IDiamondCut.FacetCut[] diamondCut;\\n        address initAddress;\\n        bytes initCalldata;\\n        uint256 proposalTime;\\n        bool exists;\\n    }\\n\\n    struct DiamondStorage {\\n        // maps function selector to the facet address and\\n        // the position of the selector in the facetFunctionSelectors.selectors array\\n        mapping(bytes4 => FacetAddressAndPosition) selectorToFacetAndPosition;\\n        // maps facet addresses to function selectors\\n        mapping(address => FacetFunctionSelectors) facetFunctionSelectors;\\n        // facet addresses\\n        address[] facetAddresses;\\n        // Used to query if a contract implements an interface.\\n        // Used to implement ERC-165.\\n        mapping(bytes4 => bool) supportedInterfaces;\\n        // owner of the contract\\n        address contractOwner;\\n        // Timelock for upgrades (in seconds)\\n        uint256 upgradeTimelock;\\n        // Storage for the current upgrade proposal\\n        UpgradeProposal upgradeProposal;\\n    }\\n\\n    function diamondStorage() internal pure returns (DiamondStorage storage ds) {\\n        bytes32 position = DIAMOND_STORAGE_POSITION;\\n        assembly {\\n            ds.slot := position\\n        }\\n    }\\n\\n    function setContractOwner(address _newOwner) internal {\\n        DiamondStorage storage ds = diamondStorage();\\n        address previousOwner = ds.contractOwner;\\n        ds.contractOwner = _newOwner;\\n        emit OwnershipTransferred(previousOwner, _newOwner);\\n    }\\n\\n    function contractOwner() internal view returns (address contractOwner_) {\\n        contractOwner_ = diamondStorage().contractOwner;\\n    }\\n\\n    function enforceIsContractOwner() internal view {\\n        require(msg.sender == diamondStorage().contractOwner, \\\"LibDiamond: Must be contract owner\\\");\\n    }\\n\\n    // Timelock constants\\n    uint256 constant DEFAULT_UPGRADE_TIMELOCK = 2 days;\\n\\n    // Internal function version of diamondCut\\n    function diamondCut(\\n        IDiamondCut.FacetCut[] memory _diamondCut,\\n        address _init,\\n        bytes memory _calldata\\n    ) internal {\\n        for (uint256 facetIndex; facetIndex < _diamondCut.length; facetIndex++) {\\n            IDiamondCut.FacetCutAction action = _diamondCut[facetIndex].action;\\n            if (action == IDiamondCut.FacetCutAction.Add) {\\n                addFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\\n            } else if (action == IDiamondCut.FacetCutAction.Replace) {\\n                replaceFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\\n            } else if (action == IDiamondCut.FacetCutAction.Remove) {\\n                removeFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\\n            } else {\\n                revert(\\\"LibDiamondCut: Incorrect FacetCutAction\\\");\\n            }\\n        }\\n        emit DiamondCut(_diamondCut, _init, _calldata);\\n        initializeDiamondCut(_init, _calldata);\\n    }\\n\\n    function addFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\\n        require(_functionSelectors.length > 0, \\\"LibDiamondCut: No selectors in facet to cut\\\");\\n        DiamondStorage storage ds = diamondStorage();        \\n        require(_facetAddress != address(0), \\\"LibDiamondCut: Add facet can't be address(0)\\\");\\n        uint96 selectorPosition = uint96(ds.facetFunctionSelectors[_facetAddress].functionSelectors.length);\\n        // add new facet address if it does not exist\\n        if (selectorPosition == 0) {\\n            addFacet(ds, _facetAddress);            \\n        }\\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\\n            bytes4 selector = _functionSelectors[selectorIndex];\\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\\n            require(oldFacetAddress == address(0), \\\"LibDiamondCut: Can't add function that already exists\\\");\\n            addFunction(ds, selector, selectorPosition, _facetAddress);\\n            selectorPosition++;\\n        }\\n    }\\n\\n    function replaceFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\\n        require(_functionSelectors.length > 0, \\\"LibDiamondCut: No selectors in facet to cut\\\");\\n        DiamondStorage storage ds = diamondStorage();\\n        require(_facetAddress != address(0), \\\"LibDiamondCut: Add facet can't be address(0)\\\");\\n        uint96 selectorPosition = uint96(ds.facetFunctionSelectors[_facetAddress].functionSelectors.length);\\n        // add new facet address if it does not exist\\n        if (selectorPosition == 0) {\\n            addFacet(ds, _facetAddress);\\n        }\\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\\n            bytes4 selector = _functionSelectors[selectorIndex];\\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\\n            require(oldFacetAddress != _facetAddress, \\\"LibDiamondCut: Can't replace function with same function\\\");\\n            removeFunction(ds, oldFacetAddress, selector);\\n            addFunction(ds, selector, selectorPosition, _facetAddress);\\n            selectorPosition++;\\n        }\\n    }\\n\\n    function removeFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\\n        require(_functionSelectors.length > 0, \\\"LibDiamondCut: No selectors in facet to cut\\\");\\n        DiamondStorage storage ds = diamondStorage();\\n        // if function does not exist then do nothing and return\\n        require(_facetAddress == address(0), \\\"LibDiamondCut: Remove facet address must be address(0)\\\");\\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\\n            bytes4 selector = _functionSelectors[selectorIndex];\\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\\n            removeFunction(ds, oldFacetAddress, selector);\\n        }\\n    }\\n\\n    function addFacet(DiamondStorage storage ds, address _facetAddress) internal {\\n        enforceHasContractCode(_facetAddress, \\\"LibDiamondCut: New facet has no code\\\");\\n        ds.facetFunctionSelectors[_facetAddress].facetAddressPosition = ds.facetAddresses.length;\\n        ds.facetAddresses.push(_facetAddress);\\n    }    \\n\\n\\n    function addFunction(DiamondStorage storage ds, bytes4 _selector, uint96 _selectorPosition, address _facetAddress) internal {\\n        ds.selectorToFacetAndPosition[_selector].functionSelectorPosition = _selectorPosition;\\n        ds.facetFunctionSelectors[_facetAddress].functionSelectors.push(_selector);\\n        ds.selectorToFacetAndPosition[_selector].facetAddress = _facetAddress;\\n    }\\n\\n    function removeFunction(DiamondStorage storage ds, address _facetAddress, bytes4 _selector) internal {        \\n        require(_facetAddress != address(0), \\\"LibDiamondCut: Can't remove function that doesn't exist\\\");\\n        // an immutable function is a function defined directly in a diamond\\n        require(_facetAddress != address(this), \\\"LibDiamondCut: Can't remove immutable function\\\");\\n        // replace selector with last selector, then delete last selector\\n        uint256 selectorPosition = ds.selectorToFacetAndPosition[_selector].functionSelectorPosition;\\n        uint256 lastSelectorPosition = ds.facetFunctionSelectors[_facetAddress].functionSelectors.length - 1;\\n        // if not the same then replace _selector with lastSelector\\n        if (selectorPosition != lastSelectorPosition) {\\n            bytes4 lastSelector = ds.facetFunctionSelectors[_facetAddress].functionSelectors[lastSelectorPosition];\\n            ds.facetFunctionSelectors[_facetAddress].functionSelectors[selectorPosition] = lastSelector;\\n            ds.selectorToFacetAndPosition[lastSelector].functionSelectorPosition = uint96(selectorPosition);\\n        }\\n        // delete the last selector\\n        ds.facetFunctionSelectors[_facetAddress].functionSelectors.pop();\\n        delete ds.selectorToFacetAndPosition[_selector];\\n\\n        // if no more selectors for facet address then delete the facet address\\n        if (lastSelectorPosition == 0) {\\n            // replace facet address with last facet address and delete last facet address\\n            uint256 lastFacetAddressPosition = ds.facetAddresses.length - 1;\\n            uint256 facetAddressPosition = ds.facetFunctionSelectors[_facetAddress].facetAddressPosition;\\n            if (facetAddressPosition != lastFacetAddressPosition) {\\n                address lastFacetAddress = ds.facetAddresses[lastFacetAddressPosition];\\n                ds.facetAddresses[facetAddressPosition] = lastFacetAddress;\\n                ds.facetFunctionSelectors[lastFacetAddress].facetAddressPosition = facetAddressPosition;\\n            }\\n            ds.facetAddresses.pop();\\n            delete ds.facetFunctionSelectors[_facetAddress].facetAddressPosition;\\n        }\\n    }\\n\\n    function initializeDiamondCut(address _init, bytes memory _calldata) internal {\\n        if (_init == address(0)) {\\n            require(_calldata.length == 0, \\\"LibDiamondCut: _init is address(0) but_calldata is not empty\\\");\\n        } else {\\n            require(_calldata.length > 0, \\\"LibDiamondCut: _calldata is empty but _init is not address(0)\\\");\\n            if (_init != address(this)) {\\n                enforceHasContractCode(_init, \\\"LibDiamondCut: _init address has no code\\\");\\n            }\\n            (bool success, bytes memory error) = _init.delegatecall(_calldata);\\n            if (!success) {\\n                if (error.length > 0) {\\n                    // bubble up the error\\n                    revert(string(error));\\n                } else {\\n                    revert(\\\"LibDiamondCut: _init function reverted\\\");\\n                }\\n            }\\n        }\\n    }\\n\\n    function enforceHasContractCode(address _contract, string memory _errorMessage) internal view {\\n        uint256 contractSize;\\n        assembly {\\n            contractSize := extcodesize(_contract)\\n        }\\n        require(contractSize > 0, _errorMessage);\\n    }\\n\\n    // Initialize timelock settings for upgrade proposals\\n    function initializeUpgradeTimelock(uint256 _timelock) internal {\\n        DiamondStorage storage ds = diamondStorage();\\n        require(ds.upgradeTimelock == 0, \\\"LibDiamond: Timelock already initialized\\\");\\n        ds.upgradeTimelock = _timelock > 0 ? _timelock : DEFAULT_UPGRADE_TIMELOCK;\\n    }\\n\\n    // Propose a diamond cut to be executed after the timelock\\n    function proposeDiamondCut(\\n        IDiamondCut.FacetCut[] memory _diamondCut,\\n        address _init,\\n        bytes memory _calldata\\n    ) internal {\\n        DiamondStorage storage ds = diamondStorage();\\n        require(!ds.upgradeProposal.exists, \\\"LibDiamond: Upgrade already proposed\\\");\\n        require(ds.upgradeTimelock > 0, \\\"LibDiamond: Timelock not initialized\\\");\\n        \\n        // Create a deep copy of the diamond cut to store in the proposal\\n        IDiamondCut.FacetCut[] memory diamondCutCopy = new IDiamondCut.FacetCut[](_diamondCut.length);\\n        for (uint256 i = 0; i < _diamondCut.length; i++) {\\n            diamondCutCopy[i] = _diamondCut[i];\\n            \\n            // Deep copy the function selectors array\\n            bytes4[] memory selectors = new bytes4[](_diamondCut[i].functionSelectors.length);\\n            for (uint256 j = 0; j < _diamondCut[i].functionSelectors.length; j++) {\\n                selectors[j] = _diamondCut[i].functionSelectors[j];\\n            }\\n            diamondCutCopy[i].functionSelectors = selectors;\\n        }\\n        \\n        // Store the proposal\\n        // Create empty array in storage first\\n        delete ds.upgradeProposal.diamondCut;\\n        \\n        // Manually copy each element and its nested arrays to storage\\n        for (uint256 i = 0; i < _diamondCut.length; i++) {\\n            // Create a new struct in storage by pushing an empty element first\\n            ds.upgradeProposal.diamondCut.push();\\n            \\n            // Now set the values for this element's fields\\n            ds.upgradeProposal.diamondCut[i].facetAddress = _diamondCut[i].facetAddress;\\n            ds.upgradeProposal.diamondCut[i].action = _diamondCut[i].action;\\n            \\n            // For the selectors array, we need to handle it separately\\n            // Clear any existing selectors to ensure clean state\\n            delete ds.upgradeProposal.diamondCut[i].functionSelectors;\\n            \\n            // Copy each selector individually\\n            for (uint256 j = 0; j < _diamondCut[i].functionSelectors.length; j++) {\\n                ds.upgradeProposal.diamondCut[i].functionSelectors.push(_diamondCut[i].functionSelectors[j]);\\n            }\\n        }\\n        ds.upgradeProposal.initAddress = _init;\\n        ds.upgradeProposal.initCalldata = _calldata;\\n        ds.upgradeProposal.proposalTime = block.timestamp;\\n        ds.upgradeProposal.exists = true;\\n        \\n        emit DiamondCutProposed(msg.sender, block.timestamp, block.timestamp + ds.upgradeTimelock);\\n    }\\n    \\n    // Execute a proposed diamond cut after the timelock period\\n    function executeDiamondCut() internal {\\n        DiamondStorage storage ds = diamondStorage();\\n        require(ds.upgradeProposal.exists, \\\"LibDiamond: No upgrade proposal exists\\\");\\n        require(\\n            block.timestamp >= ds.upgradeProposal.proposalTime + ds.upgradeTimelock,\\n            \\\"LibDiamond: Timelock period not elapsed\\\"\\n        );\\n        \\n        // Execute the diamond cut\\n        diamondCut(\\n            ds.upgradeProposal.diamondCut,\\n            ds.upgradeProposal.initAddress,\\n            ds.upgradeProposal.initCalldata\\n        );\\n        \\n        // Reset the proposal\\n        delete ds.upgradeProposal;\\n    }\\n    \\n    // Cancel a proposed diamond cut\\n    function cancelDiamondCut() internal {\\n        DiamondStorage storage ds = diamondStorage();\\n        require(ds.upgradeProposal.exists, \\\"LibDiamond: No upgrade proposal exists\\\");\\n        \\n        // Reset the proposal\\n        delete ds.upgradeProposal;\\n        \\n        emit DiamondCutCancelled(msg.sender);\\n    }\\n}\\n\",\"keccak256\":\"0x3d3bb1df2d228d2738f7ce7b9f634653edda3f638a335b92565e9b42e941b1bb\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/upgradeInitializers/DiamondInit.sol":{"DiamondInit":{"abi":[{"inputs":[],"name":"init","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080604052348015600f57600080fd5b50606580601d6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063e1c7392a14602d575b600080fd5b00fea2646970667358221220a975676969b303d0a5dece3030ffb5833e4e4050745c5c934f18f910b4a3a7a964736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x65 DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xE1C7392A EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST STOP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA9 PUSH22 0x676969B303D0A5DECE3030FFB5833E4E4050745C5C93 0x4F XOR 0xF9 LT 0xB4 LOG3 0xA7 0xA9 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1065:188:26:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@init_3904":{"entryPoint":null,"id":3904,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052348015600f57600080fd5b506004361060285760003560e01c8063e1c7392a14602d575b600080fd5b00fea2646970667358221220a975676969b303d0a5dece3030ffb5833e4e4050745c5c934f18f910b4a3a7a964736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xE1C7392A EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST STOP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA9 PUSH22 0x676969B303D0A5DECE3030FFB5833E4E4050745C5C93 0x4F XOR 0xF9 LT 0xB4 LOG3 0xA7 0xA9 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1065:188:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1209:41;"},"gasEstimates":{"creation":{"codeDepositCost":"20200","executionCost":"75","totalCost":"20275"},"external":{"init()":"98"}},"methodIdentifiers":{"init()":"e1c7392a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/upgradeInitializers/DiamondInit.sol\":\"DiamondInit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\\n\\npragma solidity >=0.4.16;\\n\\nimport {IERC165} from \\\"../utils/introspection/IERC165.sol\\\";\\n\",\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC721Metadata.sol)\\n\\npragma solidity >=0.6.2;\\n\\nimport {IERC721Metadata} from \\\"../token/ERC721/extensions/IERC721Metadata.sol\\\";\\n\",\"keccak256\":\"0x0137cd417d5c172629ab893df685f0143811e9b409c087a7a759a70021ccc679\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity >=0.6.2;\\n\\nimport {IERC165} from \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC-721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\\n     *   {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity >=0.6.2;\\n\\nimport {IERC721} from \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity >=0.4.16;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\"},\"contracts/interfaces/IDiamondCut.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.6;\\r\\n\\r\\n/******************************************************************************\\\\\\r\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\r\\n* EIP-2535 Diamonds: https://eips.ethereum.org/EIPS/eip-2535\\r\\n/******************************************************************************/\\r\\n\\r\\ninterface IDiamondCut {\\r\\n    enum FacetCutAction {Add, Replace, Remove}\\r\\n    // Add=0, Replace=1, Remove=2\\r\\n\\r\\n    struct FacetCut {\\r\\n        address facetAddress;\\r\\n        FacetCutAction action;\\r\\n        bytes4[] functionSelectors;\\r\\n    }\\r\\n\\r\\n    /// @notice Add/replace/remove any number of functions and optionally execute\\r\\n    ///         a function with delegatecall\\r\\n    /// @param _diamondCut Contains the facet addresses and function selectors\\r\\n    /// @param _init The address of the contract or facet to execute _calldata\\r\\n    /// @param _calldata A function call, including function selector and arguments\\r\\n    ///                  _calldata is executed with delegatecall on _init\\r\\n    function diamondCut(\\r\\n        FacetCut[] calldata _diamondCut,\\r\\n        address _init,\\r\\n        bytes calldata _calldata\\r\\n    ) external;\\r\\n    \\r\\n    /// @notice Propose an upgrade to be executed after the timelock period\\r\\n    /// @param _diamondCut Contains the facet addresses and function selectors\\r\\n    /// @param _init The address of the contract or facet to execute _calldata\\r\\n    /// @param _calldata A function call, including function selector and arguments\\r\\n    function proposeDiamondCut(\\r\\n        FacetCut[] calldata _diamondCut,\\r\\n        address _init,\\r\\n        bytes calldata _calldata\\r\\n    ) external;\\r\\n    \\r\\n    /// @notice Execute a previously proposed upgrade after the timelock period\\r\\n    function executeDiamondCut() external;\\r\\n    \\r\\n    /// @notice Cancel a proposed upgrade\\r\\n    function cancelDiamondCut() external;\\r\\n\\r\\n    event DiamondCut(FacetCut[] _diamondCut, address _init, bytes _calldata);\\r\\n    event DiamondCutProposed(address indexed proposer, uint256 indexed proposalTime, uint256 executionTime);\\r\\n    event DiamondCutCancelled(address indexed canceller);\\r\\n}\\r\\n\",\"keccak256\":\"0x340a039f0dd63cf19bc669551feec28879457d8b741711ef3513168d620f11bc\",\"license\":\"MIT\"},\"contracts/interfaces/IDiamondLoupe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.6;\\r\\n\\r\\n/******************************************************************************\\\\\\r\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\r\\n* EIP-2535 Diamonds: https://eips.ethereum.org/EIPS/eip-2535\\r\\n/******************************************************************************/\\r\\n\\r\\n// A loupe is a small magnifying glass used to look at diamonds.\\r\\n// These functions look at diamonds\\r\\ninterface IDiamondLoupe {\\r\\n    /// These functions are expected to be called frequently\\r\\n    /// by tools.\\r\\n\\r\\n    struct Facet {\\r\\n        address facetAddress;\\r\\n        bytes4[] functionSelectors;\\r\\n    }\\r\\n\\r\\n    /// @notice Gets all facet addresses and their four byte function selectors.\\r\\n    /// @return facets_ Facet\\r\\n    function facets() external view returns (Facet[] memory facets_);\\r\\n\\r\\n    /// @notice Gets all the function selectors supported by a specific facet.\\r\\n    /// @param _facet The facet address.\\r\\n    /// @return facetFunctionSelectors_\\r\\n    function facetFunctionSelectors(address _facet) external view returns (bytes4[] memory facetFunctionSelectors_);\\r\\n\\r\\n    /// @notice Get all the facet addresses used by a diamond.\\r\\n    /// @return facetAddresses_\\r\\n    function facetAddresses() external view returns (address[] memory facetAddresses_);\\r\\n\\r\\n    /// @notice Gets the facet that supports the given selector.\\r\\n    /// @dev If facet is not found return address(0).\\r\\n    /// @param _functionSelector The function selector.\\r\\n    /// @return facetAddress_ The facet address.\\r\\n    function facetAddress(bytes4 _functionSelector) external view returns (address facetAddress_);\\r\\n}\\r\\n\",\"keccak256\":\"0x817840c97d3fb575971952db3d5096b1f843bffe3176d675cacb18e656f9d2a3\",\"license\":\"MIT\"},\"contracts/interfaces/IERC173.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.6;\\n\\n/// @title ERC-173 Contract Ownership Standard\\n///  Note: the ERC-165 identifier for this interface is 0x7f5828d0\\n/* is ERC165 */\\ninterface IERC173 {\\n    /// @dev This emits when ownership of a contract changes.\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /// @notice Get the address of the owner\\n    /// @return owner_ The address of the owner.\\n    function owner() external view returns (address owner_);\\n\\n    /// @notice Set the address of the new owner of the contract\\n    /// @dev Set _newOwner to address(0) to renounce any ownership.\\n    /// @param _newOwner The address of the new owner of the contract\\n    function transferOwnership(address _newOwner) external;\\n}\\n\",\"keccak256\":\"0x84fe28f479bf96f1819514dd8493ae15955eda0dbabcbb5f24c3c935075a31d4\",\"license\":\"MIT\"},\"contracts/libraries/LibDiamond.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.6;\\n\\n/******************************************************************************\\\\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\n* EIP-2535 Diamonds: https://eips.ethereum.org/EIPS/eip-2535\\n/******************************************************************************/\\nimport { IDiamondCut } from \\\"../interfaces/IDiamondCut.sol\\\";\\nimport \\\"../interfaces/IERC173.sol\\\"; // for IERC173 interface\\nimport \\\"../interfaces/IDiamondCut.sol\\\";\\n\\n// Remember to add the loupe functions from DiamondLoupeFacet to the diamond.\\n// The loupe functions are required by the EIP2535 Diamonds standard\\n\\nlibrary LibDiamond {\\n    bytes32 constant DIAMOND_STORAGE_POSITION = keccak256(\\\"diamond.standard.diamond.storage\\\");\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n    event DiamondCut(IDiamondCut.FacetCut[] _diamondCut, address _init, bytes _calldata);\\n    event DiamondCutProposed(address indexed proposer, uint256 indexed proposalTime, uint256 executionTime);\\n    event DiamondCutCancelled(address indexed canceller);\\n\\n    struct FacetAddressAndPosition {\\n        address facetAddress;\\n        uint96 functionSelectorPosition; // position in facetFunctionSelectors.functionSelectors array\\n    }\\n\\n    struct FacetFunctionSelectors {\\n        bytes4[] functionSelectors;\\n        uint256 facetAddressPosition; // position of facetAddress in facetAddresses array\\n    }\\n\\n    // Upgrade proposal struct for timelock functionality\\n    struct UpgradeProposal {\\n        IDiamondCut.FacetCut[] diamondCut;\\n        address initAddress;\\n        bytes initCalldata;\\n        uint256 proposalTime;\\n        bool exists;\\n    }\\n\\n    struct DiamondStorage {\\n        // maps function selector to the facet address and\\n        // the position of the selector in the facetFunctionSelectors.selectors array\\n        mapping(bytes4 => FacetAddressAndPosition) selectorToFacetAndPosition;\\n        // maps facet addresses to function selectors\\n        mapping(address => FacetFunctionSelectors) facetFunctionSelectors;\\n        // facet addresses\\n        address[] facetAddresses;\\n        // Used to query if a contract implements an interface.\\n        // Used to implement ERC-165.\\n        mapping(bytes4 => bool) supportedInterfaces;\\n        // owner of the contract\\n        address contractOwner;\\n        // Timelock for upgrades (in seconds)\\n        uint256 upgradeTimelock;\\n        // Storage for the current upgrade proposal\\n        UpgradeProposal upgradeProposal;\\n    }\\n\\n    function diamondStorage() internal pure returns (DiamondStorage storage ds) {\\n        bytes32 position = DIAMOND_STORAGE_POSITION;\\n        assembly {\\n            ds.slot := position\\n        }\\n    }\\n\\n    function setContractOwner(address _newOwner) internal {\\n        DiamondStorage storage ds = diamondStorage();\\n        address previousOwner = ds.contractOwner;\\n        ds.contractOwner = _newOwner;\\n        emit OwnershipTransferred(previousOwner, _newOwner);\\n    }\\n\\n    function contractOwner() internal view returns (address contractOwner_) {\\n        contractOwner_ = diamondStorage().contractOwner;\\n    }\\n\\n    function enforceIsContractOwner() internal view {\\n        require(msg.sender == diamondStorage().contractOwner, \\\"LibDiamond: Must be contract owner\\\");\\n    }\\n\\n    // Timelock constants\\n    uint256 constant DEFAULT_UPGRADE_TIMELOCK = 2 days;\\n\\n    // Internal function version of diamondCut\\n    function diamondCut(\\n        IDiamondCut.FacetCut[] memory _diamondCut,\\n        address _init,\\n        bytes memory _calldata\\n    ) internal {\\n        for (uint256 facetIndex; facetIndex < _diamondCut.length; facetIndex++) {\\n            IDiamondCut.FacetCutAction action = _diamondCut[facetIndex].action;\\n            if (action == IDiamondCut.FacetCutAction.Add) {\\n                addFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\\n            } else if (action == IDiamondCut.FacetCutAction.Replace) {\\n                replaceFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\\n            } else if (action == IDiamondCut.FacetCutAction.Remove) {\\n                removeFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\\n            } else {\\n                revert(\\\"LibDiamondCut: Incorrect FacetCutAction\\\");\\n            }\\n        }\\n        emit DiamondCut(_diamondCut, _init, _calldata);\\n        initializeDiamondCut(_init, _calldata);\\n    }\\n\\n    function addFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\\n        require(_functionSelectors.length > 0, \\\"LibDiamondCut: No selectors in facet to cut\\\");\\n        DiamondStorage storage ds = diamondStorage();        \\n        require(_facetAddress != address(0), \\\"LibDiamondCut: Add facet can't be address(0)\\\");\\n        uint96 selectorPosition = uint96(ds.facetFunctionSelectors[_facetAddress].functionSelectors.length);\\n        // add new facet address if it does not exist\\n        if (selectorPosition == 0) {\\n            addFacet(ds, _facetAddress);            \\n        }\\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\\n            bytes4 selector = _functionSelectors[selectorIndex];\\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\\n            require(oldFacetAddress == address(0), \\\"LibDiamondCut: Can't add function that already exists\\\");\\n            addFunction(ds, selector, selectorPosition, _facetAddress);\\n            selectorPosition++;\\n        }\\n    }\\n\\n    function replaceFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\\n        require(_functionSelectors.length > 0, \\\"LibDiamondCut: No selectors in facet to cut\\\");\\n        DiamondStorage storage ds = diamondStorage();\\n        require(_facetAddress != address(0), \\\"LibDiamondCut: Add facet can't be address(0)\\\");\\n        uint96 selectorPosition = uint96(ds.facetFunctionSelectors[_facetAddress].functionSelectors.length);\\n        // add new facet address if it does not exist\\n        if (selectorPosition == 0) {\\n            addFacet(ds, _facetAddress);\\n        }\\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\\n            bytes4 selector = _functionSelectors[selectorIndex];\\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\\n            require(oldFacetAddress != _facetAddress, \\\"LibDiamondCut: Can't replace function with same function\\\");\\n            removeFunction(ds, oldFacetAddress, selector);\\n            addFunction(ds, selector, selectorPosition, _facetAddress);\\n            selectorPosition++;\\n        }\\n    }\\n\\n    function removeFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\\n        require(_functionSelectors.length > 0, \\\"LibDiamondCut: No selectors in facet to cut\\\");\\n        DiamondStorage storage ds = diamondStorage();\\n        // if function does not exist then do nothing and return\\n        require(_facetAddress == address(0), \\\"LibDiamondCut: Remove facet address must be address(0)\\\");\\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\\n            bytes4 selector = _functionSelectors[selectorIndex];\\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\\n            removeFunction(ds, oldFacetAddress, selector);\\n        }\\n    }\\n\\n    function addFacet(DiamondStorage storage ds, address _facetAddress) internal {\\n        enforceHasContractCode(_facetAddress, \\\"LibDiamondCut: New facet has no code\\\");\\n        ds.facetFunctionSelectors[_facetAddress].facetAddressPosition = ds.facetAddresses.length;\\n        ds.facetAddresses.push(_facetAddress);\\n    }    \\n\\n\\n    function addFunction(DiamondStorage storage ds, bytes4 _selector, uint96 _selectorPosition, address _facetAddress) internal {\\n        ds.selectorToFacetAndPosition[_selector].functionSelectorPosition = _selectorPosition;\\n        ds.facetFunctionSelectors[_facetAddress].functionSelectors.push(_selector);\\n        ds.selectorToFacetAndPosition[_selector].facetAddress = _facetAddress;\\n    }\\n\\n    function removeFunction(DiamondStorage storage ds, address _facetAddress, bytes4 _selector) internal {        \\n        require(_facetAddress != address(0), \\\"LibDiamondCut: Can't remove function that doesn't exist\\\");\\n        // an immutable function is a function defined directly in a diamond\\n        require(_facetAddress != address(this), \\\"LibDiamondCut: Can't remove immutable function\\\");\\n        // replace selector with last selector, then delete last selector\\n        uint256 selectorPosition = ds.selectorToFacetAndPosition[_selector].functionSelectorPosition;\\n        uint256 lastSelectorPosition = ds.facetFunctionSelectors[_facetAddress].functionSelectors.length - 1;\\n        // if not the same then replace _selector with lastSelector\\n        if (selectorPosition != lastSelectorPosition) {\\n            bytes4 lastSelector = ds.facetFunctionSelectors[_facetAddress].functionSelectors[lastSelectorPosition];\\n            ds.facetFunctionSelectors[_facetAddress].functionSelectors[selectorPosition] = lastSelector;\\n            ds.selectorToFacetAndPosition[lastSelector].functionSelectorPosition = uint96(selectorPosition);\\n        }\\n        // delete the last selector\\n        ds.facetFunctionSelectors[_facetAddress].functionSelectors.pop();\\n        delete ds.selectorToFacetAndPosition[_selector];\\n\\n        // if no more selectors for facet address then delete the facet address\\n        if (lastSelectorPosition == 0) {\\n            // replace facet address with last facet address and delete last facet address\\n            uint256 lastFacetAddressPosition = ds.facetAddresses.length - 1;\\n            uint256 facetAddressPosition = ds.facetFunctionSelectors[_facetAddress].facetAddressPosition;\\n            if (facetAddressPosition != lastFacetAddressPosition) {\\n                address lastFacetAddress = ds.facetAddresses[lastFacetAddressPosition];\\n                ds.facetAddresses[facetAddressPosition] = lastFacetAddress;\\n                ds.facetFunctionSelectors[lastFacetAddress].facetAddressPosition = facetAddressPosition;\\n            }\\n            ds.facetAddresses.pop();\\n            delete ds.facetFunctionSelectors[_facetAddress].facetAddressPosition;\\n        }\\n    }\\n\\n    function initializeDiamondCut(address _init, bytes memory _calldata) internal {\\n        if (_init == address(0)) {\\n            require(_calldata.length == 0, \\\"LibDiamondCut: _init is address(0) but_calldata is not empty\\\");\\n        } else {\\n            require(_calldata.length > 0, \\\"LibDiamondCut: _calldata is empty but _init is not address(0)\\\");\\n            if (_init != address(this)) {\\n                enforceHasContractCode(_init, \\\"LibDiamondCut: _init address has no code\\\");\\n            }\\n            (bool success, bytes memory error) = _init.delegatecall(_calldata);\\n            if (!success) {\\n                if (error.length > 0) {\\n                    // bubble up the error\\n                    revert(string(error));\\n                } else {\\n                    revert(\\\"LibDiamondCut: _init function reverted\\\");\\n                }\\n            }\\n        }\\n    }\\n\\n    function enforceHasContractCode(address _contract, string memory _errorMessage) internal view {\\n        uint256 contractSize;\\n        assembly {\\n            contractSize := extcodesize(_contract)\\n        }\\n        require(contractSize > 0, _errorMessage);\\n    }\\n\\n    // Initialize timelock settings for upgrade proposals\\n    function initializeUpgradeTimelock(uint256 _timelock) internal {\\n        DiamondStorage storage ds = diamondStorage();\\n        require(ds.upgradeTimelock == 0, \\\"LibDiamond: Timelock already initialized\\\");\\n        ds.upgradeTimelock = _timelock > 0 ? _timelock : DEFAULT_UPGRADE_TIMELOCK;\\n    }\\n\\n    // Propose a diamond cut to be executed after the timelock\\n    function proposeDiamondCut(\\n        IDiamondCut.FacetCut[] memory _diamondCut,\\n        address _init,\\n        bytes memory _calldata\\n    ) internal {\\n        DiamondStorage storage ds = diamondStorage();\\n        require(!ds.upgradeProposal.exists, \\\"LibDiamond: Upgrade already proposed\\\");\\n        require(ds.upgradeTimelock > 0, \\\"LibDiamond: Timelock not initialized\\\");\\n        \\n        // Create a deep copy of the diamond cut to store in the proposal\\n        IDiamondCut.FacetCut[] memory diamondCutCopy = new IDiamondCut.FacetCut[](_diamondCut.length);\\n        for (uint256 i = 0; i < _diamondCut.length; i++) {\\n            diamondCutCopy[i] = _diamondCut[i];\\n            \\n            // Deep copy the function selectors array\\n            bytes4[] memory selectors = new bytes4[](_diamondCut[i].functionSelectors.length);\\n            for (uint256 j = 0; j < _diamondCut[i].functionSelectors.length; j++) {\\n                selectors[j] = _diamondCut[i].functionSelectors[j];\\n            }\\n            diamondCutCopy[i].functionSelectors = selectors;\\n        }\\n        \\n        // Store the proposal\\n        // Create empty array in storage first\\n        delete ds.upgradeProposal.diamondCut;\\n        \\n        // Manually copy each element and its nested arrays to storage\\n        for (uint256 i = 0; i < _diamondCut.length; i++) {\\n            // Create a new struct in storage by pushing an empty element first\\n            ds.upgradeProposal.diamondCut.push();\\n            \\n            // Now set the values for this element's fields\\n            ds.upgradeProposal.diamondCut[i].facetAddress = _diamondCut[i].facetAddress;\\n            ds.upgradeProposal.diamondCut[i].action = _diamondCut[i].action;\\n            \\n            // For the selectors array, we need to handle it separately\\n            // Clear any existing selectors to ensure clean state\\n            delete ds.upgradeProposal.diamondCut[i].functionSelectors;\\n            \\n            // Copy each selector individually\\n            for (uint256 j = 0; j < _diamondCut[i].functionSelectors.length; j++) {\\n                ds.upgradeProposal.diamondCut[i].functionSelectors.push(_diamondCut[i].functionSelectors[j]);\\n            }\\n        }\\n        ds.upgradeProposal.initAddress = _init;\\n        ds.upgradeProposal.initCalldata = _calldata;\\n        ds.upgradeProposal.proposalTime = block.timestamp;\\n        ds.upgradeProposal.exists = true;\\n        \\n        emit DiamondCutProposed(msg.sender, block.timestamp, block.timestamp + ds.upgradeTimelock);\\n    }\\n    \\n    // Execute a proposed diamond cut after the timelock period\\n    function executeDiamondCut() internal {\\n        DiamondStorage storage ds = diamondStorage();\\n        require(ds.upgradeProposal.exists, \\\"LibDiamond: No upgrade proposal exists\\\");\\n        require(\\n            block.timestamp >= ds.upgradeProposal.proposalTime + ds.upgradeTimelock,\\n            \\\"LibDiamond: Timelock period not elapsed\\\"\\n        );\\n        \\n        // Execute the diamond cut\\n        diamondCut(\\n            ds.upgradeProposal.diamondCut,\\n            ds.upgradeProposal.initAddress,\\n            ds.upgradeProposal.initCalldata\\n        );\\n        \\n        // Reset the proposal\\n        delete ds.upgradeProposal;\\n    }\\n    \\n    // Cancel a proposed diamond cut\\n    function cancelDiamondCut() internal {\\n        DiamondStorage storage ds = diamondStorage();\\n        require(ds.upgradeProposal.exists, \\\"LibDiamond: No upgrade proposal exists\\\");\\n        \\n        // Reset the proposal\\n        delete ds.upgradeProposal;\\n        \\n        emit DiamondCutCancelled(msg.sender);\\n    }\\n}\\n\",\"keccak256\":\"0x3d3bb1df2d228d2738f7ce7b9f634653edda3f638a335b92565e9b42e941b1bb\",\"license\":\"MIT\"},\"contracts/upgradeInitializers/DiamondInit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.6;\\n\\n/******************************************************************************\\\\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\n* EIP-2535 Diamonds: https://eips.ethereum.org/EIPS/eip-2535\\n*\\n* Implementation of a diamond.\\n/******************************************************************************/\\n\\nimport \\\"@openzeppelin/contracts/interfaces/IERC165.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\nimport \\\"@openzeppelin/contracts/interfaces/IERC721Metadata.sol\\\";\\n\\nimport { LibDiamond } from \\\"../libraries/LibDiamond.sol\\\";\\nimport { IDiamondLoupe } from \\\"../interfaces/IDiamondLoupe.sol\\\";\\nimport { IDiamondCut } from \\\"../interfaces/IDiamondCut.sol\\\";\\nimport { IERC173 } from \\\"../interfaces/IERC173.sol\\\";\\n\\n// It is expected that this contract is customized if you want to deploy your diamond\\n// with data from a deployment script. Use the init function to initialize state variables\\n// of your diamond. Add parameters to the init funciton if you need to.\\n\\ncontract DiamondInit {    \\n\\n    // You can add parameters to this function in order to pass in \\n    // data to set your own state variables\\n    function init() external {        \\n\\n    }\\n\\n}\\n\",\"keccak256\":\"0x61c5408d03a8b99ec18b53efcde99f77b6488e76b625aa6c77fbf8539beed20b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/upgradeInitializers/DynamicDiamondInit.sol":{"DiamondInit":{"abi":[{"inputs":[{"internalType":"bytes","name":"initParams","type":"bytes"}],"name":"init","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50610130806100206000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80634ddf47d414602d575b600080fd5b603b60383660046053565b50565b005b634e487b7160e01b600052604160045260246000fd5b600060208284031215606457600080fd5b813567ffffffffffffffff80821115607b57600080fd5b818401915084601f830112608e57600080fd5b813581811115609d57609d603d565b604051601f8201601f19908116603f0116810190838211818310171560c25760c2603d565b8160405282815287602084870101111560da57600080fd5b82602086016020830137600092810160200192909252509594505050505056fea2646970667358221220959b10802d31e7ee83496253838ab5653770359cb8527ab667fc025b5b269ef664736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x130 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4DDF47D4 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3B PUSH1 0x38 CALLDATASIZE PUSH1 0x4 PUSH1 0x53 JUMP JUMPDEST POP JUMP JUMPDEST STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0x64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH1 0x7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH1 0x8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH1 0x9D JUMPI PUSH1 0x9D PUSH1 0x3D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH1 0xC2 JUMPI PUSH1 0xC2 PUSH1 0x3D JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH1 0xDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 SWAP12 LT DUP1 0x2D BALANCE 0xE7 0xEE DUP4 0x49 PUSH3 0x53838A 0xB5 PUSH6 0x3770359CB852 PUSH27 0xB667FC025B5B269EF664736F6C6343000814003300000000000000 ","sourceMap":"1252:99:27:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@init_3937":{"entryPoint":null,"id":3937,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_bytes_memory_ptr":{"entryPoint":83,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":61,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1069:28","statements":[{"nodeType":"YulBlock","src":"6:3:28","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:28","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:28","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:28","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:28"},"nodeType":"YulFunctionCall","src":"66:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:28"},"nodeType":"YulFunctionCall","src":"56:31:28"},"nodeType":"YulExpressionStatement","src":"56:31:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:28","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:28"},"nodeType":"YulFunctionCall","src":"96:15:28"},"nodeType":"YulExpressionStatement","src":"96:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:28"},"nodeType":"YulFunctionCall","src":"120:15:28"},"nodeType":"YulExpressionStatement","src":"120:15:28"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:28"},{"body":{"nodeType":"YulBlock","src":"225:842:28","statements":[{"body":{"nodeType":"YulBlock","src":"271:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"280:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"283:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"273:6:28"},"nodeType":"YulFunctionCall","src":"273:12:28"},"nodeType":"YulExpressionStatement","src":"273:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"246:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"255:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"242:3:28"},"nodeType":"YulFunctionCall","src":"242:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"267:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"238:3:28"},"nodeType":"YulFunctionCall","src":"238:32:28"},"nodeType":"YulIf","src":"235:52:28"},{"nodeType":"YulVariableDeclaration","src":"296:37:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"323:9:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"310:12:28"},"nodeType":"YulFunctionCall","src":"310:23:28"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"300:6:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"342:28:28","value":{"kind":"number","nodeType":"YulLiteral","src":"352:18:28","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"346:2:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"397:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"406:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"409:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"399:6:28"},"nodeType":"YulFunctionCall","src":"399:12:28"},"nodeType":"YulExpressionStatement","src":"399:12:28"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"385:6:28"},{"name":"_1","nodeType":"YulIdentifier","src":"393:2:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"382:2:28"},"nodeType":"YulFunctionCall","src":"382:14:28"},"nodeType":"YulIf","src":"379:34:28"},{"nodeType":"YulVariableDeclaration","src":"422:32:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"436:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"447:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"432:3:28"},"nodeType":"YulFunctionCall","src":"432:22:28"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"426:2:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"502:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"511:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"514:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"504:6:28"},"nodeType":"YulFunctionCall","src":"504:12:28"},"nodeType":"YulExpressionStatement","src":"504:12:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"481:2:28"},{"kind":"number","nodeType":"YulLiteral","src":"485:4:28","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"477:3:28"},"nodeType":"YulFunctionCall","src":"477:13:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"492:7:28"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"473:3:28"},"nodeType":"YulFunctionCall","src":"473:27:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"466:6:28"},"nodeType":"YulFunctionCall","src":"466:35:28"},"nodeType":"YulIf","src":"463:55:28"},{"nodeType":"YulVariableDeclaration","src":"527:26:28","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"550:2:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"537:12:28"},"nodeType":"YulFunctionCall","src":"537:16:28"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"531:2:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"576:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"578:16:28"},"nodeType":"YulFunctionCall","src":"578:18:28"},"nodeType":"YulExpressionStatement","src":"578:18:28"}]},"condition":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"568:2:28"},{"name":"_1","nodeType":"YulIdentifier","src":"572:2:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"565:2:28"},"nodeType":"YulFunctionCall","src":"565:10:28"},"nodeType":"YulIf","src":"562:36:28"},{"nodeType":"YulVariableDeclaration","src":"607:17:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"621:2:28","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"617:3:28"},"nodeType":"YulFunctionCall","src":"617:7:28"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"611:2:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"633:23:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"653:2:28","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"647:5:28"},"nodeType":"YulFunctionCall","src":"647:9:28"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"637:6:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"665:71:28","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"687:6:28"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"711:2:28"},{"kind":"number","nodeType":"YulLiteral","src":"715:4:28","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"707:3:28"},"nodeType":"YulFunctionCall","src":"707:13:28"},{"name":"_4","nodeType":"YulIdentifier","src":"722:2:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"703:3:28"},"nodeType":"YulFunctionCall","src":"703:22:28"},{"kind":"number","nodeType":"YulLiteral","src":"727:2:28","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"699:3:28"},"nodeType":"YulFunctionCall","src":"699:31:28"},{"name":"_4","nodeType":"YulIdentifier","src":"732:2:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"695:3:28"},"nodeType":"YulFunctionCall","src":"695:40:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"683:3:28"},"nodeType":"YulFunctionCall","src":"683:53:28"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"669:10:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"795:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"797:16:28"},"nodeType":"YulFunctionCall","src":"797:18:28"},"nodeType":"YulExpressionStatement","src":"797:18:28"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"754:10:28"},{"name":"_1","nodeType":"YulIdentifier","src":"766:2:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"751:2:28"},"nodeType":"YulFunctionCall","src":"751:18:28"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"774:10:28"},{"name":"memPtr","nodeType":"YulIdentifier","src":"786:6:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"771:2:28"},"nodeType":"YulFunctionCall","src":"771:22:28"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"748:2:28"},"nodeType":"YulFunctionCall","src":"748:46:28"},"nodeType":"YulIf","src":"745:72:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"833:2:28","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"837:10:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"826:6:28"},"nodeType":"YulFunctionCall","src":"826:22:28"},"nodeType":"YulExpressionStatement","src":"826:22:28"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"864:6:28"},{"name":"_3","nodeType":"YulIdentifier","src":"872:2:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"857:6:28"},"nodeType":"YulFunctionCall","src":"857:18:28"},"nodeType":"YulExpressionStatement","src":"857:18:28"},{"body":{"nodeType":"YulBlock","src":"921:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"930:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"933:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"923:6:28"},"nodeType":"YulFunctionCall","src":"923:12:28"},"nodeType":"YulExpressionStatement","src":"923:12:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"898:2:28"},{"name":"_3","nodeType":"YulIdentifier","src":"902:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"894:3:28"},"nodeType":"YulFunctionCall","src":"894:11:28"},{"kind":"number","nodeType":"YulLiteral","src":"907:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"890:3:28"},"nodeType":"YulFunctionCall","src":"890:20:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"912:7:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"887:2:28"},"nodeType":"YulFunctionCall","src":"887:33:28"},"nodeType":"YulIf","src":"884:53:28"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"963:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"971:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"959:3:28"},"nodeType":"YulFunctionCall","src":"959:15:28"},{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"980:2:28"},{"kind":"number","nodeType":"YulLiteral","src":"984:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"976:3:28"},"nodeType":"YulFunctionCall","src":"976:11:28"},{"name":"_3","nodeType":"YulIdentifier","src":"989:2:28"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"946:12:28"},"nodeType":"YulFunctionCall","src":"946:46:28"},"nodeType":"YulExpressionStatement","src":"946:46:28"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1016:6:28"},{"name":"_3","nodeType":"YulIdentifier","src":"1024:2:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1012:3:28"},"nodeType":"YulFunctionCall","src":"1012:15:28"},{"kind":"number","nodeType":"YulLiteral","src":"1029:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1008:3:28"},"nodeType":"YulFunctionCall","src":"1008:24:28"},{"kind":"number","nodeType":"YulLiteral","src":"1034:1:28","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1001:6:28"},"nodeType":"YulFunctionCall","src":"1001:35:28"},"nodeType":"YulExpressionStatement","src":"1001:35:28"},{"nodeType":"YulAssignment","src":"1045:16:28","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"1055:6:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1045:6:28"}]}]},"name":"abi_decode_tuple_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"191:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"202:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"214:6:28","type":""}],"src":"146:921:28"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_bytes_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value0 := memPtr\n    }\n}","id":28,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052348015600f57600080fd5b506004361060285760003560e01c80634ddf47d414602d575b600080fd5b603b60383660046053565b50565b005b634e487b7160e01b600052604160045260246000fd5b600060208284031215606457600080fd5b813567ffffffffffffffff80821115607b57600080fd5b818401915084601f830112608e57600080fd5b813581811115609d57609d603d565b604051601f8201601f19908116603f0116810190838211818310171560c25760c2603d565b8160405282815287602084870101111560da57600080fd5b82602086016020830137600092810160200192909252509594505050505056fea2646970667358221220959b10802d31e7ee83496253838ab5653770359cb8527ab667fc025b5b269ef664736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4DDF47D4 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3B PUSH1 0x38 CALLDATASIZE PUSH1 0x4 PUSH1 0x53 JUMP JUMPDEST POP JUMP JUMPDEST STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0x64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH1 0x7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH1 0x8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH1 0x9D JUMPI PUSH1 0x9D PUSH1 0x3D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH1 0xC2 JUMPI PUSH1 0xC2 PUSH1 0x3D JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH1 0xDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 SWAP12 LT DUP1 0x2D BALANCE 0xE7 0xEE DUP4 0x49 PUSH3 0x53838A 0xB5 PUSH6 0x3770359CB852 PUSH27 0xB667FC025B5B269EF664736F6C6343000814003300000000000000 ","sourceMap":"1252:99:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1284:64;;;;;;:::i;:::-;;;;;14:127:28;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:921;214:6;267:2;255:9;246:7;242:23;238:32;235:52;;;283:1;280;273:12;235:52;323:9;310:23;352:18;393:2;385:6;382:14;379:34;;;409:1;406;399:12;379:34;447:6;436:9;432:22;422:32;;492:7;485:4;481:2;477:13;473:27;463:55;;514:1;511;504:12;463:55;550:2;537:16;572:2;568;565:10;562:36;;;578:18;;:::i;:::-;653:2;647:9;621:2;707:13;;-1:-1:-1;;703:22:28;;;727:2;699:31;695:40;683:53;;;751:18;;;771:22;;;748:46;745:72;;;797:18;;:::i;:::-;837:10;833:2;826:22;872:2;864:6;857:18;912:7;907:2;902;898;894:11;890:20;887:33;884:53;;;933:1;930;923:12;884:53;989:2;984;980;976:11;971:2;963:6;959:15;946:46;1034:1;1012:15;;;1029:2;1008:24;1001:35;;;;-1:-1:-1;1016:6:28;146:921;-1:-1:-1;;;;;146:921:28:o"},"gasEstimates":{"creation":{"codeDepositCost":"60800","executionCost":"111","totalCost":"60911"},"external":{"init(bytes)":"infinite"}},"methodIdentifiers":{"init(bytes)":"4ddf47d4"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"initParams\",\"type\":\"bytes\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/upgradeInitializers/DynamicDiamondInit.sol\":\"DiamondInit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\\n\\npragma solidity >=0.4.16;\\n\\nimport {IERC165} from \\\"../utils/introspection/IERC165.sol\\\";\\n\",\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC721Metadata.sol)\\n\\npragma solidity >=0.6.2;\\n\\nimport {IERC721Metadata} from \\\"../token/ERC721/extensions/IERC721Metadata.sol\\\";\\n\",\"keccak256\":\"0x0137cd417d5c172629ab893df685f0143811e9b409c087a7a759a70021ccc679\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity >=0.6.2;\\n\\nimport {IERC165} from \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC-721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\\n     *   {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity >=0.6.2;\\n\\nimport {IERC721} from \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity >=0.4.16;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\"},\"contracts/interfaces/IDiamondCut.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.6;\\r\\n\\r\\n/******************************************************************************\\\\\\r\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\r\\n* EIP-2535 Diamonds: https://eips.ethereum.org/EIPS/eip-2535\\r\\n/******************************************************************************/\\r\\n\\r\\ninterface IDiamondCut {\\r\\n    enum FacetCutAction {Add, Replace, Remove}\\r\\n    // Add=0, Replace=1, Remove=2\\r\\n\\r\\n    struct FacetCut {\\r\\n        address facetAddress;\\r\\n        FacetCutAction action;\\r\\n        bytes4[] functionSelectors;\\r\\n    }\\r\\n\\r\\n    /// @notice Add/replace/remove any number of functions and optionally execute\\r\\n    ///         a function with delegatecall\\r\\n    /// @param _diamondCut Contains the facet addresses and function selectors\\r\\n    /// @param _init The address of the contract or facet to execute _calldata\\r\\n    /// @param _calldata A function call, including function selector and arguments\\r\\n    ///                  _calldata is executed with delegatecall on _init\\r\\n    function diamondCut(\\r\\n        FacetCut[] calldata _diamondCut,\\r\\n        address _init,\\r\\n        bytes calldata _calldata\\r\\n    ) external;\\r\\n    \\r\\n    /// @notice Propose an upgrade to be executed after the timelock period\\r\\n    /// @param _diamondCut Contains the facet addresses and function selectors\\r\\n    /// @param _init The address of the contract or facet to execute _calldata\\r\\n    /// @param _calldata A function call, including function selector and arguments\\r\\n    function proposeDiamondCut(\\r\\n        FacetCut[] calldata _diamondCut,\\r\\n        address _init,\\r\\n        bytes calldata _calldata\\r\\n    ) external;\\r\\n    \\r\\n    /// @notice Execute a previously proposed upgrade after the timelock period\\r\\n    function executeDiamondCut() external;\\r\\n    \\r\\n    /// @notice Cancel a proposed upgrade\\r\\n    function cancelDiamondCut() external;\\r\\n\\r\\n    event DiamondCut(FacetCut[] _diamondCut, address _init, bytes _calldata);\\r\\n    event DiamondCutProposed(address indexed proposer, uint256 indexed proposalTime, uint256 executionTime);\\r\\n    event DiamondCutCancelled(address indexed canceller);\\r\\n}\\r\\n\",\"keccak256\":\"0x340a039f0dd63cf19bc669551feec28879457d8b741711ef3513168d620f11bc\",\"license\":\"MIT\"},\"contracts/interfaces/IDiamondLoupe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.6;\\r\\n\\r\\n/******************************************************************************\\\\\\r\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\r\\n* EIP-2535 Diamonds: https://eips.ethereum.org/EIPS/eip-2535\\r\\n/******************************************************************************/\\r\\n\\r\\n// A loupe is a small magnifying glass used to look at diamonds.\\r\\n// These functions look at diamonds\\r\\ninterface IDiamondLoupe {\\r\\n    /// These functions are expected to be called frequently\\r\\n    /// by tools.\\r\\n\\r\\n    struct Facet {\\r\\n        address facetAddress;\\r\\n        bytes4[] functionSelectors;\\r\\n    }\\r\\n\\r\\n    /// @notice Gets all facet addresses and their four byte function selectors.\\r\\n    /// @return facets_ Facet\\r\\n    function facets() external view returns (Facet[] memory facets_);\\r\\n\\r\\n    /// @notice Gets all the function selectors supported by a specific facet.\\r\\n    /// @param _facet The facet address.\\r\\n    /// @return facetFunctionSelectors_\\r\\n    function facetFunctionSelectors(address _facet) external view returns (bytes4[] memory facetFunctionSelectors_);\\r\\n\\r\\n    /// @notice Get all the facet addresses used by a diamond.\\r\\n    /// @return facetAddresses_\\r\\n    function facetAddresses() external view returns (address[] memory facetAddresses_);\\r\\n\\r\\n    /// @notice Gets the facet that supports the given selector.\\r\\n    /// @dev If facet is not found return address(0).\\r\\n    /// @param _functionSelector The function selector.\\r\\n    /// @return facetAddress_ The facet address.\\r\\n    function facetAddress(bytes4 _functionSelector) external view returns (address facetAddress_);\\r\\n}\\r\\n\",\"keccak256\":\"0x817840c97d3fb575971952db3d5096b1f843bffe3176d675cacb18e656f9d2a3\",\"license\":\"MIT\"},\"contracts/interfaces/IERC173.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.6;\\n\\n/// @title ERC-173 Contract Ownership Standard\\n///  Note: the ERC-165 identifier for this interface is 0x7f5828d0\\n/* is ERC165 */\\ninterface IERC173 {\\n    /// @dev This emits when ownership of a contract changes.\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /// @notice Get the address of the owner\\n    /// @return owner_ The address of the owner.\\n    function owner() external view returns (address owner_);\\n\\n    /// @notice Set the address of the new owner of the contract\\n    /// @dev Set _newOwner to address(0) to renounce any ownership.\\n    /// @param _newOwner The address of the new owner of the contract\\n    function transferOwnership(address _newOwner) external;\\n}\\n\",\"keccak256\":\"0x84fe28f479bf96f1819514dd8493ae15955eda0dbabcbb5f24c3c935075a31d4\",\"license\":\"MIT\"},\"contracts/libraries/LibDiamond.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.6;\\n\\n/******************************************************************************\\\\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\n* EIP-2535 Diamonds: https://eips.ethereum.org/EIPS/eip-2535\\n/******************************************************************************/\\nimport { IDiamondCut } from \\\"../interfaces/IDiamondCut.sol\\\";\\nimport \\\"../interfaces/IERC173.sol\\\"; // for IERC173 interface\\nimport \\\"../interfaces/IDiamondCut.sol\\\";\\n\\n// Remember to add the loupe functions from DiamondLoupeFacet to the diamond.\\n// The loupe functions are required by the EIP2535 Diamonds standard\\n\\nlibrary LibDiamond {\\n    bytes32 constant DIAMOND_STORAGE_POSITION = keccak256(\\\"diamond.standard.diamond.storage\\\");\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n    event DiamondCut(IDiamondCut.FacetCut[] _diamondCut, address _init, bytes _calldata);\\n    event DiamondCutProposed(address indexed proposer, uint256 indexed proposalTime, uint256 executionTime);\\n    event DiamondCutCancelled(address indexed canceller);\\n\\n    struct FacetAddressAndPosition {\\n        address facetAddress;\\n        uint96 functionSelectorPosition; // position in facetFunctionSelectors.functionSelectors array\\n    }\\n\\n    struct FacetFunctionSelectors {\\n        bytes4[] functionSelectors;\\n        uint256 facetAddressPosition; // position of facetAddress in facetAddresses array\\n    }\\n\\n    // Upgrade proposal struct for timelock functionality\\n    struct UpgradeProposal {\\n        IDiamondCut.FacetCut[] diamondCut;\\n        address initAddress;\\n        bytes initCalldata;\\n        uint256 proposalTime;\\n        bool exists;\\n    }\\n\\n    struct DiamondStorage {\\n        // maps function selector to the facet address and\\n        // the position of the selector in the facetFunctionSelectors.selectors array\\n        mapping(bytes4 => FacetAddressAndPosition) selectorToFacetAndPosition;\\n        // maps facet addresses to function selectors\\n        mapping(address => FacetFunctionSelectors) facetFunctionSelectors;\\n        // facet addresses\\n        address[] facetAddresses;\\n        // Used to query if a contract implements an interface.\\n        // Used to implement ERC-165.\\n        mapping(bytes4 => bool) supportedInterfaces;\\n        // owner of the contract\\n        address contractOwner;\\n        // Timelock for upgrades (in seconds)\\n        uint256 upgradeTimelock;\\n        // Storage for the current upgrade proposal\\n        UpgradeProposal upgradeProposal;\\n    }\\n\\n    function diamondStorage() internal pure returns (DiamondStorage storage ds) {\\n        bytes32 position = DIAMOND_STORAGE_POSITION;\\n        assembly {\\n            ds.slot := position\\n        }\\n    }\\n\\n    function setContractOwner(address _newOwner) internal {\\n        DiamondStorage storage ds = diamondStorage();\\n        address previousOwner = ds.contractOwner;\\n        ds.contractOwner = _newOwner;\\n        emit OwnershipTransferred(previousOwner, _newOwner);\\n    }\\n\\n    function contractOwner() internal view returns (address contractOwner_) {\\n        contractOwner_ = diamondStorage().contractOwner;\\n    }\\n\\n    function enforceIsContractOwner() internal view {\\n        require(msg.sender == diamondStorage().contractOwner, \\\"LibDiamond: Must be contract owner\\\");\\n    }\\n\\n    // Timelock constants\\n    uint256 constant DEFAULT_UPGRADE_TIMELOCK = 2 days;\\n\\n    // Internal function version of diamondCut\\n    function diamondCut(\\n        IDiamondCut.FacetCut[] memory _diamondCut,\\n        address _init,\\n        bytes memory _calldata\\n    ) internal {\\n        for (uint256 facetIndex; facetIndex < _diamondCut.length; facetIndex++) {\\n            IDiamondCut.FacetCutAction action = _diamondCut[facetIndex].action;\\n            if (action == IDiamondCut.FacetCutAction.Add) {\\n                addFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\\n            } else if (action == IDiamondCut.FacetCutAction.Replace) {\\n                replaceFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\\n            } else if (action == IDiamondCut.FacetCutAction.Remove) {\\n                removeFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\\n            } else {\\n                revert(\\\"LibDiamondCut: Incorrect FacetCutAction\\\");\\n            }\\n        }\\n        emit DiamondCut(_diamondCut, _init, _calldata);\\n        initializeDiamondCut(_init, _calldata);\\n    }\\n\\n    function addFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\\n        require(_functionSelectors.length > 0, \\\"LibDiamondCut: No selectors in facet to cut\\\");\\n        DiamondStorage storage ds = diamondStorage();        \\n        require(_facetAddress != address(0), \\\"LibDiamondCut: Add facet can't be address(0)\\\");\\n        uint96 selectorPosition = uint96(ds.facetFunctionSelectors[_facetAddress].functionSelectors.length);\\n        // add new facet address if it does not exist\\n        if (selectorPosition == 0) {\\n            addFacet(ds, _facetAddress);            \\n        }\\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\\n            bytes4 selector = _functionSelectors[selectorIndex];\\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\\n            require(oldFacetAddress == address(0), \\\"LibDiamondCut: Can't add function that already exists\\\");\\n            addFunction(ds, selector, selectorPosition, _facetAddress);\\n            selectorPosition++;\\n        }\\n    }\\n\\n    function replaceFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\\n        require(_functionSelectors.length > 0, \\\"LibDiamondCut: No selectors in facet to cut\\\");\\n        DiamondStorage storage ds = diamondStorage();\\n        require(_facetAddress != address(0), \\\"LibDiamondCut: Add facet can't be address(0)\\\");\\n        uint96 selectorPosition = uint96(ds.facetFunctionSelectors[_facetAddress].functionSelectors.length);\\n        // add new facet address if it does not exist\\n        if (selectorPosition == 0) {\\n            addFacet(ds, _facetAddress);\\n        }\\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\\n            bytes4 selector = _functionSelectors[selectorIndex];\\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\\n            require(oldFacetAddress != _facetAddress, \\\"LibDiamondCut: Can't replace function with same function\\\");\\n            removeFunction(ds, oldFacetAddress, selector);\\n            addFunction(ds, selector, selectorPosition, _facetAddress);\\n            selectorPosition++;\\n        }\\n    }\\n\\n    function removeFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\\n        require(_functionSelectors.length > 0, \\\"LibDiamondCut: No selectors in facet to cut\\\");\\n        DiamondStorage storage ds = diamondStorage();\\n        // if function does not exist then do nothing and return\\n        require(_facetAddress == address(0), \\\"LibDiamondCut: Remove facet address must be address(0)\\\");\\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\\n            bytes4 selector = _functionSelectors[selectorIndex];\\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\\n            removeFunction(ds, oldFacetAddress, selector);\\n        }\\n    }\\n\\n    function addFacet(DiamondStorage storage ds, address _facetAddress) internal {\\n        enforceHasContractCode(_facetAddress, \\\"LibDiamondCut: New facet has no code\\\");\\n        ds.facetFunctionSelectors[_facetAddress].facetAddressPosition = ds.facetAddresses.length;\\n        ds.facetAddresses.push(_facetAddress);\\n    }    \\n\\n\\n    function addFunction(DiamondStorage storage ds, bytes4 _selector, uint96 _selectorPosition, address _facetAddress) internal {\\n        ds.selectorToFacetAndPosition[_selector].functionSelectorPosition = _selectorPosition;\\n        ds.facetFunctionSelectors[_facetAddress].functionSelectors.push(_selector);\\n        ds.selectorToFacetAndPosition[_selector].facetAddress = _facetAddress;\\n    }\\n\\n    function removeFunction(DiamondStorage storage ds, address _facetAddress, bytes4 _selector) internal {        \\n        require(_facetAddress != address(0), \\\"LibDiamondCut: Can't remove function that doesn't exist\\\");\\n        // an immutable function is a function defined directly in a diamond\\n        require(_facetAddress != address(this), \\\"LibDiamondCut: Can't remove immutable function\\\");\\n        // replace selector with last selector, then delete last selector\\n        uint256 selectorPosition = ds.selectorToFacetAndPosition[_selector].functionSelectorPosition;\\n        uint256 lastSelectorPosition = ds.facetFunctionSelectors[_facetAddress].functionSelectors.length - 1;\\n        // if not the same then replace _selector with lastSelector\\n        if (selectorPosition != lastSelectorPosition) {\\n            bytes4 lastSelector = ds.facetFunctionSelectors[_facetAddress].functionSelectors[lastSelectorPosition];\\n            ds.facetFunctionSelectors[_facetAddress].functionSelectors[selectorPosition] = lastSelector;\\n            ds.selectorToFacetAndPosition[lastSelector].functionSelectorPosition = uint96(selectorPosition);\\n        }\\n        // delete the last selector\\n        ds.facetFunctionSelectors[_facetAddress].functionSelectors.pop();\\n        delete ds.selectorToFacetAndPosition[_selector];\\n\\n        // if no more selectors for facet address then delete the facet address\\n        if (lastSelectorPosition == 0) {\\n            // replace facet address with last facet address and delete last facet address\\n            uint256 lastFacetAddressPosition = ds.facetAddresses.length - 1;\\n            uint256 facetAddressPosition = ds.facetFunctionSelectors[_facetAddress].facetAddressPosition;\\n            if (facetAddressPosition != lastFacetAddressPosition) {\\n                address lastFacetAddress = ds.facetAddresses[lastFacetAddressPosition];\\n                ds.facetAddresses[facetAddressPosition] = lastFacetAddress;\\n                ds.facetFunctionSelectors[lastFacetAddress].facetAddressPosition = facetAddressPosition;\\n            }\\n            ds.facetAddresses.pop();\\n            delete ds.facetFunctionSelectors[_facetAddress].facetAddressPosition;\\n        }\\n    }\\n\\n    function initializeDiamondCut(address _init, bytes memory _calldata) internal {\\n        if (_init == address(0)) {\\n            require(_calldata.length == 0, \\\"LibDiamondCut: _init is address(0) but_calldata is not empty\\\");\\n        } else {\\n            require(_calldata.length > 0, \\\"LibDiamondCut: _calldata is empty but _init is not address(0)\\\");\\n            if (_init != address(this)) {\\n                enforceHasContractCode(_init, \\\"LibDiamondCut: _init address has no code\\\");\\n            }\\n            (bool success, bytes memory error) = _init.delegatecall(_calldata);\\n            if (!success) {\\n                if (error.length > 0) {\\n                    // bubble up the error\\n                    revert(string(error));\\n                } else {\\n                    revert(\\\"LibDiamondCut: _init function reverted\\\");\\n                }\\n            }\\n        }\\n    }\\n\\n    function enforceHasContractCode(address _contract, string memory _errorMessage) internal view {\\n        uint256 contractSize;\\n        assembly {\\n            contractSize := extcodesize(_contract)\\n        }\\n        require(contractSize > 0, _errorMessage);\\n    }\\n\\n    // Initialize timelock settings for upgrade proposals\\n    function initializeUpgradeTimelock(uint256 _timelock) internal {\\n        DiamondStorage storage ds = diamondStorage();\\n        require(ds.upgradeTimelock == 0, \\\"LibDiamond: Timelock already initialized\\\");\\n        ds.upgradeTimelock = _timelock > 0 ? _timelock : DEFAULT_UPGRADE_TIMELOCK;\\n    }\\n\\n    // Propose a diamond cut to be executed after the timelock\\n    function proposeDiamondCut(\\n        IDiamondCut.FacetCut[] memory _diamondCut,\\n        address _init,\\n        bytes memory _calldata\\n    ) internal {\\n        DiamondStorage storage ds = diamondStorage();\\n        require(!ds.upgradeProposal.exists, \\\"LibDiamond: Upgrade already proposed\\\");\\n        require(ds.upgradeTimelock > 0, \\\"LibDiamond: Timelock not initialized\\\");\\n        \\n        // Create a deep copy of the diamond cut to store in the proposal\\n        IDiamondCut.FacetCut[] memory diamondCutCopy = new IDiamondCut.FacetCut[](_diamondCut.length);\\n        for (uint256 i = 0; i < _diamondCut.length; i++) {\\n            diamondCutCopy[i] = _diamondCut[i];\\n            \\n            // Deep copy the function selectors array\\n            bytes4[] memory selectors = new bytes4[](_diamondCut[i].functionSelectors.length);\\n            for (uint256 j = 0; j < _diamondCut[i].functionSelectors.length; j++) {\\n                selectors[j] = _diamondCut[i].functionSelectors[j];\\n            }\\n            diamondCutCopy[i].functionSelectors = selectors;\\n        }\\n        \\n        // Store the proposal\\n        // Create empty array in storage first\\n        delete ds.upgradeProposal.diamondCut;\\n        \\n        // Manually copy each element and its nested arrays to storage\\n        for (uint256 i = 0; i < _diamondCut.length; i++) {\\n            // Create a new struct in storage by pushing an empty element first\\n            ds.upgradeProposal.diamondCut.push();\\n            \\n            // Now set the values for this element's fields\\n            ds.upgradeProposal.diamondCut[i].facetAddress = _diamondCut[i].facetAddress;\\n            ds.upgradeProposal.diamondCut[i].action = _diamondCut[i].action;\\n            \\n            // For the selectors array, we need to handle it separately\\n            // Clear any existing selectors to ensure clean state\\n            delete ds.upgradeProposal.diamondCut[i].functionSelectors;\\n            \\n            // Copy each selector individually\\n            for (uint256 j = 0; j < _diamondCut[i].functionSelectors.length; j++) {\\n                ds.upgradeProposal.diamondCut[i].functionSelectors.push(_diamondCut[i].functionSelectors[j]);\\n            }\\n        }\\n        ds.upgradeProposal.initAddress = _init;\\n        ds.upgradeProposal.initCalldata = _calldata;\\n        ds.upgradeProposal.proposalTime = block.timestamp;\\n        ds.upgradeProposal.exists = true;\\n        \\n        emit DiamondCutProposed(msg.sender, block.timestamp, block.timestamp + ds.upgradeTimelock);\\n    }\\n    \\n    // Execute a proposed diamond cut after the timelock period\\n    function executeDiamondCut() internal {\\n        DiamondStorage storage ds = diamondStorage();\\n        require(ds.upgradeProposal.exists, \\\"LibDiamond: No upgrade proposal exists\\\");\\n        require(\\n            block.timestamp >= ds.upgradeProposal.proposalTime + ds.upgradeTimelock,\\n            \\\"LibDiamond: Timelock period not elapsed\\\"\\n        );\\n        \\n        // Execute the diamond cut\\n        diamondCut(\\n            ds.upgradeProposal.diamondCut,\\n            ds.upgradeProposal.initAddress,\\n            ds.upgradeProposal.initCalldata\\n        );\\n        \\n        // Reset the proposal\\n        delete ds.upgradeProposal;\\n    }\\n    \\n    // Cancel a proposed diamond cut\\n    function cancelDiamondCut() internal {\\n        DiamondStorage storage ds = diamondStorage();\\n        require(ds.upgradeProposal.exists, \\\"LibDiamond: No upgrade proposal exists\\\");\\n        \\n        // Reset the proposal\\n        delete ds.upgradeProposal;\\n        \\n        emit DiamondCutCancelled(msg.sender);\\n    }\\n}\\n\",\"keccak256\":\"0x3d3bb1df2d228d2738f7ce7b9f634653edda3f638a335b92565e9b42e941b1bb\",\"license\":\"MIT\"},\"contracts/upgradeInitializers/DynamicDiamondInit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.6;\\n\\n/******************************************************************************\\\\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\n* EIP-2535 Diamonds: https://eips.ethereum.org/EIPS/eip-2535\\n*\\n* Implementation of a diamond.\\n/******************************************************************************/\\n\\nimport \\\"@openzeppelin/contracts/interfaces/IERC165.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\nimport \\\"@openzeppelin/contracts/interfaces/IERC721Metadata.sol\\\";\\n\\nimport { LibDiamond } from \\\"../libraries/LibDiamond.sol\\\";\\nimport { IDiamondLoupe } from \\\"../interfaces/IDiamondLoupe.sol\\\";\\nimport { IDiamondCut } from \\\"../interfaces/IDiamondCut.sol\\\";\\nimport { IERC173 } from \\\"../interfaces/IERC173.sol\\\";\\n\\ninterface IDiamondFacetInit is IERC165 {\\n    function initializeFacet(\\n        address _owner, \\n        IDiamondCut.FacetCut memory _facet,\\n        bytes calldata _calldata) external;\\n}\\n\\n// It is expected that this contract is customized if you want to deploy your diamond\\n// with data from a deployment script. Use the init function to initialize state variables\\n// of your diamond. Add parameters to the init funciton if you need to.\\n\\ncontract DiamondInit {    \\n\\n    function init(bytes memory initParams) external {        \\n\\n    }\\n\\n}\\n\",\"keccak256\":\"0xcf7fd860e97548697c48283c2f6679f726e877458df0e6c9b6aa906065fcb4c8\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IDiamondFacetInit":{"abi":[{"inputs":[{"internalType":"address","name":"_owner","type":"address"},{"components":[{"internalType":"address","name":"facetAddress","type":"address"},{"internalType":"enum IDiamondCut.FacetCutAction","name":"action","type":"uint8"},{"internalType":"bytes4[]","name":"functionSelectors","type":"bytes4[]"}],"internalType":"struct IDiamondCut.FacetCut","name":"_facet","type":"tuple"},{"internalType":"bytes","name":"_calldata","type":"bytes"}],"name":"initializeFacet","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"initializeFacet(address,(address,uint8,bytes4[]),bytes)":"1a782b68","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"facetAddress\",\"type\":\"address\"},{\"internalType\":\"enum IDiamondCut.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"functionSelectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct IDiamondCut.FacetCut\",\"name\":\"_facet\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_calldata\",\"type\":\"bytes\"}],\"name\":\"initializeFacet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/upgradeInitializers/DynamicDiamondInit.sol\":\"IDiamondFacetInit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\\n\\npragma solidity >=0.4.16;\\n\\nimport {IERC165} from \\\"../utils/introspection/IERC165.sol\\\";\\n\",\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC721Metadata.sol)\\n\\npragma solidity >=0.6.2;\\n\\nimport {IERC721Metadata} from \\\"../token/ERC721/extensions/IERC721Metadata.sol\\\";\\n\",\"keccak256\":\"0x0137cd417d5c172629ab893df685f0143811e9b409c087a7a759a70021ccc679\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity >=0.6.2;\\n\\nimport {IERC165} from \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC-721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\\n     *   {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity >=0.6.2;\\n\\nimport {IERC721} from \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity >=0.4.16;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\"},\"contracts/interfaces/IDiamondCut.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.6;\\r\\n\\r\\n/******************************************************************************\\\\\\r\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\r\\n* EIP-2535 Diamonds: https://eips.ethereum.org/EIPS/eip-2535\\r\\n/******************************************************************************/\\r\\n\\r\\ninterface IDiamondCut {\\r\\n    enum FacetCutAction {Add, Replace, Remove}\\r\\n    // Add=0, Replace=1, Remove=2\\r\\n\\r\\n    struct FacetCut {\\r\\n        address facetAddress;\\r\\n        FacetCutAction action;\\r\\n        bytes4[] functionSelectors;\\r\\n    }\\r\\n\\r\\n    /// @notice Add/replace/remove any number of functions and optionally execute\\r\\n    ///         a function with delegatecall\\r\\n    /// @param _diamondCut Contains the facet addresses and function selectors\\r\\n    /// @param _init The address of the contract or facet to execute _calldata\\r\\n    /// @param _calldata A function call, including function selector and arguments\\r\\n    ///                  _calldata is executed with delegatecall on _init\\r\\n    function diamondCut(\\r\\n        FacetCut[] calldata _diamondCut,\\r\\n        address _init,\\r\\n        bytes calldata _calldata\\r\\n    ) external;\\r\\n    \\r\\n    /// @notice Propose an upgrade to be executed after the timelock period\\r\\n    /// @param _diamondCut Contains the facet addresses and function selectors\\r\\n    /// @param _init The address of the contract or facet to execute _calldata\\r\\n    /// @param _calldata A function call, including function selector and arguments\\r\\n    function proposeDiamondCut(\\r\\n        FacetCut[] calldata _diamondCut,\\r\\n        address _init,\\r\\n        bytes calldata _calldata\\r\\n    ) external;\\r\\n    \\r\\n    /// @notice Execute a previously proposed upgrade after the timelock period\\r\\n    function executeDiamondCut() external;\\r\\n    \\r\\n    /// @notice Cancel a proposed upgrade\\r\\n    function cancelDiamondCut() external;\\r\\n\\r\\n    event DiamondCut(FacetCut[] _diamondCut, address _init, bytes _calldata);\\r\\n    event DiamondCutProposed(address indexed proposer, uint256 indexed proposalTime, uint256 executionTime);\\r\\n    event DiamondCutCancelled(address indexed canceller);\\r\\n}\\r\\n\",\"keccak256\":\"0x340a039f0dd63cf19bc669551feec28879457d8b741711ef3513168d620f11bc\",\"license\":\"MIT\"},\"contracts/interfaces/IDiamondLoupe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.6;\\r\\n\\r\\n/******************************************************************************\\\\\\r\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\r\\n* EIP-2535 Diamonds: https://eips.ethereum.org/EIPS/eip-2535\\r\\n/******************************************************************************/\\r\\n\\r\\n// A loupe is a small magnifying glass used to look at diamonds.\\r\\n// These functions look at diamonds\\r\\ninterface IDiamondLoupe {\\r\\n    /// These functions are expected to be called frequently\\r\\n    /// by tools.\\r\\n\\r\\n    struct Facet {\\r\\n        address facetAddress;\\r\\n        bytes4[] functionSelectors;\\r\\n    }\\r\\n\\r\\n    /// @notice Gets all facet addresses and their four byte function selectors.\\r\\n    /// @return facets_ Facet\\r\\n    function facets() external view returns (Facet[] memory facets_);\\r\\n\\r\\n    /// @notice Gets all the function selectors supported by a specific facet.\\r\\n    /// @param _facet The facet address.\\r\\n    /// @return facetFunctionSelectors_\\r\\n    function facetFunctionSelectors(address _facet) external view returns (bytes4[] memory facetFunctionSelectors_);\\r\\n\\r\\n    /// @notice Get all the facet addresses used by a diamond.\\r\\n    /// @return facetAddresses_\\r\\n    function facetAddresses() external view returns (address[] memory facetAddresses_);\\r\\n\\r\\n    /// @notice Gets the facet that supports the given selector.\\r\\n    /// @dev If facet is not found return address(0).\\r\\n    /// @param _functionSelector The function selector.\\r\\n    /// @return facetAddress_ The facet address.\\r\\n    function facetAddress(bytes4 _functionSelector) external view returns (address facetAddress_);\\r\\n}\\r\\n\",\"keccak256\":\"0x817840c97d3fb575971952db3d5096b1f843bffe3176d675cacb18e656f9d2a3\",\"license\":\"MIT\"},\"contracts/interfaces/IERC173.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.6;\\n\\n/// @title ERC-173 Contract Ownership Standard\\n///  Note: the ERC-165 identifier for this interface is 0x7f5828d0\\n/* is ERC165 */\\ninterface IERC173 {\\n    /// @dev This emits when ownership of a contract changes.\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /// @notice Get the address of the owner\\n    /// @return owner_ The address of the owner.\\n    function owner() external view returns (address owner_);\\n\\n    /// @notice Set the address of the new owner of the contract\\n    /// @dev Set _newOwner to address(0) to renounce any ownership.\\n    /// @param _newOwner The address of the new owner of the contract\\n    function transferOwnership(address _newOwner) external;\\n}\\n\",\"keccak256\":\"0x84fe28f479bf96f1819514dd8493ae15955eda0dbabcbb5f24c3c935075a31d4\",\"license\":\"MIT\"},\"contracts/libraries/LibDiamond.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.6;\\n\\n/******************************************************************************\\\\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\n* EIP-2535 Diamonds: https://eips.ethereum.org/EIPS/eip-2535\\n/******************************************************************************/\\nimport { IDiamondCut } from \\\"../interfaces/IDiamondCut.sol\\\";\\nimport \\\"../interfaces/IERC173.sol\\\"; // for IERC173 interface\\nimport \\\"../interfaces/IDiamondCut.sol\\\";\\n\\n// Remember to add the loupe functions from DiamondLoupeFacet to the diamond.\\n// The loupe functions are required by the EIP2535 Diamonds standard\\n\\nlibrary LibDiamond {\\n    bytes32 constant DIAMOND_STORAGE_POSITION = keccak256(\\\"diamond.standard.diamond.storage\\\");\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n    event DiamondCut(IDiamondCut.FacetCut[] _diamondCut, address _init, bytes _calldata);\\n    event DiamondCutProposed(address indexed proposer, uint256 indexed proposalTime, uint256 executionTime);\\n    event DiamondCutCancelled(address indexed canceller);\\n\\n    struct FacetAddressAndPosition {\\n        address facetAddress;\\n        uint96 functionSelectorPosition; // position in facetFunctionSelectors.functionSelectors array\\n    }\\n\\n    struct FacetFunctionSelectors {\\n        bytes4[] functionSelectors;\\n        uint256 facetAddressPosition; // position of facetAddress in facetAddresses array\\n    }\\n\\n    // Upgrade proposal struct for timelock functionality\\n    struct UpgradeProposal {\\n        IDiamondCut.FacetCut[] diamondCut;\\n        address initAddress;\\n        bytes initCalldata;\\n        uint256 proposalTime;\\n        bool exists;\\n    }\\n\\n    struct DiamondStorage {\\n        // maps function selector to the facet address and\\n        // the position of the selector in the facetFunctionSelectors.selectors array\\n        mapping(bytes4 => FacetAddressAndPosition) selectorToFacetAndPosition;\\n        // maps facet addresses to function selectors\\n        mapping(address => FacetFunctionSelectors) facetFunctionSelectors;\\n        // facet addresses\\n        address[] facetAddresses;\\n        // Used to query if a contract implements an interface.\\n        // Used to implement ERC-165.\\n        mapping(bytes4 => bool) supportedInterfaces;\\n        // owner of the contract\\n        address contractOwner;\\n        // Timelock for upgrades (in seconds)\\n        uint256 upgradeTimelock;\\n        // Storage for the current upgrade proposal\\n        UpgradeProposal upgradeProposal;\\n    }\\n\\n    function diamondStorage() internal pure returns (DiamondStorage storage ds) {\\n        bytes32 position = DIAMOND_STORAGE_POSITION;\\n        assembly {\\n            ds.slot := position\\n        }\\n    }\\n\\n    function setContractOwner(address _newOwner) internal {\\n        DiamondStorage storage ds = diamondStorage();\\n        address previousOwner = ds.contractOwner;\\n        ds.contractOwner = _newOwner;\\n        emit OwnershipTransferred(previousOwner, _newOwner);\\n    }\\n\\n    function contractOwner() internal view returns (address contractOwner_) {\\n        contractOwner_ = diamondStorage().contractOwner;\\n    }\\n\\n    function enforceIsContractOwner() internal view {\\n        require(msg.sender == diamondStorage().contractOwner, \\\"LibDiamond: Must be contract owner\\\");\\n    }\\n\\n    // Timelock constants\\n    uint256 constant DEFAULT_UPGRADE_TIMELOCK = 2 days;\\n\\n    // Internal function version of diamondCut\\n    function diamondCut(\\n        IDiamondCut.FacetCut[] memory _diamondCut,\\n        address _init,\\n        bytes memory _calldata\\n    ) internal {\\n        for (uint256 facetIndex; facetIndex < _diamondCut.length; facetIndex++) {\\n            IDiamondCut.FacetCutAction action = _diamondCut[facetIndex].action;\\n            if (action == IDiamondCut.FacetCutAction.Add) {\\n                addFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\\n            } else if (action == IDiamondCut.FacetCutAction.Replace) {\\n                replaceFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\\n            } else if (action == IDiamondCut.FacetCutAction.Remove) {\\n                removeFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\\n            } else {\\n                revert(\\\"LibDiamondCut: Incorrect FacetCutAction\\\");\\n            }\\n        }\\n        emit DiamondCut(_diamondCut, _init, _calldata);\\n        initializeDiamondCut(_init, _calldata);\\n    }\\n\\n    function addFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\\n        require(_functionSelectors.length > 0, \\\"LibDiamondCut: No selectors in facet to cut\\\");\\n        DiamondStorage storage ds = diamondStorage();        \\n        require(_facetAddress != address(0), \\\"LibDiamondCut: Add facet can't be address(0)\\\");\\n        uint96 selectorPosition = uint96(ds.facetFunctionSelectors[_facetAddress].functionSelectors.length);\\n        // add new facet address if it does not exist\\n        if (selectorPosition == 0) {\\n            addFacet(ds, _facetAddress);            \\n        }\\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\\n            bytes4 selector = _functionSelectors[selectorIndex];\\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\\n            require(oldFacetAddress == address(0), \\\"LibDiamondCut: Can't add function that already exists\\\");\\n            addFunction(ds, selector, selectorPosition, _facetAddress);\\n            selectorPosition++;\\n        }\\n    }\\n\\n    function replaceFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\\n        require(_functionSelectors.length > 0, \\\"LibDiamondCut: No selectors in facet to cut\\\");\\n        DiamondStorage storage ds = diamondStorage();\\n        require(_facetAddress != address(0), \\\"LibDiamondCut: Add facet can't be address(0)\\\");\\n        uint96 selectorPosition = uint96(ds.facetFunctionSelectors[_facetAddress].functionSelectors.length);\\n        // add new facet address if it does not exist\\n        if (selectorPosition == 0) {\\n            addFacet(ds, _facetAddress);\\n        }\\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\\n            bytes4 selector = _functionSelectors[selectorIndex];\\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\\n            require(oldFacetAddress != _facetAddress, \\\"LibDiamondCut: Can't replace function with same function\\\");\\n            removeFunction(ds, oldFacetAddress, selector);\\n            addFunction(ds, selector, selectorPosition, _facetAddress);\\n            selectorPosition++;\\n        }\\n    }\\n\\n    function removeFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\\n        require(_functionSelectors.length > 0, \\\"LibDiamondCut: No selectors in facet to cut\\\");\\n        DiamondStorage storage ds = diamondStorage();\\n        // if function does not exist then do nothing and return\\n        require(_facetAddress == address(0), \\\"LibDiamondCut: Remove facet address must be address(0)\\\");\\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\\n            bytes4 selector = _functionSelectors[selectorIndex];\\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\\n            removeFunction(ds, oldFacetAddress, selector);\\n        }\\n    }\\n\\n    function addFacet(DiamondStorage storage ds, address _facetAddress) internal {\\n        enforceHasContractCode(_facetAddress, \\\"LibDiamondCut: New facet has no code\\\");\\n        ds.facetFunctionSelectors[_facetAddress].facetAddressPosition = ds.facetAddresses.length;\\n        ds.facetAddresses.push(_facetAddress);\\n    }    \\n\\n\\n    function addFunction(DiamondStorage storage ds, bytes4 _selector, uint96 _selectorPosition, address _facetAddress) internal {\\n        ds.selectorToFacetAndPosition[_selector].functionSelectorPosition = _selectorPosition;\\n        ds.facetFunctionSelectors[_facetAddress].functionSelectors.push(_selector);\\n        ds.selectorToFacetAndPosition[_selector].facetAddress = _facetAddress;\\n    }\\n\\n    function removeFunction(DiamondStorage storage ds, address _facetAddress, bytes4 _selector) internal {        \\n        require(_facetAddress != address(0), \\\"LibDiamondCut: Can't remove function that doesn't exist\\\");\\n        // an immutable function is a function defined directly in a diamond\\n        require(_facetAddress != address(this), \\\"LibDiamondCut: Can't remove immutable function\\\");\\n        // replace selector with last selector, then delete last selector\\n        uint256 selectorPosition = ds.selectorToFacetAndPosition[_selector].functionSelectorPosition;\\n        uint256 lastSelectorPosition = ds.facetFunctionSelectors[_facetAddress].functionSelectors.length - 1;\\n        // if not the same then replace _selector with lastSelector\\n        if (selectorPosition != lastSelectorPosition) {\\n            bytes4 lastSelector = ds.facetFunctionSelectors[_facetAddress].functionSelectors[lastSelectorPosition];\\n            ds.facetFunctionSelectors[_facetAddress].functionSelectors[selectorPosition] = lastSelector;\\n            ds.selectorToFacetAndPosition[lastSelector].functionSelectorPosition = uint96(selectorPosition);\\n        }\\n        // delete the last selector\\n        ds.facetFunctionSelectors[_facetAddress].functionSelectors.pop();\\n        delete ds.selectorToFacetAndPosition[_selector];\\n\\n        // if no more selectors for facet address then delete the facet address\\n        if (lastSelectorPosition == 0) {\\n            // replace facet address with last facet address and delete last facet address\\n            uint256 lastFacetAddressPosition = ds.facetAddresses.length - 1;\\n            uint256 facetAddressPosition = ds.facetFunctionSelectors[_facetAddress].facetAddressPosition;\\n            if (facetAddressPosition != lastFacetAddressPosition) {\\n                address lastFacetAddress = ds.facetAddresses[lastFacetAddressPosition];\\n                ds.facetAddresses[facetAddressPosition] = lastFacetAddress;\\n                ds.facetFunctionSelectors[lastFacetAddress].facetAddressPosition = facetAddressPosition;\\n            }\\n            ds.facetAddresses.pop();\\n            delete ds.facetFunctionSelectors[_facetAddress].facetAddressPosition;\\n        }\\n    }\\n\\n    function initializeDiamondCut(address _init, bytes memory _calldata) internal {\\n        if (_init == address(0)) {\\n            require(_calldata.length == 0, \\\"LibDiamondCut: _init is address(0) but_calldata is not empty\\\");\\n        } else {\\n            require(_calldata.length > 0, \\\"LibDiamondCut: _calldata is empty but _init is not address(0)\\\");\\n            if (_init != address(this)) {\\n                enforceHasContractCode(_init, \\\"LibDiamondCut: _init address has no code\\\");\\n            }\\n            (bool success, bytes memory error) = _init.delegatecall(_calldata);\\n            if (!success) {\\n                if (error.length > 0) {\\n                    // bubble up the error\\n                    revert(string(error));\\n                } else {\\n                    revert(\\\"LibDiamondCut: _init function reverted\\\");\\n                }\\n            }\\n        }\\n    }\\n\\n    function enforceHasContractCode(address _contract, string memory _errorMessage) internal view {\\n        uint256 contractSize;\\n        assembly {\\n            contractSize := extcodesize(_contract)\\n        }\\n        require(contractSize > 0, _errorMessage);\\n    }\\n\\n    // Initialize timelock settings for upgrade proposals\\n    function initializeUpgradeTimelock(uint256 _timelock) internal {\\n        DiamondStorage storage ds = diamondStorage();\\n        require(ds.upgradeTimelock == 0, \\\"LibDiamond: Timelock already initialized\\\");\\n        ds.upgradeTimelock = _timelock > 0 ? _timelock : DEFAULT_UPGRADE_TIMELOCK;\\n    }\\n\\n    // Propose a diamond cut to be executed after the timelock\\n    function proposeDiamondCut(\\n        IDiamondCut.FacetCut[] memory _diamondCut,\\n        address _init,\\n        bytes memory _calldata\\n    ) internal {\\n        DiamondStorage storage ds = diamondStorage();\\n        require(!ds.upgradeProposal.exists, \\\"LibDiamond: Upgrade already proposed\\\");\\n        require(ds.upgradeTimelock > 0, \\\"LibDiamond: Timelock not initialized\\\");\\n        \\n        // Create a deep copy of the diamond cut to store in the proposal\\n        IDiamondCut.FacetCut[] memory diamondCutCopy = new IDiamondCut.FacetCut[](_diamondCut.length);\\n        for (uint256 i = 0; i < _diamondCut.length; i++) {\\n            diamondCutCopy[i] = _diamondCut[i];\\n            \\n            // Deep copy the function selectors array\\n            bytes4[] memory selectors = new bytes4[](_diamondCut[i].functionSelectors.length);\\n            for (uint256 j = 0; j < _diamondCut[i].functionSelectors.length; j++) {\\n                selectors[j] = _diamondCut[i].functionSelectors[j];\\n            }\\n            diamondCutCopy[i].functionSelectors = selectors;\\n        }\\n        \\n        // Store the proposal\\n        // Create empty array in storage first\\n        delete ds.upgradeProposal.diamondCut;\\n        \\n        // Manually copy each element and its nested arrays to storage\\n        for (uint256 i = 0; i < _diamondCut.length; i++) {\\n            // Create a new struct in storage by pushing an empty element first\\n            ds.upgradeProposal.diamondCut.push();\\n            \\n            // Now set the values for this element's fields\\n            ds.upgradeProposal.diamondCut[i].facetAddress = _diamondCut[i].facetAddress;\\n            ds.upgradeProposal.diamondCut[i].action = _diamondCut[i].action;\\n            \\n            // For the selectors array, we need to handle it separately\\n            // Clear any existing selectors to ensure clean state\\n            delete ds.upgradeProposal.diamondCut[i].functionSelectors;\\n            \\n            // Copy each selector individually\\n            for (uint256 j = 0; j < _diamondCut[i].functionSelectors.length; j++) {\\n                ds.upgradeProposal.diamondCut[i].functionSelectors.push(_diamondCut[i].functionSelectors[j]);\\n            }\\n        }\\n        ds.upgradeProposal.initAddress = _init;\\n        ds.upgradeProposal.initCalldata = _calldata;\\n        ds.upgradeProposal.proposalTime = block.timestamp;\\n        ds.upgradeProposal.exists = true;\\n        \\n        emit DiamondCutProposed(msg.sender, block.timestamp, block.timestamp + ds.upgradeTimelock);\\n    }\\n    \\n    // Execute a proposed diamond cut after the timelock period\\n    function executeDiamondCut() internal {\\n        DiamondStorage storage ds = diamondStorage();\\n        require(ds.upgradeProposal.exists, \\\"LibDiamond: No upgrade proposal exists\\\");\\n        require(\\n            block.timestamp >= ds.upgradeProposal.proposalTime + ds.upgradeTimelock,\\n            \\\"LibDiamond: Timelock period not elapsed\\\"\\n        );\\n        \\n        // Execute the diamond cut\\n        diamondCut(\\n            ds.upgradeProposal.diamondCut,\\n            ds.upgradeProposal.initAddress,\\n            ds.upgradeProposal.initCalldata\\n        );\\n        \\n        // Reset the proposal\\n        delete ds.upgradeProposal;\\n    }\\n    \\n    // Cancel a proposed diamond cut\\n    function cancelDiamondCut() internal {\\n        DiamondStorage storage ds = diamondStorage();\\n        require(ds.upgradeProposal.exists, \\\"LibDiamond: No upgrade proposal exists\\\");\\n        \\n        // Reset the proposal\\n        delete ds.upgradeProposal;\\n        \\n        emit DiamondCutCancelled(msg.sender);\\n    }\\n}\\n\",\"keccak256\":\"0x3d3bb1df2d228d2738f7ce7b9f634653edda3f638a335b92565e9b42e941b1bb\",\"license\":\"MIT\"},\"contracts/upgradeInitializers/DynamicDiamondInit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.6;\\n\\n/******************************************************************************\\\\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\n* EIP-2535 Diamonds: https://eips.ethereum.org/EIPS/eip-2535\\n*\\n* Implementation of a diamond.\\n/******************************************************************************/\\n\\nimport \\\"@openzeppelin/contracts/interfaces/IERC165.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\nimport \\\"@openzeppelin/contracts/interfaces/IERC721Metadata.sol\\\";\\n\\nimport { LibDiamond } from \\\"../libraries/LibDiamond.sol\\\";\\nimport { IDiamondLoupe } from \\\"../interfaces/IDiamondLoupe.sol\\\";\\nimport { IDiamondCut } from \\\"../interfaces/IDiamondCut.sol\\\";\\nimport { IERC173 } from \\\"../interfaces/IERC173.sol\\\";\\n\\ninterface IDiamondFacetInit is IERC165 {\\n    function initializeFacet(\\n        address _owner, \\n        IDiamondCut.FacetCut memory _facet,\\n        bytes calldata _calldata) external;\\n}\\n\\n// It is expected that this contract is customized if you want to deploy your diamond\\n// with data from a deployment script. Use the init function to initialize state variables\\n// of your diamond. Add parameters to the init funciton if you need to.\\n\\ncontract DiamondInit {    \\n\\n    function init(bytes memory initParams) external {        \\n\\n    }\\n\\n}\\n\",\"keccak256\":\"0xcf7fd860e97548697c48283c2f6679f726e877458df0e6c9b6aa906065fcb4c8\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}